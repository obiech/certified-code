"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getProjectRootFromFile = exports.getCurrentAndParentFolder = exports.getNameAndRoot = exports.getProjectFileContent = exports.getProjectFilePath = exports.getProjectRoot = void 0;
const path_1 = require("path");
const devkit_1 = require("@nx/devkit");
const fs_1 = require("fs");
function getProjectRoot(project) {
    return (0, path_1.resolve)(devkit_1.workspaceRoot, project.root);
}
exports.getProjectRoot = getProjectRoot;
function getProjectFilePath(project, relativeFile) {
    return (0, path_1.join)(getProjectRoot(project), ...relativeFile.split(/[/\\]/));
}
exports.getProjectFilePath = getProjectFilePath;
function getProjectFileContent(project, relativeFile) {
    const filePath = getProjectFilePath(project, relativeFile);
    return (0, fs_1.readFileSync)(filePath, 'utf8');
}
exports.getProjectFileContent = getProjectFileContent;
function getNameAndRoot(file) {
    const root = (0, path_1.dirname)(file);
    // eslint-disable-next-line no-useless-escape -- eslint's wrong
    const parts = root.split(/[\/\\]/g);
    const name = parts[parts.length - 1].toLowerCase();
    return { root, name };
}
exports.getNameAndRoot = getNameAndRoot;
function getCurrentAndParentFolder(cwd) {
    const currentFolder = (0, path_1.basename)((0, path_1.resolve)(cwd));
    const parentFolder = (0, path_1.dirname)(cwd);
    return { currentFolder, parentFolder };
}
exports.getCurrentAndParentFolder = getCurrentAndParentFolder;
function getProjectRootFromFile(filePath) {
    const absoluteFilePath = (0, path_1.isAbsolute)(filePath) ? filePath : (0, path_1.resolve)(devkit_1.workspaceRoot, filePath);
    const projectRootFilePath = (0, path_1.relative)(devkit_1.workspaceRoot, absoluteFilePath);
    return (0, devkit_1.normalizePath)((0, path_1.dirname)(projectRootFilePath));
}
exports.getProjectRootFromFile = getProjectRootFromFile;
//# sourceMappingURL=utils.js.map