import { PaymentCurrencyType } from './currency.type';
declare type InvoiceParamsArguments = Pick<InvoiceParams, 'amount' | 'productName' | 'productCount' | 'productPrice' | 'orderReference' | 'merchantAccount' | 'serviceUrl' | 'merchantDomainName'> & {
    MERCHANT_SECRET_KEY: string;
    paymentSystems?: Array<'card' | 'privat24' | 'lpTerminal' | 'payParts' | 'qrCode' | 'masterPass' | 'visaCheckout' | 'googlePay' | 'applePay'>;
};
export declare class InvoiceParams {
    readonly merchantAccount: string;
    readonly serviceUrl: string;
    readonly merchantDomainName: string;
    readonly merchantSignature: string;
    readonly transactionType = "CREATE_INVOICE";
    readonly currency: PaymentCurrencyType;
    readonly apiVersion = 1;
    readonly orderDate: number;
    holdTimeout: number;
    readonly amount: number;
    readonly orderReference: string;
    readonly productName: string[];
    readonly productCount: number[];
    readonly productPrice: number[];
    readonly paymentSystems?: string;
    readonly clientEmail?: string;
    constructor({ amount, productName, productCount, productPrice, orderReference, merchantAccount, serviceUrl, merchantDomainName, MERCHANT_SECRET_KEY, paymentSystems, }: InvoiceParamsArguments);
}
export {};
