{
  "nodes": {
    "driver-frontend": {
      "name": "driver-frontend",
      "type": "app",
      "data": {
        "root": "apps/driver-frontend",
        "name": "driver-frontend",
        "$schema": "../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/driver-frontend/src",
        "projectType": "application",
        "targets": {
          "analyze": {
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter analyze",
              "cwd": "apps/driver-frontend"
            },
            "configurations": {}
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter clean",
              "cwd": "apps/driver-frontend"
            },
            "configurations": {}
          },
          "format": {
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter format apps/driver-frontend/*",
              "cwd": "apps/driver-frontend"
            },
            "configurations": {}
          },
          "test": {
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ],
            "cache": true,
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter test",
              "cwd": "apps/driver-frontend"
            },
            "configurations": {}
          },
          "doctor": {
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter doctor",
              "cwd": "apps/driver-frontend"
            },
            "configurations": {}
          },
          "assemble": {
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter assemble",
              "cwd": "apps/driver-frontend"
            },
            "configurations": {}
          },
          "attach": {
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter attach",
              "cwd": "apps/driver-frontend"
            },
            "configurations": {}
          },
          "drive": {
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter drive",
              "cwd": "apps/driver-frontend"
            },
            "configurations": {}
          },
          "gen-l10n": {
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter gen-l10n",
              "cwd": "apps/driver-frontend"
            },
            "configurations": {}
          },
          "install": {
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter install",
              "cwd": "apps/driver-frontend"
            },
            "configurations": {}
          },
          "run": {
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter run",
              "cwd": "apps/driver-frontend"
            },
            "configurations": {}
          },
          "build-aar": {
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter build aar",
              "cwd": "apps/driver-frontend"
            },
            "outputs": [
              "{workspaceRoot}/apps/driver-frontend/build"
            ],
            "configurations": {}
          },
          "build-apk": {
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter build apk",
              "cwd": "apps/driver-frontend"
            },
            "outputs": [
              "{workspaceRoot}/apps/driver-frontend/build"
            ],
            "configurations": {}
          },
          "build-appbundle": {
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter build appbundle",
              "cwd": "apps/driver-frontend"
            },
            "outputs": [
              "{workspaceRoot}/apps/driver-frontend/build"
            ],
            "configurations": {}
          },
          "build-bundle": {
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter build bundle",
              "cwd": "apps/driver-frontend"
            },
            "outputs": [
              "{workspaceRoot}/apps/driver-frontend/build"
            ],
            "configurations": {}
          },
          "build-ios": {
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter build ios",
              "cwd": "apps/driver-frontend"
            },
            "outputs": [
              "{workspaceRoot}/apps/driver-frontend/build"
            ],
            "configurations": {}
          },
          "build-ios-framework": {
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter build ios-framework",
              "cwd": "apps/driver-frontend"
            },
            "outputs": [
              "{workspaceRoot}/apps/driver-frontend/build"
            ],
            "configurations": {}
          },
          "build-ipa": {
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter build ipa",
              "cwd": "apps/driver-frontend"
            },
            "outputs": [
              "{workspaceRoot}/apps/driver-frontend/build"
            ],
            "configurations": {}
          }
        },
        "tags": [],
        "implicitDependencies": []
      }
    },
    "rider-frontend": {
      "name": "rider-frontend",
      "type": "app",
      "data": {
        "root": "apps/rider-frontend",
        "name": "rider-frontend",
        "$schema": "../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/rider-frontend/src",
        "projectType": "application",
        "targets": {
          "analyze": {
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter analyze",
              "cwd": "apps/rider-frontend"
            },
            "configurations": {}
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter clean",
              "cwd": "apps/rider-frontend"
            },
            "configurations": {}
          },
          "format": {
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter format apps/rider-frontend/*",
              "cwd": "apps/rider-frontend"
            },
            "configurations": {}
          },
          "test": {
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ],
            "cache": true,
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter test",
              "cwd": "apps/rider-frontend"
            },
            "configurations": {}
          },
          "doctor": {
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter doctor",
              "cwd": "apps/rider-frontend"
            },
            "configurations": {}
          },
          "assemble": {
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter assemble",
              "cwd": "apps/rider-frontend"
            },
            "configurations": {}
          },
          "attach": {
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter attach",
              "cwd": "apps/rider-frontend"
            },
            "configurations": {}
          },
          "drive": {
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter drive",
              "cwd": "apps/rider-frontend"
            },
            "configurations": {}
          },
          "gen-l10n": {
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter gen-l10n",
              "cwd": "apps/rider-frontend"
            },
            "configurations": {}
          },
          "install": {
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter install",
              "cwd": "apps/rider-frontend"
            },
            "configurations": {}
          },
          "run": {
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter run",
              "cwd": "apps/rider-frontend"
            },
            "configurations": {}
          },
          "build-aar": {
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter build aar",
              "cwd": "apps/rider-frontend"
            },
            "outputs": [
              "{workspaceRoot}/apps/rider-frontend/build"
            ],
            "configurations": {}
          },
          "build-apk": {
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter build apk",
              "cwd": "apps/rider-frontend"
            },
            "outputs": [
              "{workspaceRoot}/apps/rider-frontend/build"
            ],
            "configurations": {}
          },
          "build-appbundle": {
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter build appbundle",
              "cwd": "apps/rider-frontend"
            },
            "outputs": [
              "{workspaceRoot}/apps/rider-frontend/build"
            ],
            "configurations": {}
          },
          "build-bundle": {
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter build bundle",
              "cwd": "apps/rider-frontend"
            },
            "outputs": [
              "{workspaceRoot}/apps/rider-frontend/build"
            ],
            "configurations": {}
          },
          "build-ios": {
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter build ios",
              "cwd": "apps/rider-frontend"
            },
            "outputs": [
              "{workspaceRoot}/apps/rider-frontend/build"
            ],
            "configurations": {}
          },
          "build-ios-framework": {
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter build ios-framework",
              "cwd": "apps/rider-frontend"
            },
            "outputs": [
              "{workspaceRoot}/apps/rider-frontend/build"
            ],
            "configurations": {}
          },
          "build-ipa": {
            "executor": "nx:run-commands",
            "options": {
              "command": "fvm flutter build ipa",
              "cwd": "apps/rider-frontend"
            },
            "outputs": [
              "{workspaceRoot}/apps/rider-frontend/build"
            ],
            "configurations": {}
          }
        },
        "tags": [],
        "implicitDependencies": []
      }
    },
    "admin-panel": {
      "name": "admin-panel",
      "type": "app",
      "data": {
        "root": "apps/admin-panel",
        "name": "admin-panel",
        "$schema": "../../node_modules/nx/schemas/project-schema.json",
        "projectType": "application",
        "sourceRoot": "apps/admin-panel/src",
        "prefix": "app",
        "targets": {
          "build": {
            "inputs": [
              "production",
              "^production"
            ],
            "cache": true,
            "executor": "@angular-devkit/build-angular:browser",
            "options": {
              "outputPath": "dist/apps/admin-panel",
              "index": "apps/admin-panel/src/index.html",
              "main": "apps/admin-panel/src/main.ts",
              "polyfills": "apps/admin-panel/src/polyfills.ts",
              "tsConfig": "apps/admin-panel/tsconfig.app.json",
              "aot": true,
              "assets": [
                "apps/admin-panel/src/favicon.ico",
                "apps/admin-panel/src/assets",
                {
                  "glob": "*.min.css",
                  "input": "node_modules/ng-zorro-antd",
                  "output": "themes/"
                }
              ],
              "styles": [
                "apps/admin-panel/src/styles.scss"
              ],
              "scripts": []
            },
            "defaultConfiguration": "development",
            "configurations": {
              "production": {
                "budgets": [
                  {
                    "type": "initial",
                    "maximumWarning": "3mb",
                    "maximumError": "5mb"
                  }
                ],
                "fileReplacements": [
                  {
                    "replace": "apps/admin-panel/src/environments/environment.ts",
                    "with": "apps/admin-panel/src/environments/environment.prod.ts"
                  }
                ],
                "outputHashing": "all"
              },
              "development": {
                "buildOptimizer": false,
                "optimization": false,
                "vendorChunk": true,
                "extractLicenses": false,
                "sourceMap": true,
                "namedChunks": true
              }
            }
          },
          "serve": {
            "executor": "@angular-devkit/build-angular:dev-server",
            "options": {
              "hmr": true,
              "buildTarget": "admin-panel:build"
            },
            "configurations": {
              "production": {
                "buildTarget": "admin-panel:build:production"
              }
            }
          },
          "extract-i18n": {
            "executor": "nx:run-commands",
            "options": {
              "command": "ngx-translate-extract --input src --output src/assets/i18n/{en,es,bn,de,hi,ko,id,sv,ja,pt,ru,ur,zh,fr,ar,hy}.json --clean --format namespaced-json",
              "cwd": "apps/admin-panel"
            },
            "configurations": {}
          },
          "lint": {
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json"
            ],
            "cache": true,
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {},
            "configurations": {}
          },
          "test": {
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ],
            "cache": true,
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/apps/admin-panel"
            ],
            "options": {
              "passWithNoTests": true,
              "jestConfig": "apps/admin-panel/jest.config.ts"
            },
            "configurations": {
              "ci": {
                "ci": true,
                "codeCoverage": true
              }
            }
          }
        },
        "tags": [],
        "implicitDependencies": []
      }
    },
    "driver-api": {
      "name": "driver-api",
      "type": "app",
      "data": {
        "root": "apps/driver-api",
        "name": "driver-api",
        "$schema": "../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/driver-api/src",
        "projectType": "application",
        "targets": {
          "build": {
            "inputs": [
              "production",
              "^production"
            ],
            "cache": true,
            "executor": "@nx/webpack:webpack",
            "outputs": [
              "{options.outputPath}"
            ],
            "options": {
              "outputPath": "dist/apps/driver-api",
              "isolatedConfig": false,
              "main": "apps/driver-api/src/main.ts",
              "tsConfig": "apps/driver-api/tsconfig.app.json",
              "assets": [
                "apps/driver-api/src/assets"
              ],
              "tsPlugins": [
                {
                  "name": "@nestjs/graphql/plugin",
                  "options": {
                    "typeFileNameSuffix": [
                      ".input.ts",
                      ".dto.ts"
                    ]
                  }
                }
              ],
              "generatePackageJson": true,
              "target": "node",
              "compiler": "tsc"
            },
            "configurations": {
              "production": {
                "optimization": true,
                "extractLicenses": true,
                "inspect": false,
                "fileReplacements": [
                  {
                    "replace": "apps/driver-api/src/environments/environment.ts",
                    "with": "apps/driver-api/src/environments/environment.prod.ts"
                  }
                ]
              }
            }
          },
          "serve": {
            "executor": "@nx/js:node",
            "options": {
              "buildTarget": "driver-api:build",
              "inspect": true,
              "port": 9230
            },
            "configurations": {}
          },
          "lint": {
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json"
            ],
            "cache": true,
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {},
            "configurations": {}
          },
          "test": {
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ],
            "cache": true,
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/apps/driver-api"
            ],
            "options": {
              "passWithNoTests": true,
              "jestConfig": "apps/driver-api/jest.config.ts"
            },
            "configurations": {
              "ci": {
                "ci": true,
                "codeCoverage": true
              }
            }
          }
        },
        "tags": [],
        "implicitDependencies": []
      }
    },
    "admin-api": {
      "name": "admin-api",
      "type": "app",
      "data": {
        "root": "apps/admin-api",
        "name": "admin-api",
        "$schema": "../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/admin-api/src",
        "projectType": "application",
        "targets": {
          "build": {
            "inputs": [
              "production",
              "^production"
            ],
            "cache": true,
            "dependsOn": [
              {
                "target": "compile"
              }
            ],
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                {
                  "command": "tsc libs/database/src/lib/migration/*.ts --outDir dist/apps/admin-api"
                }
              ]
            },
            "configurations": {
              "production": {}
            }
          },
          "compile": {
            "executor": "@nx/webpack:webpack",
            "outputs": [
              "{options.outputPath}"
            ],
            "options": {
              "target": "node",
              "isolatedConfig": false,
              "compiler": "tsc",
              "deleteOutputPath": false,
              "outputPath": "dist/apps/admin-api",
              "main": "apps/admin-api/src/main.ts",
              "tsConfig": "apps/admin-api/tsconfig.app.json",
              "assets": [
                "apps/admin-api/src/assets"
              ],
              "tsPlugins": [
                {
                  "name": "@nestjs/graphql/plugin",
                  "options": {
                    "typeFileNameSuffix": [
                      ".input.ts",
                      ".dto.ts"
                    ]
                  }
                }
              ],
              "generatePackageJson": true
            },
            "configurations": {
              "production": {
                "optimization": true,
                "extractLicenses": true,
                "inspect": false,
                "fileReplacements": [
                  {
                    "replace": "apps/admin-api/src/environments/environment.ts",
                    "with": "apps/admin-api/src/environments/environment.prod.ts"
                  }
                ]
              }
            }
          },
          "serve": {
            "executor": "@nx/js:node",
            "options": {
              "buildTarget": "admin-api:compile",
              "inspect": true,
              "port": 9233
            },
            "configurations": {}
          },
          "lint": {
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json"
            ],
            "cache": true,
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {},
            "configurations": {}
          },
          "test": {
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ],
            "cache": true,
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/apps/admin-api"
            ],
            "options": {
              "passWithNoTests": true,
              "jestConfig": "apps/admin-api/jest.config.ts"
            },
            "configurations": {
              "ci": {
                "ci": true,
                "codeCoverage": true
              }
            }
          }
        },
        "tags": [],
        "implicitDependencies": []
      }
    },
    "rider-api": {
      "name": "rider-api",
      "type": "app",
      "data": {
        "root": "apps/rider-api",
        "name": "rider-api",
        "$schema": "../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/rider-api/src",
        "projectType": "application",
        "targets": {
          "build": {
            "inputs": [
              "production",
              "^production"
            ],
            "cache": true,
            "executor": "@nx/webpack:webpack",
            "outputs": [
              "{options.outputPath}"
            ],
            "options": {
              "outputPath": "dist/apps/rider-api",
              "isolatedConfig": false,
              "main": "apps/rider-api/src/main.ts",
              "tsConfig": "apps/rider-api/tsconfig.app.json",
              "assets": [
                "apps/rider-api/src/assets"
              ],
              "tsPlugins": [
                {
                  "name": "@nestjs/graphql/plugin",
                  "options": {
                    "typeFileNameSuffix": [
                      ".input.ts",
                      ".dto.ts"
                    ]
                  }
                }
              ],
              "generatePackageJson": true,
              "target": "node",
              "compiler": "tsc"
            },
            "configurations": {
              "production": {
                "optimization": true,
                "extractLicenses": true,
                "inspect": false,
                "fileReplacements": [
                  {
                    "replace": "apps/rider-api/src/environments/environment.ts",
                    "with": "apps/rider-api/src/environments/environment.prod.ts"
                  }
                ]
              }
            }
          },
          "serve": {
            "executor": "@nx/js:node",
            "options": {
              "buildTarget": "rider-api:build",
              "inspect": true,
              "port": 9231
            },
            "configurations": {}
          },
          "lint": {
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json"
            ],
            "cache": true,
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {},
            "configurations": {}
          },
          "test": {
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ],
            "cache": true,
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/apps/rider-api"
            ],
            "options": {
              "passWithNoTests": true,
              "jestConfig": "apps/rider-api/jest.config.ts"
            },
            "configurations": {
              "ci": {
                "ci": true,
                "codeCoverage": true
              }
            }
          }
        },
        "tags": [],
        "implicitDependencies": []
      }
    },
    "database": {
      "name": "database",
      "type": "lib",
      "data": {
        "root": "libs/database",
        "name": "database",
        "$schema": "../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "libs/database/src",
        "projectType": "library",
        "targets": {
          "lint": {
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json"
            ],
            "cache": true,
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {},
            "configurations": {}
          },
          "test": {
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ],
            "cache": true,
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/libs/database"
            ],
            "options": {
              "passWithNoTests": true,
              "jestConfig": "libs/database/jest.config.ts"
            },
            "configurations": {
              "ci": {
                "ci": true,
                "codeCoverage": true
              }
            }
          }
        },
        "tags": [],
        "implicitDependencies": []
      }
    }
  },
  "externalNodes": {},
  "dependencies": {
    "driver-frontend": [],
    "rider-frontend": [],
    "admin-panel": [],
    "driver-api": [
      {
        "source": "driver-api",
        "target": "database",
        "type": "static"
      }
    ],
    "admin-api": [
      {
        "source": "admin-api",
        "target": "database",
        "type": "static"
      }
    ],
    "rider-api": [
      {
        "source": "rider-api",
        "target": "database",
        "type": "static"
      }
    ],
    "database": []
  },
  "version": "6.0"
}
