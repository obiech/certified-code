{"ast":null,"code":"import { __assign, __read, __spreadArray, __values } from \"tslib\";\nimport { contains, filter, find, isArray, isEmpty, isFunction, isNil, isNumberEqual, isObject, memoize, get, values } from '@antv/util';\nimport { FIELD_ORIGIN, GROUP_ATTRS } from '../constant';\nimport { getName, inferScaleType } from './scale';\nfunction snapEqual(v1, v2, scale) {\n  var value1 = scale.translate(v1);\n  var value2 = scale.translate(v2);\n  return isNumberEqual(value1, value2);\n}\nfunction getXValueByPoint(point, geometry) {\n  var coordinate = geometry.coordinate;\n  var xScale = geometry.getXScale();\n  var range = xScale.range;\n  var rangeMax = range[range.length - 1];\n  var rangeMin = range[0];\n  var invertPoint = coordinate.invert(point);\n  var xValue = invertPoint.x;\n  if (coordinate.isPolar && xValue > (1 + rangeMax) / 2) {\n    xValue = rangeMin; // 极坐标下，scale 的 range 被做过特殊处理\n  }\n\n  return xScale.translate(xScale.invert(xValue));\n}\nfunction filterYValue(data, point, geometry) {\n  var coordinate = geometry.coordinate;\n  var yScale = geometry.getYScale();\n  var yField = yScale.field;\n  var invertPoint = coordinate.invert(point);\n  var yValue = yScale.invert(invertPoint.y);\n  var result = find(data, function (obj) {\n    var originData = obj[FIELD_ORIGIN];\n    return originData[yField][0] <= yValue && originData[yField][1] >= yValue;\n  });\n  return result || data[data.length - 1];\n}\nvar getXDistance = memoize(function (scale) {\n  if (scale.isCategory) {\n    return 1;\n  }\n  var scaleValues = scale.values; // values 是无序的\n  var length = scaleValues.length;\n  var min = scale.translate(scaleValues[0]);\n  var max = min;\n  for (var index = 0; index < length; index++) {\n    var value = scaleValues[index];\n    // 时间类型需要 translate\n    var numericValue = scale.translate(value);\n    if (numericValue < min) {\n      min = numericValue;\n    }\n    if (numericValue > max) {\n      max = numericValue;\n    }\n  }\n  return (max - min) / (length - 1);\n});\n/**\n * 获得 tooltip 的 title\n * @param originData\n * @param geometry\n * @param title\n */\nfunction getTooltipTitle(originData, geometry, title) {\n  var positionAttr = geometry.getAttribute('position');\n  var fields = positionAttr.getFields();\n  var scales = geometry.scales;\n  var titleField = isFunction(title) || !title ? fields[0] : title;\n  var titleScale = scales[titleField];\n  // 如果创建了该字段对应的 scale，则通过 scale.getText() 方式取值，因为用户可能对数据进行了格式化\n  // 如果没有对应的 scale，则从原始数据中取值，如果原始数据中仍不存在，则直接放回 title 值\n  var tooltipTitle = titleScale ? titleScale.getText(originData[titleField]) : originData[titleField] || titleField;\n  return isFunction(title) ? title(tooltipTitle, originData) : tooltipTitle;\n}\nfunction getAttributesForLegend(geometry) {\n  var attributes = values(geometry.attributes);\n  return filter(attributes, function (attribute) {\n    return contains(GROUP_ATTRS, attribute.type);\n  });\n}\nfunction getTooltipValueScale(geometry) {\n  var e_1, _a;\n  var attributes = getAttributesForLegend(geometry);\n  var scale;\n  try {\n    for (var attributes_1 = __values(attributes), attributes_1_1 = attributes_1.next(); !attributes_1_1.done; attributes_1_1 = attributes_1.next()) {\n      var attribute = attributes_1_1.value;\n      var tmpScale = attribute.getScale(attribute.type);\n      if (tmpScale && tmpScale.isLinear) {\n        var tmpScaleDef = get(geometry.scaleDefs, tmpScale.field);\n        var inferedScaleType = inferScaleType(tmpScale, tmpScaleDef, attribute.type, geometry.type);\n        if (inferedScaleType !== 'cat') {\n          // 如果指定字段是非 position 的，同时是连续的\n          scale = tmpScale;\n          break;\n        }\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (attributes_1_1 && !attributes_1_1.done && (_a = attributes_1.return)) _a.call(attributes_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n  var xScale = geometry.getXScale();\n  var yScale = geometry.getYScale();\n  return scale || yScale || xScale;\n}\nfunction getTooltipValue(originData, valueScale) {\n  var field = valueScale.field;\n  var value = originData[field];\n  if (isArray(value)) {\n    var texts = value.map(function (eachValue) {\n      return valueScale.getText(eachValue);\n    });\n    return texts.join('-');\n  }\n  return valueScale.getText(value);\n}\n// 根据原始数据获取 tooltip item 中 name 值\nfunction getTooltipName(originData, geometry) {\n  var nameScale;\n  var groupScales = geometry.getGroupScales();\n  if (groupScales.length) {\n    // 如果存在分组类型，取第一个分组类型\n    nameScale = groupScales[0];\n  }\n  if (nameScale) {\n    var field = nameScale.field;\n    return nameScale.getText(originData[field]);\n  }\n  var valueScale = getTooltipValueScale(geometry);\n  return getName(valueScale);\n}\n/**\n * @ignore\n * Finds data from geometry by point\n * @param point canvas point\n * @param data an item of geometry.dataArray\n * @param geometry\n * @returns\n */\nexport function findDataByPoint(point, data, geometry) {\n  if (data.length === 0) {\n    return null;\n  }\n  var geometryType = geometry.type;\n  var xScale = geometry.getXScale();\n  var yScale = geometry.getYScale();\n  var xField = xScale.field;\n  var yField = yScale.field;\n  var rst = null;\n  // 热力图采用最小逼近策略查找 point 击中的数据\n  if (geometryType === 'heatmap' || geometryType === 'point') {\n    // 将 point 画布坐标转换为原始数据值\n    var coordinate = geometry.coordinate;\n    var invertPoint = coordinate.invert(point); // 转换成归一化的数据\n    var x = xScale.invert(invertPoint.x); // 转换为原始值\n    var y = yScale.invert(invertPoint.y); // 转换为原始值\n    var min = Infinity;\n    for (var index = 0; index < data.length; index++) {\n      var obj = data[index];\n      var originData = obj[FIELD_ORIGIN];\n      var range = Math.pow(originData[xField] - x, 2) + Math.pow(originData[yField] - y, 2);\n      if (range < min) {\n        min = range;\n        rst = obj;\n      }\n    }\n    return rst;\n  }\n  // 其他 Geometry 类型按照 x 字段数据进行查找\n  var first = data[0];\n  var last = data[data.length - 1];\n  var xValue = getXValueByPoint(point, geometry);\n  var firstXValue = first[FIELD_ORIGIN][xField];\n  var firstYValue = first[FIELD_ORIGIN][yField];\n  var lastXValue = last[FIELD_ORIGIN][xField];\n  var isYArray = yScale.isLinear && isArray(firstYValue); // 考虑 x 维度相同，y 是数组区间的情况\n  // 如果 x 的值是数组\n  if (isArray(firstXValue)) {\n    for (var index = 0; index < data.length; index++) {\n      var record = data[index];\n      var originData = record[FIELD_ORIGIN];\n      // xValue 在 originData[xField] 的数值区间内\n      if (xScale.translate(originData[xField][0]) <= xValue && xScale.translate(originData[xField][1]) >= xValue) {\n        if (isYArray) {\n          // 层叠直方图场景，x 和 y 都是数组区间\n          if (!isArray(rst)) {\n            rst = [];\n          }\n          rst.push(record);\n        } else {\n          rst = record;\n          break;\n        }\n      }\n    }\n    if (isArray(rst)) {\n      rst = filterYValue(rst, point, geometry);\n    }\n  } else {\n    var next = void 0;\n    if (!xScale.isLinear && xScale.type !== 'timeCat') {\n      // x 轴对应的数据为非线性以及非时间类型的数据采用遍历查找\n      for (var index = 0; index < data.length; index++) {\n        var record = data[index];\n        var originData = record[FIELD_ORIGIN];\n        if (snapEqual(originData[xField], xValue, xScale)) {\n          if (isYArray) {\n            if (!isArray(rst)) {\n              rst = [];\n            }\n            rst.push(record);\n          } else {\n            rst = record;\n            break;\n          }\n        } else if (xScale.translate(originData[xField]) <= xValue) {\n          last = record;\n          next = data[index + 1];\n        }\n      }\n      if (isArray(rst)) {\n        rst = filterYValue(rst, point, geometry);\n      }\n    } else {\n      // x 轴对应的数据为线性以及时间类型，进行二分查找，性能更好\n      if ((xValue > xScale.translate(lastXValue) || xValue < xScale.translate(firstXValue)) && (xValue > xScale.max || xValue < xScale.min)) {\n        // 不在数据范围内\n        return null;\n      }\n      var firstIdx = 0;\n      var lastIdx = data.length - 1;\n      var middleIdx = void 0;\n      while (firstIdx <= lastIdx) {\n        middleIdx = Math.floor((firstIdx + lastIdx) / 2);\n        var item = data[middleIdx][FIELD_ORIGIN][xField];\n        if (snapEqual(item, xValue, xScale)) {\n          return data[middleIdx];\n        }\n        if (xScale.translate(item) <= xScale.translate(xValue)) {\n          firstIdx = middleIdx + 1;\n          last = data[middleIdx];\n          next = data[middleIdx + 1];\n        } else {\n          if (lastIdx === 0) {\n            last = data[0];\n          }\n          lastIdx = middleIdx - 1;\n        }\n      }\n    }\n    if (last && next) {\n      // 计算最逼近的\n      if (Math.abs(xScale.translate(last[FIELD_ORIGIN][xField]) - xValue) > Math.abs(xScale.translate(next[FIELD_ORIGIN][xField]) - xValue)) {\n        last = next;\n      }\n    }\n  }\n  var distance = getXDistance(geometry.getXScale()); // 每个分类间的平均间距\n  if (!rst && Math.abs(xScale.translate(last[FIELD_ORIGIN][xField]) - xValue) <= distance / 2) {\n    rst = last;\n  }\n  return rst;\n}\n/**\n * @ignore\n * Gets tooltip items\n * @param data\n * @param geometry\n * @param [title]\n * @returns\n */\nexport function getTooltipItems(data, geometry, title, showNil) {\n  var e_2, _a;\n  if (title === void 0) {\n    title = '';\n  }\n  if (showNil === void 0) {\n    showNil = false;\n  }\n  var originData = data[FIELD_ORIGIN];\n  var tooltipTitle = getTooltipTitle(originData, geometry, title);\n  var tooltipOption = geometry.tooltipOption;\n  var defaultColor = geometry.theme.defaultColor;\n  var items = [];\n  var name;\n  var value;\n  function addItem(itemName, itemValue) {\n    if (showNil || !isNil(itemValue) && itemValue !== '') {\n      // 值为 null的时候，忽视\n      var item = {\n        title: tooltipTitle,\n        data: originData,\n        mappingData: data,\n        name: itemName,\n        value: itemValue,\n        color: data.color || defaultColor,\n        marker: true\n      };\n      items.push(item);\n    }\n  }\n  if (isObject(tooltipOption)) {\n    var fields = tooltipOption.fields,\n      callback = tooltipOption.callback;\n    if (callback) {\n      // 用户定义了回调函数\n      var callbackParams = fields.map(function (field) {\n        return data[FIELD_ORIGIN][field];\n      });\n      var cfg = callback.apply(void 0, __spreadArray([], __read(callbackParams), false));\n      var itemCfg = __assign({\n        data: data[FIELD_ORIGIN],\n        mappingData: data,\n        title: tooltipTitle,\n        color: data.color || defaultColor,\n        marker: true\n      }, cfg);\n      items.push(itemCfg);\n    } else {\n      var scales = geometry.scales;\n      try {\n        for (var fields_1 = __values(fields), fields_1_1 = fields_1.next(); !fields_1_1.done; fields_1_1 = fields_1.next()) {\n          var field = fields_1_1.value;\n          if (!isNil(originData[field])) {\n            // 字段数据为null, undefined 时不显示\n            var scale = scales[field];\n            name = getName(scale);\n            value = scale.getText(originData[field]);\n            addItem(name, value);\n          }\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (fields_1_1 && !fields_1_1.done && (_a = fields_1.return)) _a.call(fields_1);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    }\n  } else {\n    var valueScale = getTooltipValueScale(geometry);\n    // 字段数据为null ,undefined时不显示\n    value = getTooltipValue(originData, valueScale);\n    name = getTooltipName(originData, geometry);\n    addItem(name, value);\n  }\n  return items;\n}\nfunction getTooltipItemsByFindData(geometry, point, title, tooltipCfg) {\n  var e_3, _a;\n  var showNil = tooltipCfg.showNil;\n  var result = [];\n  var dataArray = geometry.dataArray;\n  if (!isEmpty(dataArray)) {\n    geometry.sort(dataArray); // 先进行排序，便于 tooltip 查找\n    try {\n      for (var dataArray_1 = __values(dataArray), dataArray_1_1 = dataArray_1.next(); !dataArray_1_1.done; dataArray_1_1 = dataArray_1.next()) {\n        var data = dataArray_1_1.value;\n        var record = findDataByPoint(point, data, geometry);\n        if (record) {\n          var elementId = geometry.getElementId(record);\n          var element = geometry.elementsMap[elementId];\n          if (geometry.type === 'heatmap' || element.visible) {\n            // Heatmap 没有 Element\n            // 如果图形元素隐藏了，怎不再 tooltip 上展示相关数据\n            var items = getTooltipItems(record, geometry, title, showNil);\n            if (items.length) {\n              result.push(items);\n            }\n          }\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (dataArray_1_1 && !dataArray_1_1.done && (_a = dataArray_1.return)) _a.call(dataArray_1);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n  }\n  return result;\n}\nfunction getTooltipItemsByHitShape(geometry, point, title, tooltipCfg) {\n  var showNil = tooltipCfg.showNil;\n  var result = [];\n  var container = geometry.container;\n  var shape = container.getShape(point.x, point.y);\n  if (shape && shape.get('visible') && shape.get('origin')) {\n    var mappingData = shape.get('origin').mappingData;\n    var items = getTooltipItems(mappingData, geometry, title, showNil);\n    if (items.length) {\n      result.push(items);\n    }\n  }\n  return result;\n}\n/**\n * 不进行递归查找\n */\nexport function findItemsFromView(view, point, tooltipCfg) {\n  var e_4, _a;\n  var result = [];\n  // 先从 view 本身查找\n  var geometries = view.geometries;\n  var shared = tooltipCfg.shared,\n    title = tooltipCfg.title,\n    reversed = tooltipCfg.reversed;\n  try {\n    for (var geometries_1 = __values(geometries), geometries_1_1 = geometries_1.next(); !geometries_1_1.done; geometries_1_1 = geometries_1.next()) {\n      var geometry = geometries_1_1.value;\n      if (geometry.visible && geometry.tooltipOption !== false) {\n        // geometry 可见同时未关闭 tooltip\n        var geometryType = geometry.type;\n        var tooltipItems = void 0;\n        if (['point', 'edge', 'polygon'].includes(geometryType)) {\n          // 始终通过图形拾取\n          tooltipItems = getTooltipItemsByHitShape(geometry, point, title, tooltipCfg);\n        } else if (['area', 'line', 'path', 'heatmap'].includes(geometryType)) {\n          // 如果是 'area', 'line', 'path'，始终通过数据查找方法查找 tooltip\n          tooltipItems = getTooltipItemsByFindData(geometry, point, title, tooltipCfg);\n        } else {\n          if (shared !== false) {\n            tooltipItems = getTooltipItemsByFindData(geometry, point, title, tooltipCfg);\n          } else {\n            tooltipItems = getTooltipItemsByHitShape(geometry, point, title, tooltipCfg);\n          }\n        }\n        if (tooltipItems.length) {\n          if (reversed) {\n            tooltipItems.reverse();\n          }\n          // geometry 有可能会有多个 item，因为用户可以设置 geometry.tooltip('x*y*z')\n          result.push(tooltipItems);\n        }\n      }\n    }\n  } catch (e_4_1) {\n    e_4 = {\n      error: e_4_1\n    };\n  } finally {\n    try {\n      if (geometries_1_1 && !geometries_1_1.done && (_a = geometries_1.return)) _a.call(geometries_1);\n    } finally {\n      if (e_4) throw e_4.error;\n    }\n  }\n  return result;\n}\nexport function findItemsFromViewRecurisive(view, point, tooltipCfg) {\n  var e_5, _a;\n  var result = findItemsFromView(view, point, tooltipCfg);\n  try {\n    // 递归查找，并合并结果\n    for (var _b = __values(view.views), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var childView = _c.value;\n      result = result.concat(findItemsFromView(childView, point, tooltipCfg));\n    }\n  } catch (e_5_1) {\n    e_5 = {\n      error: e_5_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_5) throw e_5.error;\n    }\n  }\n  return result;\n}","map":{"version":3,"names":["__assign","__read","__spreadArray","__values","contains","filter","find","isArray","isEmpty","isFunction","isNil","isNumberEqual","isObject","memoize","get","values","FIELD_ORIGIN","GROUP_ATTRS","getName","inferScaleType","snapEqual","v1","v2","scale","value1","translate","value2","getXValueByPoint","point","geometry","coordinate","xScale","getXScale","range","rangeMax","length","rangeMin","invertPoint","invert","xValue","x","isPolar","filterYValue","data","yScale","getYScale","yField","field","yValue","y","result","obj","originData","getXDistance","isCategory","scaleValues","min","max","index","value","numericValue","getTooltipTitle","title","positionAttr","getAttribute","fields","getFields","scales","titleField","titleScale","tooltipTitle","getText","getAttributesForLegend","attributes","attribute","type","getTooltipValueScale","e_1","_a","attributes_1","attributes_1_1","next","done","tmpScale","getScale","isLinear","tmpScaleDef","scaleDefs","inferedScaleType","e_1_1","error","return","call","getTooltipValue","valueScale","texts","map","eachValue","join","getTooltipName","nameScale","groupScales","getGroupScales","findDataByPoint","geometryType","xField","rst","Infinity","Math","pow","first","last","firstXValue","firstYValue","lastXValue","isYArray","record","push","firstIdx","lastIdx","middleIdx","floor","item","abs","distance","getTooltipItems","showNil","e_2","tooltipOption","defaultColor","theme","items","name","addItem","itemName","itemValue","mappingData","color","marker","callback","callbackParams","cfg","apply","itemCfg","fields_1","fields_1_1","e_2_1","getTooltipItemsByFindData","tooltipCfg","e_3","dataArray","sort","dataArray_1","dataArray_1_1","elementId","getElementId","element","elementsMap","visible","e_3_1","getTooltipItemsByHitShape","container","shape","getShape","findItemsFromView","view","e_4","geometries","shared","reversed","geometries_1","geometries_1_1","tooltipItems","includes","reverse","e_4_1","findItemsFromViewRecurisive","e_5","_b","views","_c","childView","concat","e_5_1"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g2/esm/util/tooltip.js"],"sourcesContent":["import { __assign, __read, __spreadArray, __values } from \"tslib\";\nimport { contains, filter, find, isArray, isEmpty, isFunction, isNil, isNumberEqual, isObject, memoize, get, values, } from '@antv/util';\nimport { FIELD_ORIGIN, GROUP_ATTRS } from '../constant';\nimport { getName, inferScaleType } from './scale';\nfunction snapEqual(v1, v2, scale) {\n    var value1 = scale.translate(v1);\n    var value2 = scale.translate(v2);\n    return isNumberEqual(value1, value2);\n}\nfunction getXValueByPoint(point, geometry) {\n    var coordinate = geometry.coordinate;\n    var xScale = geometry.getXScale();\n    var range = xScale.range;\n    var rangeMax = range[range.length - 1];\n    var rangeMin = range[0];\n    var invertPoint = coordinate.invert(point);\n    var xValue = invertPoint.x;\n    if (coordinate.isPolar && xValue > (1 + rangeMax) / 2) {\n        xValue = rangeMin; // 极坐标下，scale 的 range 被做过特殊处理\n    }\n    return xScale.translate(xScale.invert(xValue));\n}\nfunction filterYValue(data, point, geometry) {\n    var coordinate = geometry.coordinate;\n    var yScale = geometry.getYScale();\n    var yField = yScale.field;\n    var invertPoint = coordinate.invert(point);\n    var yValue = yScale.invert(invertPoint.y);\n    var result = find(data, function (obj) {\n        var originData = obj[FIELD_ORIGIN];\n        return originData[yField][0] <= yValue && originData[yField][1] >= yValue;\n    });\n    return result || data[data.length - 1];\n}\nvar getXDistance = memoize(function (scale) {\n    if (scale.isCategory) {\n        return 1;\n    }\n    var scaleValues = scale.values; // values 是无序的\n    var length = scaleValues.length;\n    var min = scale.translate(scaleValues[0]);\n    var max = min;\n    for (var index = 0; index < length; index++) {\n        var value = scaleValues[index];\n        // 时间类型需要 translate\n        var numericValue = scale.translate(value);\n        if (numericValue < min) {\n            min = numericValue;\n        }\n        if (numericValue > max) {\n            max = numericValue;\n        }\n    }\n    return (max - min) / (length - 1);\n});\n/**\n * 获得 tooltip 的 title\n * @param originData\n * @param geometry\n * @param title\n */\nfunction getTooltipTitle(originData, geometry, title) {\n    var positionAttr = geometry.getAttribute('position');\n    var fields = positionAttr.getFields();\n    var scales = geometry.scales;\n    var titleField = isFunction(title) || !title ? fields[0] : title;\n    var titleScale = scales[titleField];\n    // 如果创建了该字段对应的 scale，则通过 scale.getText() 方式取值，因为用户可能对数据进行了格式化\n    // 如果没有对应的 scale，则从原始数据中取值，如果原始数据中仍不存在，则直接放回 title 值\n    var tooltipTitle = titleScale ? titleScale.getText(originData[titleField]) : originData[titleField] || titleField;\n    return isFunction(title) ? title(tooltipTitle, originData) : tooltipTitle;\n}\nfunction getAttributesForLegend(geometry) {\n    var attributes = values(geometry.attributes);\n    return filter(attributes, function (attribute) { return contains(GROUP_ATTRS, attribute.type); });\n}\nfunction getTooltipValueScale(geometry) {\n    var e_1, _a;\n    var attributes = getAttributesForLegend(geometry);\n    var scale;\n    try {\n        for (var attributes_1 = __values(attributes), attributes_1_1 = attributes_1.next(); !attributes_1_1.done; attributes_1_1 = attributes_1.next()) {\n            var attribute = attributes_1_1.value;\n            var tmpScale = attribute.getScale(attribute.type);\n            if (tmpScale && tmpScale.isLinear) {\n                var tmpScaleDef = get(geometry.scaleDefs, tmpScale.field);\n                var inferedScaleType = inferScaleType(tmpScale, tmpScaleDef, attribute.type, geometry.type);\n                if (inferedScaleType !== 'cat') {\n                    // 如果指定字段是非 position 的，同时是连续的\n                    scale = tmpScale;\n                    break;\n                }\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (attributes_1_1 && !attributes_1_1.done && (_a = attributes_1.return)) _a.call(attributes_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    var xScale = geometry.getXScale();\n    var yScale = geometry.getYScale();\n    return scale || yScale || xScale;\n}\nfunction getTooltipValue(originData, valueScale) {\n    var field = valueScale.field;\n    var value = originData[field];\n    if (isArray(value)) {\n        var texts = value.map(function (eachValue) {\n            return valueScale.getText(eachValue);\n        });\n        return texts.join('-');\n    }\n    return valueScale.getText(value);\n}\n// 根据原始数据获取 tooltip item 中 name 值\nfunction getTooltipName(originData, geometry) {\n    var nameScale;\n    var groupScales = geometry.getGroupScales();\n    if (groupScales.length) {\n        // 如果存在分组类型，取第一个分组类型\n        nameScale = groupScales[0];\n    }\n    if (nameScale) {\n        var field = nameScale.field;\n        return nameScale.getText(originData[field]);\n    }\n    var valueScale = getTooltipValueScale(geometry);\n    return getName(valueScale);\n}\n/**\n * @ignore\n * Finds data from geometry by point\n * @param point canvas point\n * @param data an item of geometry.dataArray\n * @param geometry\n * @returns\n */\nexport function findDataByPoint(point, data, geometry) {\n    if (data.length === 0) {\n        return null;\n    }\n    var geometryType = geometry.type;\n    var xScale = geometry.getXScale();\n    var yScale = geometry.getYScale();\n    var xField = xScale.field;\n    var yField = yScale.field;\n    var rst = null;\n    // 热力图采用最小逼近策略查找 point 击中的数据\n    if (geometryType === 'heatmap' || geometryType === 'point') {\n        // 将 point 画布坐标转换为原始数据值\n        var coordinate = geometry.coordinate;\n        var invertPoint = coordinate.invert(point); // 转换成归一化的数据\n        var x = xScale.invert(invertPoint.x); // 转换为原始值\n        var y = yScale.invert(invertPoint.y); // 转换为原始值\n        var min = Infinity;\n        for (var index = 0; index < data.length; index++) {\n            var obj = data[index];\n            var originData = obj[FIELD_ORIGIN];\n            var range = Math.pow((originData[xField] - x), 2) + Math.pow((originData[yField] - y), 2);\n            if (range < min) {\n                min = range;\n                rst = obj;\n            }\n        }\n        return rst;\n    }\n    // 其他 Geometry 类型按照 x 字段数据进行查找\n    var first = data[0];\n    var last = data[data.length - 1];\n    var xValue = getXValueByPoint(point, geometry);\n    var firstXValue = first[FIELD_ORIGIN][xField];\n    var firstYValue = first[FIELD_ORIGIN][yField];\n    var lastXValue = last[FIELD_ORIGIN][xField];\n    var isYArray = yScale.isLinear && isArray(firstYValue); // 考虑 x 维度相同，y 是数组区间的情况\n    // 如果 x 的值是数组\n    if (isArray(firstXValue)) {\n        for (var index = 0; index < data.length; index++) {\n            var record = data[index];\n            var originData = record[FIELD_ORIGIN];\n            // xValue 在 originData[xField] 的数值区间内\n            if (xScale.translate(originData[xField][0]) <= xValue && xScale.translate(originData[xField][1]) >= xValue) {\n                if (isYArray) {\n                    // 层叠直方图场景，x 和 y 都是数组区间\n                    if (!isArray(rst)) {\n                        rst = [];\n                    }\n                    rst.push(record);\n                }\n                else {\n                    rst = record;\n                    break;\n                }\n            }\n        }\n        if (isArray(rst)) {\n            rst = filterYValue(rst, point, geometry);\n        }\n    }\n    else {\n        var next = void 0;\n        if (!xScale.isLinear && xScale.type !== 'timeCat') {\n            // x 轴对应的数据为非线性以及非时间类型的数据采用遍历查找\n            for (var index = 0; index < data.length; index++) {\n                var record = data[index];\n                var originData = record[FIELD_ORIGIN];\n                if (snapEqual(originData[xField], xValue, xScale)) {\n                    if (isYArray) {\n                        if (!isArray(rst)) {\n                            rst = [];\n                        }\n                        rst.push(record);\n                    }\n                    else {\n                        rst = record;\n                        break;\n                    }\n                }\n                else if (xScale.translate(originData[xField]) <= xValue) {\n                    last = record;\n                    next = data[index + 1];\n                }\n            }\n            if (isArray(rst)) {\n                rst = filterYValue(rst, point, geometry);\n            }\n        }\n        else {\n            // x 轴对应的数据为线性以及时间类型，进行二分查找，性能更好\n            if ((xValue > xScale.translate(lastXValue) || xValue < xScale.translate(firstXValue)) &&\n                (xValue > xScale.max || xValue < xScale.min)) {\n                // 不在数据范围内\n                return null;\n            }\n            var firstIdx = 0;\n            var lastIdx = data.length - 1;\n            var middleIdx = void 0;\n            while (firstIdx <= lastIdx) {\n                middleIdx = Math.floor((firstIdx + lastIdx) / 2);\n                var item = data[middleIdx][FIELD_ORIGIN][xField];\n                if (snapEqual(item, xValue, xScale)) {\n                    return data[middleIdx];\n                }\n                if (xScale.translate(item) <= xScale.translate(xValue)) {\n                    firstIdx = middleIdx + 1;\n                    last = data[middleIdx];\n                    next = data[middleIdx + 1];\n                }\n                else {\n                    if (lastIdx === 0) {\n                        last = data[0];\n                    }\n                    lastIdx = middleIdx - 1;\n                }\n            }\n        }\n        if (last && next) {\n            // 计算最逼近的\n            if (Math.abs(xScale.translate(last[FIELD_ORIGIN][xField]) - xValue) >\n                Math.abs(xScale.translate(next[FIELD_ORIGIN][xField]) - xValue)) {\n                last = next;\n            }\n        }\n    }\n    var distance = getXDistance(geometry.getXScale()); // 每个分类间的平均间距\n    if (!rst && Math.abs(xScale.translate(last[FIELD_ORIGIN][xField]) - xValue) <= distance / 2) {\n        rst = last;\n    }\n    return rst;\n}\n/**\n * @ignore\n * Gets tooltip items\n * @param data\n * @param geometry\n * @param [title]\n * @returns\n */\nexport function getTooltipItems(data, geometry, title, showNil) {\n    var e_2, _a;\n    if (title === void 0) { title = ''; }\n    if (showNil === void 0) { showNil = false; }\n    var originData = data[FIELD_ORIGIN];\n    var tooltipTitle = getTooltipTitle(originData, geometry, title);\n    var tooltipOption = geometry.tooltipOption;\n    var defaultColor = geometry.theme.defaultColor;\n    var items = [];\n    var name;\n    var value;\n    function addItem(itemName, itemValue) {\n        if (showNil || (!isNil(itemValue) && itemValue !== '')) {\n            // 值为 null的时候，忽视\n            var item = {\n                title: tooltipTitle,\n                data: originData,\n                mappingData: data,\n                name: itemName,\n                value: itemValue,\n                color: data.color || defaultColor,\n                marker: true,\n            };\n            items.push(item);\n        }\n    }\n    if (isObject(tooltipOption)) {\n        var fields = tooltipOption.fields, callback = tooltipOption.callback;\n        if (callback) {\n            // 用户定义了回调函数\n            var callbackParams = fields.map(function (field) {\n                return data[FIELD_ORIGIN][field];\n            });\n            var cfg = callback.apply(void 0, __spreadArray([], __read(callbackParams), false));\n            var itemCfg = __assign({ data: data[FIELD_ORIGIN], mappingData: data, title: tooltipTitle, color: data.color || defaultColor, marker: true }, cfg);\n            items.push(itemCfg);\n        }\n        else {\n            var scales = geometry.scales;\n            try {\n                for (var fields_1 = __values(fields), fields_1_1 = fields_1.next(); !fields_1_1.done; fields_1_1 = fields_1.next()) {\n                    var field = fields_1_1.value;\n                    if (!isNil(originData[field])) {\n                        // 字段数据为null, undefined 时不显示\n                        var scale = scales[field];\n                        name = getName(scale);\n                        value = scale.getText(originData[field]);\n                        addItem(name, value);\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (fields_1_1 && !fields_1_1.done && (_a = fields_1.return)) _a.call(fields_1);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        }\n    }\n    else {\n        var valueScale = getTooltipValueScale(geometry);\n        // 字段数据为null ,undefined时不显示\n        value = getTooltipValue(originData, valueScale);\n        name = getTooltipName(originData, geometry);\n        addItem(name, value);\n    }\n    return items;\n}\nfunction getTooltipItemsByFindData(geometry, point, title, tooltipCfg) {\n    var e_3, _a;\n    var showNil = tooltipCfg.showNil;\n    var result = [];\n    var dataArray = geometry.dataArray;\n    if (!isEmpty(dataArray)) {\n        geometry.sort(dataArray); // 先进行排序，便于 tooltip 查找\n        try {\n            for (var dataArray_1 = __values(dataArray), dataArray_1_1 = dataArray_1.next(); !dataArray_1_1.done; dataArray_1_1 = dataArray_1.next()) {\n                var data = dataArray_1_1.value;\n                var record = findDataByPoint(point, data, geometry);\n                if (record) {\n                    var elementId = geometry.getElementId(record);\n                    var element = geometry.elementsMap[elementId];\n                    if (geometry.type === 'heatmap' || element.visible) {\n                        // Heatmap 没有 Element\n                        // 如果图形元素隐藏了，怎不再 tooltip 上展示相关数据\n                        var items = getTooltipItems(record, geometry, title, showNil);\n                        if (items.length) {\n                            result.push(items);\n                        }\n                    }\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (dataArray_1_1 && !dataArray_1_1.done && (_a = dataArray_1.return)) _a.call(dataArray_1);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n    }\n    return result;\n}\nfunction getTooltipItemsByHitShape(geometry, point, title, tooltipCfg) {\n    var showNil = tooltipCfg.showNil;\n    var result = [];\n    var container = geometry.container;\n    var shape = container.getShape(point.x, point.y);\n    if (shape && shape.get('visible') && shape.get('origin')) {\n        var mappingData = shape.get('origin').mappingData;\n        var items = getTooltipItems(mappingData, geometry, title, showNil);\n        if (items.length) {\n            result.push(items);\n        }\n    }\n    return result;\n}\n/**\n * 不进行递归查找\n */\nexport function findItemsFromView(view, point, tooltipCfg) {\n    var e_4, _a;\n    var result = [];\n    // 先从 view 本身查找\n    var geometries = view.geometries;\n    var shared = tooltipCfg.shared, title = tooltipCfg.title, reversed = tooltipCfg.reversed;\n    try {\n        for (var geometries_1 = __values(geometries), geometries_1_1 = geometries_1.next(); !geometries_1_1.done; geometries_1_1 = geometries_1.next()) {\n            var geometry = geometries_1_1.value;\n            if (geometry.visible && geometry.tooltipOption !== false) {\n                // geometry 可见同时未关闭 tooltip\n                var geometryType = geometry.type;\n                var tooltipItems = void 0;\n                if (['point', 'edge', 'polygon'].includes(geometryType)) {\n                    // 始终通过图形拾取\n                    tooltipItems = getTooltipItemsByHitShape(geometry, point, title, tooltipCfg);\n                }\n                else if (['area', 'line', 'path', 'heatmap'].includes(geometryType)) {\n                    // 如果是 'area', 'line', 'path'，始终通过数据查找方法查找 tooltip\n                    tooltipItems = getTooltipItemsByFindData(geometry, point, title, tooltipCfg);\n                }\n                else {\n                    if (shared !== false) {\n                        tooltipItems = getTooltipItemsByFindData(geometry, point, title, tooltipCfg);\n                    }\n                    else {\n                        tooltipItems = getTooltipItemsByHitShape(geometry, point, title, tooltipCfg);\n                    }\n                }\n                if (tooltipItems.length) {\n                    if (reversed) {\n                        tooltipItems.reverse();\n                    }\n                    // geometry 有可能会有多个 item，因为用户可以设置 geometry.tooltip('x*y*z')\n                    result.push(tooltipItems);\n                }\n            }\n        }\n    }\n    catch (e_4_1) { e_4 = { error: e_4_1 }; }\n    finally {\n        try {\n            if (geometries_1_1 && !geometries_1_1.done && (_a = geometries_1.return)) _a.call(geometries_1);\n        }\n        finally { if (e_4) throw e_4.error; }\n    }\n    return result;\n}\nexport function findItemsFromViewRecurisive(view, point, tooltipCfg) {\n    var e_5, _a;\n    var result = findItemsFromView(view, point, tooltipCfg);\n    try {\n        // 递归查找，并合并结果\n        for (var _b = __values(view.views), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var childView = _c.value;\n            result = result.concat(findItemsFromView(childView, point, tooltipCfg));\n        }\n    }\n    catch (e_5_1) { e_5 = { error: e_5_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_5) throw e_5.error; }\n    }\n    return result;\n}\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AACjE,SAASC,QAAQ,EAAEC,MAAM,EAAEC,IAAI,EAAEC,OAAO,EAAEC,OAAO,EAAEC,UAAU,EAAEC,KAAK,EAAEC,aAAa,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,GAAG,EAAEC,MAAM,QAAS,YAAY;AACxI,SAASC,YAAY,EAAEC,WAAW,QAAQ,aAAa;AACvD,SAASC,OAAO,EAAEC,cAAc,QAAQ,SAAS;AACjD,SAASC,SAASA,CAACC,EAAE,EAAEC,EAAE,EAAEC,KAAK,EAAE;EAC9B,IAAIC,MAAM,GAAGD,KAAK,CAACE,SAAS,CAACJ,EAAE,CAAC;EAChC,IAAIK,MAAM,GAAGH,KAAK,CAACE,SAAS,CAACH,EAAE,CAAC;EAChC,OAAOX,aAAa,CAACa,MAAM,EAAEE,MAAM,CAAC;AACxC;AACA,SAASC,gBAAgBA,CAACC,KAAK,EAAEC,QAAQ,EAAE;EACvC,IAAIC,UAAU,GAAGD,QAAQ,CAACC,UAAU;EACpC,IAAIC,MAAM,GAAGF,QAAQ,CAACG,SAAS,CAAC,CAAC;EACjC,IAAIC,KAAK,GAAGF,MAAM,CAACE,KAAK;EACxB,IAAIC,QAAQ,GAAGD,KAAK,CAACA,KAAK,CAACE,MAAM,GAAG,CAAC,CAAC;EACtC,IAAIC,QAAQ,GAAGH,KAAK,CAAC,CAAC,CAAC;EACvB,IAAII,WAAW,GAAGP,UAAU,CAACQ,MAAM,CAACV,KAAK,CAAC;EAC1C,IAAIW,MAAM,GAAGF,WAAW,CAACG,CAAC;EAC1B,IAAIV,UAAU,CAACW,OAAO,IAAIF,MAAM,GAAG,CAAC,CAAC,GAAGL,QAAQ,IAAI,CAAC,EAAE;IACnDK,MAAM,GAAGH,QAAQ,CAAC,CAAC;EACvB;;EACA,OAAOL,MAAM,CAACN,SAAS,CAACM,MAAM,CAACO,MAAM,CAACC,MAAM,CAAC,CAAC;AAClD;AACA,SAASG,YAAYA,CAACC,IAAI,EAAEf,KAAK,EAAEC,QAAQ,EAAE;EACzC,IAAIC,UAAU,GAAGD,QAAQ,CAACC,UAAU;EACpC,IAAIc,MAAM,GAAGf,QAAQ,CAACgB,SAAS,CAAC,CAAC;EACjC,IAAIC,MAAM,GAAGF,MAAM,CAACG,KAAK;EACzB,IAAIV,WAAW,GAAGP,UAAU,CAACQ,MAAM,CAACV,KAAK,CAAC;EAC1C,IAAIoB,MAAM,GAAGJ,MAAM,CAACN,MAAM,CAACD,WAAW,CAACY,CAAC,CAAC;EACzC,IAAIC,MAAM,GAAG5C,IAAI,CAACqC,IAAI,EAAE,UAAUQ,GAAG,EAAE;IACnC,IAAIC,UAAU,GAAGD,GAAG,CAACnC,YAAY,CAAC;IAClC,OAAOoC,UAAU,CAACN,MAAM,CAAC,CAAC,CAAC,CAAC,IAAIE,MAAM,IAAII,UAAU,CAACN,MAAM,CAAC,CAAC,CAAC,CAAC,IAAIE,MAAM;EAC7E,CAAC,CAAC;EACF,OAAOE,MAAM,IAAIP,IAAI,CAACA,IAAI,CAACR,MAAM,GAAG,CAAC,CAAC;AAC1C;AACA,IAAIkB,YAAY,GAAGxC,OAAO,CAAC,UAAUU,KAAK,EAAE;EACxC,IAAIA,KAAK,CAAC+B,UAAU,EAAE;IAClB,OAAO,CAAC;EACZ;EACA,IAAIC,WAAW,GAAGhC,KAAK,CAACR,MAAM,CAAC,CAAC;EAChC,IAAIoB,MAAM,GAAGoB,WAAW,CAACpB,MAAM;EAC/B,IAAIqB,GAAG,GAAGjC,KAAK,CAACE,SAAS,CAAC8B,WAAW,CAAC,CAAC,CAAC,CAAC;EACzC,IAAIE,GAAG,GAAGD,GAAG;EACb,KAAK,IAAIE,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGvB,MAAM,EAAEuB,KAAK,EAAE,EAAE;IACzC,IAAIC,KAAK,GAAGJ,WAAW,CAACG,KAAK,CAAC;IAC9B;IACA,IAAIE,YAAY,GAAGrC,KAAK,CAACE,SAAS,CAACkC,KAAK,CAAC;IACzC,IAAIC,YAAY,GAAGJ,GAAG,EAAE;MACpBA,GAAG,GAAGI,YAAY;IACtB;IACA,IAAIA,YAAY,GAAGH,GAAG,EAAE;MACpBA,GAAG,GAAGG,YAAY;IACtB;EACJ;EACA,OAAO,CAACH,GAAG,GAAGD,GAAG,KAAKrB,MAAM,GAAG,CAAC,CAAC;AACrC,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA,SAAS0B,eAAeA,CAACT,UAAU,EAAEvB,QAAQ,EAAEiC,KAAK,EAAE;EAClD,IAAIC,YAAY,GAAGlC,QAAQ,CAACmC,YAAY,CAAC,UAAU,CAAC;EACpD,IAAIC,MAAM,GAAGF,YAAY,CAACG,SAAS,CAAC,CAAC;EACrC,IAAIC,MAAM,GAAGtC,QAAQ,CAACsC,MAAM;EAC5B,IAAIC,UAAU,GAAG3D,UAAU,CAACqD,KAAK,CAAC,IAAI,CAACA,KAAK,GAAGG,MAAM,CAAC,CAAC,CAAC,GAAGH,KAAK;EAChE,IAAIO,UAAU,GAAGF,MAAM,CAACC,UAAU,CAAC;EACnC;EACA;EACA,IAAIE,YAAY,GAAGD,UAAU,GAAGA,UAAU,CAACE,OAAO,CAACnB,UAAU,CAACgB,UAAU,CAAC,CAAC,GAAGhB,UAAU,CAACgB,UAAU,CAAC,IAAIA,UAAU;EACjH,OAAO3D,UAAU,CAACqD,KAAK,CAAC,GAAGA,KAAK,CAACQ,YAAY,EAAElB,UAAU,CAAC,GAAGkB,YAAY;AAC7E;AACA,SAASE,sBAAsBA,CAAC3C,QAAQ,EAAE;EACtC,IAAI4C,UAAU,GAAG1D,MAAM,CAACc,QAAQ,CAAC4C,UAAU,CAAC;EAC5C,OAAOpE,MAAM,CAACoE,UAAU,EAAE,UAAUC,SAAS,EAAE;IAAE,OAAOtE,QAAQ,CAACa,WAAW,EAAEyD,SAAS,CAACC,IAAI,CAAC;EAAE,CAAC,CAAC;AACrG;AACA,SAASC,oBAAoBA,CAAC/C,QAAQ,EAAE;EACpC,IAAIgD,GAAG,EAAEC,EAAE;EACX,IAAIL,UAAU,GAAGD,sBAAsB,CAAC3C,QAAQ,CAAC;EACjD,IAAIN,KAAK;EACT,IAAI;IACA,KAAK,IAAIwD,YAAY,GAAG5E,QAAQ,CAACsE,UAAU,CAAC,EAAEO,cAAc,GAAGD,YAAY,CAACE,IAAI,CAAC,CAAC,EAAE,CAACD,cAAc,CAACE,IAAI,EAAEF,cAAc,GAAGD,YAAY,CAACE,IAAI,CAAC,CAAC,EAAE;MAC5I,IAAIP,SAAS,GAAGM,cAAc,CAACrB,KAAK;MACpC,IAAIwB,QAAQ,GAAGT,SAAS,CAACU,QAAQ,CAACV,SAAS,CAACC,IAAI,CAAC;MACjD,IAAIQ,QAAQ,IAAIA,QAAQ,CAACE,QAAQ,EAAE;QAC/B,IAAIC,WAAW,GAAGxE,GAAG,CAACe,QAAQ,CAAC0D,SAAS,EAAEJ,QAAQ,CAACpC,KAAK,CAAC;QACzD,IAAIyC,gBAAgB,GAAGrE,cAAc,CAACgE,QAAQ,EAAEG,WAAW,EAAEZ,SAAS,CAACC,IAAI,EAAE9C,QAAQ,CAAC8C,IAAI,CAAC;QAC3F,IAAIa,gBAAgB,KAAK,KAAK,EAAE;UAC5B;UACAjE,KAAK,GAAG4D,QAAQ;UAChB;QACJ;MACJ;IACJ;EACJ,CAAC,CACD,OAAOM,KAAK,EAAE;IAAEZ,GAAG,GAAG;MAAEa,KAAK,EAAED;IAAM,CAAC;EAAE,CAAC,SACjC;IACJ,IAAI;MACA,IAAIT,cAAc,IAAI,CAACA,cAAc,CAACE,IAAI,KAAKJ,EAAE,GAAGC,YAAY,CAACY,MAAM,CAAC,EAAEb,EAAE,CAACc,IAAI,CAACb,YAAY,CAAC;IACnG,CAAC,SACO;MAAE,IAAIF,GAAG,EAAE,MAAMA,GAAG,CAACa,KAAK;IAAE;EACxC;EACA,IAAI3D,MAAM,GAAGF,QAAQ,CAACG,SAAS,CAAC,CAAC;EACjC,IAAIY,MAAM,GAAGf,QAAQ,CAACgB,SAAS,CAAC,CAAC;EACjC,OAAOtB,KAAK,IAAIqB,MAAM,IAAIb,MAAM;AACpC;AACA,SAAS8D,eAAeA,CAACzC,UAAU,EAAE0C,UAAU,EAAE;EAC7C,IAAI/C,KAAK,GAAG+C,UAAU,CAAC/C,KAAK;EAC5B,IAAIY,KAAK,GAAGP,UAAU,CAACL,KAAK,CAAC;EAC7B,IAAIxC,OAAO,CAACoD,KAAK,CAAC,EAAE;IAChB,IAAIoC,KAAK,GAAGpC,KAAK,CAACqC,GAAG,CAAC,UAAUC,SAAS,EAAE;MACvC,OAAOH,UAAU,CAACvB,OAAO,CAAC0B,SAAS,CAAC;IACxC,CAAC,CAAC;IACF,OAAOF,KAAK,CAACG,IAAI,CAAC,GAAG,CAAC;EAC1B;EACA,OAAOJ,UAAU,CAACvB,OAAO,CAACZ,KAAK,CAAC;AACpC;AACA;AACA,SAASwC,cAAcA,CAAC/C,UAAU,EAAEvB,QAAQ,EAAE;EAC1C,IAAIuE,SAAS;EACb,IAAIC,WAAW,GAAGxE,QAAQ,CAACyE,cAAc,CAAC,CAAC;EAC3C,IAAID,WAAW,CAAClE,MAAM,EAAE;IACpB;IACAiE,SAAS,GAAGC,WAAW,CAAC,CAAC,CAAC;EAC9B;EACA,IAAID,SAAS,EAAE;IACX,IAAIrD,KAAK,GAAGqD,SAAS,CAACrD,KAAK;IAC3B,OAAOqD,SAAS,CAAC7B,OAAO,CAACnB,UAAU,CAACL,KAAK,CAAC,CAAC;EAC/C;EACA,IAAI+C,UAAU,GAAGlB,oBAAoB,CAAC/C,QAAQ,CAAC;EAC/C,OAAOX,OAAO,CAAC4E,UAAU,CAAC;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASS,eAAeA,CAAC3E,KAAK,EAAEe,IAAI,EAAEd,QAAQ,EAAE;EACnD,IAAIc,IAAI,CAACR,MAAM,KAAK,CAAC,EAAE;IACnB,OAAO,IAAI;EACf;EACA,IAAIqE,YAAY,GAAG3E,QAAQ,CAAC8C,IAAI;EAChC,IAAI5C,MAAM,GAAGF,QAAQ,CAACG,SAAS,CAAC,CAAC;EACjC,IAAIY,MAAM,GAAGf,QAAQ,CAACgB,SAAS,CAAC,CAAC;EACjC,IAAI4D,MAAM,GAAG1E,MAAM,CAACgB,KAAK;EACzB,IAAID,MAAM,GAAGF,MAAM,CAACG,KAAK;EACzB,IAAI2D,GAAG,GAAG,IAAI;EACd;EACA,IAAIF,YAAY,KAAK,SAAS,IAAIA,YAAY,KAAK,OAAO,EAAE;IACxD;IACA,IAAI1E,UAAU,GAAGD,QAAQ,CAACC,UAAU;IACpC,IAAIO,WAAW,GAAGP,UAAU,CAACQ,MAAM,CAACV,KAAK,CAAC,CAAC,CAAC;IAC5C,IAAIY,CAAC,GAAGT,MAAM,CAACO,MAAM,CAACD,WAAW,CAACG,CAAC,CAAC,CAAC,CAAC;IACtC,IAAIS,CAAC,GAAGL,MAAM,CAACN,MAAM,CAACD,WAAW,CAACY,CAAC,CAAC,CAAC,CAAC;IACtC,IAAIO,GAAG,GAAGmD,QAAQ;IAClB,KAAK,IAAIjD,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGf,IAAI,CAACR,MAAM,EAAEuB,KAAK,EAAE,EAAE;MAC9C,IAAIP,GAAG,GAAGR,IAAI,CAACe,KAAK,CAAC;MACrB,IAAIN,UAAU,GAAGD,GAAG,CAACnC,YAAY,CAAC;MAClC,IAAIiB,KAAK,GAAG2E,IAAI,CAACC,GAAG,CAAEzD,UAAU,CAACqD,MAAM,CAAC,GAAGjE,CAAC,EAAG,CAAC,CAAC,GAAGoE,IAAI,CAACC,GAAG,CAAEzD,UAAU,CAACN,MAAM,CAAC,GAAGG,CAAC,EAAG,CAAC,CAAC;MACzF,IAAIhB,KAAK,GAAGuB,GAAG,EAAE;QACbA,GAAG,GAAGvB,KAAK;QACXyE,GAAG,GAAGvD,GAAG;MACb;IACJ;IACA,OAAOuD,GAAG;EACd;EACA;EACA,IAAII,KAAK,GAAGnE,IAAI,CAAC,CAAC,CAAC;EACnB,IAAIoE,IAAI,GAAGpE,IAAI,CAACA,IAAI,CAACR,MAAM,GAAG,CAAC,CAAC;EAChC,IAAII,MAAM,GAAGZ,gBAAgB,CAACC,KAAK,EAAEC,QAAQ,CAAC;EAC9C,IAAImF,WAAW,GAAGF,KAAK,CAAC9F,YAAY,CAAC,CAACyF,MAAM,CAAC;EAC7C,IAAIQ,WAAW,GAAGH,KAAK,CAAC9F,YAAY,CAAC,CAAC8B,MAAM,CAAC;EAC7C,IAAIoE,UAAU,GAAGH,IAAI,CAAC/F,YAAY,CAAC,CAACyF,MAAM,CAAC;EAC3C,IAAIU,QAAQ,GAAGvE,MAAM,CAACyC,QAAQ,IAAI9E,OAAO,CAAC0G,WAAW,CAAC,CAAC,CAAC;EACxD;EACA,IAAI1G,OAAO,CAACyG,WAAW,CAAC,EAAE;IACtB,KAAK,IAAItD,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGf,IAAI,CAACR,MAAM,EAAEuB,KAAK,EAAE,EAAE;MAC9C,IAAI0D,MAAM,GAAGzE,IAAI,CAACe,KAAK,CAAC;MACxB,IAAIN,UAAU,GAAGgE,MAAM,CAACpG,YAAY,CAAC;MACrC;MACA,IAAIe,MAAM,CAACN,SAAS,CAAC2B,UAAU,CAACqD,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIlE,MAAM,IAAIR,MAAM,CAACN,SAAS,CAAC2B,UAAU,CAACqD,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIlE,MAAM,EAAE;QACxG,IAAI4E,QAAQ,EAAE;UACV;UACA,IAAI,CAAC5G,OAAO,CAACmG,GAAG,CAAC,EAAE;YACfA,GAAG,GAAG,EAAE;UACZ;UACAA,GAAG,CAACW,IAAI,CAACD,MAAM,CAAC;QACpB,CAAC,MACI;UACDV,GAAG,GAAGU,MAAM;UACZ;QACJ;MACJ;IACJ;IACA,IAAI7G,OAAO,CAACmG,GAAG,CAAC,EAAE;MACdA,GAAG,GAAGhE,YAAY,CAACgE,GAAG,EAAE9E,KAAK,EAAEC,QAAQ,CAAC;IAC5C;EACJ,CAAC,MACI;IACD,IAAIoD,IAAI,GAAG,KAAK,CAAC;IACjB,IAAI,CAAClD,MAAM,CAACsD,QAAQ,IAAItD,MAAM,CAAC4C,IAAI,KAAK,SAAS,EAAE;MAC/C;MACA,KAAK,IAAIjB,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGf,IAAI,CAACR,MAAM,EAAEuB,KAAK,EAAE,EAAE;QAC9C,IAAI0D,MAAM,GAAGzE,IAAI,CAACe,KAAK,CAAC;QACxB,IAAIN,UAAU,GAAGgE,MAAM,CAACpG,YAAY,CAAC;QACrC,IAAII,SAAS,CAACgC,UAAU,CAACqD,MAAM,CAAC,EAAElE,MAAM,EAAER,MAAM,CAAC,EAAE;UAC/C,IAAIoF,QAAQ,EAAE;YACV,IAAI,CAAC5G,OAAO,CAACmG,GAAG,CAAC,EAAE;cACfA,GAAG,GAAG,EAAE;YACZ;YACAA,GAAG,CAACW,IAAI,CAACD,MAAM,CAAC;UACpB,CAAC,MACI;YACDV,GAAG,GAAGU,MAAM;YACZ;UACJ;QACJ,CAAC,MACI,IAAIrF,MAAM,CAACN,SAAS,CAAC2B,UAAU,CAACqD,MAAM,CAAC,CAAC,IAAIlE,MAAM,EAAE;UACrDwE,IAAI,GAAGK,MAAM;UACbnC,IAAI,GAAGtC,IAAI,CAACe,KAAK,GAAG,CAAC,CAAC;QAC1B;MACJ;MACA,IAAInD,OAAO,CAACmG,GAAG,CAAC,EAAE;QACdA,GAAG,GAAGhE,YAAY,CAACgE,GAAG,EAAE9E,KAAK,EAAEC,QAAQ,CAAC;MAC5C;IACJ,CAAC,MACI;MACD;MACA,IAAI,CAACU,MAAM,GAAGR,MAAM,CAACN,SAAS,CAACyF,UAAU,CAAC,IAAI3E,MAAM,GAAGR,MAAM,CAACN,SAAS,CAACuF,WAAW,CAAC,MAC/EzE,MAAM,GAAGR,MAAM,CAAC0B,GAAG,IAAIlB,MAAM,GAAGR,MAAM,CAACyB,GAAG,CAAC,EAAE;QAC9C;QACA,OAAO,IAAI;MACf;MACA,IAAI8D,QAAQ,GAAG,CAAC;MAChB,IAAIC,OAAO,GAAG5E,IAAI,CAACR,MAAM,GAAG,CAAC;MAC7B,IAAIqF,SAAS,GAAG,KAAK,CAAC;MACtB,OAAOF,QAAQ,IAAIC,OAAO,EAAE;QACxBC,SAAS,GAAGZ,IAAI,CAACa,KAAK,CAAC,CAACH,QAAQ,GAAGC,OAAO,IAAI,CAAC,CAAC;QAChD,IAAIG,IAAI,GAAG/E,IAAI,CAAC6E,SAAS,CAAC,CAACxG,YAAY,CAAC,CAACyF,MAAM,CAAC;QAChD,IAAIrF,SAAS,CAACsG,IAAI,EAAEnF,MAAM,EAAER,MAAM,CAAC,EAAE;UACjC,OAAOY,IAAI,CAAC6E,SAAS,CAAC;QAC1B;QACA,IAAIzF,MAAM,CAACN,SAAS,CAACiG,IAAI,CAAC,IAAI3F,MAAM,CAACN,SAAS,CAACc,MAAM,CAAC,EAAE;UACpD+E,QAAQ,GAAGE,SAAS,GAAG,CAAC;UACxBT,IAAI,GAAGpE,IAAI,CAAC6E,SAAS,CAAC;UACtBvC,IAAI,GAAGtC,IAAI,CAAC6E,SAAS,GAAG,CAAC,CAAC;QAC9B,CAAC,MACI;UACD,IAAID,OAAO,KAAK,CAAC,EAAE;YACfR,IAAI,GAAGpE,IAAI,CAAC,CAAC,CAAC;UAClB;UACA4E,OAAO,GAAGC,SAAS,GAAG,CAAC;QAC3B;MACJ;IACJ;IACA,IAAIT,IAAI,IAAI9B,IAAI,EAAE;MACd;MACA,IAAI2B,IAAI,CAACe,GAAG,CAAC5F,MAAM,CAACN,SAAS,CAACsF,IAAI,CAAC/F,YAAY,CAAC,CAACyF,MAAM,CAAC,CAAC,GAAGlE,MAAM,CAAC,GAC/DqE,IAAI,CAACe,GAAG,CAAC5F,MAAM,CAACN,SAAS,CAACwD,IAAI,CAACjE,YAAY,CAAC,CAACyF,MAAM,CAAC,CAAC,GAAGlE,MAAM,CAAC,EAAE;QACjEwE,IAAI,GAAG9B,IAAI;MACf;IACJ;EACJ;EACA,IAAI2C,QAAQ,GAAGvE,YAAY,CAACxB,QAAQ,CAACG,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;EACnD,IAAI,CAAC0E,GAAG,IAAIE,IAAI,CAACe,GAAG,CAAC5F,MAAM,CAACN,SAAS,CAACsF,IAAI,CAAC/F,YAAY,CAAC,CAACyF,MAAM,CAAC,CAAC,GAAGlE,MAAM,CAAC,IAAIqF,QAAQ,GAAG,CAAC,EAAE;IACzFlB,GAAG,GAAGK,IAAI;EACd;EACA,OAAOL,GAAG;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASmB,eAAeA,CAAClF,IAAI,EAAEd,QAAQ,EAAEiC,KAAK,EAAEgE,OAAO,EAAE;EAC5D,IAAIC,GAAG,EAAEjD,EAAE;EACX,IAAIhB,KAAK,KAAK,KAAK,CAAC,EAAE;IAAEA,KAAK,GAAG,EAAE;EAAE;EACpC,IAAIgE,OAAO,KAAK,KAAK,CAAC,EAAE;IAAEA,OAAO,GAAG,KAAK;EAAE;EAC3C,IAAI1E,UAAU,GAAGT,IAAI,CAAC3B,YAAY,CAAC;EACnC,IAAIsD,YAAY,GAAGT,eAAe,CAACT,UAAU,EAAEvB,QAAQ,EAAEiC,KAAK,CAAC;EAC/D,IAAIkE,aAAa,GAAGnG,QAAQ,CAACmG,aAAa;EAC1C,IAAIC,YAAY,GAAGpG,QAAQ,CAACqG,KAAK,CAACD,YAAY;EAC9C,IAAIE,KAAK,GAAG,EAAE;EACd,IAAIC,IAAI;EACR,IAAIzE,KAAK;EACT,SAAS0E,OAAOA,CAACC,QAAQ,EAAEC,SAAS,EAAE;IAClC,IAAIT,OAAO,IAAK,CAACpH,KAAK,CAAC6H,SAAS,CAAC,IAAIA,SAAS,KAAK,EAAG,EAAE;MACpD;MACA,IAAIb,IAAI,GAAG;QACP5D,KAAK,EAAEQ,YAAY;QACnB3B,IAAI,EAAES,UAAU;QAChBoF,WAAW,EAAE7F,IAAI;QACjByF,IAAI,EAAEE,QAAQ;QACd3E,KAAK,EAAE4E,SAAS;QAChBE,KAAK,EAAE9F,IAAI,CAAC8F,KAAK,IAAIR,YAAY;QACjCS,MAAM,EAAE;MACZ,CAAC;MACDP,KAAK,CAACd,IAAI,CAACK,IAAI,CAAC;IACpB;EACJ;EACA,IAAI9G,QAAQ,CAACoH,aAAa,CAAC,EAAE;IACzB,IAAI/D,MAAM,GAAG+D,aAAa,CAAC/D,MAAM;MAAE0E,QAAQ,GAAGX,aAAa,CAACW,QAAQ;IACpE,IAAIA,QAAQ,EAAE;MACV;MACA,IAAIC,cAAc,GAAG3E,MAAM,CAAC+B,GAAG,CAAC,UAAUjD,KAAK,EAAE;QAC7C,OAAOJ,IAAI,CAAC3B,YAAY,CAAC,CAAC+B,KAAK,CAAC;MACpC,CAAC,CAAC;MACF,IAAI8F,GAAG,GAAGF,QAAQ,CAACG,KAAK,CAAC,KAAK,CAAC,EAAE5I,aAAa,CAAC,EAAE,EAAED,MAAM,CAAC2I,cAAc,CAAC,EAAE,KAAK,CAAC,CAAC;MAClF,IAAIG,OAAO,GAAG/I,QAAQ,CAAC;QAAE2C,IAAI,EAAEA,IAAI,CAAC3B,YAAY,CAAC;QAAEwH,WAAW,EAAE7F,IAAI;QAAEmB,KAAK,EAAEQ,YAAY;QAAEmE,KAAK,EAAE9F,IAAI,CAAC8F,KAAK,IAAIR,YAAY;QAAES,MAAM,EAAE;MAAK,CAAC,EAAEG,GAAG,CAAC;MAClJV,KAAK,CAACd,IAAI,CAAC0B,OAAO,CAAC;IACvB,CAAC,MACI;MACD,IAAI5E,MAAM,GAAGtC,QAAQ,CAACsC,MAAM;MAC5B,IAAI;QACA,KAAK,IAAI6E,QAAQ,GAAG7I,QAAQ,CAAC8D,MAAM,CAAC,EAAEgF,UAAU,GAAGD,QAAQ,CAAC/D,IAAI,CAAC,CAAC,EAAE,CAACgE,UAAU,CAAC/D,IAAI,EAAE+D,UAAU,GAAGD,QAAQ,CAAC/D,IAAI,CAAC,CAAC,EAAE;UAChH,IAAIlC,KAAK,GAAGkG,UAAU,CAACtF,KAAK;UAC5B,IAAI,CAACjD,KAAK,CAAC0C,UAAU,CAACL,KAAK,CAAC,CAAC,EAAE;YAC3B;YACA,IAAIxB,KAAK,GAAG4C,MAAM,CAACpB,KAAK,CAAC;YACzBqF,IAAI,GAAGlH,OAAO,CAACK,KAAK,CAAC;YACrBoC,KAAK,GAAGpC,KAAK,CAACgD,OAAO,CAACnB,UAAU,CAACL,KAAK,CAAC,CAAC;YACxCsF,OAAO,CAACD,IAAI,EAAEzE,KAAK,CAAC;UACxB;QACJ;MACJ,CAAC,CACD,OAAOuF,KAAK,EAAE;QAAEnB,GAAG,GAAG;UAAErC,KAAK,EAAEwD;QAAM,CAAC;MAAE,CAAC,SACjC;QACJ,IAAI;UACA,IAAID,UAAU,IAAI,CAACA,UAAU,CAAC/D,IAAI,KAAKJ,EAAE,GAAGkE,QAAQ,CAACrD,MAAM,CAAC,EAAEb,EAAE,CAACc,IAAI,CAACoD,QAAQ,CAAC;QACnF,CAAC,SACO;UAAE,IAAIjB,GAAG,EAAE,MAAMA,GAAG,CAACrC,KAAK;QAAE;MACxC;IACJ;EACJ,CAAC,MACI;IACD,IAAII,UAAU,GAAGlB,oBAAoB,CAAC/C,QAAQ,CAAC;IAC/C;IACA8B,KAAK,GAAGkC,eAAe,CAACzC,UAAU,EAAE0C,UAAU,CAAC;IAC/CsC,IAAI,GAAGjC,cAAc,CAAC/C,UAAU,EAAEvB,QAAQ,CAAC;IAC3CwG,OAAO,CAACD,IAAI,EAAEzE,KAAK,CAAC;EACxB;EACA,OAAOwE,KAAK;AAChB;AACA,SAASgB,yBAAyBA,CAACtH,QAAQ,EAAED,KAAK,EAAEkC,KAAK,EAAEsF,UAAU,EAAE;EACnE,IAAIC,GAAG,EAAEvE,EAAE;EACX,IAAIgD,OAAO,GAAGsB,UAAU,CAACtB,OAAO;EAChC,IAAI5E,MAAM,GAAG,EAAE;EACf,IAAIoG,SAAS,GAAGzH,QAAQ,CAACyH,SAAS;EAClC,IAAI,CAAC9I,OAAO,CAAC8I,SAAS,CAAC,EAAE;IACrBzH,QAAQ,CAAC0H,IAAI,CAACD,SAAS,CAAC,CAAC,CAAC;IAC1B,IAAI;MACA,KAAK,IAAIE,WAAW,GAAGrJ,QAAQ,CAACmJ,SAAS,CAAC,EAAEG,aAAa,GAAGD,WAAW,CAACvE,IAAI,CAAC,CAAC,EAAE,CAACwE,aAAa,CAACvE,IAAI,EAAEuE,aAAa,GAAGD,WAAW,CAACvE,IAAI,CAAC,CAAC,EAAE;QACrI,IAAItC,IAAI,GAAG8G,aAAa,CAAC9F,KAAK;QAC9B,IAAIyD,MAAM,GAAGb,eAAe,CAAC3E,KAAK,EAAEe,IAAI,EAAEd,QAAQ,CAAC;QACnD,IAAIuF,MAAM,EAAE;UACR,IAAIsC,SAAS,GAAG7H,QAAQ,CAAC8H,YAAY,CAACvC,MAAM,CAAC;UAC7C,IAAIwC,OAAO,GAAG/H,QAAQ,CAACgI,WAAW,CAACH,SAAS,CAAC;UAC7C,IAAI7H,QAAQ,CAAC8C,IAAI,KAAK,SAAS,IAAIiF,OAAO,CAACE,OAAO,EAAE;YAChD;YACA;YACA,IAAI3B,KAAK,GAAGN,eAAe,CAACT,MAAM,EAAEvF,QAAQ,EAAEiC,KAAK,EAAEgE,OAAO,CAAC;YAC7D,IAAIK,KAAK,CAAChG,MAAM,EAAE;cACde,MAAM,CAACmE,IAAI,CAACc,KAAK,CAAC;YACtB;UACJ;QACJ;MACJ;IACJ,CAAC,CACD,OAAO4B,KAAK,EAAE;MAAEV,GAAG,GAAG;QAAE3D,KAAK,EAAEqE;MAAM,CAAC;IAAE,CAAC,SACjC;MACJ,IAAI;QACA,IAAIN,aAAa,IAAI,CAACA,aAAa,CAACvE,IAAI,KAAKJ,EAAE,GAAG0E,WAAW,CAAC7D,MAAM,CAAC,EAAEb,EAAE,CAACc,IAAI,CAAC4D,WAAW,CAAC;MAC/F,CAAC,SACO;QAAE,IAAIH,GAAG,EAAE,MAAMA,GAAG,CAAC3D,KAAK;MAAE;IACxC;EACJ;EACA,OAAOxC,MAAM;AACjB;AACA,SAAS8G,yBAAyBA,CAACnI,QAAQ,EAAED,KAAK,EAAEkC,KAAK,EAAEsF,UAAU,EAAE;EACnE,IAAItB,OAAO,GAAGsB,UAAU,CAACtB,OAAO;EAChC,IAAI5E,MAAM,GAAG,EAAE;EACf,IAAI+G,SAAS,GAAGpI,QAAQ,CAACoI,SAAS;EAClC,IAAIC,KAAK,GAAGD,SAAS,CAACE,QAAQ,CAACvI,KAAK,CAACY,CAAC,EAAEZ,KAAK,CAACqB,CAAC,CAAC;EAChD,IAAIiH,KAAK,IAAIA,KAAK,CAACpJ,GAAG,CAAC,SAAS,CAAC,IAAIoJ,KAAK,CAACpJ,GAAG,CAAC,QAAQ,CAAC,EAAE;IACtD,IAAI0H,WAAW,GAAG0B,KAAK,CAACpJ,GAAG,CAAC,QAAQ,CAAC,CAAC0H,WAAW;IACjD,IAAIL,KAAK,GAAGN,eAAe,CAACW,WAAW,EAAE3G,QAAQ,EAAEiC,KAAK,EAAEgE,OAAO,CAAC;IAClE,IAAIK,KAAK,CAAChG,MAAM,EAAE;MACde,MAAM,CAACmE,IAAI,CAACc,KAAK,CAAC;IACtB;EACJ;EACA,OAAOjF,MAAM;AACjB;AACA;AACA;AACA;AACA,OAAO,SAASkH,iBAAiBA,CAACC,IAAI,EAAEzI,KAAK,EAAEwH,UAAU,EAAE;EACvD,IAAIkB,GAAG,EAAExF,EAAE;EACX,IAAI5B,MAAM,GAAG,EAAE;EACf;EACA,IAAIqH,UAAU,GAAGF,IAAI,CAACE,UAAU;EAChC,IAAIC,MAAM,GAAGpB,UAAU,CAACoB,MAAM;IAAE1G,KAAK,GAAGsF,UAAU,CAACtF,KAAK;IAAE2G,QAAQ,GAAGrB,UAAU,CAACqB,QAAQ;EACxF,IAAI;IACA,KAAK,IAAIC,YAAY,GAAGvK,QAAQ,CAACoK,UAAU,CAAC,EAAEI,cAAc,GAAGD,YAAY,CAACzF,IAAI,CAAC,CAAC,EAAE,CAAC0F,cAAc,CAACzF,IAAI,EAAEyF,cAAc,GAAGD,YAAY,CAACzF,IAAI,CAAC,CAAC,EAAE;MAC5I,IAAIpD,QAAQ,GAAG8I,cAAc,CAAChH,KAAK;MACnC,IAAI9B,QAAQ,CAACiI,OAAO,IAAIjI,QAAQ,CAACmG,aAAa,KAAK,KAAK,EAAE;QACtD;QACA,IAAIxB,YAAY,GAAG3E,QAAQ,CAAC8C,IAAI;QAChC,IAAIiG,YAAY,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,SAAS,CAAC,CAACC,QAAQ,CAACrE,YAAY,CAAC,EAAE;UACrD;UACAoE,YAAY,GAAGZ,yBAAyB,CAACnI,QAAQ,EAAED,KAAK,EAAEkC,KAAK,EAAEsF,UAAU,CAAC;QAChF,CAAC,MACI,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,CAAC,CAACyB,QAAQ,CAACrE,YAAY,CAAC,EAAE;UACjE;UACAoE,YAAY,GAAGzB,yBAAyB,CAACtH,QAAQ,EAAED,KAAK,EAAEkC,KAAK,EAAEsF,UAAU,CAAC;QAChF,CAAC,MACI;UACD,IAAIoB,MAAM,KAAK,KAAK,EAAE;YAClBI,YAAY,GAAGzB,yBAAyB,CAACtH,QAAQ,EAAED,KAAK,EAAEkC,KAAK,EAAEsF,UAAU,CAAC;UAChF,CAAC,MACI;YACDwB,YAAY,GAAGZ,yBAAyB,CAACnI,QAAQ,EAAED,KAAK,EAAEkC,KAAK,EAAEsF,UAAU,CAAC;UAChF;QACJ;QACA,IAAIwB,YAAY,CAACzI,MAAM,EAAE;UACrB,IAAIsI,QAAQ,EAAE;YACVG,YAAY,CAACE,OAAO,CAAC,CAAC;UAC1B;UACA;UACA5H,MAAM,CAACmE,IAAI,CAACuD,YAAY,CAAC;QAC7B;MACJ;IACJ;EACJ,CAAC,CACD,OAAOG,KAAK,EAAE;IAAET,GAAG,GAAG;MAAE5E,KAAK,EAAEqF;IAAM,CAAC;EAAE,CAAC,SACjC;IACJ,IAAI;MACA,IAAIJ,cAAc,IAAI,CAACA,cAAc,CAACzF,IAAI,KAAKJ,EAAE,GAAG4F,YAAY,CAAC/E,MAAM,CAAC,EAAEb,EAAE,CAACc,IAAI,CAAC8E,YAAY,CAAC;IACnG,CAAC,SACO;MAAE,IAAIJ,GAAG,EAAE,MAAMA,GAAG,CAAC5E,KAAK;IAAE;EACxC;EACA,OAAOxC,MAAM;AACjB;AACA,OAAO,SAAS8H,2BAA2BA,CAACX,IAAI,EAAEzI,KAAK,EAAEwH,UAAU,EAAE;EACjE,IAAI6B,GAAG,EAAEnG,EAAE;EACX,IAAI5B,MAAM,GAAGkH,iBAAiB,CAACC,IAAI,EAAEzI,KAAK,EAAEwH,UAAU,CAAC;EACvD,IAAI;IACA;IACA,KAAK,IAAI8B,EAAE,GAAG/K,QAAQ,CAACkK,IAAI,CAACc,KAAK,CAAC,EAAEC,EAAE,GAAGF,EAAE,CAACjG,IAAI,CAAC,CAAC,EAAE,CAACmG,EAAE,CAAClG,IAAI,EAAEkG,EAAE,GAAGF,EAAE,CAACjG,IAAI,CAAC,CAAC,EAAE;MAC1E,IAAIoG,SAAS,GAAGD,EAAE,CAACzH,KAAK;MACxBT,MAAM,GAAGA,MAAM,CAACoI,MAAM,CAAClB,iBAAiB,CAACiB,SAAS,EAAEzJ,KAAK,EAAEwH,UAAU,CAAC,CAAC;IAC3E;EACJ,CAAC,CACD,OAAOmC,KAAK,EAAE;IAAEN,GAAG,GAAG;MAAEvF,KAAK,EAAE6F;IAAM,CAAC;EAAE,CAAC,SACjC;IACJ,IAAI;MACA,IAAIH,EAAE,IAAI,CAACA,EAAE,CAAClG,IAAI,KAAKJ,EAAE,GAAGoG,EAAE,CAACvF,MAAM,CAAC,EAAEb,EAAE,CAACc,IAAI,CAACsF,EAAE,CAAC;IACvD,CAAC,SACO;MAAE,IAAID,GAAG,EAAE,MAAMA,GAAG,CAACvF,KAAK;IAAE;EACxC;EACA,OAAOxC,MAAM;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}