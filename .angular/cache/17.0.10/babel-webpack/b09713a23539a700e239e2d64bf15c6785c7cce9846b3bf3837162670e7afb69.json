{"ast":null,"code":"import { ViewGiftBatchGQL, ViewGiftBatchQuery } from '@ridy/admin-panel/generated/graphql';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ridy/admin-panel/generated/graphql\";\nexport class GiftBatchViewResolver {\n  constructor(gql) {\n    this.gql = gql;\n  }\n  resolve(route, state) {\n    return this.gql.fetch({\n      id: route.params.id\n    });\n  }\n  static {\n    this.ɵfac = function GiftBatchViewResolver_Factory(t) {\n      return new (t || GiftBatchViewResolver)(i0.ɵɵinject(i1.ViewGiftBatchGQL));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: GiftBatchViewResolver,\n      factory: GiftBatchViewResolver.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["ViewGiftBatchGQL","ViewGiftBatchQuery","GiftBatchViewResolver","constructor","gql","resolve","route","state","fetch","id","params","i0","ɵɵinject","i1","factory","ɵfac"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/apps/admin-panel/src/app/cms/marketing/gift/gift-batch-view/gift-batch-view.resolver.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { ApolloQueryResult } from '@apollo/client/core';\nimport {\n  ViewCouponGQL,\n  ViewCouponQuery,\n  ViewGiftBatchGQL,\n  ViewGiftBatchQuery,\n} from '@ridy/admin-panel/generated/graphql';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class GiftBatchViewResolver {\n  constructor(private gql: ViewGiftBatchGQL) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot,\n  ): Observable<ApolloQueryResult<ViewGiftBatchQuery>> {\n    return this.gql.fetch({ id: route.params.id });\n  }\n}\n"],"mappings":"AAGA,SAGEA,gBAAgB,EAChBC,kBAAkB,QACb,qCAAqC;;;AAI5C,OAAM,MAAOC,qBAAqB;EAChCC,YAAoBC,GAAqB;IAArB,KAAAA,GAAG,GAAHA,GAAG;EAAqB;EAE5CC,OAAOA,CACLC,KAA6B,EAC7BC,KAA0B;IAE1B,OAAO,IAAI,CAACH,GAAG,CAACI,KAAK,CAAC;MAAEC,EAAE,EAAEH,KAAK,CAACI,MAAM,CAACD;IAAE,CAAE,CAAC;EAChD;;;uBARWP,qBAAqB,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAb,gBAAA;IAAA;EAAA;;;aAArBE,qBAAqB;MAAAY,OAAA,EAArBZ,qBAAqB,CAAAa;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}