{"ast":null,"code":"import { __assign, __extends, __read } from \"tslib\";\nimport { deepMix, get, isObject, size, clamp, isNil, noop, throttle, isEmpty, valuesOfKey } from '@antv/util';\nimport { COMPONENT_TYPE, DIRECTION, LAYER, VIEW_LIFE_CIRCLE } from '../../constant';\nimport { Slider as SliderComponent } from '../../dependents';\nimport { BBox } from '../../util/bbox';\nimport { directionToPosition } from '../../util/direction';\nimport { isBetween } from '../../util/helper';\nimport { Controller } from './base';\n/**\n * @ignore\n * slider Controller\n */\nvar Slider = /** @class */function (_super) {\n  __extends(Slider, _super);\n  function Slider(view) {\n    var _this = _super.call(this, view) || this;\n    _this.onChangeFn = noop;\n    /**\n     * 清除测量\n     */\n    _this.resetMeasure = function () {\n      _this.clear();\n    };\n    /**\n     * 滑块滑动的时候出发\n     * @param v\n     */\n    _this.onValueChange = function (v) {\n      var _a = __read(v, 2),\n        min = _a[0],\n        max = _a[1];\n      _this.start = min;\n      _this.end = max;\n      _this.changeViewData(min, max);\n    };\n    _this.container = _this.view.getLayer(LAYER.FORE).addGroup();\n    _this.onChangeFn = throttle(_this.onValueChange, 20, {\n      leading: true\n    });\n    _this.width = 0;\n    _this.view.on(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, _this.resetMeasure);\n    _this.view.on(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_SIZE, _this.resetMeasure);\n    return _this;\n  }\n  Object.defineProperty(Slider.prototype, \"name\", {\n    get: function () {\n      return 'slider';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Slider.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n    this.view.off(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, this.resetMeasure);\n    this.view.off(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_SIZE, this.resetMeasure);\n  };\n  /**\n   * 初始化\n   */\n  Slider.prototype.init = function () {};\n  /**\n   * 渲染\n   */\n  Slider.prototype.render = function () {\n    this.option = this.view.getOptions().slider;\n    var _a = this.getSliderCfg(),\n      start = _a.start,\n      end = _a.end;\n    if (isNil(this.start)) {\n      this.start = start;\n      this.end = end;\n    }\n    var viewData = this.view.getOptions().data;\n    if (this.option && !isEmpty(viewData)) {\n      if (this.slider) {\n        // exist, update\n        this.slider = this.updateSlider();\n      } else {\n        // not exist, create\n        this.slider = this.createSlider();\n        // 监听事件，绑定交互\n        this.slider.component.on('sliderchange', this.onChangeFn);\n      }\n    } else {\n      if (this.slider) {\n        // exist, destroy\n        this.slider.component.destroy();\n        this.slider = undefined;\n      } else {\n        // do nothing\n      }\n    }\n  };\n  /**\n   * 布局\n   */\n  Slider.prototype.layout = function () {\n    var _this = this;\n    if (this.option && !this.width) {\n      this.measureSlider();\n      setTimeout(function () {\n        // 初始状态下的 view 数据过滤\n        if (!_this.view.destroyed) {\n          _this.changeViewData(_this.start, _this.end);\n        }\n      }, 0);\n    }\n    if (this.slider) {\n      var width = this.view.coordinateBBox.width;\n      // 获取组件的 layout bbox\n      var padding = this.slider.component.get('padding');\n      var _a = __read(padding, 4),\n        paddingTop = _a[0],\n        paddingRight = _a[1],\n        paddingBottom = _a[2],\n        paddingLeft = _a[3];\n      var bboxObject = this.slider.component.getLayoutBBox();\n      var bbox = new BBox(bboxObject.x, bboxObject.y, Math.min(bboxObject.width, width), bboxObject.height).expand(padding);\n      var _b = this.getMinMaxText(this.start, this.end),\n        minText = _b.minText,\n        maxText = _b.maxText;\n      var _c = __read(directionToPosition(this.view.viewBBox, bbox, DIRECTION.BOTTOM), 2),\n        x1 = _c[0],\n        y1 = _c[1];\n      var _d = __read(directionToPosition(this.view.coordinateBBox, bbox, DIRECTION.BOTTOM), 2),\n        x2 = _d[0],\n        y2 = _d[1];\n      // 默认放在 bottom\n      this.slider.component.update(__assign(__assign({}, this.getSliderCfg()), {\n        x: x2 + paddingLeft,\n        y: y1 + paddingTop,\n        width: this.width,\n        start: this.start,\n        end: this.end,\n        minText: minText,\n        maxText: maxText\n      }));\n      this.view.viewBBox = this.view.viewBBox.cut(bbox, DIRECTION.BOTTOM);\n    }\n  };\n  /**\n   * 更新\n   */\n  Slider.prototype.update = function () {\n    // 逻辑和 render 保持一致\n    this.render();\n  };\n  /**\n   * 创建 slider 组件\n   */\n  Slider.prototype.createSlider = function () {\n    var cfg = this.getSliderCfg();\n    // 添加 slider 组件\n    var component = new SliderComponent(__assign({\n      container: this.container\n    }, cfg));\n    component.init();\n    return {\n      component: component,\n      layer: LAYER.FORE,\n      direction: DIRECTION.BOTTOM,\n      type: COMPONENT_TYPE.SLIDER\n    };\n  };\n  /**\n   * 更新配置\n   */\n  Slider.prototype.updateSlider = function () {\n    var cfg = this.getSliderCfg();\n    if (this.width) {\n      var _a = this.getMinMaxText(this.start, this.end),\n        minText = _a.minText,\n        maxText = _a.maxText;\n      cfg = __assign(__assign({}, cfg), {\n        width: this.width,\n        start: this.start,\n        end: this.end,\n        minText: minText,\n        maxText: maxText\n      });\n    }\n    this.slider.component.update(cfg);\n    return this.slider;\n  };\n  /**\n   * 进行测量操作\n   */\n  Slider.prototype.measureSlider = function () {\n    var width = this.getSliderCfg().width;\n    this.width = width;\n  };\n  /**\n   * 生成 slider 配置\n   */\n  Slider.prototype.getSliderCfg = function () {\n    var cfg = {\n      height: 16,\n      start: 0,\n      end: 1,\n      minText: '',\n      maxText: '',\n      x: 0,\n      y: 0,\n      width: this.view.coordinateBBox.width\n    };\n    if (isObject(this.option)) {\n      // 用户配置的数据，优先级更高\n      var trendCfg = __assign({\n        data: this.getData()\n      }, get(this.option, 'trendCfg', {}));\n      // 因为有样式，所以深层覆盖\n      cfg = deepMix({}, cfg, this.getThemeOptions(), this.option);\n      // trendCfg 因为有数据数组，所以使用浅替换\n      cfg = __assign(__assign({}, cfg), {\n        trendCfg: trendCfg\n      });\n    }\n    cfg.start = clamp(Math.min(isNil(cfg.start) ? 0 : cfg.start, isNil(cfg.end) ? 1 : cfg.end), 0, 1);\n    cfg.end = clamp(Math.max(isNil(cfg.start) ? 0 : cfg.start, isNil(cfg.end) ? 1 : cfg.end), 0, 1);\n    return cfg;\n  };\n  /**\n   * 从 view 中获取数据，缩略轴使用全量的数据\n   */\n  Slider.prototype.getData = function () {\n    var data = this.view.getOptions().data;\n    var _a = __read(this.view.getYScales(), 1),\n      yScale = _a[0];\n    var groupScales = this.view.getGroupScales();\n    if (groupScales.length) {\n      var _b = groupScales[0],\n        field_1 = _b.field,\n        ticks_1 = _b.ticks;\n      return data.reduce(function (pre, cur) {\n        if (cur[field_1] === ticks_1[0]) {\n          pre.push(cur[yScale.field]);\n        }\n        return pre;\n      }, []);\n    }\n    return data.map(function (datum) {\n      return datum[yScale.field] || 0;\n    });\n  };\n  /**\n   * 获取 slider 的主题配置\n   */\n  Slider.prototype.getThemeOptions = function () {\n    var theme = this.view.getTheme();\n    return get(theme, ['components', 'slider', 'common'], {});\n  };\n  /**\n   * 根据 start/end 和当前数据计算出当前的 minText/maxText\n   * @param min\n   * @param max\n   */\n  Slider.prototype.getMinMaxText = function (min, max) {\n    var data = this.view.getOptions().data;\n    var xScale = this.view.getXScale();\n    var isHorizontal = true;\n    var values = valuesOfKey(data, xScale.field);\n    // 如果是 xScale 数值类型，则进行排序\n    if (xScale.isLinear) {\n      values = values.sort();\n    }\n    var xValues = isHorizontal ? values : values.reverse();\n    var dataSize = size(data);\n    if (!xScale || !dataSize) {\n      return {}; // fix: 需要兼容，否则调用方直接取值会报错\n    }\n\n    var xTickCount = size(xValues);\n    var minIndex = Math.round(min * (xTickCount - 1));\n    var maxIndex = Math.round(max * (xTickCount - 1));\n    var minText = get(xValues, [minIndex]);\n    var maxText = get(xValues, [maxIndex]);\n    var formatter = this.getSliderCfg().formatter;\n    if (formatter) {\n      minText = formatter(minText, data[minIndex], minIndex);\n      maxText = formatter(maxText, data[maxIndex], maxIndex);\n    }\n    return {\n      minText: minText,\n      maxText: maxText\n    };\n  };\n  /**\n   * 更新 view 过滤数据\n   * @param min\n   * @param max\n   */\n  Slider.prototype.changeViewData = function (min, max) {\n    var data = this.view.getOptions().data;\n    var xScale = this.view.getXScale();\n    var dataSize = size(data);\n    if (!xScale || !dataSize) {\n      return;\n    }\n    var isHorizontal = true;\n    var values = valuesOfKey(data, xScale.field);\n    // 如果是 xScale 数值类型，则进行排序\n    var xScaleValues = this.view.getXScale().isLinear ? values.sort(function (a, b) {\n      return Number(a) - Number(b);\n    }) : values;\n    var xValues = isHorizontal ? xScaleValues : xScaleValues.reverse();\n    var xTickCount = size(xValues);\n    var minIndex = Math.round(min * (xTickCount - 1));\n    var maxIndex = Math.round(max * (xTickCount - 1));\n    // 增加 x 轴的过滤器\n    this.view.filter(xScale.field, function (value, datum) {\n      var idx = xValues.indexOf(value);\n      return idx > -1 ? isBetween(idx, minIndex, maxIndex) : true;\n    });\n    this.view.render(true);\n  };\n  /**\n   * 覆写父类方法\n   */\n  Slider.prototype.getComponents = function () {\n    return this.slider ? [this.slider] : [];\n  };\n  /**\n   * 覆盖父类\n   */\n  Slider.prototype.clear = function () {\n    if (this.slider) {\n      this.slider.component.destroy();\n      this.slider = undefined;\n    }\n    this.width = 0;\n    this.start = undefined;\n    this.end = undefined;\n  };\n  return Slider;\n}(Controller);\nexport default Slider;","map":{"version":3,"names":["__assign","__extends","__read","deepMix","get","isObject","size","clamp","isNil","noop","throttle","isEmpty","valuesOfKey","COMPONENT_TYPE","DIRECTION","LAYER","VIEW_LIFE_CIRCLE","Slider","SliderComponent","BBox","directionToPosition","isBetween","Controller","_super","view","_this","call","onChangeFn","resetMeasure","clear","onValueChange","v","_a","min","max","start","end","changeViewData","container","getLayer","FORE","addGroup","leading","width","on","BEFORE_CHANGE_DATA","BEFORE_CHANGE_SIZE","Object","defineProperty","prototype","enumerable","configurable","destroy","off","init","render","option","getOptions","slider","getSliderCfg","viewData","data","updateSlider","createSlider","component","undefined","layout","measureSlider","setTimeout","destroyed","coordinateBBox","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","bboxObject","getLayoutBBox","bbox","x","y","Math","height","expand","_b","getMinMaxText","minText","maxText","_c","viewBBox","BOTTOM","x1","y1","_d","x2","y2","update","cut","cfg","layer","direction","type","SLIDER","trendCfg","getData","getThemeOptions","getYScales","yScale","groupScales","getGroupScales","length","field_1","field","ticks_1","ticks","reduce","pre","cur","push","map","datum","theme","getTheme","xScale","getXScale","isHorizontal","values","isLinear","sort","xValues","reverse","dataSize","xTickCount","minIndex","round","maxIndex","formatter","xScaleValues","a","b","Number","filter","value","idx","indexOf","getComponents"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g2/esm/chart/controller/slider.js"],"sourcesContent":["import { __assign, __extends, __read } from \"tslib\";\nimport { deepMix, get, isObject, size, clamp, isNil, noop, throttle, isEmpty, valuesOfKey } from '@antv/util';\nimport { COMPONENT_TYPE, DIRECTION, LAYER, VIEW_LIFE_CIRCLE } from '../../constant';\nimport { Slider as SliderComponent } from '../../dependents';\nimport { BBox } from '../../util/bbox';\nimport { directionToPosition } from '../../util/direction';\nimport { isBetween } from '../../util/helper';\nimport { Controller } from './base';\n/**\n * @ignore\n * slider Controller\n */\nvar Slider = /** @class */ (function (_super) {\n    __extends(Slider, _super);\n    function Slider(view) {\n        var _this = _super.call(this, view) || this;\n        _this.onChangeFn = noop;\n        /**\n         * 清除测量\n         */\n        _this.resetMeasure = function () {\n            _this.clear();\n        };\n        /**\n         * 滑块滑动的时候出发\n         * @param v\n         */\n        _this.onValueChange = function (v) {\n            var _a = __read(v, 2), min = _a[0], max = _a[1];\n            _this.start = min;\n            _this.end = max;\n            _this.changeViewData(min, max);\n        };\n        _this.container = _this.view.getLayer(LAYER.FORE).addGroup();\n        _this.onChangeFn = throttle(_this.onValueChange, 20, {\n            leading: true,\n        });\n        _this.width = 0;\n        _this.view.on(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, _this.resetMeasure);\n        _this.view.on(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_SIZE, _this.resetMeasure);\n        return _this;\n    }\n    Object.defineProperty(Slider.prototype, \"name\", {\n        get: function () {\n            return 'slider';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Slider.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.view.off(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, this.resetMeasure);\n        this.view.off(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_SIZE, this.resetMeasure);\n    };\n    /**\n     * 初始化\n     */\n    Slider.prototype.init = function () { };\n    /**\n     * 渲染\n     */\n    Slider.prototype.render = function () {\n        this.option = this.view.getOptions().slider;\n        var _a = this.getSliderCfg(), start = _a.start, end = _a.end;\n        if (isNil(this.start)) {\n            this.start = start;\n            this.end = end;\n        }\n        var viewData = this.view.getOptions().data;\n        if (this.option && !isEmpty(viewData)) {\n            if (this.slider) {\n                // exist, update\n                this.slider = this.updateSlider();\n            }\n            else {\n                // not exist, create\n                this.slider = this.createSlider();\n                // 监听事件，绑定交互\n                this.slider.component.on('sliderchange', this.onChangeFn);\n            }\n        }\n        else {\n            if (this.slider) {\n                // exist, destroy\n                this.slider.component.destroy();\n                this.slider = undefined;\n            }\n            else {\n                // do nothing\n            }\n        }\n    };\n    /**\n     * 布局\n     */\n    Slider.prototype.layout = function () {\n        var _this = this;\n        if (this.option && !this.width) {\n            this.measureSlider();\n            setTimeout(function () {\n                // 初始状态下的 view 数据过滤\n                if (!_this.view.destroyed) {\n                    _this.changeViewData(_this.start, _this.end);\n                }\n            }, 0);\n        }\n        if (this.slider) {\n            var width = this.view.coordinateBBox.width;\n            // 获取组件的 layout bbox\n            var padding = this.slider.component.get('padding');\n            var _a = __read(padding, 4), paddingTop = _a[0], paddingRight = _a[1], paddingBottom = _a[2], paddingLeft = _a[3];\n            var bboxObject = this.slider.component.getLayoutBBox();\n            var bbox = new BBox(bboxObject.x, bboxObject.y, Math.min(bboxObject.width, width), bboxObject.height).expand(padding);\n            var _b = this.getMinMaxText(this.start, this.end), minText = _b.minText, maxText = _b.maxText;\n            var _c = __read(directionToPosition(this.view.viewBBox, bbox, DIRECTION.BOTTOM), 2), x1 = _c[0], y1 = _c[1];\n            var _d = __read(directionToPosition(this.view.coordinateBBox, bbox, DIRECTION.BOTTOM), 2), x2 = _d[0], y2 = _d[1];\n            // 默认放在 bottom\n            this.slider.component.update(__assign(__assign({}, this.getSliderCfg()), { x: x2 + paddingLeft, y: y1 + paddingTop, width: this.width, start: this.start, end: this.end, minText: minText, maxText: maxText }));\n            this.view.viewBBox = this.view.viewBBox.cut(bbox, DIRECTION.BOTTOM);\n        }\n    };\n    /**\n     * 更新\n     */\n    Slider.prototype.update = function () {\n        // 逻辑和 render 保持一致\n        this.render();\n    };\n    /**\n     * 创建 slider 组件\n     */\n    Slider.prototype.createSlider = function () {\n        var cfg = this.getSliderCfg();\n        // 添加 slider 组件\n        var component = new SliderComponent(__assign({ container: this.container }, cfg));\n        component.init();\n        return {\n            component: component,\n            layer: LAYER.FORE,\n            direction: DIRECTION.BOTTOM,\n            type: COMPONENT_TYPE.SLIDER,\n        };\n    };\n    /**\n     * 更新配置\n     */\n    Slider.prototype.updateSlider = function () {\n        var cfg = this.getSliderCfg();\n        if (this.width) {\n            var _a = this.getMinMaxText(this.start, this.end), minText = _a.minText, maxText = _a.maxText;\n            cfg = __assign(__assign({}, cfg), { width: this.width, start: this.start, end: this.end, minText: minText, maxText: maxText });\n        }\n        this.slider.component.update(cfg);\n        return this.slider;\n    };\n    /**\n     * 进行测量操作\n     */\n    Slider.prototype.measureSlider = function () {\n        var width = this.getSliderCfg().width;\n        this.width = width;\n    };\n    /**\n     * 生成 slider 配置\n     */\n    Slider.prototype.getSliderCfg = function () {\n        var cfg = {\n            height: 16,\n            start: 0,\n            end: 1,\n            minText: '',\n            maxText: '',\n            x: 0,\n            y: 0,\n            width: this.view.coordinateBBox.width,\n        };\n        if (isObject(this.option)) {\n            // 用户配置的数据，优先级更高\n            var trendCfg = __assign({ data: this.getData() }, get(this.option, 'trendCfg', {}));\n            // 因为有样式，所以深层覆盖\n            cfg = deepMix({}, cfg, this.getThemeOptions(), this.option);\n            // trendCfg 因为有数据数组，所以使用浅替换\n            cfg = __assign(__assign({}, cfg), { trendCfg: trendCfg });\n        }\n        cfg.start = clamp(Math.min(isNil(cfg.start) ? 0 : cfg.start, isNil(cfg.end) ? 1 : cfg.end), 0, 1);\n        cfg.end = clamp(Math.max(isNil(cfg.start) ? 0 : cfg.start, isNil(cfg.end) ? 1 : cfg.end), 0, 1);\n        return cfg;\n    };\n    /**\n     * 从 view 中获取数据，缩略轴使用全量的数据\n     */\n    Slider.prototype.getData = function () {\n        var data = this.view.getOptions().data;\n        var _a = __read(this.view.getYScales(), 1), yScale = _a[0];\n        var groupScales = this.view.getGroupScales();\n        if (groupScales.length) {\n            var _b = groupScales[0], field_1 = _b.field, ticks_1 = _b.ticks;\n            return data.reduce(function (pre, cur) {\n                if (cur[field_1] === ticks_1[0]) {\n                    pre.push(cur[yScale.field]);\n                }\n                return pre;\n            }, []);\n        }\n        return data.map(function (datum) { return datum[yScale.field] || 0; });\n    };\n    /**\n     * 获取 slider 的主题配置\n     */\n    Slider.prototype.getThemeOptions = function () {\n        var theme = this.view.getTheme();\n        return get(theme, ['components', 'slider', 'common'], {});\n    };\n    /**\n     * 根据 start/end 和当前数据计算出当前的 minText/maxText\n     * @param min\n     * @param max\n     */\n    Slider.prototype.getMinMaxText = function (min, max) {\n        var data = this.view.getOptions().data;\n        var xScale = this.view.getXScale();\n        var isHorizontal = true;\n        var values = valuesOfKey(data, xScale.field);\n        // 如果是 xScale 数值类型，则进行排序\n        if (xScale.isLinear) {\n            values = values.sort();\n        }\n        var xValues = isHorizontal ? values : values.reverse();\n        var dataSize = size(data);\n        if (!xScale || !dataSize) {\n            return {}; // fix: 需要兼容，否则调用方直接取值会报错\n        }\n        var xTickCount = size(xValues);\n        var minIndex = Math.round(min * (xTickCount - 1));\n        var maxIndex = Math.round(max * (xTickCount - 1));\n        var minText = get(xValues, [minIndex]);\n        var maxText = get(xValues, [maxIndex]);\n        var formatter = this.getSliderCfg().formatter;\n        if (formatter) {\n            minText = formatter(minText, data[minIndex], minIndex);\n            maxText = formatter(maxText, data[maxIndex], maxIndex);\n        }\n        return {\n            minText: minText,\n            maxText: maxText,\n        };\n    };\n    /**\n     * 更新 view 过滤数据\n     * @param min\n     * @param max\n     */\n    Slider.prototype.changeViewData = function (min, max) {\n        var data = this.view.getOptions().data;\n        var xScale = this.view.getXScale();\n        var dataSize = size(data);\n        if (!xScale || !dataSize) {\n            return;\n        }\n        var isHorizontal = true;\n        var values = valuesOfKey(data, xScale.field);\n        // 如果是 xScale 数值类型，则进行排序\n        var xScaleValues = this.view.getXScale().isLinear ? values.sort(function (a, b) { return Number(a) - Number(b); }) : values;\n        var xValues = isHorizontal ? xScaleValues : xScaleValues.reverse();\n        var xTickCount = size(xValues);\n        var minIndex = Math.round(min * (xTickCount - 1));\n        var maxIndex = Math.round(max * (xTickCount - 1));\n        // 增加 x 轴的过滤器\n        this.view.filter(xScale.field, function (value, datum) {\n            var idx = xValues.indexOf(value);\n            return idx > -1 ? isBetween(idx, minIndex, maxIndex) : true;\n        });\n        this.view.render(true);\n    };\n    /**\n     * 覆写父类方法\n     */\n    Slider.prototype.getComponents = function () {\n        return this.slider ? [this.slider] : [];\n    };\n    /**\n     * 覆盖父类\n     */\n    Slider.prototype.clear = function () {\n        if (this.slider) {\n            this.slider.component.destroy();\n            this.slider = undefined;\n        }\n        this.width = 0;\n        this.start = undefined;\n        this.end = undefined;\n    };\n    return Slider;\n}(Controller));\nexport default Slider;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}