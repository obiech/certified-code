{"ast":null,"code":"import { each, isArray } from '@antv/util';\nimport { catmullRom2bezier, getLinePath } from '../../geometry/shape/util/path';\nimport { toPoints } from '../../util/bbox';\nimport { isPolygonsIntersect } from '@antv/path-util';\nfunction getMaskBBox(context, tolerance) {\n  var event = context.event;\n  var maskShape = event.target;\n  return getMaskBBoxByShape(maskShape, tolerance);\n}\n/**\n * 如果 mask BBox 过小则不返回\n */\nfunction isValidMaskBBox(maskShape, tolerance) {\n  var maskBBox = maskShape.getCanvasBBox();\n  var width = maskBBox.width,\n    height = maskBBox.height;\n  return width > 0 && height > 0 && (width >= tolerance || height >= tolerance);\n}\n/**\n * 通过 maskShape 获取 mask 的 canvasBBox\n * @param maskShape\n * @param tolerance\n * @returns\n */\nfunction getMaskBBoxByShape(maskShape, tolerance) {\n  var maskBBox = maskShape.getCanvasBBox();\n  return isValidMaskBBox(maskShape, tolerance) ? maskBBox : null;\n}\n/**\n * 获取 multiple 模式下 mask 的 canvasBBox 数组\n * @param context 上下文\n * @param tolerance box 宽高小于则不返回\n * @returns\n */\nfunction getMultiMaskBBoxList(context, tolerance) {\n  var maskShapes = context.event.maskShapes;\n  return maskShapes.map(function (maskShape) {\n    return getMaskBBoxByShape(maskShape, tolerance);\n  }).filter(function (bBox) {\n    return !!bBox;\n  });\n}\nfunction getMaskPath(context, tolerance) {\n  var event = context.event;\n  var maskShape = event.target;\n  return getMaskPathByMaskShape(maskShape, tolerance);\n}\n/**\n * 通过 maskShape 获取 mask path\n * @param maskShape\n * @param tolerance box 宽高小于则不返回\n * @returns\n */\nfunction getMaskPathByMaskShape(maskShape, tolerance) {\n  return isValidMaskBBox(maskShape, tolerance) ? maskShape.attr('path') : null;\n}\n/**\n * 获取 multiple 模式下 mask path 数组\n * @param context 上下文\n * @param tolerance box 宽高小于则不返回\n * @returns\n */\nfunction getMultiMaskPathList(context, tolerance) {\n  var maskShapes = context.event.maskShapes;\n  return maskShapes.map(function (maskShape) {\n    return getMaskPathByMaskShape(maskShape, tolerance);\n  });\n}\n/**\n * 获取当前事件相关的图表元素\n * @param context 交互的上下文\n * @ignore\n */\nexport function getCurrentElement(context) {\n  var event = context.event;\n  var element;\n  var target = event.target;\n  if (target) {\n    element = target.get('element');\n  }\n  return element;\n}\n/**\n * 获取委托对象\n * @param context 上下文\n * @ignore\n */\nexport function getDelegationObject(context) {\n  var event = context.event;\n  var target = event.target;\n  var delegateObject;\n  if (target) {\n    delegateObject = target.get('delegateObject');\n  }\n  return delegateObject;\n}\nexport function isElementChange(context) {\n  var event = context.event.gEvent;\n  // 在同一个 element 内部移动，label 和 shape 之间\n  if (event && event.fromShape && event.toShape && event.fromShape.get('element') === event.toShape.get('element')) {\n    return false;\n  }\n  return true;\n}\n/**\n * 是否是列表组件\n * @param delegateObject 委托对象\n * @ignore\n */\nexport function isList(delegateObject) {\n  return delegateObject && delegateObject.component && delegateObject.component.isList();\n}\n/**\n * 是否是滑块组件\n * @param delegateObject 委托对象\n * @ignore\n */\nexport function isSlider(delegateObject) {\n  return delegateObject && delegateObject.component && delegateObject.component.isSlider();\n}\n/**\n * 是否由 mask 触发\n * @param context 上下文\n * @ignore\n */\nexport function isMask(context) {\n  var event = context.event;\n  var target = event.target;\n  return target && (target === null || target === void 0 ? void 0 : target.get('name')) === 'mask' || isMultipleMask(context);\n}\n/**\n * 是否由 multiple mask 触发\n * @param context\n * @returns\n */\nexport function isMultipleMask(context) {\n  var _a;\n  return ((_a = context.event.target) === null || _a === void 0 ? void 0 : _a.get('name')) === 'multi-mask';\n}\n/**\n * 获取被遮挡的 elements\n * @param context 上下文\n * @ignore\n */\nexport function getMaskedElements(context, tolerance) {\n  var target = context.event.target;\n  // multiple 模式下\n  if (isMultipleMask(context)) {\n    return getMultiMaskedElements(context, tolerance);\n  }\n  // 正常模式下\n  if (target.get('type') === 'path') {\n    var maskPath = getMaskPath(context, tolerance);\n    if (!maskPath) {\n      return;\n    }\n    return getElementsByPath(context.view, maskPath);\n  }\n  var maskBBox = getMaskBBox(context, tolerance);\n  // 如果 bbox 过小则不返回\n  if (!maskBBox) {\n    return null;\n  }\n  return getIntersectElements(context.view, maskBBox);\n}\n/**\n * 获取 multiple 模式下被 mask 遮挡的 elements\n * @param context 上下文\n * @returns\n */\nfunction getMultiMaskedElements(context, tolerance) {\n  var target = context.event.target;\n  if (target.get('type') === 'path') {\n    var maskPathList = getMultiMaskPathList(context, tolerance);\n    if (maskPathList.length > 0) {\n      return maskPathList.flatMap(function (maskPath) {\n        return getElementsByPath(context.view, maskPath);\n      });\n    }\n    return null;\n  }\n  var maskBBoxList = getMultiMaskBBoxList(context, tolerance);\n  if (maskBBoxList.length > 0) {\n    return maskBBoxList.flatMap(function (maskBBox) {\n      return getIntersectElements(context.view, maskBBox);\n    });\n  }\n  return null;\n}\n/**\n * @ignore\n */\nexport function getSiblingMaskElements(context, sibling, tolerance) {\n  // multiple 模式下\n  if (isMultipleMask(context)) {\n    return getSiblingMultiMaskedElements(context, sibling, tolerance);\n  }\n  // 正常模式下\n  var maskBBox = getMaskBBox(context, tolerance);\n  // 如果 bbox 过小则不返回\n  if (!maskBBox) {\n    return null;\n  }\n  return getSiblingMaskElementsByBBox(maskBBox, context, sibling);\n}\n/**\n * 通过 mashBBox 获取 sibling 模式下被 mask 遮挡的 elements\n * @param maskBBox\n * @param context 上下文\n * @param sibling sibling view\n * @returns\n */\nfunction getSiblingMaskElementsByBBox(maskBBox, context, sibling) {\n  var view = context.view;\n  var start = getSiblingPoint(view, sibling, {\n    x: maskBBox.x,\n    y: maskBBox.y\n  });\n  var end = getSiblingPoint(view, sibling, {\n    x: maskBBox.maxX,\n    y: maskBBox.maxY\n  });\n  var box = {\n    minX: start.x,\n    minY: start.y,\n    maxX: end.x,\n    maxY: end.y\n  };\n  return getIntersectElements(sibling, box);\n}\n/**\n * 获取 sibling 模式下被 multiple mask 遮挡的 elements\n * @param context 上下文\n * @param sibling sibling view\n * @param tolerance box 宽高小于则不返回\n * @returns\n */\nfunction getSiblingMultiMaskedElements(context, sibling, tolerance) {\n  var maskBBoxList = getMultiMaskBBoxList(context, tolerance);\n  if (maskBBoxList.length > 0) {\n    return maskBBoxList.flatMap(function (maskBBox) {\n      return getSiblingMaskElementsByBBox(maskBBox, context, sibling);\n    });\n  }\n  return null;\n}\n/**\n * 获取所有的图表元素\n * @param view View/Chart\n * @ignore\n */\nexport function getElements(view) {\n  var geometries = view.geometries;\n  var rst = [];\n  each(geometries, function (geom) {\n    var elements = geom.elements;\n    rst = rst.concat(elements);\n  });\n  if (view.views && view.views.length) {\n    each(view.views, function (subView) {\n      rst = rst.concat(getElements(subView));\n    });\n  }\n  return rst;\n}\n/**\n * 获取所有的图表元素\n * @param view View/Chart\n * @param field 字段名\n * @param value 字段值\n * @ignore\n */\nexport function getElementsByField(view, field, value) {\n  var elements = getElements(view);\n  return elements.filter(function (el) {\n    return getElementValue(el, field) === value;\n  });\n}\n/**\n * 根据状态名获取图表元素\n * @param view View/Chart\n * @param stateName 状态名\n * @ignore\n */\nexport function getElementsByState(view, stateName) {\n  var geometries = view.geometries;\n  var rst = [];\n  each(geometries, function (geom) {\n    var elements = geom.getElementsBy(function (el) {\n      return el.hasState(stateName);\n    });\n    rst = rst.concat(elements);\n  });\n  return rst;\n}\n/**\n * 获取图表元素对应字段的值\n * @param element 图表元素\n * @param field 字段名\n * @ignore\n */\nexport function getElementValue(element, field) {\n  var model = element.getModel();\n  var record = model.data;\n  var value;\n  if (isArray(record)) {\n    value = record[0][field];\n  } else {\n    value = record[field];\n  }\n  return value;\n}\n/**\n * 两个包围盒是否相交\n * @param box1 包围盒1\n * @param box2 包围盒2\n * @ignore\n */\nexport function intersectRect(box1, box2) {\n  return !(box2.minX > box1.maxX || box2.maxX < box1.minX || box2.minY > box1.maxY || box2.maxY < box1.minY);\n}\n/**\n * 获取包围盒内的图表元素\n * @param view View/Chart\n * @param box 包围盒\n * @ignore\n */\nexport function getIntersectElements(view, box) {\n  var elements = getElements(view);\n  var rst = [];\n  each(elements, function (el) {\n    var shape = el.shape;\n    var shapeBBox = shape.getCanvasBBox();\n    if (intersectRect(box, shapeBBox)) {\n      rst.push(el);\n    }\n  });\n  return rst;\n}\nfunction pathToPoints(path) {\n  var points = [];\n  each(path, function (seg) {\n    var command = seg[0];\n    if (command !== 'A') {\n      for (var i = 1; i < seg.length; i = i + 2) {\n        points.push([seg[i], seg[i + 1]]);\n      }\n    } else {\n      var length_1 = seg.length;\n      points.push([seg[length_1 - 2], seg[length_1 - 1]]);\n    }\n  });\n  return points;\n}\n/**\n * 获取包围盒内的图表元素\n * @param view View/Chart\n * @param path 路径\n * @ignore\n */\nexport function getElementsByPath(view, path) {\n  var elements = getElements(view);\n  var points = pathToPoints(path);\n  var rst = elements.filter(function (el) {\n    var shape = el.shape;\n    var shapePoints;\n    if (shape.get('type') === 'path') {\n      shapePoints = pathToPoints(shape.attr('path'));\n    } else {\n      var shapeBBox = shape.getCanvasBBox();\n      shapePoints = toPoints(shapeBBox);\n    }\n    return isPolygonsIntersect(points, shapePoints);\n  });\n  return rst;\n}\n/**\n * 获取当前 View 的所有组件\n * @param view View/Chart\n * @ignore\n */\nexport function getComponents(view) {\n  return view.getComponents().map(function (co) {\n    return co.component;\n  });\n}\n/** @ignore */\nexport function distance(p1, p2) {\n  var dx = p2.x - p1.x;\n  var dy = p2.y - p1.y;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n/** @ignore */\nexport function getSpline(points, z) {\n  if (points.length <= 2) {\n    return getLinePath(points, false);\n  }\n  var first = points[0];\n  var arr = [];\n  each(points, function (point) {\n    arr.push(point.x);\n    arr.push(point.y);\n  });\n  var path = catmullRom2bezier(arr, z, null);\n  path.unshift(['M', first.x, first.y]);\n  return path;\n}\n/**\n * 检测点是否在包围盒内\n * @param box 包围盒\n * @param point 点\n * @ignore\n */\nexport function isInBox(box, point) {\n  return box.x <= point.x && box.maxX >= point.x && box.y <= point.y && box.maxY > point.y;\n}\n/**\n * 获取同 view 同一级的 views\n * @param view 当前 view\n * @returns 同一级的 views\n * @ignore\n */\nexport function getSilbings(view) {\n  var parent = view.parent;\n  var siblings = null;\n  if (parent) {\n    siblings = parent.views.filter(function (sub) {\n      return sub !== view;\n    });\n  }\n  return siblings;\n}\nfunction point2Normalize(view, point) {\n  var coord = view.getCoordinate();\n  return coord.invert(point);\n}\n/**\n * 将 view 上的一点转换成另一个 view 的点\n * @param view 当前的 view\n * @param sibling 同一层级的 view\n * @param point 指定点\n * @ignore\n */\nexport function getSiblingPoint(view, sibling, point) {\n  var normalPoint = point2Normalize(view, point);\n  return sibling.getCoordinate().convert(normalPoint);\n}\n/**\n * 是否在记录中，临时因为所有的 view 中的数据不是引用，而使用的方法\n * 不同 view 上对数据的引用不相等，导致无法直接用 includes\n * 假设 x, y 值相等时是同一条数据，这个假设不完全正确，而改成 isEqual 则成本太高\n * 后面改成同一个引用时可以修改回来\n * @param records\n * @param record\n * @param xFiled\n * @param yField\n * @returns\n * @ignore\n */\nexport function isInRecords(records, record, xFiled, yField) {\n  var isIn = false;\n  each(records, function (r) {\n    if (r[xFiled] === record[xFiled] && r[yField] === record[yField]) {\n      isIn = true;\n      return false;\n    }\n  });\n  return isIn;\n}\n// 级联获取 field 对应的 scale，如果 view 上没有，遍历子 view\nexport function getScaleByField(view, field) {\n  var scale = view.getScaleByField(field);\n  if (!scale && view.views) {\n    each(view.views, function (subView) {\n      scale = getScaleByField(subView, field);\n      if (scale) {\n        return false; // 终止循环\n      }\n    });\n  }\n\n  return scale;\n}","map":{"version":3,"names":["each","isArray","catmullRom2bezier","getLinePath","toPoints","isPolygonsIntersect","getMaskBBox","context","tolerance","event","maskShape","target","getMaskBBoxByShape","isValidMaskBBox","maskBBox","getCanvasBBox","width","height","getMultiMaskBBoxList","maskShapes","map","filter","bBox","getMaskPath","getMaskPathByMaskShape","attr","getMultiMaskPathList","getCurrentElement","element","get","getDelegationObject","delegateObject","isElementChange","gEvent","fromShape","toShape","isList","component","isSlider","isMask","isMultipleMask","_a","getMaskedElements","getMultiMaskedElements","maskPath","getElementsByPath","view","getIntersectElements","maskPathList","length","flatMap","maskBBoxList","getSiblingMaskElements","sibling","getSiblingMultiMaskedElements","getSiblingMaskElementsByBBox","start","getSiblingPoint","x","y","end","maxX","maxY","box","minX","minY","getElements","geometries","rst","geom","elements","concat","views","subView","getElementsByField","field","value","el","getElementValue","getElementsByState","stateName","getElementsBy","hasState","model","getModel","record","data","intersectRect","box1","box2","shape","shapeBBox","push","pathToPoints","path","points","seg","command","i","length_1","shapePoints","getComponents","co","distance","p1","p2","dx","dy","Math","sqrt","getSpline","z","first","arr","point","unshift","isInBox","getSilbings","parent","siblings","sub","point2Normalize","coord","getCoordinate","invert","normalPoint","convert","isInRecords","records","xFiled","yField","isIn","r","getScaleByField","scale"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g2/esm/interaction/action/util.js"],"sourcesContent":["import { each, isArray } from '@antv/util';\nimport { catmullRom2bezier, getLinePath } from '../../geometry/shape/util/path';\nimport { toPoints } from '../../util/bbox';\nimport { isPolygonsIntersect } from '@antv/path-util';\nfunction getMaskBBox(context, tolerance) {\n    var event = context.event;\n    var maskShape = event.target;\n    return getMaskBBoxByShape(maskShape, tolerance);\n}\n/**\n * 如果 mask BBox 过小则不返回\n */\nfunction isValidMaskBBox(maskShape, tolerance) {\n    var maskBBox = maskShape.getCanvasBBox();\n    var width = maskBBox.width, height = maskBBox.height;\n    return width > 0 && height > 0 && (width >= tolerance || height >= tolerance);\n}\n/**\n * 通过 maskShape 获取 mask 的 canvasBBox\n * @param maskShape\n * @param tolerance\n * @returns\n */\nfunction getMaskBBoxByShape(maskShape, tolerance) {\n    var maskBBox = maskShape.getCanvasBBox();\n    return isValidMaskBBox(maskShape, tolerance) ? maskBBox : null;\n}\n/**\n * 获取 multiple 模式下 mask 的 canvasBBox 数组\n * @param context 上下文\n * @param tolerance box 宽高小于则不返回\n * @returns\n */\nfunction getMultiMaskBBoxList(context, tolerance) {\n    var maskShapes = context.event.maskShapes;\n    return maskShapes.map(function (maskShape) { return getMaskBBoxByShape(maskShape, tolerance); }).filter(function (bBox) { return !!bBox; });\n}\nfunction getMaskPath(context, tolerance) {\n    var event = context.event;\n    var maskShape = event.target;\n    return getMaskPathByMaskShape(maskShape, tolerance);\n}\n/**\n * 通过 maskShape 获取 mask path\n * @param maskShape\n * @param tolerance box 宽高小于则不返回\n * @returns\n */\nfunction getMaskPathByMaskShape(maskShape, tolerance) {\n    return isValidMaskBBox(maskShape, tolerance) ? maskShape.attr('path') : null;\n}\n/**\n * 获取 multiple 模式下 mask path 数组\n * @param context 上下文\n * @param tolerance box 宽高小于则不返回\n * @returns\n */\nfunction getMultiMaskPathList(context, tolerance) {\n    var maskShapes = context.event.maskShapes;\n    return maskShapes.map(function (maskShape) { return getMaskPathByMaskShape(maskShape, tolerance); });\n}\n/**\n * 获取当前事件相关的图表元素\n * @param context 交互的上下文\n * @ignore\n */\nexport function getCurrentElement(context) {\n    var event = context.event;\n    var element;\n    var target = event.target;\n    if (target) {\n        element = target.get('element');\n    }\n    return element;\n}\n/**\n * 获取委托对象\n * @param context 上下文\n * @ignore\n */\nexport function getDelegationObject(context) {\n    var event = context.event;\n    var target = event.target;\n    var delegateObject;\n    if (target) {\n        delegateObject = target.get('delegateObject');\n    }\n    return delegateObject;\n}\nexport function isElementChange(context) {\n    var event = context.event.gEvent;\n    // 在同一个 element 内部移动，label 和 shape 之间\n    if (event && event.fromShape && event.toShape && event.fromShape.get('element') === event.toShape.get('element')) {\n        return false;\n    }\n    return true;\n}\n/**\n * 是否是列表组件\n * @param delegateObject 委托对象\n * @ignore\n */\nexport function isList(delegateObject) {\n    return delegateObject && delegateObject.component && delegateObject.component.isList();\n}\n/**\n * 是否是滑块组件\n * @param delegateObject 委托对象\n * @ignore\n */\nexport function isSlider(delegateObject) {\n    return delegateObject && delegateObject.component && delegateObject.component.isSlider();\n}\n/**\n * 是否由 mask 触发\n * @param context 上下文\n * @ignore\n */\nexport function isMask(context) {\n    var event = context.event;\n    var target = event.target;\n    return (target && (target === null || target === void 0 ? void 0 : target.get('name')) === 'mask') || isMultipleMask(context);\n}\n/**\n * 是否由 multiple mask 触发\n * @param context\n * @returns\n */\nexport function isMultipleMask(context) {\n    var _a;\n    return ((_a = context.event.target) === null || _a === void 0 ? void 0 : _a.get('name')) === 'multi-mask';\n}\n/**\n * 获取被遮挡的 elements\n * @param context 上下文\n * @ignore\n */\nexport function getMaskedElements(context, tolerance) {\n    var target = context.event.target;\n    // multiple 模式下\n    if (isMultipleMask(context)) {\n        return getMultiMaskedElements(context, tolerance);\n    }\n    // 正常模式下\n    if (target.get('type') === 'path') {\n        var maskPath = getMaskPath(context, tolerance);\n        if (!maskPath) {\n            return;\n        }\n        return getElementsByPath(context.view, maskPath);\n    }\n    var maskBBox = getMaskBBox(context, tolerance);\n    // 如果 bbox 过小则不返回\n    if (!maskBBox) {\n        return null;\n    }\n    return getIntersectElements(context.view, maskBBox);\n}\n/**\n * 获取 multiple 模式下被 mask 遮挡的 elements\n * @param context 上下文\n * @returns\n */\nfunction getMultiMaskedElements(context, tolerance) {\n    var target = context.event.target;\n    if (target.get('type') === 'path') {\n        var maskPathList = getMultiMaskPathList(context, tolerance);\n        if (maskPathList.length > 0) {\n            return maskPathList.flatMap(function (maskPath) { return getElementsByPath(context.view, maskPath); });\n        }\n        return null;\n    }\n    var maskBBoxList = getMultiMaskBBoxList(context, tolerance);\n    if (maskBBoxList.length > 0) {\n        return maskBBoxList.flatMap(function (maskBBox) { return getIntersectElements(context.view, maskBBox); });\n    }\n    return null;\n}\n/**\n * @ignore\n */\nexport function getSiblingMaskElements(context, sibling, tolerance) {\n    // multiple 模式下\n    if (isMultipleMask(context)) {\n        return getSiblingMultiMaskedElements(context, sibling, tolerance);\n    }\n    // 正常模式下\n    var maskBBox = getMaskBBox(context, tolerance);\n    // 如果 bbox 过小则不返回\n    if (!maskBBox) {\n        return null;\n    }\n    return getSiblingMaskElementsByBBox(maskBBox, context, sibling);\n}\n/**\n * 通过 mashBBox 获取 sibling 模式下被 mask 遮挡的 elements\n * @param maskBBox\n * @param context 上下文\n * @param sibling sibling view\n * @returns\n */\nfunction getSiblingMaskElementsByBBox(maskBBox, context, sibling) {\n    var view = context.view;\n    var start = getSiblingPoint(view, sibling, { x: maskBBox.x, y: maskBBox.y });\n    var end = getSiblingPoint(view, sibling, { x: maskBBox.maxX, y: maskBBox.maxY });\n    var box = {\n        minX: start.x,\n        minY: start.y,\n        maxX: end.x,\n        maxY: end.y,\n    };\n    return getIntersectElements(sibling, box);\n}\n/**\n * 获取 sibling 模式下被 multiple mask 遮挡的 elements\n * @param context 上下文\n * @param sibling sibling view\n * @param tolerance box 宽高小于则不返回\n * @returns\n */\nfunction getSiblingMultiMaskedElements(context, sibling, tolerance) {\n    var maskBBoxList = getMultiMaskBBoxList(context, tolerance);\n    if (maskBBoxList.length > 0) {\n        return maskBBoxList.flatMap(function (maskBBox) { return getSiblingMaskElementsByBBox(maskBBox, context, sibling); });\n    }\n    return null;\n}\n/**\n * 获取所有的图表元素\n * @param view View/Chart\n * @ignore\n */\nexport function getElements(view) {\n    var geometries = view.geometries;\n    var rst = [];\n    each(geometries, function (geom) {\n        var elements = geom.elements;\n        rst = rst.concat(elements);\n    });\n    if (view.views && view.views.length) {\n        each(view.views, function (subView) {\n            rst = rst.concat(getElements(subView));\n        });\n    }\n    return rst;\n}\n/**\n * 获取所有的图表元素\n * @param view View/Chart\n * @param field 字段名\n * @param value 字段值\n * @ignore\n */\nexport function getElementsByField(view, field, value) {\n    var elements = getElements(view);\n    return elements.filter(function (el) {\n        return getElementValue(el, field) === value;\n    });\n}\n/**\n * 根据状态名获取图表元素\n * @param view View/Chart\n * @param stateName 状态名\n * @ignore\n */\nexport function getElementsByState(view, stateName) {\n    var geometries = view.geometries;\n    var rst = [];\n    each(geometries, function (geom) {\n        var elements = geom.getElementsBy(function (el) { return el.hasState(stateName); });\n        rst = rst.concat(elements);\n    });\n    return rst;\n}\n/**\n * 获取图表元素对应字段的值\n * @param element 图表元素\n * @param field 字段名\n * @ignore\n */\nexport function getElementValue(element, field) {\n    var model = element.getModel();\n    var record = model.data;\n    var value;\n    if (isArray(record)) {\n        value = record[0][field];\n    }\n    else {\n        value = record[field];\n    }\n    return value;\n}\n/**\n * 两个包围盒是否相交\n * @param box1 包围盒1\n * @param box2 包围盒2\n * @ignore\n */\nexport function intersectRect(box1, box2) {\n    return !(box2.minX > box1.maxX || box2.maxX < box1.minX || box2.minY > box1.maxY || box2.maxY < box1.minY);\n}\n/**\n * 获取包围盒内的图表元素\n * @param view View/Chart\n * @param box 包围盒\n * @ignore\n */\nexport function getIntersectElements(view, box) {\n    var elements = getElements(view);\n    var rst = [];\n    each(elements, function (el) {\n        var shape = el.shape;\n        var shapeBBox = shape.getCanvasBBox();\n        if (intersectRect(box, shapeBBox)) {\n            rst.push(el);\n        }\n    });\n    return rst;\n}\nfunction pathToPoints(path) {\n    var points = [];\n    each(path, function (seg) {\n        var command = seg[0];\n        if (command !== 'A') {\n            for (var i = 1; i < seg.length; i = i + 2) {\n                points.push([seg[i], seg[i + 1]]);\n            }\n        }\n        else {\n            var length_1 = seg.length;\n            points.push([seg[length_1 - 2], seg[length_1 - 1]]);\n        }\n    });\n    return points;\n}\n/**\n * 获取包围盒内的图表元素\n * @param view View/Chart\n * @param path 路径\n * @ignore\n */\nexport function getElementsByPath(view, path) {\n    var elements = getElements(view);\n    var points = pathToPoints(path);\n    var rst = elements.filter(function (el) {\n        var shape = el.shape;\n        var shapePoints;\n        if (shape.get('type') === 'path') {\n            shapePoints = pathToPoints(shape.attr('path'));\n        }\n        else {\n            var shapeBBox = shape.getCanvasBBox();\n            shapePoints = toPoints(shapeBBox);\n        }\n        return isPolygonsIntersect(points, shapePoints);\n    });\n    return rst;\n}\n/**\n * 获取当前 View 的所有组件\n * @param view View/Chart\n * @ignore\n */\nexport function getComponents(view) {\n    return view.getComponents().map(function (co) { return co.component; });\n}\n/** @ignore */\nexport function distance(p1, p2) {\n    var dx = p2.x - p1.x;\n    var dy = p2.y - p1.y;\n    return Math.sqrt(dx * dx + dy * dy);\n}\n/** @ignore */\nexport function getSpline(points, z) {\n    if (points.length <= 2) {\n        return getLinePath(points, false);\n    }\n    var first = points[0];\n    var arr = [];\n    each(points, function (point) {\n        arr.push(point.x);\n        arr.push(point.y);\n    });\n    var path = catmullRom2bezier(arr, z, null);\n    path.unshift(['M', first.x, first.y]);\n    return path;\n}\n/**\n * 检测点是否在包围盒内\n * @param box 包围盒\n * @param point 点\n * @ignore\n */\nexport function isInBox(box, point) {\n    return box.x <= point.x && box.maxX >= point.x && box.y <= point.y && box.maxY > point.y;\n}\n/**\n * 获取同 view 同一级的 views\n * @param view 当前 view\n * @returns 同一级的 views\n * @ignore\n */\nexport function getSilbings(view) {\n    var parent = view.parent;\n    var siblings = null;\n    if (parent) {\n        siblings = parent.views.filter(function (sub) { return sub !== view; });\n    }\n    return siblings;\n}\nfunction point2Normalize(view, point) {\n    var coord = view.getCoordinate();\n    return coord.invert(point);\n}\n/**\n * 将 view 上的一点转换成另一个 view 的点\n * @param view 当前的 view\n * @param sibling 同一层级的 view\n * @param point 指定点\n * @ignore\n */\nexport function getSiblingPoint(view, sibling, point) {\n    var normalPoint = point2Normalize(view, point);\n    return sibling.getCoordinate().convert(normalPoint);\n}\n/**\n * 是否在记录中，临时因为所有的 view 中的数据不是引用，而使用的方法\n * 不同 view 上对数据的引用不相等，导致无法直接用 includes\n * 假设 x, y 值相等时是同一条数据，这个假设不完全正确，而改成 isEqual 则成本太高\n * 后面改成同一个引用时可以修改回来\n * @param records\n * @param record\n * @param xFiled\n * @param yField\n * @returns\n * @ignore\n */\nexport function isInRecords(records, record, xFiled, yField) {\n    var isIn = false;\n    each(records, function (r) {\n        if (r[xFiled] === record[xFiled] && r[yField] === record[yField]) {\n            isIn = true;\n            return false;\n        }\n    });\n    return isIn;\n}\n// 级联获取 field 对应的 scale，如果 view 上没有，遍历子 view\nexport function getScaleByField(view, field) {\n    var scale = view.getScaleByField(field);\n    if (!scale && view.views) {\n        each(view.views, function (subView) {\n            scale = getScaleByField(subView, field);\n            if (scale) {\n                return false; // 终止循环\n            }\n        });\n    }\n    return scale;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}