{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { deepMix, isString, each, get, isFunction } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { getMappingValue } from './attr';\nimport { omit } from './helper';\nimport { MarkerSymbols } from './marker';\n/** 线条形 marker symbol */\nvar STROKES_SYMBOLS = ['line', 'cross', 'tick', 'plus', 'hyphen'];\n/**\n * 处理用户配置的 marker style\n * @param markerStyle\n * @param userMarker.style\n * @returns {ShapeAttrs} newStyle\n */\nfunction handleUserMarkerStyle(markerStyle, style) {\n  if (isFunction(style)) {\n    return style(markerStyle);\n  }\n  return deepMix({}, markerStyle, style);\n}\n/**\n * 根据 marker 是否为线条形 symbol, 来调整下样式\n * @param symbol\n * @param style\n * @param color\n */\nfunction adpatorMarkerStyle(marker, color) {\n  var symbol = marker.symbol;\n  if (isString(symbol) && STROKES_SYMBOLS.indexOf(symbol) !== -1) {\n    var markerStyle = get(marker, 'style', {});\n    var lineWidth = get(markerStyle, 'lineWidth', 1);\n    var stroke = markerStyle.stroke || markerStyle.fill || color;\n    marker.style = deepMix({}, marker.style, {\n      lineWidth: lineWidth,\n      stroke: stroke,\n      fill: null\n    });\n  }\n}\n/**\n * 设置 marker 的 symbol，将 字符串的 symbol 转换为真正的绘制命令\n * @param marker\n */\nfunction setMarkerSymbol(marker) {\n  var symbol = marker.symbol;\n  if (isString(symbol) && MarkerSymbols[symbol]) {\n    marker.symbol = MarkerSymbols[symbol];\n  }\n}\n/**\n * @ignore\n * get the legend layout from direction\n * @param direction\n * @returns layout 'horizontal' | 'vertical'\n */\nexport function getLegendLayout(direction) {\n  return direction.startsWith(DIRECTION.LEFT) || direction.startsWith(DIRECTION.RIGHT) ? 'vertical' : 'horizontal';\n}\n/**\n * @ignore\n * get the legend items\n * @param view\n * @param geometry\n * @param attr\n * @param themeMarker\n * @param markerCfg\n * @returns legend items\n */\nexport function getLegendItems(view, geometry, attr, themeMarker, userMarker) {\n  var scale = attr.getScale(attr.type);\n  if (scale.isCategory) {\n    var field_1 = scale.field;\n    var colorAttr_1 = geometry.getAttribute('color');\n    var shapeAttr_1 = geometry.getAttribute('shape');\n    var defaultColor_1 = view.getTheme().defaultColor;\n    var isInPolar_1 = geometry.coordinate.isPolar;\n    return scale.getTicks().map(function (tick, index) {\n      var _a;\n      var text = tick.text,\n        scaleValue = tick.value;\n      var name = text;\n      var value = scale.invert(scaleValue);\n      // 通过过滤图例项的数据，来看是否 unchecked\n      var unchecked = view.filterFieldData(field_1, [(_a = {}, _a[field_1] = value, _a)]).length === 0;\n      each(view.views, function (subView) {\n        var _a;\n        if (!subView.filterFieldData(field_1, [(_a = {}, _a[field_1] = value, _a)]).length) {\n          unchecked = true;\n        }\n      });\n      // @ts-ignore\n      var color = getMappingValue(colorAttr_1, value, defaultColor_1);\n      var shape = getMappingValue(shapeAttr_1, value, 'point');\n      var marker = geometry.getShapeMarker(shape, {\n        color: color,\n        isInPolar: isInPolar_1\n      });\n      var markerCfg = userMarker;\n      if (isFunction(markerCfg)) {\n        markerCfg = markerCfg(name, index, __assign({\n          name: name,\n          value: value\n        }, deepMix({}, themeMarker, marker)));\n      }\n      // the marker configure order should be ensure\n      marker = deepMix({}, themeMarker, marker, omit(__assign({}, markerCfg), ['style']));\n      adpatorMarkerStyle(marker, color);\n      if (markerCfg && markerCfg.style) {\n        // handle user's style settings\n        marker.style = handleUserMarkerStyle(marker.style, markerCfg.style);\n      }\n      setMarkerSymbol(marker);\n      return {\n        id: value,\n        name: name,\n        value: value,\n        marker: marker,\n        unchecked: unchecked\n      };\n    });\n  }\n  return [];\n}\n/**\n *\n * @ignore\n * custom legend 的 items 获取\n * @param themeMarker\n * @param userMarker\n * @param customItems\n */\nexport function getCustomLegendItems(themeMarker, userMarker, customItems) {\n  // 如果有自定义的 item，那么就直接使用，并合并主题的 marker 配置\n  return customItems.map(function (item, index) {\n    var markerCfg = userMarker;\n    if (isFunction(markerCfg)) {\n      markerCfg = markerCfg(item.name, index, deepMix({}, themeMarker, item));\n    }\n    var itemMarker = isFunction(item.marker) ? item.marker(item.name, index, deepMix({}, themeMarker, item)) : item.marker;\n    var marker = deepMix({}, themeMarker, markerCfg, itemMarker);\n    setMarkerSymbol(marker);\n    item.marker = marker;\n    return item;\n  });\n}\n/**\n * get the legend cfg from theme, will mix the common cfg of legend theme\n *\n * @param theme view theme object\n * @param direction legend direction\n * @returns legend theme cfg\n */\nexport function getLegendThemeCfg(theme, direction) {\n  var legendTheme = get(theme, ['components', 'legend'], {});\n  return deepMix({}, get(legendTheme, ['common'], {}), deepMix({}, get(legendTheme, [direction], {})));\n}","map":{"version":3,"names":["__assign","deepMix","isString","each","get","isFunction","DIRECTION","getMappingValue","omit","MarkerSymbols","STROKES_SYMBOLS","handleUserMarkerStyle","markerStyle","style","adpatorMarkerStyle","marker","color","symbol","indexOf","lineWidth","stroke","fill","setMarkerSymbol","getLegendLayout","direction","startsWith","LEFT","RIGHT","getLegendItems","view","geometry","attr","themeMarker","userMarker","scale","getScale","type","isCategory","field_1","field","colorAttr_1","getAttribute","shapeAttr_1","defaultColor_1","getTheme","defaultColor","isInPolar_1","coordinate","isPolar","getTicks","map","tick","index","_a","text","scaleValue","value","name","invert","unchecked","filterFieldData","length","views","subView","shape","getShapeMarker","isInPolar","markerCfg","id","getCustomLegendItems","customItems","item","itemMarker","getLegendThemeCfg","theme","legendTheme"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g2/esm/util/legend.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { deepMix, isString, each, get, isFunction } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { getMappingValue } from './attr';\nimport { omit } from './helper';\nimport { MarkerSymbols } from './marker';\n/** 线条形 marker symbol */\nvar STROKES_SYMBOLS = ['line', 'cross', 'tick', 'plus', 'hyphen'];\n/**\n * 处理用户配置的 marker style\n * @param markerStyle\n * @param userMarker.style\n * @returns {ShapeAttrs} newStyle\n */\nfunction handleUserMarkerStyle(markerStyle, style) {\n    if (isFunction(style)) {\n        return style(markerStyle);\n    }\n    return deepMix({}, markerStyle, style);\n}\n/**\n * 根据 marker 是否为线条形 symbol, 来调整下样式\n * @param symbol\n * @param style\n * @param color\n */\nfunction adpatorMarkerStyle(marker, color) {\n    var symbol = marker.symbol;\n    if (isString(symbol) && STROKES_SYMBOLS.indexOf(symbol) !== -1) {\n        var markerStyle = get(marker, 'style', {});\n        var lineWidth = get(markerStyle, 'lineWidth', 1);\n        var stroke = markerStyle.stroke || markerStyle.fill || color;\n        marker.style = deepMix({}, marker.style, { lineWidth: lineWidth, stroke: stroke, fill: null });\n    }\n}\n/**\n * 设置 marker 的 symbol，将 字符串的 symbol 转换为真正的绘制命令\n * @param marker\n */\nfunction setMarkerSymbol(marker) {\n    var symbol = marker.symbol;\n    if (isString(symbol) && MarkerSymbols[symbol]) {\n        marker.symbol = MarkerSymbols[symbol];\n    }\n}\n/**\n * @ignore\n * get the legend layout from direction\n * @param direction\n * @returns layout 'horizontal' | 'vertical'\n */\nexport function getLegendLayout(direction) {\n    return direction.startsWith(DIRECTION.LEFT) || direction.startsWith(DIRECTION.RIGHT) ? 'vertical' : 'horizontal';\n}\n/**\n * @ignore\n * get the legend items\n * @param view\n * @param geometry\n * @param attr\n * @param themeMarker\n * @param markerCfg\n * @returns legend items\n */\nexport function getLegendItems(view, geometry, attr, themeMarker, userMarker) {\n    var scale = attr.getScale(attr.type);\n    if (scale.isCategory) {\n        var field_1 = scale.field;\n        var colorAttr_1 = geometry.getAttribute('color');\n        var shapeAttr_1 = geometry.getAttribute('shape');\n        var defaultColor_1 = view.getTheme().defaultColor;\n        var isInPolar_1 = geometry.coordinate.isPolar;\n        return scale.getTicks().map(function (tick, index) {\n            var _a;\n            var text = tick.text, scaleValue = tick.value;\n            var name = text;\n            var value = scale.invert(scaleValue);\n            // 通过过滤图例项的数据，来看是否 unchecked\n            var unchecked = view.filterFieldData(field_1, [(_a = {}, _a[field_1] = value, _a)]).length === 0;\n            each(view.views, function (subView) {\n                var _a;\n                if (!subView.filterFieldData(field_1, [(_a = {}, _a[field_1] = value, _a)]).length) {\n                    unchecked = true;\n                }\n            });\n            // @ts-ignore\n            var color = getMappingValue(colorAttr_1, value, defaultColor_1);\n            var shape = getMappingValue(shapeAttr_1, value, 'point');\n            var marker = geometry.getShapeMarker(shape, {\n                color: color,\n                isInPolar: isInPolar_1,\n            });\n            var markerCfg = userMarker;\n            if (isFunction(markerCfg)) {\n                markerCfg = markerCfg(name, index, __assign({ name: name, value: value }, deepMix({}, themeMarker, marker)));\n            }\n            // the marker configure order should be ensure\n            marker = deepMix({}, themeMarker, marker, omit(__assign({}, markerCfg), ['style']));\n            adpatorMarkerStyle(marker, color);\n            if (markerCfg && markerCfg.style) {\n                // handle user's style settings\n                marker.style = handleUserMarkerStyle(marker.style, markerCfg.style);\n            }\n            setMarkerSymbol(marker);\n            return { id: value, name: name, value: value, marker: marker, unchecked: unchecked };\n        });\n    }\n    return [];\n}\n/**\n *\n * @ignore\n * custom legend 的 items 获取\n * @param themeMarker\n * @param userMarker\n * @param customItems\n */\nexport function getCustomLegendItems(themeMarker, userMarker, customItems) {\n    // 如果有自定义的 item，那么就直接使用，并合并主题的 marker 配置\n    return customItems.map(function (item, index) {\n        var markerCfg = userMarker;\n        if (isFunction(markerCfg)) {\n            markerCfg = markerCfg(item.name, index, deepMix({}, themeMarker, item));\n        }\n        var itemMarker = isFunction(item.marker)\n            ? item.marker(item.name, index, deepMix({}, themeMarker, item))\n            : item.marker;\n        var marker = deepMix({}, themeMarker, markerCfg, itemMarker);\n        setMarkerSymbol(marker);\n        item.marker = marker;\n        return item;\n    });\n}\n/**\n * get the legend cfg from theme, will mix the common cfg of legend theme\n *\n * @param theme view theme object\n * @param direction legend direction\n * @returns legend theme cfg\n */\nexport function getLegendThemeCfg(theme, direction) {\n    var legendTheme = get(theme, ['components', 'legend'], {});\n    return deepMix({}, get(legendTheme, ['common'], {}), deepMix({}, get(legendTheme, [direction], {})));\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}