{"ast":null,"code":"import { DispatcherComponent } from './dispatcher.component';\nimport { RouterModule } from '@angular/router';\nimport { RidersListResolver } from '../../riders/riders-list/riders-list.resolver';\nimport { DispatcherLocationsSelectComponent } from './dispatcher-locations-select/dispatcher-locations-select.component';\nimport { DispatcherLookingComponent } from './dispatcher-looking/dispatcher-looking.component';\nimport { DispatcherRidersListComponent } from './dispatcher-riders-list/dispatcher-riders-list.component';\nimport { DispatcherServiceSelectComponent } from './dispatcher-service-select/dispatcher-service-select.component';\nimport { DispatcherServiceSelectResolver } from './dispatcher-service-select/dispatcher-service-select.resolver';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: '',\n  component: DispatcherComponent,\n  children: [{\n    path: '',\n    redirectTo: 'riders-list',\n    pathMatch: 'full'\n  }, {\n    path: 'riders-list',\n    component: DispatcherRidersListComponent,\n    resolve: {\n      riders: RidersListResolver\n    },\n    runGuardsAndResolvers: 'pathParamsOrQueryParamsChange'\n  }, {\n    path: 'locations-select',\n    component: DispatcherLocationsSelectComponent\n  }, {\n    path: 'service-select',\n    component: DispatcherServiceSelectComponent,\n    resolve: {\n      services: DispatcherServiceSelectResolver\n    }\n  }]\n}, {\n  path: 'looking',\n  component: DispatcherLookingComponent\n}\n//{ path: 'success/:id', component: DispatcherSuccessDriverInfoComponent },\n];\n\nexport class DispatcherRoutingModule {\n  static {\n    this.ɵfac = function DispatcherRoutingModule_Factory(t) {\n      return new (t || DispatcherRoutingModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: DispatcherRoutingModule\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      providers: [RidersListResolver, DispatcherServiceSelectResolver],\n      imports: [RouterModule.forChild(routes), RouterModule]\n    });\n  }\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(DispatcherRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["DispatcherComponent","RouterModule","RidersListResolver","DispatcherLocationsSelectComponent","DispatcherLookingComponent","DispatcherRidersListComponent","DispatcherServiceSelectComponent","DispatcherServiceSelectResolver","routes","path","component","children","redirectTo","pathMatch","resolve","riders","runGuardsAndResolvers","services","DispatcherRoutingModule","imports","forChild","i1","exports"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/apps/admin-panel/src/app/cms/home/dispatcher/dispatcher-routing.module.ts"],"sourcesContent":["import { DispatcherComponent } from './dispatcher.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RidersListResolver } from '../../riders/riders-list/riders-list.resolver';\nimport { DispatcherLocationsSelectComponent } from './dispatcher-locations-select/dispatcher-locations-select.component';\nimport { DispatcherLookingComponent } from './dispatcher-looking/dispatcher-looking.component';\nimport { DispatcherRidersListComponent } from './dispatcher-riders-list/dispatcher-riders-list.component';\nimport { DispatcherServiceSelectComponent } from './dispatcher-service-select/dispatcher-service-select.component';\nimport { DispatcherServiceSelectResolver } from './dispatcher-service-select/dispatcher-service-select.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DispatcherComponent,\n    children: [\n      { path: '', redirectTo: 'riders-list', pathMatch: 'full' },\n      {\n        path: 'riders-list',\n        component: DispatcherRidersListComponent,\n        resolve: { riders: RidersListResolver },\n        runGuardsAndResolvers: 'pathParamsOrQueryParamsChange',\n      },\n      {\n        path: 'locations-select',\n        component: DispatcherLocationsSelectComponent,\n      },\n      {\n        path: 'service-select',\n        component: DispatcherServiceSelectComponent,\n        resolve: { services: DispatcherServiceSelectResolver },\n      },\n    ],\n  },\n  { path: 'looking', component: DispatcherLookingComponent },\n  //{ path: 'success/:id', component: DispatcherSuccessDriverInfoComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [RidersListResolver, DispatcherServiceSelectResolver],\n})\nexport class DispatcherRoutingModule {}\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,wBAAwB;AAE5D,SAAiBC,YAAY,QAAQ,iBAAiB;AACtD,SAASC,kBAAkB,QAAQ,+CAA+C;AAClF,SAASC,kCAAkC,QAAQ,qEAAqE;AACxH,SAASC,0BAA0B,QAAQ,mDAAmD;AAC9F,SAASC,6BAA6B,QAAQ,2DAA2D;AACzG,SAASC,gCAAgC,QAAQ,iEAAiE;AAClH,SAASC,+BAA+B,QAAQ,gEAAgE;;;AAEhH,MAAMC,MAAM,GAAW,CACrB;EACEC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAEV,mBAAmB;EAC9BW,QAAQ,EAAE,CACR;IAAEF,IAAI,EAAE,EAAE;IAAEG,UAAU,EAAE,aAAa;IAAEC,SAAS,EAAE;EAAM,CAAE,EAC1D;IACEJ,IAAI,EAAE,aAAa;IACnBC,SAAS,EAAEL,6BAA6B;IACxCS,OAAO,EAAE;MAAEC,MAAM,EAAEb;IAAkB,CAAE;IACvCc,qBAAqB,EAAE;GACxB,EACD;IACEP,IAAI,EAAE,kBAAkB;IACxBC,SAAS,EAAEP;GACZ,EACD;IACEM,IAAI,EAAE,gBAAgB;IACtBC,SAAS,EAAEJ,gCAAgC;IAC3CQ,OAAO,EAAE;MAAEG,QAAQ,EAAEV;IAA+B;GACrD;CAEJ,EACD;EAAEE,IAAI,EAAE,SAAS;EAAEC,SAAS,EAAEN;AAA0B;AACxD;AAAA,CACD;;AAOD,OAAM,MAAOc,uBAAuB;;;uBAAvBA,uBAAuB;IAAA;EAAA;;;YAAvBA;IAAuB;EAAA;;;iBAFvB,CAAChB,kBAAkB,EAAEK,+BAA+B,CAAC;MAAAY,OAAA,GAFtDlB,YAAY,CAACmB,QAAQ,CAACZ,MAAM,CAAC,EAC7BP,YAAY;IAAA;EAAA;;;2EAGXiB,uBAAuB;IAAAC,OAAA,GAAAE,EAAA,CAAApB,YAAA;IAAAqB,OAAA,GAHxBrB,YAAY;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}