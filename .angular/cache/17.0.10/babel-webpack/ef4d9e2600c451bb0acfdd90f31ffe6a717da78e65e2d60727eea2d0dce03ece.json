{"ast":null,"code":"import { __assign, __extends, __values } from \"tslib\";\n/**\n * Create By Bruce Too\n * On 2020-02-10\n */\nimport { assign, deepMix, each, get } from '@antv/util';\nimport { DIRECTION, VIEW_LIFE_CIRCLE } from '../constant';\nimport { getFactTitleConfig } from '../util/facet';\nimport { Facet } from './facet';\n/**\n * @ignore\n * Tree Facet\n */\nvar Tree = /** @class */function (_super) {\n  __extends(Tree, _super);\n  function Tree() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.afterChartRender = function () {\n      if (_this.facets && _this.cfg.line) {\n        _this.container.clear();\n        _this.drawLines(_this.facets);\n      }\n    };\n    return _this;\n  }\n  Tree.prototype.afterEachView = function (view, facet) {\n    this.processAxis(view, facet);\n  };\n  Tree.prototype.beforeEachView = function (view, facet) {};\n  Tree.prototype.init = function () {\n    _super.prototype.init.call(this);\n    this.view.on(VIEW_LIFE_CIRCLE.AFTER_RENDER, this.afterChartRender);\n  };\n  Tree.prototype.getDefaultCfg = function () {\n    return deepMix({}, _super.prototype.getDefaultCfg.call(this), {\n      type: 'tree',\n      line: {\n        style: {\n          lineWidth: 1,\n          stroke: '#ddd'\n        },\n        smooth: false\n      },\n      showTitle: true,\n      title: _super.prototype.getDefaultTitleCfg.call(this)\n    });\n  };\n  Tree.prototype.generateFacets = function (data) {\n    var fields = this.cfg.fields;\n    if (!fields.length) {\n      throw new Error('Please specify for the fields for rootFacet!');\n    }\n    var rst = [];\n    var rootFacet = {\n      type: this.cfg.type,\n      data: data,\n      region: null,\n      rowValuesLength: this.getRows(),\n      columnValuesLength: 1,\n      rowIndex: 0,\n      columnIndex: 0,\n      rowField: '',\n      columnField: '',\n      rowValue: '',\n      columnValue: ''\n    };\n    rst.push(rootFacet);\n    rootFacet.children = this.getChildFacets(data, 1, rst);\n    this.setRegion(rst);\n    return rst;\n  };\n  Tree.prototype.setRegion = function (facets) {\n    var _this = this;\n    this.forceColIndex(facets);\n    facets.forEach(function (facet) {\n      // @ts-ignore 允许调整\n      facet.region = _this.getRegion(facet.rowValuesLength, facet.columnValuesLength, facet.columnIndex, facet.rowIndex);\n    });\n  };\n  Tree.prototype.getRegion = function (rows, cols, xIndex, yIndex) {\n    var xWidth = 1 / cols; // x轴方向的每个分面的偏移\n    var yWidth = 1 / rows; // y轴方向的每个分面的偏移\n    var start = {\n      x: xWidth * xIndex,\n      y: yWidth * yIndex\n    };\n    var end = {\n      x: start.x + xWidth,\n      y: start.y + yWidth * 2 / 3 // 预留1/3的空隙，方便添加连接线\n    };\n\n    return {\n      start: start,\n      end: end\n    };\n  };\n  Tree.prototype.forceColIndex = function (facets) {\n    var e_1, _a;\n    var _this = this;\n    var leafs = [];\n    var index = 0;\n    facets.forEach(function (facet) {\n      if (_this.isLeaf(facet)) {\n        leafs.push(facet);\n        // @ts-ignore 允许调整\n        facet.columnIndex = index;\n        index++;\n      }\n    });\n    leafs.forEach(function (facet) {\n      // @ts-ignore\n      facet.columnValuesLength = leafs.length;\n    });\n    var maxLevel = this.cfg.fields.length;\n    for (var i = maxLevel - 1; i >= 0; i--) {\n      var levelFacets = this.getFacetsByLevel(facets, i);\n      try {\n        // var yIndex = maxLevel - i;\n        for (var levelFacets_1 = (e_1 = void 0, __values(levelFacets)), levelFacets_1_1 = levelFacets_1.next(); !levelFacets_1_1.done; levelFacets_1_1 = levelFacets_1.next()) {\n          var facet = levelFacets_1_1.value;\n          if (!this.isLeaf(facet)) {\n            facet.originColIndex = facet.columnIndex;\n            // @ts-ignore\n            facet.columnIndex = this.getRegionIndex(facet.children);\n            // @ts-ignore\n            facet.columnValuesLength = leafs.length;\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (levelFacets_1_1 && !levelFacets_1_1.done && (_a = levelFacets_1.return)) _a.call(levelFacets_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n  };\n  // get facet use level\n  Tree.prototype.getFacetsByLevel = function (facets, level) {\n    var rst = [];\n    facets.forEach(function (facet) {\n      if (facet.rowIndex === level) {\n        rst.push(facet);\n      }\n    });\n    return rst;\n  };\n  // if the facet has children , make it's column index in the middle of it's children\n  Tree.prototype.getRegionIndex = function (children) {\n    var first = children[0];\n    var last = children[children.length - 1];\n    return (last.columnIndex - first.columnIndex) / 2 + first.columnIndex;\n  };\n  // is  a leaf without children\n  Tree.prototype.isLeaf = function (facet) {\n    return !facet.children || !facet.children.length;\n  };\n  Tree.prototype.getRows = function () {\n    return this.cfg.fields.length + 1;\n  };\n  // get child\n  Tree.prototype.getChildFacets = function (data, level, arr) {\n    var _this = this;\n    // [ 'grade', 'class' ]\n    var fields = this.cfg.fields;\n    var length = fields.length;\n    if (length < level) {\n      return;\n    }\n    var rst = [];\n    // get fist level except root node\n    var field = fields[level - 1];\n    // get field value\n    var values = this.getFieldValues(data, field);\n    values.forEach(function (value, index) {\n      var conditions = [{\n        field: field,\n        value: value,\n        values: values\n      }];\n      var subData = data.filter(_this.getFacetDataFilter(conditions));\n      if (subData.length) {\n        var facet = {\n          type: _this.cfg.type,\n          data: subData,\n          region: null,\n          columnValue: value,\n          rowValue: '',\n          columnField: field,\n          rowField: '',\n          columnIndex: index,\n          rowValuesLength: _this.getRows(),\n          columnValuesLength: 1,\n          rowIndex: level,\n          children: _this.getChildFacets(subData, level + 1, arr)\n        };\n        rst.push(facet);\n        arr.push(facet);\n      }\n    });\n    return rst;\n  };\n  Tree.prototype.render = function () {\n    _super.prototype.render.call(this);\n    if (this.cfg.showTitle) {\n      this.renderTitle();\n    }\n  };\n  Tree.prototype.renderTitle = function () {\n    var _this = this;\n    each(this.facets, function (facet) {\n      var columnValue = facet.columnValue,\n        view = facet.view;\n      var formatter = get(_this.cfg.title, 'formatter');\n      var config = deepMix({\n        position: ['50%', '0%'],\n        content: formatter ? formatter(columnValue) : columnValue\n      }, getFactTitleConfig(DIRECTION.TOP), _this.cfg.title);\n      view.annotation().text(config);\n    });\n  };\n  Tree.prototype.drawLines = function (facets) {\n    var _this = this;\n    facets.forEach(function (facet) {\n      if (!_this.isLeaf(facet)) {\n        var children = facet.children;\n        _this.addFacetLines(facet, children);\n      }\n    });\n  };\n  // add lines with it's children\n  Tree.prototype.addFacetLines = function (facet, children) {\n    var _this = this;\n    var view = facet.view;\n    var region = view.coordinateBBox;\n    // top, right, bottom, left\n    var start = {\n      x: region.x + region.width / 2,\n      y: region.y + region.height\n    };\n    children.forEach(function (subFacet) {\n      var subRegion = subFacet.view.coordinateBBox;\n      var end = {\n        x: subRegion.bl.x + (subRegion.tr.x - subRegion.bl.x) / 2,\n        y: subRegion.tr.y\n      };\n      var middle1 = {\n        x: start.x,\n        y: start.y + (end.y - start.y) / 2\n      };\n      var middle2 = {\n        x: end.x,\n        y: middle1.y\n      };\n      _this.drawLine([start, middle1, middle2, end]);\n    });\n  };\n  Tree.prototype.getPath = function (points) {\n    var path = [];\n    var smooth = this.cfg.line.smooth;\n    if (smooth) {\n      path.push(['M', points[0].x, points[0].y]);\n      path.push(['C', points[1].x, points[1].y, points[2].x, points[2].y, points[3].x, points[3].y]);\n    } else {\n      points.forEach(function (point, index) {\n        if (index === 0) {\n          path.push(['M', point.x, point.y]);\n        } else {\n          path.push(['L', point.x, point.y]);\n        }\n      });\n    }\n    return path;\n  };\n  // draw line width points\n  Tree.prototype.drawLine = function (points) {\n    var path = this.getPath(points);\n    var line = this.cfg.line.style;\n    this.container.addShape('path', {\n      attrs: assign({\n        // @ts-ignore\n        path: path\n      }, line)\n    });\n  };\n  Tree.prototype.getXAxisOption = function (x, axes, option, facet) {\n    if (facet.rowIndex !== facet.rowValuesLength - 1) {\n      return __assign(__assign({}, option), {\n        title: null,\n        label: null\n      });\n    }\n    return option;\n  };\n  Tree.prototype.getYAxisOption = function (y, axes, option, facet) {\n    if (facet.originColIndex !== 0 && facet.columnIndex !== 0) {\n      return __assign(__assign({}, option), {\n        title: null,\n        label: null\n      });\n    }\n    return option;\n  };\n  return Tree;\n}(Facet);\nexport default Tree;","map":{"version":3,"names":["__assign","__extends","__values","assign","deepMix","each","get","DIRECTION","VIEW_LIFE_CIRCLE","getFactTitleConfig","Facet","Tree","_super","_this","apply","arguments","afterChartRender","facets","cfg","line","container","clear","drawLines","prototype","afterEachView","view","facet","processAxis","beforeEachView","init","call","on","AFTER_RENDER","getDefaultCfg","type","style","lineWidth","stroke","smooth","showTitle","title","getDefaultTitleCfg","generateFacets","data","fields","length","Error","rst","rootFacet","region","rowValuesLength","getRows","columnValuesLength","rowIndex","columnIndex","rowField","columnField","rowValue","columnValue","push","children","getChildFacets","setRegion","forceColIndex","forEach","getRegion","rows","cols","xIndex","yIndex","xWidth","yWidth","start","x","y","end","e_1","_a","leafs","index","isLeaf","maxLevel","i","levelFacets","getFacetsByLevel","levelFacets_1","levelFacets_1_1","next","done","value","originColIndex","getRegionIndex","e_1_1","error","return","level","first","last","arr","field","values","getFieldValues","conditions","subData","filter","getFacetDataFilter","render","renderTitle","formatter","config","position","content","TOP","annotation","text","addFacetLines","coordinateBBox","width","height","subFacet","subRegion","bl","tr","middle1","middle2","drawLine","getPath","points","path","point","addShape","attrs","getXAxisOption","axes","option","label","getYAxisOption"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g2/esm/facet/tree.js"],"sourcesContent":["import { __assign, __extends, __values } from \"tslib\";\n/**\n * Create By Bruce Too\n * On 2020-02-10\n */\nimport { assign, deepMix, each, get } from '@antv/util';\nimport { DIRECTION, VIEW_LIFE_CIRCLE } from '../constant';\nimport { getFactTitleConfig } from '../util/facet';\nimport { Facet } from './facet';\n/**\n * @ignore\n * Tree Facet\n */\nvar Tree = /** @class */ (function (_super) {\n    __extends(Tree, _super);\n    function Tree() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.afterChartRender = function () {\n            if (_this.facets && _this.cfg.line) {\n                _this.container.clear();\n                _this.drawLines(_this.facets);\n            }\n        };\n        return _this;\n    }\n    Tree.prototype.afterEachView = function (view, facet) {\n        this.processAxis(view, facet);\n    };\n    Tree.prototype.beforeEachView = function (view, facet) { };\n    Tree.prototype.init = function () {\n        _super.prototype.init.call(this);\n        this.view.on(VIEW_LIFE_CIRCLE.AFTER_RENDER, this.afterChartRender);\n    };\n    Tree.prototype.getDefaultCfg = function () {\n        return deepMix({}, _super.prototype.getDefaultCfg.call(this), {\n            type: 'tree',\n            line: {\n                style: {\n                    lineWidth: 1,\n                    stroke: '#ddd',\n                },\n                smooth: false,\n            },\n            showTitle: true,\n            title: _super.prototype.getDefaultTitleCfg.call(this),\n        });\n    };\n    Tree.prototype.generateFacets = function (data) {\n        var fields = this.cfg.fields;\n        if (!fields.length) {\n            throw new Error('Please specify for the fields for rootFacet!');\n        }\n        var rst = [];\n        var rootFacet = {\n            type: this.cfg.type,\n            data: data,\n            region: null,\n            rowValuesLength: this.getRows(),\n            columnValuesLength: 1,\n            rowIndex: 0,\n            columnIndex: 0,\n            rowField: '',\n            columnField: '',\n            rowValue: '',\n            columnValue: '',\n        };\n        rst.push(rootFacet);\n        rootFacet.children = this.getChildFacets(data, 1, rst);\n        this.setRegion(rst);\n        return rst;\n    };\n    Tree.prototype.setRegion = function (facets) {\n        var _this = this;\n        this.forceColIndex(facets);\n        facets.forEach(function (facet) {\n            // @ts-ignore 允许调整\n            facet.region = _this.getRegion(facet.rowValuesLength, facet.columnValuesLength, facet.columnIndex, facet.rowIndex);\n        });\n    };\n    Tree.prototype.getRegion = function (rows, cols, xIndex, yIndex) {\n        var xWidth = 1 / cols; // x轴方向的每个分面的偏移\n        var yWidth = 1 / rows; // y轴方向的每个分面的偏移\n        var start = {\n            x: xWidth * xIndex,\n            y: yWidth * yIndex,\n        };\n        var end = {\n            x: start.x + xWidth,\n            y: start.y + (yWidth * 2) / 3, // 预留1/3的空隙，方便添加连接线\n        };\n        return {\n            start: start,\n            end: end,\n        };\n    };\n    Tree.prototype.forceColIndex = function (facets) {\n        var e_1, _a;\n        var _this = this;\n        var leafs = [];\n        var index = 0;\n        facets.forEach(function (facet) {\n            if (_this.isLeaf(facet)) {\n                leafs.push(facet);\n                // @ts-ignore 允许调整\n                facet.columnIndex = index;\n                index++;\n            }\n        });\n        leafs.forEach(function (facet) {\n            // @ts-ignore\n            facet.columnValuesLength = leafs.length;\n        });\n        var maxLevel = this.cfg.fields.length;\n        for (var i = maxLevel - 1; i >= 0; i--) {\n            var levelFacets = this.getFacetsByLevel(facets, i);\n            try {\n                // var yIndex = maxLevel - i;\n                for (var levelFacets_1 = (e_1 = void 0, __values(levelFacets)), levelFacets_1_1 = levelFacets_1.next(); !levelFacets_1_1.done; levelFacets_1_1 = levelFacets_1.next()) {\n                    var facet = levelFacets_1_1.value;\n                    if (!this.isLeaf(facet)) {\n                        facet.originColIndex = facet.columnIndex;\n                        // @ts-ignore\n                        facet.columnIndex = this.getRegionIndex(facet.children);\n                        // @ts-ignore\n                        facet.columnValuesLength = leafs.length;\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (levelFacets_1_1 && !levelFacets_1_1.done && (_a = levelFacets_1.return)) _a.call(levelFacets_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n    };\n    // get facet use level\n    Tree.prototype.getFacetsByLevel = function (facets, level) {\n        var rst = [];\n        facets.forEach(function (facet) {\n            if (facet.rowIndex === level) {\n                rst.push(facet);\n            }\n        });\n        return rst;\n    };\n    // if the facet has children , make it's column index in the middle of it's children\n    Tree.prototype.getRegionIndex = function (children) {\n        var first = children[0];\n        var last = children[children.length - 1];\n        return (last.columnIndex - first.columnIndex) / 2 + first.columnIndex;\n    };\n    // is  a leaf without children\n    Tree.prototype.isLeaf = function (facet) {\n        return !facet.children || !facet.children.length;\n    };\n    Tree.prototype.getRows = function () {\n        return this.cfg.fields.length + 1;\n    };\n    // get child\n    Tree.prototype.getChildFacets = function (data, level, arr) {\n        var _this = this;\n        // [ 'grade', 'class' ]\n        var fields = this.cfg.fields;\n        var length = fields.length;\n        if (length < level) {\n            return;\n        }\n        var rst = [];\n        // get fist level except root node\n        var field = fields[level - 1];\n        // get field value\n        var values = this.getFieldValues(data, field);\n        values.forEach(function (value, index) {\n            var conditions = [{ field: field, value: value, values: values }];\n            var subData = data.filter(_this.getFacetDataFilter(conditions));\n            if (subData.length) {\n                var facet = {\n                    type: _this.cfg.type,\n                    data: subData,\n                    region: null,\n                    columnValue: value,\n                    rowValue: '',\n                    columnField: field,\n                    rowField: '',\n                    columnIndex: index,\n                    rowValuesLength: _this.getRows(),\n                    columnValuesLength: 1,\n                    rowIndex: level,\n                    children: _this.getChildFacets(subData, level + 1, arr),\n                };\n                rst.push(facet);\n                arr.push(facet);\n            }\n        });\n        return rst;\n    };\n    Tree.prototype.render = function () {\n        _super.prototype.render.call(this);\n        if (this.cfg.showTitle) {\n            this.renderTitle();\n        }\n    };\n    Tree.prototype.renderTitle = function () {\n        var _this = this;\n        each(this.facets, function (facet) {\n            var columnValue = facet.columnValue, view = facet.view;\n            var formatter = get(_this.cfg.title, 'formatter');\n            var config = deepMix({\n                position: ['50%', '0%'],\n                content: formatter ? formatter(columnValue) : columnValue,\n            }, getFactTitleConfig(DIRECTION.TOP), _this.cfg.title);\n            view.annotation().text(config);\n        });\n    };\n    Tree.prototype.drawLines = function (facets) {\n        var _this = this;\n        facets.forEach(function (facet) {\n            if (!_this.isLeaf(facet)) {\n                var children = facet.children;\n                _this.addFacetLines(facet, children);\n            }\n        });\n    };\n    // add lines with it's children\n    Tree.prototype.addFacetLines = function (facet, children) {\n        var _this = this;\n        var view = facet.view;\n        var region = view.coordinateBBox;\n        // top, right, bottom, left\n        var start = {\n            x: region.x + region.width / 2,\n            y: region.y + region.height,\n        };\n        children.forEach(function (subFacet) {\n            var subRegion = subFacet.view.coordinateBBox;\n            var end = {\n                x: subRegion.bl.x + (subRegion.tr.x - subRegion.bl.x) / 2,\n                y: subRegion.tr.y,\n            };\n            var middle1 = {\n                x: start.x,\n                y: start.y + (end.y - start.y) / 2,\n            };\n            var middle2 = {\n                x: end.x,\n                y: middle1.y,\n            };\n            _this.drawLine([start, middle1, middle2, end]);\n        });\n    };\n    Tree.prototype.getPath = function (points) {\n        var path = [];\n        var smooth = this.cfg.line.smooth;\n        if (smooth) {\n            path.push(['M', points[0].x, points[0].y]);\n            path.push(['C', points[1].x, points[1].y, points[2].x, points[2].y, points[3].x, points[3].y]);\n        }\n        else {\n            points.forEach(function (point, index) {\n                if (index === 0) {\n                    path.push(['M', point.x, point.y]);\n                }\n                else {\n                    path.push(['L', point.x, point.y]);\n                }\n            });\n        }\n        return path;\n    };\n    // draw line width points\n    Tree.prototype.drawLine = function (points) {\n        var path = this.getPath(points);\n        var line = this.cfg.line.style;\n        this.container.addShape('path', {\n            attrs: assign({\n                // @ts-ignore\n                path: path,\n            }, line),\n        });\n    };\n    Tree.prototype.getXAxisOption = function (x, axes, option, facet) {\n        if (facet.rowIndex !== facet.rowValuesLength - 1) {\n            return __assign(__assign({}, option), { title: null, label: null });\n        }\n        return option;\n    };\n    Tree.prototype.getYAxisOption = function (y, axes, option, facet) {\n        if (facet.originColIndex !== 0 && facet.columnIndex !== 0) {\n            return __assign(__assign({}, option), { title: null, label: null });\n        }\n        return option;\n    };\n    return Tree;\n}(Facet));\nexport default Tree;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}