{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { registerShape, registerShapeFactory } from '../base';\nimport { BACKGROUND_SHAPE } from '../constant';\nimport { getBackgroundRectStyle, getStyle } from '../util/get-style';\nimport { getBackgroundRectPath, getIntervalRectPath, getRectPoints, getRectWithCornerRadius } from './util';\n/** Interval 的 shape 工厂 */\nvar IntervalShapeFactory = registerShapeFactory('interval', {\n  defaultShapeType: 'rect',\n  getDefaultPoints: function (pointInfo) {\n    return getRectPoints(pointInfo);\n  }\n});\n/** Inerval 默认 shape，填充的矩形 */\nregisterShape('interval', 'rect', {\n  draw: function (cfg, container) {\n    var style = getStyle(cfg, false, true);\n    var group = container;\n    var backgroundCfg = cfg === null || cfg === void 0 ? void 0 : cfg.background;\n    if (backgroundCfg) {\n      group = container.addGroup({\n        name: 'interval-group'\n      });\n      var backgroundStyle = getBackgroundRectStyle(cfg);\n      var backgroundPath = getBackgroundRectPath(cfg, this.parsePoints(cfg.points), this.coordinate);\n      group.addShape('path', {\n        attrs: __assign(__assign({}, backgroundStyle), {\n          path: backgroundPath\n        }),\n        capture: false,\n        zIndex: -1,\n        name: BACKGROUND_SHAPE\n      });\n    }\n    var path;\n    if (style.radius && this.coordinate.isRect) {\n      path = getRectWithCornerRadius(this.parsePoints(cfg.points), this.coordinate, style.radius);\n    } else {\n      path = this.parsePath(getIntervalRectPath(cfg.points, style.lineCap, this.coordinate));\n    }\n    var shape = group.addShape('path', {\n      attrs: __assign(__assign({}, style), {\n        path: path\n      }),\n      name: 'interval'\n    });\n    return backgroundCfg ? group : shape;\n  },\n  getMarker: function (markerCfg) {\n    var color = markerCfg.color,\n      isInPolar = markerCfg.isInPolar;\n    if (isInPolar) {\n      return {\n        symbol: 'circle',\n        style: {\n          r: 4.5,\n          fill: color\n        }\n      };\n    }\n    return {\n      symbol: 'square',\n      style: {\n        r: 4,\n        fill: color\n      }\n    };\n  }\n});\nexport default IntervalShapeFactory;","map":{"version":3,"names":["__assign","registerShape","registerShapeFactory","BACKGROUND_SHAPE","getBackgroundRectStyle","getStyle","getBackgroundRectPath","getIntervalRectPath","getRectPoints","getRectWithCornerRadius","IntervalShapeFactory","defaultShapeType","getDefaultPoints","pointInfo","draw","cfg","container","style","group","backgroundCfg","background","addGroup","name","backgroundStyle","backgroundPath","parsePoints","points","coordinate","addShape","attrs","path","capture","zIndex","radius","isRect","parsePath","lineCap","shape","getMarker","markerCfg","color","isInPolar","symbol","r","fill"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g2/esm/geometry/shape/interval/index.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { registerShape, registerShapeFactory } from '../base';\nimport { BACKGROUND_SHAPE } from '../constant';\nimport { getBackgroundRectStyle, getStyle } from '../util/get-style';\nimport { getBackgroundRectPath, getIntervalRectPath, getRectPoints, getRectWithCornerRadius } from './util';\n/** Interval 的 shape 工厂 */\nvar IntervalShapeFactory = registerShapeFactory('interval', {\n    defaultShapeType: 'rect',\n    getDefaultPoints: function (pointInfo) {\n        return getRectPoints(pointInfo);\n    },\n});\n/** Inerval 默认 shape，填充的矩形 */\nregisterShape('interval', 'rect', {\n    draw: function (cfg, container) {\n        var style = getStyle(cfg, false, true);\n        var group = container;\n        var backgroundCfg = cfg === null || cfg === void 0 ? void 0 : cfg.background;\n        if (backgroundCfg) {\n            group = container.addGroup({\n                name: 'interval-group',\n            });\n            var backgroundStyle = getBackgroundRectStyle(cfg);\n            var backgroundPath = getBackgroundRectPath(cfg, this.parsePoints(cfg.points), this.coordinate);\n            group.addShape('path', {\n                attrs: __assign(__assign({}, backgroundStyle), { path: backgroundPath }),\n                capture: false,\n                zIndex: -1,\n                name: BACKGROUND_SHAPE,\n            });\n        }\n        var path;\n        if (style.radius && this.coordinate.isRect) {\n            path = getRectWithCornerRadius(this.parsePoints(cfg.points), this.coordinate, style.radius);\n        }\n        else {\n            path = this.parsePath(getIntervalRectPath(cfg.points, style.lineCap, this.coordinate));\n        }\n        var shape = group.addShape('path', {\n            attrs: __assign(__assign({}, style), { path: path }),\n            name: 'interval',\n        });\n        return backgroundCfg ? group : shape;\n    },\n    getMarker: function (markerCfg) {\n        var color = markerCfg.color, isInPolar = markerCfg.isInPolar;\n        if (isInPolar) {\n            return {\n                symbol: 'circle',\n                style: {\n                    r: 4.5,\n                    fill: color,\n                },\n            };\n        }\n        return {\n            symbol: 'square',\n            style: {\n                r: 4,\n                fill: color,\n            },\n        };\n    },\n});\nexport default IntervalShapeFactory;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}