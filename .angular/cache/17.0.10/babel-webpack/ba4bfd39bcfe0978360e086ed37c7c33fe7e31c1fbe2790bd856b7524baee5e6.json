{"ast":null,"code":"import { __spreadArrays } from \"tslib\";\nimport values from './values';\nimport memoize from './memoize';\nimport isString from './is-string';\nvar ctx;\n/**\n * 计算文本的宽度\n */\nexport default memoize(function (text, font) {\n  if (font === void 0) {\n    font = {};\n  }\n  var fontSize = font.fontSize,\n    fontFamily = font.fontFamily,\n    fontWeight = font.fontWeight,\n    fontStyle = font.fontStyle,\n    fontVariant = font.fontVariant;\n  if (!ctx) {\n    ctx = document.createElement('canvas').getContext('2d');\n  }\n  ctx.font = [fontStyle, fontVariant, fontWeight, fontSize + \"px\", fontFamily].join(' ');\n  return ctx.measureText(isString(text) ? text : '').width;\n}, function (text, font) {\n  if (font === void 0) {\n    font = {};\n  }\n  return __spreadArrays([text], values(font)).join('');\n});","map":{"version":3,"names":["__spreadArrays","values","memoize","isString","ctx","text","font","fontSize","fontFamily","fontWeight","fontStyle","fontVariant","document","createElement","getContext","join","measureText","width"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/util/esm/measure-text-width.js"],"sourcesContent":["import { __spreadArrays } from \"tslib\";\nimport values from './values';\nimport memoize from './memoize';\nimport isString from './is-string';\nvar ctx;\n/**\n * 计算文本的宽度\n */\nexport default memoize(function (text, font) {\n    if (font === void 0) { font = {}; }\n    var fontSize = font.fontSize, fontFamily = font.fontFamily, fontWeight = font.fontWeight, fontStyle = font.fontStyle, fontVariant = font.fontVariant;\n    if (!ctx) {\n        ctx = document.createElement('canvas').getContext('2d');\n    }\n    ctx.font = [fontStyle, fontVariant, fontWeight, fontSize + \"px\", fontFamily].join(' ');\n    return ctx.measureText(isString(text) ? text : '').width;\n}, function (text, font) {\n    if (font === void 0) { font = {}; }\n    return __spreadArrays([text], values(font)).join('');\n});\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,OAAO;AACtC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,QAAQ,MAAM,aAAa;AAClC,IAAIC,GAAG;AACP;AACA;AACA;AACA,eAAeF,OAAO,CAAC,UAAUG,IAAI,EAAEC,IAAI,EAAE;EACzC,IAAIA,IAAI,KAAK,KAAK,CAAC,EAAE;IAAEA,IAAI,GAAG,CAAC,CAAC;EAAE;EAClC,IAAIC,QAAQ,GAAGD,IAAI,CAACC,QAAQ;IAAEC,UAAU,GAAGF,IAAI,CAACE,UAAU;IAAEC,UAAU,GAAGH,IAAI,CAACG,UAAU;IAAEC,SAAS,GAAGJ,IAAI,CAACI,SAAS;IAAEC,WAAW,GAAGL,IAAI,CAACK,WAAW;EACpJ,IAAI,CAACP,GAAG,EAAE;IACNA,GAAG,GAAGQ,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC,CAACC,UAAU,CAAC,IAAI,CAAC;EAC3D;EACAV,GAAG,CAACE,IAAI,GAAG,CAACI,SAAS,EAAEC,WAAW,EAAEF,UAAU,EAAEF,QAAQ,GAAG,IAAI,EAAEC,UAAU,CAAC,CAACO,IAAI,CAAC,GAAG,CAAC;EACtF,OAAOX,GAAG,CAACY,WAAW,CAACb,QAAQ,CAACE,IAAI,CAAC,GAAGA,IAAI,GAAG,EAAE,CAAC,CAACY,KAAK;AAC5D,CAAC,EAAE,UAAUZ,IAAI,EAAEC,IAAI,EAAE;EACrB,IAAIA,IAAI,KAAK,KAAK,CAAC,EAAE;IAAEA,IAAI,GAAG,CAAC,CAAC;EAAE;EAClC,OAAON,cAAc,CAAC,CAACK,IAAI,CAAC,EAAEJ,MAAM,CAACK,IAAI,CAAC,CAAC,CAACS,IAAI,CAAC,EAAE,CAAC;AACxD,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}