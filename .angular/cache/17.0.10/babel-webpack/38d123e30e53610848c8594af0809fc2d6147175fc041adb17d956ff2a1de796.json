{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input, EventEmitter, Optional, Output, forwardRef, Directive, Inject, inject, TemplateRef, Host, ContentChildren, ViewChildren, ViewChild, NgModule } from '@angular/core';\nimport * as i1 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { __decorate } from 'tslib';\nimport { Subject, fromEvent, Subscription, defer, merge } from 'rxjs';\nimport { filter, takeUntil, tap, delay, switchMap } from 'rxjs/operators';\nimport { scrollIntoView, InputBoolean } from 'ng-zorro-antd/core/util';\nimport { UP_ARROW, DOWN_ARROW, ESCAPE, TAB, ENTER } from '@angular/cdk/keycodes';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { OverlayConfig, ConnectionPositionPair } from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { DOCUMENT, NgClass, NgFor, NgStyle, NgTemplateOutlet } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i2 from 'ng-zorro-antd/input';\nimport { slideMotion } from 'ng-zorro-antd/core/animation';\nimport * as i2$1 from 'ng-zorro-antd/core/no-animation';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\nimport { NZ_AFTER_NEXT_RENDER$ } from 'ng-zorro-antd/core/render';\nimport * as i1$2 from '@angular/cdk/bidi';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nfunction NzAutocompleteOptgroupComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.nzLabel);\n  }\n}\nconst _c0 = [[[\"nz-auto-option\"]]];\nconst _c1 = [\"nz-auto-option\"];\nconst _c2 = [\"*\"];\nconst _c3 = [\"panel\"];\nconst _c4 = [\"content\"];\nfunction NzAutocompleteComponent_ng_template_0_4_ng_template_0_Template(rf, ctx) {}\nfunction NzAutocompleteComponent_ng_template_0_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzAutocompleteComponent_ng_template_0_4_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction NzAutocompleteComponent_ng_template_0_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nfunction NzAutocompleteComponent_ng_template_0_ng_template_7_nz_auto_option_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nz-auto-option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"nzValue\", option_r9.value)(\"nzLabel\", option_r9.label);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", option_r9.label, \" \");\n  }\n}\nfunction NzAutocompleteComponent_ng_template_0_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzAutocompleteComponent_ng_template_0_ng_template_7_nz_auto_option_0_Template, 2, 3, \"nz-auto-option\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.normalizedDataSource);\n  }\n}\nfunction NzAutocompleteComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 0, 1);\n    i0.ɵɵlistener(\"@slideMotion.done\", function NzAutocompleteComponent_ng_template_0_Template_div_animation_slideMotion_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onAnimationEvent($event));\n    });\n    i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3);\n    i0.ɵɵtemplate(4, NzAutocompleteComponent_ng_template_0_4_Template, 1, 0, null, 4);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(5, NzAutocompleteComponent_ng_template_0_ng_template_5_Template, 1, 0, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor)(7, NzAutocompleteComponent_ng_template_0_ng_template_7_Template, 1, 1, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n  }\n  if (rf & 2) {\n    const _r4 = i0.ɵɵreference(6);\n    const _r6 = i0.ɵɵreference(8);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"ant-select-dropdown-hidden\", !ctx_r0.showPanel)(\"ant-select-dropdown-rtl\", ctx_r0.dir === \"rtl\");\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.nzOverlayClassName)(\"ngStyle\", ctx_r0.nzOverlayStyle)(\"nzNoAnimation\", ctx_r0.noAnimation == null ? null : ctx_r0.noAnimation.nzNoAnimation)(\"@slideMotion\", undefined)(\"@.disabled\", !!(ctx_r0.noAnimation == null ? null : ctx_r0.noAnimation.nzNoAnimation));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.nzDataSource ? _r6 : _r4);\n  }\n}\nclass NzAutocompleteOptgroupComponent {\n  constructor() {}\n  static {\n    this.ɵfac = function NzAutocompleteOptgroupComponent_Factory(t) {\n      return new (t || NzAutocompleteOptgroupComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzAutocompleteOptgroupComponent,\n      selectors: [[\"nz-auto-optgroup\"]],\n      inputs: {\n        nzLabel: \"nzLabel\"\n      },\n      exportAs: [\"nzAutoOptgroup\"],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c1,\n      decls: 3,\n      vars: 1,\n      consts: [[1, \"ant-select-item\", \"ant-select-item-group\"], [4, \"nzStringTemplateOutlet\"]],\n      template: function NzAutocompleteOptgroupComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c0);\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, NzAutocompleteOptgroupComponent_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵprojection(2);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.nzLabel);\n        }\n      },\n      dependencies: [NzOutletModule, i1.NzStringTemplateOutletDirective],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzAutocompleteOptgroupComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-auto-optgroup',\n      exportAs: 'nzAutoOptgroup',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      standalone: true,\n      imports: [NzOutletModule],\n      template: `\n    <div class=\"ant-select-item ant-select-item-group\">\n      <ng-container *nzStringTemplateOutlet=\"nzLabel\">{{ nzLabel }}</ng-container>\n    </div>\n    <ng-content select=\"nz-auto-option\"></ng-content>\n  `\n    }]\n  }], () => [], {\n    nzLabel: [{\n      type: Input\n    }]\n  });\n})();\nclass NzOptionSelectionChange {\n  constructor(source, isUserInput = false) {\n    this.source = source;\n    this.isUserInput = isUserInput;\n  }\n}\nclass NzAutocompleteOptionComponent {\n  constructor(ngZone, changeDetectorRef, element, nzAutocompleteOptgroupComponent) {\n    this.ngZone = ngZone;\n    this.changeDetectorRef = changeDetectorRef;\n    this.element = element;\n    this.nzAutocompleteOptgroupComponent = nzAutocompleteOptgroupComponent;\n    this.nzDisabled = false;\n    this.selectionChange = new EventEmitter();\n    this.mouseEntered = new EventEmitter();\n    this.active = false;\n    this.selected = false;\n    this.destroy$ = new Subject();\n  }\n  ngOnInit() {\n    this.ngZone.runOutsideAngular(() => {\n      fromEvent(this.element.nativeElement, 'mouseenter').pipe(filter(() => this.mouseEntered.observers.length > 0), takeUntil(this.destroy$)).subscribe(() => {\n        this.ngZone.run(() => this.mouseEntered.emit(this));\n      });\n      fromEvent(this.element.nativeElement, 'mousedown').pipe(takeUntil(this.destroy$)).subscribe(event => event.preventDefault());\n    });\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n  }\n  select(emit = true) {\n    this.selected = true;\n    this.changeDetectorRef.markForCheck();\n    if (emit) {\n      this.emitSelectionChangeEvent();\n    }\n  }\n  deselect() {\n    this.selected = false;\n    this.changeDetectorRef.markForCheck();\n    this.emitSelectionChangeEvent();\n  }\n  /** Git display label */\n  getLabel() {\n    return this.nzLabel || this.nzValue.toString();\n  }\n  /** Set active (only styles) */\n  setActiveStyles() {\n    if (!this.active) {\n      this.active = true;\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n  /** Unset active (only styles) */\n  setInactiveStyles() {\n    if (this.active) {\n      this.active = false;\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n  scrollIntoViewIfNeeded() {\n    scrollIntoView(this.element.nativeElement);\n  }\n  selectViaInteraction() {\n    if (!this.nzDisabled) {\n      this.selected = !this.selected;\n      if (this.selected) {\n        this.setActiveStyles();\n      } else {\n        this.setInactiveStyles();\n      }\n      this.emitSelectionChangeEvent(true);\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n  emitSelectionChangeEvent(isUserInput = false) {\n    this.selectionChange.emit(new NzOptionSelectionChange(this, isUserInput));\n  }\n  static {\n    this.ɵfac = function NzAutocompleteOptionComponent_Factory(t) {\n      return new (t || NzAutocompleteOptionComponent)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(NzAutocompleteOptgroupComponent, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzAutocompleteOptionComponent,\n      selectors: [[\"nz-auto-option\"]],\n      hostAttrs: [\"role\", \"menuitem\", 1, \"ant-select-item\", \"ant-select-item-option\"],\n      hostVars: 10,\n      hostBindings: function NzAutocompleteOptionComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function NzAutocompleteOptionComponent_click_HostBindingHandler() {\n            return ctx.selectViaInteraction();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-selected\", ctx.selected.toString())(\"aria-disabled\", ctx.nzDisabled.toString());\n          i0.ɵɵclassProp(\"ant-select-item-option-grouped\", ctx.nzAutocompleteOptgroupComponent)(\"ant-select-item-option-selected\", ctx.selected)(\"ant-select-item-option-active\", ctx.active)(\"ant-select-item-option-disabled\", ctx.nzDisabled);\n        }\n      },\n      inputs: {\n        nzValue: \"nzValue\",\n        nzLabel: \"nzLabel\",\n        nzDisabled: \"nzDisabled\"\n      },\n      outputs: {\n        selectionChange: \"selectionChange\",\n        mouseEntered: \"mouseEntered\"\n      },\n      exportAs: [\"nzAutoOption\"],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c2,\n      decls: 2,\n      vars: 0,\n      consts: [[1, \"ant-select-item-option-content\"]],\n      template: function NzAutocompleteOptionComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵprojection(1);\n          i0.ɵɵelementEnd();\n        }\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n__decorate([InputBoolean()], NzAutocompleteOptionComponent.prototype, \"nzDisabled\", void 0);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzAutocompleteOptionComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-auto-option',\n      exportAs: 'nzAutoOption',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      standalone: true,\n      template: `\n    <div class=\"ant-select-item-option-content\">\n      <ng-content></ng-content>\n    </div>\n  `,\n      host: {\n        role: 'menuitem',\n        class: 'ant-select-item ant-select-item-option',\n        '[class.ant-select-item-option-grouped]': 'nzAutocompleteOptgroupComponent',\n        '[class.ant-select-item-option-selected]': 'selected',\n        '[class.ant-select-item-option-active]': 'active',\n        '[class.ant-select-item-option-disabled]': 'nzDisabled',\n        '[attr.aria-selected]': 'selected.toString()',\n        '[attr.aria-disabled]': 'nzDisabled.toString()',\n        '(click)': 'selectViaInteraction()'\n      }\n    }]\n  }], () => [{\n    type: i0.NgZone\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: NzAutocompleteOptgroupComponent,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    nzValue: [{\n      type: Input\n    }],\n    nzLabel: [{\n      type: Input\n    }],\n    nzDisabled: [{\n      type: Input\n    }],\n    selectionChange: [{\n      type: Output\n    }],\n    mouseEntered: [{\n      type: Output\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst NZ_AUTOCOMPLETE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NzAutocompleteTriggerDirective),\n  multi: true\n};\nfunction getNzAutocompleteMissingPanelError() {\n  return Error('Attempting to open an undefined instance of `nz-autocomplete`. ' + 'Make sure that the id passed to the `nzAutocomplete` is correct and that ' + \"you're attempting to open it after the ngAfterContentInit hook.\");\n}\nclass NzAutocompleteTriggerDirective {\n  /** Current active option */\n  get activeOption() {\n    if (this.nzAutocomplete && this.nzAutocomplete.options.length) {\n      return this.nzAutocomplete.activeItem;\n    } else {\n      return null;\n    }\n  }\n  constructor(ngZone, elementRef, overlay, viewContainerRef, nzInputGroupWhitSuffixOrPrefixDirective, document) {\n    this.ngZone = ngZone;\n    this.elementRef = elementRef;\n    this.overlay = overlay;\n    this.viewContainerRef = viewContainerRef;\n    this.nzInputGroupWhitSuffixOrPrefixDirective = nzInputGroupWhitSuffixOrPrefixDirective;\n    this.document = document;\n    this.onChange = () => {};\n    this.onTouched = () => {};\n    this.panelOpen = false;\n    this.destroy$ = new Subject();\n    this.overlayRef = null;\n    this.portal = null;\n    this.previousValue = null;\n  }\n  ngAfterViewInit() {\n    if (this.nzAutocomplete) {\n      this.nzAutocomplete.animationStateChange.pipe(takeUntil(this.destroy$)).subscribe(event => {\n        if (event.toState === 'void') {\n          if (this.overlayRef) {\n            this.overlayRef.dispose();\n            this.overlayRef = null;\n          }\n        }\n      });\n    }\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.destroyPanel();\n  }\n  writeValue(value) {\n    this.ngZone.runOutsideAngular(() => Promise.resolve(null).then(() => this.setTriggerValue(value)));\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  setDisabledState(isDisabled) {\n    const element = this.elementRef.nativeElement;\n    element.disabled = isDisabled;\n    this.closePanel();\n  }\n  openPanel() {\n    this.previousValue = this.elementRef.nativeElement.value;\n    this.attachOverlay();\n    this.updateStatus();\n  }\n  closePanel() {\n    if (this.panelOpen) {\n      this.nzAutocomplete.isOpen = this.panelOpen = false;\n      if (this.overlayRef && this.overlayRef.hasAttached()) {\n        this.overlayRef.detach();\n        this.selectionChangeSubscription.unsubscribe();\n        this.overlayOutsideClickSubscription.unsubscribe();\n        this.optionsChangeSubscription.unsubscribe();\n        this.portal = null;\n      }\n    }\n  }\n  handleKeydown(event) {\n    const keyCode = event.keyCode;\n    const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n    if (keyCode === ESCAPE) {\n      event.preventDefault();\n    }\n    if (this.panelOpen && (keyCode === ESCAPE || keyCode === TAB)) {\n      // Reset value when tab / ESC close\n      if (this.activeOption && this.activeOption.getLabel() !== this.previousValue) {\n        this.setTriggerValue(this.previousValue);\n      }\n      this.closePanel();\n    } else if (this.panelOpen && keyCode === ENTER) {\n      if (this.nzAutocomplete.showPanel) {\n        event.preventDefault();\n        if (this.activeOption) {\n          this.activeOption.selectViaInteraction();\n        } else {\n          this.closePanel();\n        }\n      }\n    } else if (this.panelOpen && isArrowKey && this.nzAutocomplete.showPanel) {\n      event.stopPropagation();\n      event.preventDefault();\n      if (keyCode === UP_ARROW) {\n        this.nzAutocomplete.setPreviousItemActive();\n      } else {\n        this.nzAutocomplete.setNextItemActive();\n      }\n      if (this.activeOption) {\n        this.activeOption.scrollIntoViewIfNeeded();\n      }\n      this.doBackfill();\n    }\n  }\n  handleInput(event) {\n    const target = event.target;\n    const document = this.document;\n    let value = target.value;\n    if (target.type === 'number') {\n      value = value === '' ? null : parseFloat(value);\n    }\n    if (this.previousValue !== value) {\n      this.previousValue = value;\n      this.onChange(value);\n      if (this.canOpen() && document.activeElement === event.target) {\n        this.openPanel();\n      }\n    }\n  }\n  handleFocus() {\n    if (this.canOpen()) {\n      this.openPanel();\n    }\n  }\n  handleBlur() {\n    this.onTouched();\n  }\n  /**\n   * Subscription data source changes event\n   */\n  subscribeOptionsChange() {\n    const optionChanges = this.nzAutocomplete.options.changes.pipe(tap(() => this.positionStrategy.reapplyLastPosition()), delay(0));\n    return optionChanges.subscribe(() => {\n      this.resetActiveItem();\n      if (this.panelOpen) {\n        this.overlayRef.updatePosition();\n      }\n    });\n  }\n  /**\n   * Subscription option changes event and set the value\n   */\n  subscribeSelectionChange() {\n    return this.nzAutocomplete.selectionChange.subscribe(option => {\n      this.setValueAndClose(option);\n    });\n  }\n  subscribeOverlayOutsideClick() {\n    return this.overlayRef.outsidePointerEvents().pipe(filter(e => !this.elementRef.nativeElement.contains(e.target))).subscribe(() => {\n      this.closePanel();\n    });\n  }\n  attachOverlay() {\n    if (!this.nzAutocomplete) {\n      throw getNzAutocompleteMissingPanelError();\n    }\n    if (!this.portal && this.nzAutocomplete.template) {\n      this.portal = new TemplatePortal(this.nzAutocomplete.template, this.viewContainerRef);\n    }\n    if (!this.overlayRef) {\n      this.overlayRef = this.overlay.create(this.getOverlayConfig());\n    }\n    if (this.overlayRef && !this.overlayRef.hasAttached()) {\n      this.overlayRef.attach(this.portal);\n      this.selectionChangeSubscription = this.subscribeSelectionChange();\n      this.optionsChangeSubscription = this.subscribeOptionsChange();\n      this.overlayOutsideClickSubscription = this.subscribeOverlayOutsideClick();\n      this.overlayRef.detachments().pipe(takeUntil(this.destroy$)).subscribe(() => {\n        this.closePanel();\n      });\n    }\n    this.nzAutocomplete.isOpen = this.panelOpen = true;\n  }\n  updateStatus() {\n    if (this.overlayRef) {\n      this.overlayRef.updateSize({\n        width: this.nzAutocomplete.nzWidth || this.getHostWidth()\n      });\n    }\n    this.nzAutocomplete.setVisibility();\n    this.resetActiveItem();\n    if (this.activeOption) {\n      this.activeOption.scrollIntoViewIfNeeded();\n    }\n  }\n  destroyPanel() {\n    if (this.overlayRef) {\n      this.closePanel();\n    }\n  }\n  getOverlayConfig() {\n    return new OverlayConfig({\n      positionStrategy: this.getOverlayPosition(),\n      disposeOnNavigation: true,\n      scrollStrategy: this.overlay.scrollStrategies.reposition(),\n      // default host element width\n      width: this.nzAutocomplete.nzWidth || this.getHostWidth()\n    });\n  }\n  getConnectedElement() {\n    return this.nzInputGroupWhitSuffixOrPrefixDirective ? this.nzInputGroupWhitSuffixOrPrefixDirective.elementRef : this.elementRef;\n  }\n  getHostWidth() {\n    return this.getConnectedElement().nativeElement.getBoundingClientRect().width;\n  }\n  getOverlayPosition() {\n    const positions = [new ConnectionPositionPair({\n      originX: 'start',\n      originY: 'bottom'\n    }, {\n      overlayX: 'start',\n      overlayY: 'top'\n    }), new ConnectionPositionPair({\n      originX: 'start',\n      originY: 'top'\n    }, {\n      overlayX: 'start',\n      overlayY: 'bottom'\n    })];\n    this.positionStrategy = this.overlay.position().flexibleConnectedTo(this.getConnectedElement()).withFlexibleDimensions(false).withPush(false).withPositions(positions).withTransformOriginOn('.ant-select-dropdown');\n    return this.positionStrategy;\n  }\n  resetActiveItem() {\n    const index = this.nzAutocomplete.getOptionIndex(this.previousValue);\n    this.nzAutocomplete.clearSelectedOptions(null, true);\n    if (index !== -1) {\n      this.nzAutocomplete.setActiveItem(index);\n      this.nzAutocomplete.activeItem.select(false);\n    } else {\n      this.nzAutocomplete.setActiveItem(this.nzAutocomplete.nzDefaultActiveFirstOption ? 0 : -1);\n    }\n  }\n  setValueAndClose(option) {\n    const value = option.nzValue;\n    this.setTriggerValue(option.getLabel());\n    this.onChange(value);\n    this.elementRef.nativeElement.focus();\n    this.closePanel();\n  }\n  setTriggerValue(value) {\n    const option = this.nzAutocomplete.getOption(value);\n    const displayValue = option ? option.getLabel() : value;\n    this.elementRef.nativeElement.value = displayValue != null ? displayValue : '';\n    if (!this.nzAutocomplete.nzBackfill) {\n      this.previousValue = displayValue;\n    }\n  }\n  doBackfill() {\n    if (this.nzAutocomplete.nzBackfill && this.nzAutocomplete.activeItem) {\n      this.setTriggerValue(this.nzAutocomplete.activeItem.getLabel());\n    }\n  }\n  canOpen() {\n    const element = this.elementRef.nativeElement;\n    return !element.readOnly && !element.disabled;\n  }\n  static {\n    this.ɵfac = function NzAutocompleteTriggerDirective_Factory(t) {\n      return new (t || NzAutocompleteTriggerDirective)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1$1.Overlay), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i2.NzInputGroupWhitSuffixOrPrefixDirective, 8), i0.ɵɵdirectiveInject(DOCUMENT, 8));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NzAutocompleteTriggerDirective,\n      selectors: [[\"input\", \"nzAutocomplete\", \"\"], [\"textarea\", \"nzAutocomplete\", \"\"]],\n      hostAttrs: [\"autocomplete\", \"off\", \"aria-autocomplete\", \"list\"],\n      hostBindings: function NzAutocompleteTriggerDirective_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"focusin\", function NzAutocompleteTriggerDirective_focusin_HostBindingHandler() {\n            return ctx.handleFocus();\n          })(\"blur\", function NzAutocompleteTriggerDirective_blur_HostBindingHandler() {\n            return ctx.handleBlur();\n          })(\"input\", function NzAutocompleteTriggerDirective_input_HostBindingHandler($event) {\n            return ctx.handleInput($event);\n          })(\"keydown\", function NzAutocompleteTriggerDirective_keydown_HostBindingHandler($event) {\n            return ctx.handleKeydown($event);\n          });\n        }\n      },\n      inputs: {\n        nzAutocomplete: \"nzAutocomplete\"\n      },\n      exportAs: [\"nzAutocompleteTrigger\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([NZ_AUTOCOMPLETE_VALUE_ACCESSOR])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzAutocompleteTriggerDirective, [{\n    type: Directive,\n    args: [{\n      selector: `input[nzAutocomplete], textarea[nzAutocomplete]`,\n      exportAs: 'nzAutocompleteTrigger',\n      providers: [NZ_AUTOCOMPLETE_VALUE_ACCESSOR],\n      standalone: true,\n      host: {\n        autocomplete: 'off',\n        'aria-autocomplete': 'list',\n        '(focusin)': 'handleFocus()',\n        '(blur)': 'handleBlur()',\n        '(input)': 'handleInput($event)',\n        '(keydown)': 'handleKeydown($event)'\n      }\n    }]\n  }], () => [{\n    type: i0.NgZone\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i1$1.Overlay\n  }, {\n    type: i0.ViewContainerRef\n  }, {\n    type: i2.NzInputGroupWhitSuffixOrPrefixDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], {\n    nzAutocomplete: [{\n      type: Input\n    }]\n  });\n})();\nfunction normalizeDataSource(value) {\n  return value?.map(item => {\n    if (typeof item === 'number' || typeof item === 'string') {\n      return {\n        label: item.toString(),\n        value: item.toString()\n      };\n    }\n    return item;\n  });\n}\nclass NzAutocompleteComponent {\n  /**\n   * Options accessor, its source may be content or dataSource\n   */\n  get options() {\n    // first dataSource\n    if (this.nzDataSource) {\n      return this.fromDataSourceOptions;\n    } else {\n      return this.fromContentOptions;\n    }\n  }\n  constructor(changeDetectorRef, directionality, noAnimation) {\n    this.changeDetectorRef = changeDetectorRef;\n    this.directionality = directionality;\n    this.noAnimation = noAnimation;\n    this.nzOverlayClassName = '';\n    this.nzOverlayStyle = {};\n    this.nzDefaultActiveFirstOption = true;\n    this.nzBackfill = false;\n    this.compareWith = (o1, o2) => o1 === o2;\n    this.selectionChange = new EventEmitter();\n    this.showPanel = true;\n    this.isOpen = false;\n    this.activeItem = null;\n    this.dir = 'ltr';\n    this.normalizedDataSource = [];\n    this.destroy$ = new Subject();\n    this.animationStateChange = new EventEmitter();\n    this.activeItemIndex = -1;\n    this.selectionChangeSubscription = Subscription.EMPTY;\n    this.optionMouseEnterSubscription = Subscription.EMPTY;\n    this.dataSourceChangeSubscription = Subscription.EMPTY;\n    /** Options changes listener */\n    this.optionSelectionChanges = defer(() => {\n      if (this.options) {\n        return merge(...this.options.map(option => option.selectionChange));\n      }\n      return this.afterNextRender$.pipe(switchMap(() => this.optionSelectionChanges));\n    });\n    this.optionMouseEnter = defer(() => {\n      if (this.options) {\n        return merge(...this.options.map(option => option.mouseEntered));\n      }\n      return this.afterNextRender$.pipe(switchMap(() => this.optionMouseEnter));\n    });\n    this.afterNextRender$ = inject(NZ_AFTER_NEXT_RENDER$);\n  }\n  ngOnInit() {\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n      this.changeDetectorRef.detectChanges();\n    });\n    this.dir = this.directionality.value;\n  }\n  ngOnChanges(changes) {\n    const {\n      nzDataSource\n    } = changes;\n    if (nzDataSource) {\n      this.normalizedDataSource = normalizeDataSource(nzDataSource.currentValue);\n    }\n  }\n  onAnimationEvent(event) {\n    this.animationStateChange.emit(event);\n  }\n  ngAfterContentInit() {\n    if (!this.nzDataSource) {\n      this.optionsInit();\n    }\n  }\n  ngAfterViewInit() {\n    if (this.nzDataSource) {\n      this.optionsInit();\n    }\n  }\n  ngOnDestroy() {\n    this.dataSourceChangeSubscription.unsubscribe();\n    this.selectionChangeSubscription.unsubscribe();\n    this.optionMouseEnterSubscription.unsubscribe();\n    // Caretaker note: we have to set these subscriptions to `null` since these will be closed subscriptions, but they\n    // still keep references to destinations (which are `SafeSubscriber`s). Destinations keep referencing `next` functions,\n    // which we pass, for instance, to `this.optionSelectionChanges.subscribe(...)`.\n    this.dataSourceChangeSubscription = this.selectionChangeSubscription = this.optionMouseEnterSubscription = null;\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  setVisibility() {\n    this.showPanel = !!this.options.length;\n    this.changeDetectorRef.markForCheck();\n  }\n  setActiveItem(index) {\n    const activeItem = this.options.get(index);\n    if (activeItem && !activeItem.active) {\n      this.activeItem = activeItem;\n      this.activeItemIndex = index;\n      this.clearSelectedOptions(this.activeItem);\n      this.activeItem.setActiveStyles();\n    } else {\n      this.activeItem = null;\n      this.activeItemIndex = -1;\n      this.clearSelectedOptions();\n    }\n    this.changeDetectorRef.markForCheck();\n  }\n  setNextItemActive() {\n    const nextIndex = this.activeItemIndex + 1 <= this.options.length - 1 ? this.activeItemIndex + 1 : 0;\n    this.setActiveItem(nextIndex);\n  }\n  setPreviousItemActive() {\n    const previousIndex = this.activeItemIndex - 1 < 0 ? this.options.length - 1 : this.activeItemIndex - 1;\n    this.setActiveItem(previousIndex);\n  }\n  getOptionIndex(value) {\n    return this.options.reduce((result, current, index) => result === -1 ? this.compareWith(value, current.nzValue) ? index : -1 : result, -1);\n  }\n  getOption(value) {\n    return this.options.find(item => this.compareWith(value, item.nzValue)) || null;\n  }\n  optionsInit() {\n    this.setVisibility();\n    this.subscribeOptionChanges();\n    const changes = this.nzDataSource ? this.fromDataSourceOptions.changes : this.fromContentOptions.changes;\n    // async\n    this.dataSourceChangeSubscription = changes.subscribe(e => {\n      if (!e.dirty && this.isOpen) {\n        setTimeout(() => this.setVisibility());\n      }\n      this.subscribeOptionChanges();\n    });\n  }\n  /**\n   * Clear the status of options\n   */\n  clearSelectedOptions(skip, deselect = false) {\n    this.options.forEach(option => {\n      if (option !== skip) {\n        if (deselect) {\n          option.deselect();\n        }\n        option.setInactiveStyles();\n      }\n    });\n  }\n  subscribeOptionChanges() {\n    this.selectionChangeSubscription.unsubscribe();\n    this.selectionChangeSubscription = this.optionSelectionChanges.pipe(filter(event => event.isUserInput)).subscribe(event => {\n      event.source.select();\n      event.source.setActiveStyles();\n      this.activeItem = event.source;\n      this.activeItemIndex = this.getOptionIndex(this.activeItem.nzValue);\n      this.clearSelectedOptions(event.source, true);\n      this.selectionChange.emit(event.source);\n    });\n    this.optionMouseEnterSubscription.unsubscribe();\n    this.optionMouseEnterSubscription = this.optionMouseEnter.subscribe(event => {\n      event.setActiveStyles();\n      this.activeItem = event;\n      this.activeItemIndex = this.getOptionIndex(this.activeItem.nzValue);\n      this.clearSelectedOptions(event);\n    });\n  }\n  static {\n    this.ɵfac = function NzAutocompleteComponent_Factory(t) {\n      return new (t || NzAutocompleteComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$2.Directionality, 8), i0.ɵɵdirectiveInject(i2$1.NzNoAnimationDirective, 9));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzAutocompleteComponent,\n      selectors: [[\"nz-autocomplete\"]],\n      contentQueries: function NzAutocompleteComponent_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, NzAutocompleteOptionComponent, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fromContentOptions = _t);\n        }\n      },\n      viewQuery: function NzAutocompleteComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(TemplateRef, 5);\n          i0.ɵɵviewQuery(_c3, 5);\n          i0.ɵɵviewQuery(_c4, 5);\n          i0.ɵɵviewQuery(NzAutocompleteOptionComponent, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.content = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fromDataSourceOptions = _t);\n        }\n      },\n      inputs: {\n        nzWidth: \"nzWidth\",\n        nzOverlayClassName: \"nzOverlayClassName\",\n        nzOverlayStyle: \"nzOverlayStyle\",\n        nzDefaultActiveFirstOption: \"nzDefaultActiveFirstOption\",\n        nzBackfill: \"nzBackfill\",\n        compareWith: \"compareWith\",\n        nzDataSource: \"nzDataSource\"\n      },\n      outputs: {\n        selectionChange: \"selectionChange\"\n      },\n      exportAs: [\"nzAutocomplete\"],\n      standalone: true,\n      features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c2,\n      decls: 1,\n      vars: 0,\n      consts: [[1, \"ant-select-dropdown\", \"ant-select-dropdown-placement-bottomLeft\", 3, \"ngClass\", \"ngStyle\", \"nzNoAnimation\"], [\"panel\", \"\"], [2, \"max-height\", \"256px\", \"overflow-y\", \"auto\", \"overflow-anchor\", \"none\"], [2, \"display\", \"flex\", \"flex-direction\", \"column\"], [4, \"ngTemplateOutlet\"], [\"contentTemplate\", \"\"], [\"optionsTemplate\", \"\"], [3, \"nzValue\", \"nzLabel\", 4, \"ngFor\", \"ngForOf\"], [3, \"nzValue\", \"nzLabel\"]],\n      template: function NzAutocompleteComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵtemplate(0, NzAutocompleteComponent_ng_template_0_Template, 9, 10, \"ng-template\");\n        }\n      },\n      dependencies: [NgClass, NgFor, NgStyle, NgTemplateOutlet, NzAutocompleteOptionComponent, NzNoAnimationDirective],\n      encapsulation: 2,\n      data: {\n        animation: [slideMotion]\n      },\n      changeDetection: 0\n    });\n  }\n}\n__decorate([InputBoolean()], NzAutocompleteComponent.prototype, \"nzDefaultActiveFirstOption\", void 0);\n__decorate([InputBoolean()], NzAutocompleteComponent.prototype, \"nzBackfill\", void 0);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzAutocompleteComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-autocomplete',\n      exportAs: 'nzAutocomplete',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      standalone: true,\n      imports: [NgClass, NgFor, NgStyle, NgTemplateOutlet, NzAutocompleteOptionComponent, NzNoAnimationDirective],\n      template: `\n    <ng-template>\n      <div\n        #panel\n        class=\"ant-select-dropdown ant-select-dropdown-placement-bottomLeft\"\n        [class.ant-select-dropdown-hidden]=\"!showPanel\"\n        [class.ant-select-dropdown-rtl]=\"dir === 'rtl'\"\n        [ngClass]=\"nzOverlayClassName\"\n        [ngStyle]=\"nzOverlayStyle\"\n        [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n        @slideMotion\n        (@slideMotion.done)=\"onAnimationEvent($event)\"\n        [@.disabled]=\"!!noAnimation?.nzNoAnimation\"\n      >\n        <div style=\"max-height: 256px; overflow-y: auto; overflow-anchor: none;\">\n          <div style=\"display: flex; flex-direction: column;\">\n            <ng-template *ngTemplateOutlet=\"nzDataSource ? optionsTemplate : contentTemplate\"></ng-template>\n          </div>\n        </div>\n      </div>\n      <ng-template #contentTemplate>\n        <ng-content></ng-content>\n      </ng-template>\n      <ng-template #optionsTemplate>\n        <nz-auto-option *ngFor=\"let option of normalizedDataSource\" [nzValue]=\"option.value\" [nzLabel]=\"option.label\">\n          {{ option.label }}\n        </nz-auto-option>\n      </ng-template>\n    </ng-template>\n  `,\n      animations: [slideMotion]\n    }]\n  }], () => [{\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i1$2.Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i2$1.NzNoAnimationDirective,\n    decorators: [{\n      type: Host\n    }, {\n      type: Optional\n    }]\n  }], {\n    nzWidth: [{\n      type: Input\n    }],\n    nzOverlayClassName: [{\n      type: Input\n    }],\n    nzOverlayStyle: [{\n      type: Input\n    }],\n    nzDefaultActiveFirstOption: [{\n      type: Input\n    }],\n    nzBackfill: [{\n      type: Input\n    }],\n    compareWith: [{\n      type: Input\n    }],\n    nzDataSource: [{\n      type: Input\n    }],\n    selectionChange: [{\n      type: Output\n    }],\n    fromContentOptions: [{\n      type: ContentChildren,\n      args: [NzAutocompleteOptionComponent, {\n        descendants: true\n      }]\n    }],\n    fromDataSourceOptions: [{\n      type: ViewChildren,\n      args: [NzAutocompleteOptionComponent]\n    }],\n    template: [{\n      type: ViewChild,\n      args: [TemplateRef, {\n        static: false\n      }]\n    }],\n    panel: [{\n      type: ViewChild,\n      args: ['panel', {\n        static: false\n      }]\n    }],\n    content: [{\n      type: ViewChild,\n      args: ['content', {\n        static: false\n      }]\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzAutocompleteModule {\n  static {\n    this.ɵfac = function NzAutocompleteModule_Factory(t) {\n      return new (t || NzAutocompleteModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NzAutocompleteModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [NzAutocompleteOptgroupComponent]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzAutocompleteModule, [{\n    type: NgModule,\n    args: [{\n      exports: [NzAutocompleteComponent, NzAutocompleteOptionComponent, NzAutocompleteTriggerDirective, NzAutocompleteOptgroupComponent],\n      imports: [NzAutocompleteComponent, NzAutocompleteOptionComponent, NzAutocompleteTriggerDirective, NzAutocompleteOptgroupComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NZ_AUTOCOMPLETE_VALUE_ACCESSOR, NzAutocompleteComponent, NzAutocompleteModule, NzAutocompleteOptgroupComponent, NzAutocompleteOptionComponent, NzAutocompleteTriggerDirective, NzOptionSelectionChange, getNzAutocompleteMissingPanelError };","map":{"version":3,"names":["i0","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","EventEmitter","Optional","Output","forwardRef","Directive","Inject","inject","TemplateRef","Host","ContentChildren","ViewChildren","ViewChild","NgModule","i1","NzOutletModule","__decorate","Subject","fromEvent","Subscription","defer","merge","filter","takeUntil","tap","delay","switchMap","scrollIntoView","InputBoolean","UP_ARROW","DOWN_ARROW","ESCAPE","TAB","ENTER","i1$1","OverlayConfig","ConnectionPositionPair","TemplatePortal","DOCUMENT","NgClass","NgFor","NgStyle","NgTemplateOutlet","NG_VALUE_ACCESSOR","i2","slideMotion","i2$1","NzNoAnimationDirective","NZ_AFTER_NEXT_RENDER$","i1$2","NzAutocompleteOptgroupComponent_ng_container_1_Template","rf","ctx","ɵɵelementContainerStart","ɵɵtext","ɵɵelementContainerEnd","ctx_r0","ɵɵnextContext","ɵɵadvance","ɵɵtextInterpolate","nzLabel","_c0","_c1","_c2","_c3","_c4","NzAutocompleteComponent_ng_template_0_4_ng_template_0_Template","NzAutocompleteComponent_ng_template_0_4_Template","ɵɵtemplate","NzAutocompleteComponent_ng_template_0_ng_template_5_Template","ɵɵprojection","NzAutocompleteComponent_ng_template_0_ng_template_7_nz_auto_option_0_Template","ɵɵelementStart","ɵɵelementEnd","option_r9","$implicit","ɵɵproperty","value","label","ɵɵtextInterpolate1","NzAutocompleteComponent_ng_template_0_ng_template_7_Template","ctx_r5","normalizedDataSource","NzAutocompleteComponent_ng_template_0_Template","_r11","ɵɵgetCurrentView","ɵɵlistener","NzAutocompleteComponent_ng_template_0_Template_div_animation_slideMotion_done_0_listener","$event","ɵɵrestoreView","ctx_r10","ɵɵresetView","onAnimationEvent","ɵɵtemplateRefExtractor","_r4","ɵɵreference","_r6","ɵɵclassProp","showPanel","dir","nzOverlayClassName","nzOverlayStyle","noAnimation","nzNoAnimation","undefined","nzDataSource","NzAutocompleteOptgroupComponent","constructor","ɵfac","NzAutocompleteOptgroupComponent_Factory","t","ɵcmp","ɵɵdefineComponent","type","selectors","inputs","exportAs","standalone","features","ɵɵStandaloneFeature","ngContentSelectors","decls","vars","consts","template","NzAutocompleteOptgroupComponent_Template","ɵɵprojectionDef","dependencies","NzStringTemplateOutletDirective","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","preserveWhitespaces","OnPush","None","imports","NzOptionSelectionChange","source","isUserInput","NzAutocompleteOptionComponent","ngZone","changeDetectorRef","element","nzAutocompleteOptgroupComponent","nzDisabled","selectionChange","mouseEntered","active","selected","destroy$","ngOnInit","runOutsideAngular","nativeElement","pipe","observers","length","subscribe","run","emit","event","preventDefault","ngOnDestroy","next","select","markForCheck","emitSelectionChangeEvent","deselect","getLabel","nzValue","toString","setActiveStyles","setInactiveStyles","scrollIntoViewIfNeeded","selectViaInteraction","NzAutocompleteOptionComponent_Factory","ɵɵdirectiveInject","NgZone","ChangeDetectorRef","ElementRef","hostAttrs","hostVars","hostBindings","NzAutocompleteOptionComponent_HostBindings","NzAutocompleteOptionComponent_click_HostBindingHandler","ɵɵattribute","outputs","NzAutocompleteOptionComponent_Template","prototype","host","role","class","decorators","NZ_AUTOCOMPLETE_VALUE_ACCESSOR","provide","useExisting","NzAutocompleteTriggerDirective","multi","getNzAutocompleteMissingPanelError","Error","activeOption","nzAutocomplete","options","activeItem","elementRef","overlay","viewContainerRef","nzInputGroupWhitSuffixOrPrefixDirective","document","onChange","onTouched","panelOpen","overlayRef","portal","previousValue","ngAfterViewInit","animationStateChange","toState","dispose","complete","destroyPanel","writeValue","Promise","resolve","then","setTriggerValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","disabled","closePanel","openPanel","attachOverlay","updateStatus","isOpen","hasAttached","detach","selectionChangeSubscription","unsubscribe","overlayOutsideClickSubscription","optionsChangeSubscription","handleKeydown","keyCode","isArrowKey","stopPropagation","setPreviousItemActive","setNextItemActive","doBackfill","handleInput","target","parseFloat","canOpen","activeElement","handleFocus","handleBlur","subscribeOptionsChange","optionChanges","changes","positionStrategy","reapplyLastPosition","resetActiveItem","updatePosition","subscribeSelectionChange","option","setValueAndClose","subscribeOverlayOutsideClick","outsidePointerEvents","e","contains","create","getOverlayConfig","attach","detachments","updateSize","width","nzWidth","getHostWidth","setVisibility","getOverlayPosition","disposeOnNavigation","scrollStrategy","scrollStrategies","reposition","getConnectedElement","getBoundingClientRect","positions","originX","originY","overlayX","overlayY","position","flexibleConnectedTo","withFlexibleDimensions","withPush","withPositions","withTransformOriginOn","index","getOptionIndex","clearSelectedOptions","setActiveItem","nzDefaultActiveFirstOption","focus","getOption","displayValue","nzBackfill","readOnly","NzAutocompleteTriggerDirective_Factory","Overlay","ViewContainerRef","NzInputGroupWhitSuffixOrPrefixDirective","ɵdir","ɵɵdefineDirective","NzAutocompleteTriggerDirective_HostBindings","NzAutocompleteTriggerDirective_focusin_HostBindingHandler","NzAutocompleteTriggerDirective_blur_HostBindingHandler","NzAutocompleteTriggerDirective_input_HostBindingHandler","NzAutocompleteTriggerDirective_keydown_HostBindingHandler","ɵɵProvidersFeature","providers","autocomplete","normalizeDataSource","map","item","NzAutocompleteComponent","fromDataSourceOptions","fromContentOptions","directionality","compareWith","o1","o2","activeItemIndex","EMPTY","optionMouseEnterSubscription","dataSourceChangeSubscription","optionSelectionChanges","afterNextRender$","optionMouseEnter","change","direction","detectChanges","ngOnChanges","currentValue","ngAfterContentInit","optionsInit","get","nextIndex","previousIndex","reduce","result","current","find","subscribeOptionChanges","dirty","setTimeout","skip","forEach","NzAutocompleteComponent_Factory","Directionality","contentQueries","NzAutocompleteComponent_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","viewQuery","NzAutocompleteComponent_Query","ɵɵviewQuery","first","panel","content","ɵɵNgOnChangesFeature","NzAutocompleteComponent_Template","data","animation","animations","descendants","static","NzAutocompleteModule","NzAutocompleteModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","exports"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-auto-complete.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input, EventEmitter, Optional, Output, forwardRef, Directive, Inject, inject, TemplateRef, Host, ContentChildren, ViewChildren, ViewChild, NgModule } from '@angular/core';\nimport * as i1 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { __decorate } from 'tslib';\nimport { Subject, fromEvent, Subscription, defer, merge } from 'rxjs';\nimport { filter, takeUntil, tap, delay, switchMap } from 'rxjs/operators';\nimport { scrollIntoView, InputBoolean } from 'ng-zorro-antd/core/util';\nimport { UP_ARROW, DOWN_ARROW, ESCAPE, TAB, ENTER } from '@angular/cdk/keycodes';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { OverlayConfig, ConnectionPositionPair } from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { DOCUMENT, NgClass, NgFor, NgStyle, NgTemplateOutlet } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i2 from 'ng-zorro-antd/input';\nimport { slideMotion } from 'ng-zorro-antd/core/animation';\nimport * as i2$1 from 'ng-zorro-antd/core/no-animation';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\nimport { NZ_AFTER_NEXT_RENDER$ } from 'ng-zorro-antd/core/render';\nimport * as i1$2 from '@angular/cdk/bidi';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzAutocompleteOptgroupComponent {\n    constructor() { }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzAutocompleteOptgroupComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.8\", type: NzAutocompleteOptgroupComponent, isStandalone: true, selector: \"nz-auto-optgroup\", inputs: { nzLabel: \"nzLabel\" }, exportAs: [\"nzAutoOptgroup\"], ngImport: i0, template: `\n    <div class=\"ant-select-item ant-select-item-group\">\n      <ng-container *nzStringTemplateOutlet=\"nzLabel\">{{ nzLabel }}</ng-container>\n    </div>\n    <ng-content select=\"nz-auto-option\"></ng-content>\n  `, isInline: true, dependencies: [{ kind: \"ngmodule\", type: NzOutletModule }, { kind: \"directive\", type: i1.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzAutocompleteOptgroupComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-auto-optgroup',\n                    exportAs: 'nzAutoOptgroup',\n                    preserveWhitespaces: false,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    standalone: true,\n                    imports: [NzOutletModule],\n                    template: `\n    <div class=\"ant-select-item ant-select-item-group\">\n      <ng-container *nzStringTemplateOutlet=\"nzLabel\">{{ nzLabel }}</ng-container>\n    </div>\n    <ng-content select=\"nz-auto-option\"></ng-content>\n  `\n                }]\n        }], ctorParameters: () => [], propDecorators: { nzLabel: [{\n                type: Input\n            }] } });\n\nclass NzOptionSelectionChange {\n    constructor(source, isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\nclass NzAutocompleteOptionComponent {\n    constructor(ngZone, changeDetectorRef, element, nzAutocompleteOptgroupComponent) {\n        this.ngZone = ngZone;\n        this.changeDetectorRef = changeDetectorRef;\n        this.element = element;\n        this.nzAutocompleteOptgroupComponent = nzAutocompleteOptgroupComponent;\n        this.nzDisabled = false;\n        this.selectionChange = new EventEmitter();\n        this.mouseEntered = new EventEmitter();\n        this.active = false;\n        this.selected = false;\n        this.destroy$ = new Subject();\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            fromEvent(this.element.nativeElement, 'mouseenter')\n                .pipe(filter(() => this.mouseEntered.observers.length > 0), takeUntil(this.destroy$))\n                .subscribe(() => {\n                this.ngZone.run(() => this.mouseEntered.emit(this));\n            });\n            fromEvent(this.element.nativeElement, 'mousedown')\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(event => event.preventDefault());\n        });\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n    }\n    select(emit = true) {\n        this.selected = true;\n        this.changeDetectorRef.markForCheck();\n        if (emit) {\n            this.emitSelectionChangeEvent();\n        }\n    }\n    deselect() {\n        this.selected = false;\n        this.changeDetectorRef.markForCheck();\n        this.emitSelectionChangeEvent();\n    }\n    /** Git display label */\n    getLabel() {\n        return this.nzLabel || this.nzValue.toString();\n    }\n    /** Set active (only styles) */\n    setActiveStyles() {\n        if (!this.active) {\n            this.active = true;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n    /** Unset active (only styles) */\n    setInactiveStyles() {\n        if (this.active) {\n            this.active = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n    scrollIntoViewIfNeeded() {\n        scrollIntoView(this.element.nativeElement);\n    }\n    selectViaInteraction() {\n        if (!this.nzDisabled) {\n            this.selected = !this.selected;\n            if (this.selected) {\n                this.setActiveStyles();\n            }\n            else {\n                this.setInactiveStyles();\n            }\n            this.emitSelectionChangeEvent(true);\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n    emitSelectionChangeEvent(isUserInput = false) {\n        this.selectionChange.emit(new NzOptionSelectionChange(this, isUserInput));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzAutocompleteOptionComponent, deps: [{ token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: NzAutocompleteOptgroupComponent, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.8\", type: NzAutocompleteOptionComponent, isStandalone: true, selector: \"nz-auto-option\", inputs: { nzValue: \"nzValue\", nzLabel: \"nzLabel\", nzDisabled: \"nzDisabled\" }, outputs: { selectionChange: \"selectionChange\", mouseEntered: \"mouseEntered\" }, host: { attributes: { \"role\": \"menuitem\" }, listeners: { \"click\": \"selectViaInteraction()\" }, properties: { \"class.ant-select-item-option-grouped\": \"nzAutocompleteOptgroupComponent\", \"class.ant-select-item-option-selected\": \"selected\", \"class.ant-select-item-option-active\": \"active\", \"class.ant-select-item-option-disabled\": \"nzDisabled\", \"attr.aria-selected\": \"selected.toString()\", \"attr.aria-disabled\": \"nzDisabled.toString()\" }, classAttribute: \"ant-select-item ant-select-item-option\" }, exportAs: [\"nzAutoOption\"], ngImport: i0, template: `\n    <div class=\"ant-select-item-option-content\">\n      <ng-content></ng-content>\n    </div>\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\n__decorate([\n    InputBoolean()\n], NzAutocompleteOptionComponent.prototype, \"nzDisabled\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzAutocompleteOptionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-auto-option',\n                    exportAs: 'nzAutoOption',\n                    preserveWhitespaces: false,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    standalone: true,\n                    template: `\n    <div class=\"ant-select-item-option-content\">\n      <ng-content></ng-content>\n    </div>\n  `,\n                    host: {\n                        role: 'menuitem',\n                        class: 'ant-select-item ant-select-item-option',\n                        '[class.ant-select-item-option-grouped]': 'nzAutocompleteOptgroupComponent',\n                        '[class.ant-select-item-option-selected]': 'selected',\n                        '[class.ant-select-item-option-active]': 'active',\n                        '[class.ant-select-item-option-disabled]': 'nzDisabled',\n                        '[attr.aria-selected]': 'selected.toString()',\n                        '[attr.aria-disabled]': 'nzDisabled.toString()',\n                        '(click)': 'selectViaInteraction()'\n                    }\n                }]\n        }], ctorParameters: () => [{ type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: NzAutocompleteOptgroupComponent, decorators: [{\n                    type: Optional\n                }] }], propDecorators: { nzValue: [{\n                type: Input\n            }], nzLabel: [{\n                type: Input\n            }], nzDisabled: [{\n                type: Input\n            }], selectionChange: [{\n                type: Output\n            }], mouseEntered: [{\n                type: Output\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst NZ_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NzAutocompleteTriggerDirective),\n    multi: true\n};\nfunction getNzAutocompleteMissingPanelError() {\n    return Error('Attempting to open an undefined instance of `nz-autocomplete`. ' +\n        'Make sure that the id passed to the `nzAutocomplete` is correct and that ' +\n        \"you're attempting to open it after the ngAfterContentInit hook.\");\n}\nclass NzAutocompleteTriggerDirective {\n    /** Current active option */\n    get activeOption() {\n        if (this.nzAutocomplete && this.nzAutocomplete.options.length) {\n            return this.nzAutocomplete.activeItem;\n        }\n        else {\n            return null;\n        }\n    }\n    constructor(ngZone, elementRef, overlay, viewContainerRef, nzInputGroupWhitSuffixOrPrefixDirective, document) {\n        this.ngZone = ngZone;\n        this.elementRef = elementRef;\n        this.overlay = overlay;\n        this.viewContainerRef = viewContainerRef;\n        this.nzInputGroupWhitSuffixOrPrefixDirective = nzInputGroupWhitSuffixOrPrefixDirective;\n        this.document = document;\n        this.onChange = () => { };\n        this.onTouched = () => { };\n        this.panelOpen = false;\n        this.destroy$ = new Subject();\n        this.overlayRef = null;\n        this.portal = null;\n        this.previousValue = null;\n    }\n    ngAfterViewInit() {\n        if (this.nzAutocomplete) {\n            this.nzAutocomplete.animationStateChange.pipe(takeUntil(this.destroy$)).subscribe(event => {\n                if (event.toState === 'void') {\n                    if (this.overlayRef) {\n                        this.overlayRef.dispose();\n                        this.overlayRef = null;\n                    }\n                }\n            });\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n        this.destroyPanel();\n    }\n    writeValue(value) {\n        this.ngZone.runOutsideAngular(() => Promise.resolve(null).then(() => this.setTriggerValue(value)));\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    setDisabledState(isDisabled) {\n        const element = this.elementRef.nativeElement;\n        element.disabled = isDisabled;\n        this.closePanel();\n    }\n    openPanel() {\n        this.previousValue = this.elementRef.nativeElement.value;\n        this.attachOverlay();\n        this.updateStatus();\n    }\n    closePanel() {\n        if (this.panelOpen) {\n            this.nzAutocomplete.isOpen = this.panelOpen = false;\n            if (this.overlayRef && this.overlayRef.hasAttached()) {\n                this.overlayRef.detach();\n                this.selectionChangeSubscription.unsubscribe();\n                this.overlayOutsideClickSubscription.unsubscribe();\n                this.optionsChangeSubscription.unsubscribe();\n                this.portal = null;\n            }\n        }\n    }\n    handleKeydown(event) {\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n        if (keyCode === ESCAPE) {\n            event.preventDefault();\n        }\n        if (this.panelOpen && (keyCode === ESCAPE || keyCode === TAB)) {\n            // Reset value when tab / ESC close\n            if (this.activeOption && this.activeOption.getLabel() !== this.previousValue) {\n                this.setTriggerValue(this.previousValue);\n            }\n            this.closePanel();\n        }\n        else if (this.panelOpen && keyCode === ENTER) {\n            if (this.nzAutocomplete.showPanel) {\n                event.preventDefault();\n                if (this.activeOption) {\n                    this.activeOption.selectViaInteraction();\n                }\n                else {\n                    this.closePanel();\n                }\n            }\n        }\n        else if (this.panelOpen && isArrowKey && this.nzAutocomplete.showPanel) {\n            event.stopPropagation();\n            event.preventDefault();\n            if (keyCode === UP_ARROW) {\n                this.nzAutocomplete.setPreviousItemActive();\n            }\n            else {\n                this.nzAutocomplete.setNextItemActive();\n            }\n            if (this.activeOption) {\n                this.activeOption.scrollIntoViewIfNeeded();\n            }\n            this.doBackfill();\n        }\n    }\n    handleInput(event) {\n        const target = event.target;\n        const document = this.document;\n        let value = target.value;\n        if (target.type === 'number') {\n            value = value === '' ? null : parseFloat(value);\n        }\n        if (this.previousValue !== value) {\n            this.previousValue = value;\n            this.onChange(value);\n            if (this.canOpen() && document.activeElement === event.target) {\n                this.openPanel();\n            }\n        }\n    }\n    handleFocus() {\n        if (this.canOpen()) {\n            this.openPanel();\n        }\n    }\n    handleBlur() {\n        this.onTouched();\n    }\n    /**\n     * Subscription data source changes event\n     */\n    subscribeOptionsChange() {\n        const optionChanges = this.nzAutocomplete.options.changes.pipe(tap(() => this.positionStrategy.reapplyLastPosition()), delay(0));\n        return optionChanges.subscribe(() => {\n            this.resetActiveItem();\n            if (this.panelOpen) {\n                this.overlayRef.updatePosition();\n            }\n        });\n    }\n    /**\n     * Subscription option changes event and set the value\n     */\n    subscribeSelectionChange() {\n        return this.nzAutocomplete.selectionChange.subscribe((option) => {\n            this.setValueAndClose(option);\n        });\n    }\n    subscribeOverlayOutsideClick() {\n        return this.overlayRef.outsidePointerEvents()\n            .pipe(filter((e) => !this.elementRef.nativeElement.contains(e.target)))\n            .subscribe(() => {\n            this.closePanel();\n        });\n    }\n    attachOverlay() {\n        if (!this.nzAutocomplete) {\n            throw getNzAutocompleteMissingPanelError();\n        }\n        if (!this.portal && this.nzAutocomplete.template) {\n            this.portal = new TemplatePortal(this.nzAutocomplete.template, this.viewContainerRef);\n        }\n        if (!this.overlayRef) {\n            this.overlayRef = this.overlay.create(this.getOverlayConfig());\n        }\n        if (this.overlayRef && !this.overlayRef.hasAttached()) {\n            this.overlayRef.attach(this.portal);\n            this.selectionChangeSubscription = this.subscribeSelectionChange();\n            this.optionsChangeSubscription = this.subscribeOptionsChange();\n            this.overlayOutsideClickSubscription = this.subscribeOverlayOutsideClick();\n            this.overlayRef\n                .detachments()\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(() => {\n                this.closePanel();\n            });\n        }\n        this.nzAutocomplete.isOpen = this.panelOpen = true;\n    }\n    updateStatus() {\n        if (this.overlayRef) {\n            this.overlayRef.updateSize({ width: this.nzAutocomplete.nzWidth || this.getHostWidth() });\n        }\n        this.nzAutocomplete.setVisibility();\n        this.resetActiveItem();\n        if (this.activeOption) {\n            this.activeOption.scrollIntoViewIfNeeded();\n        }\n    }\n    destroyPanel() {\n        if (this.overlayRef) {\n            this.closePanel();\n        }\n    }\n    getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this.getOverlayPosition(),\n            disposeOnNavigation: true,\n            scrollStrategy: this.overlay.scrollStrategies.reposition(),\n            // default host element width\n            width: this.nzAutocomplete.nzWidth || this.getHostWidth()\n        });\n    }\n    getConnectedElement() {\n        return this.nzInputGroupWhitSuffixOrPrefixDirective\n            ? this.nzInputGroupWhitSuffixOrPrefixDirective.elementRef\n            : this.elementRef;\n    }\n    getHostWidth() {\n        return this.getConnectedElement().nativeElement.getBoundingClientRect().width;\n    }\n    getOverlayPosition() {\n        const positions = [\n            new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }),\n            new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' })\n        ];\n        this.positionStrategy = this.overlay\n            .position()\n            .flexibleConnectedTo(this.getConnectedElement())\n            .withFlexibleDimensions(false)\n            .withPush(false)\n            .withPositions(positions)\n            .withTransformOriginOn('.ant-select-dropdown');\n        return this.positionStrategy;\n    }\n    resetActiveItem() {\n        const index = this.nzAutocomplete.getOptionIndex(this.previousValue);\n        this.nzAutocomplete.clearSelectedOptions(null, true);\n        if (index !== -1) {\n            this.nzAutocomplete.setActiveItem(index);\n            this.nzAutocomplete.activeItem.select(false);\n        }\n        else {\n            this.nzAutocomplete.setActiveItem(this.nzAutocomplete.nzDefaultActiveFirstOption ? 0 : -1);\n        }\n    }\n    setValueAndClose(option) {\n        const value = option.nzValue;\n        this.setTriggerValue(option.getLabel());\n        this.onChange(value);\n        this.elementRef.nativeElement.focus();\n        this.closePanel();\n    }\n    setTriggerValue(value) {\n        const option = this.nzAutocomplete.getOption(value);\n        const displayValue = option ? option.getLabel() : value;\n        this.elementRef.nativeElement.value = displayValue != null ? displayValue : '';\n        if (!this.nzAutocomplete.nzBackfill) {\n            this.previousValue = displayValue;\n        }\n    }\n    doBackfill() {\n        if (this.nzAutocomplete.nzBackfill && this.nzAutocomplete.activeItem) {\n            this.setTriggerValue(this.nzAutocomplete.activeItem.getLabel());\n        }\n    }\n    canOpen() {\n        const element = this.elementRef.nativeElement;\n        return !element.readOnly && !element.disabled;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzAutocompleteTriggerDirective, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: i1$1.Overlay }, { token: i0.ViewContainerRef }, { token: i2.NzInputGroupWhitSuffixOrPrefixDirective, optional: true }, { token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.3.8\", type: NzAutocompleteTriggerDirective, isStandalone: true, selector: \"input[nzAutocomplete], textarea[nzAutocomplete]\", inputs: { nzAutocomplete: \"nzAutocomplete\" }, host: { attributes: { \"autocomplete\": \"off\", \"aria-autocomplete\": \"list\" }, listeners: { \"focusin\": \"handleFocus()\", \"blur\": \"handleBlur()\", \"input\": \"handleInput($event)\", \"keydown\": \"handleKeydown($event)\" } }, providers: [NZ_AUTOCOMPLETE_VALUE_ACCESSOR], exportAs: [\"nzAutocompleteTrigger\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzAutocompleteTriggerDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `input[nzAutocomplete], textarea[nzAutocomplete]`,\n                    exportAs: 'nzAutocompleteTrigger',\n                    providers: [NZ_AUTOCOMPLETE_VALUE_ACCESSOR],\n                    standalone: true,\n                    host: {\n                        autocomplete: 'off',\n                        'aria-autocomplete': 'list',\n                        '(focusin)': 'handleFocus()',\n                        '(blur)': 'handleBlur()',\n                        '(input)': 'handleInput($event)',\n                        '(keydown)': 'handleKeydown($event)'\n                    }\n                }]\n        }], ctorParameters: () => [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: i1$1.Overlay }, { type: i0.ViewContainerRef }, { type: i2.NzInputGroupWhitSuffixOrPrefixDirective, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }], propDecorators: { nzAutocomplete: [{\n                type: Input\n            }] } });\n\nfunction normalizeDataSource(value) {\n    return value?.map(item => {\n        if (typeof item === 'number' || typeof item === 'string') {\n            return {\n                label: item.toString(),\n                value: item.toString()\n            };\n        }\n        return item;\n    });\n}\nclass NzAutocompleteComponent {\n    /**\n     * Options accessor, its source may be content or dataSource\n     */\n    get options() {\n        // first dataSource\n        if (this.nzDataSource) {\n            return this.fromDataSourceOptions;\n        }\n        else {\n            return this.fromContentOptions;\n        }\n    }\n    constructor(changeDetectorRef, directionality, noAnimation) {\n        this.changeDetectorRef = changeDetectorRef;\n        this.directionality = directionality;\n        this.noAnimation = noAnimation;\n        this.nzOverlayClassName = '';\n        this.nzOverlayStyle = {};\n        this.nzDefaultActiveFirstOption = true;\n        this.nzBackfill = false;\n        this.compareWith = (o1, o2) => o1 === o2;\n        this.selectionChange = new EventEmitter();\n        this.showPanel = true;\n        this.isOpen = false;\n        this.activeItem = null;\n        this.dir = 'ltr';\n        this.normalizedDataSource = [];\n        this.destroy$ = new Subject();\n        this.animationStateChange = new EventEmitter();\n        this.activeItemIndex = -1;\n        this.selectionChangeSubscription = Subscription.EMPTY;\n        this.optionMouseEnterSubscription = Subscription.EMPTY;\n        this.dataSourceChangeSubscription = Subscription.EMPTY;\n        /** Options changes listener */\n        this.optionSelectionChanges = defer(() => {\n            if (this.options) {\n                return merge(...this.options.map(option => option.selectionChange));\n            }\n            return this.afterNextRender$.pipe(switchMap(() => this.optionSelectionChanges));\n        });\n        this.optionMouseEnter = defer(() => {\n            if (this.options) {\n                return merge(...this.options.map(option => option.mouseEntered));\n            }\n            return this.afterNextRender$.pipe(switchMap(() => this.optionMouseEnter));\n        });\n        this.afterNextRender$ = inject(NZ_AFTER_NEXT_RENDER$);\n    }\n    ngOnInit() {\n        this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.changeDetectorRef.detectChanges();\n        });\n        this.dir = this.directionality.value;\n    }\n    ngOnChanges(changes) {\n        const { nzDataSource } = changes;\n        if (nzDataSource) {\n            this.normalizedDataSource = normalizeDataSource(nzDataSource.currentValue);\n        }\n    }\n    onAnimationEvent(event) {\n        this.animationStateChange.emit(event);\n    }\n    ngAfterContentInit() {\n        if (!this.nzDataSource) {\n            this.optionsInit();\n        }\n    }\n    ngAfterViewInit() {\n        if (this.nzDataSource) {\n            this.optionsInit();\n        }\n    }\n    ngOnDestroy() {\n        this.dataSourceChangeSubscription.unsubscribe();\n        this.selectionChangeSubscription.unsubscribe();\n        this.optionMouseEnterSubscription.unsubscribe();\n        // Caretaker note: we have to set these subscriptions to `null` since these will be closed subscriptions, but they\n        // still keep references to destinations (which are `SafeSubscriber`s). Destinations keep referencing `next` functions,\n        // which we pass, for instance, to `this.optionSelectionChanges.subscribe(...)`.\n        this.dataSourceChangeSubscription = this.selectionChangeSubscription = this.optionMouseEnterSubscription = null;\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    setVisibility() {\n        this.showPanel = !!this.options.length;\n        this.changeDetectorRef.markForCheck();\n    }\n    setActiveItem(index) {\n        const activeItem = this.options.get(index);\n        if (activeItem && !activeItem.active) {\n            this.activeItem = activeItem;\n            this.activeItemIndex = index;\n            this.clearSelectedOptions(this.activeItem);\n            this.activeItem.setActiveStyles();\n        }\n        else {\n            this.activeItem = null;\n            this.activeItemIndex = -1;\n            this.clearSelectedOptions();\n        }\n        this.changeDetectorRef.markForCheck();\n    }\n    setNextItemActive() {\n        const nextIndex = this.activeItemIndex + 1 <= this.options.length - 1 ? this.activeItemIndex + 1 : 0;\n        this.setActiveItem(nextIndex);\n    }\n    setPreviousItemActive() {\n        const previousIndex = this.activeItemIndex - 1 < 0 ? this.options.length - 1 : this.activeItemIndex - 1;\n        this.setActiveItem(previousIndex);\n    }\n    getOptionIndex(value) {\n        return this.options.reduce((result, current, index) => result === -1 ? (this.compareWith(value, current.nzValue) ? index : -1) : result, -1);\n    }\n    getOption(value) {\n        return this.options.find(item => this.compareWith(value, item.nzValue)) || null;\n    }\n    optionsInit() {\n        this.setVisibility();\n        this.subscribeOptionChanges();\n        const changes = this.nzDataSource ? this.fromDataSourceOptions.changes : this.fromContentOptions.changes;\n        // async\n        this.dataSourceChangeSubscription = changes.subscribe(e => {\n            if (!e.dirty && this.isOpen) {\n                setTimeout(() => this.setVisibility());\n            }\n            this.subscribeOptionChanges();\n        });\n    }\n    /**\n     * Clear the status of options\n     */\n    clearSelectedOptions(skip, deselect = false) {\n        this.options.forEach(option => {\n            if (option !== skip) {\n                if (deselect) {\n                    option.deselect();\n                }\n                option.setInactiveStyles();\n            }\n        });\n    }\n    subscribeOptionChanges() {\n        this.selectionChangeSubscription.unsubscribe();\n        this.selectionChangeSubscription = this.optionSelectionChanges\n            .pipe(filter((event) => event.isUserInput))\n            .subscribe((event) => {\n            event.source.select();\n            event.source.setActiveStyles();\n            this.activeItem = event.source;\n            this.activeItemIndex = this.getOptionIndex(this.activeItem.nzValue);\n            this.clearSelectedOptions(event.source, true);\n            this.selectionChange.emit(event.source);\n        });\n        this.optionMouseEnterSubscription.unsubscribe();\n        this.optionMouseEnterSubscription = this.optionMouseEnter.subscribe((event) => {\n            event.setActiveStyles();\n            this.activeItem = event;\n            this.activeItemIndex = this.getOptionIndex(this.activeItem.nzValue);\n            this.clearSelectedOptions(event);\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzAutocompleteComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1$2.Directionality, optional: true }, { token: i2$1.NzNoAnimationDirective, host: true, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.8\", type: NzAutocompleteComponent, isStandalone: true, selector: \"nz-autocomplete\", inputs: { nzWidth: \"nzWidth\", nzOverlayClassName: \"nzOverlayClassName\", nzOverlayStyle: \"nzOverlayStyle\", nzDefaultActiveFirstOption: \"nzDefaultActiveFirstOption\", nzBackfill: \"nzBackfill\", compareWith: \"compareWith\", nzDataSource: \"nzDataSource\" }, outputs: { selectionChange: \"selectionChange\" }, queries: [{ propertyName: \"fromContentOptions\", predicate: NzAutocompleteOptionComponent, descendants: true }], viewQueries: [{ propertyName: \"template\", first: true, predicate: TemplateRef, descendants: true }, { propertyName: \"panel\", first: true, predicate: [\"panel\"], descendants: true }, { propertyName: \"content\", first: true, predicate: [\"content\"], descendants: true }, { propertyName: \"fromDataSourceOptions\", predicate: NzAutocompleteOptionComponent, descendants: true }], exportAs: [\"nzAutocomplete\"], usesOnChanges: true, ngImport: i0, template: `\n    <ng-template>\n      <div\n        #panel\n        class=\"ant-select-dropdown ant-select-dropdown-placement-bottomLeft\"\n        [class.ant-select-dropdown-hidden]=\"!showPanel\"\n        [class.ant-select-dropdown-rtl]=\"dir === 'rtl'\"\n        [ngClass]=\"nzOverlayClassName\"\n        [ngStyle]=\"nzOverlayStyle\"\n        [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n        @slideMotion\n        (@slideMotion.done)=\"onAnimationEvent($event)\"\n        [@.disabled]=\"!!noAnimation?.nzNoAnimation\"\n      >\n        <div style=\"max-height: 256px; overflow-y: auto; overflow-anchor: none;\">\n          <div style=\"display: flex; flex-direction: column;\">\n            <ng-template *ngTemplateOutlet=\"nzDataSource ? optionsTemplate : contentTemplate\"></ng-template>\n          </div>\n        </div>\n      </div>\n      <ng-template #contentTemplate>\n        <ng-content></ng-content>\n      </ng-template>\n      <ng-template #optionsTemplate>\n        <nz-auto-option *ngFor=\"let option of normalizedDataSource\" [nzValue]=\"option.value\" [nzLabel]=\"option.label\">\n          {{ option.label }}\n        </nz-auto-option>\n      </ng-template>\n    </ng-template>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: NgFor, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"component\", type: NzAutocompleteOptionComponent, selector: \"nz-auto-option\", inputs: [\"nzValue\", \"nzLabel\", \"nzDisabled\"], outputs: [\"selectionChange\", \"mouseEntered\"], exportAs: [\"nzAutoOption\"] }, { kind: \"directive\", type: NzNoAnimationDirective, selector: \"[nzNoAnimation]\", inputs: [\"nzNoAnimation\"], exportAs: [\"nzNoAnimation\"] }], animations: [slideMotion], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\n__decorate([\n    InputBoolean()\n], NzAutocompleteComponent.prototype, \"nzDefaultActiveFirstOption\", void 0);\n__decorate([\n    InputBoolean()\n], NzAutocompleteComponent.prototype, \"nzBackfill\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzAutocompleteComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-autocomplete',\n                    exportAs: 'nzAutocomplete',\n                    preserveWhitespaces: false,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    standalone: true,\n                    imports: [NgClass, NgFor, NgStyle, NgTemplateOutlet, NzAutocompleteOptionComponent, NzNoAnimationDirective],\n                    template: `\n    <ng-template>\n      <div\n        #panel\n        class=\"ant-select-dropdown ant-select-dropdown-placement-bottomLeft\"\n        [class.ant-select-dropdown-hidden]=\"!showPanel\"\n        [class.ant-select-dropdown-rtl]=\"dir === 'rtl'\"\n        [ngClass]=\"nzOverlayClassName\"\n        [ngStyle]=\"nzOverlayStyle\"\n        [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n        @slideMotion\n        (@slideMotion.done)=\"onAnimationEvent($event)\"\n        [@.disabled]=\"!!noAnimation?.nzNoAnimation\"\n      >\n        <div style=\"max-height: 256px; overflow-y: auto; overflow-anchor: none;\">\n          <div style=\"display: flex; flex-direction: column;\">\n            <ng-template *ngTemplateOutlet=\"nzDataSource ? optionsTemplate : contentTemplate\"></ng-template>\n          </div>\n        </div>\n      </div>\n      <ng-template #contentTemplate>\n        <ng-content></ng-content>\n      </ng-template>\n      <ng-template #optionsTemplate>\n        <nz-auto-option *ngFor=\"let option of normalizedDataSource\" [nzValue]=\"option.value\" [nzLabel]=\"option.label\">\n          {{ option.label }}\n        </nz-auto-option>\n      </ng-template>\n    </ng-template>\n  `,\n                    animations: [slideMotion]\n                }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1$2.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i2$1.NzNoAnimationDirective, decorators: [{\n                    type: Host\n                }, {\n                    type: Optional\n                }] }], propDecorators: { nzWidth: [{\n                type: Input\n            }], nzOverlayClassName: [{\n                type: Input\n            }], nzOverlayStyle: [{\n                type: Input\n            }], nzDefaultActiveFirstOption: [{\n                type: Input\n            }], nzBackfill: [{\n                type: Input\n            }], compareWith: [{\n                type: Input\n            }], nzDataSource: [{\n                type: Input\n            }], selectionChange: [{\n                type: Output\n            }], fromContentOptions: [{\n                type: ContentChildren,\n                args: [NzAutocompleteOptionComponent, { descendants: true }]\n            }], fromDataSourceOptions: [{\n                type: ViewChildren,\n                args: [NzAutocompleteOptionComponent]\n            }], template: [{\n                type: ViewChild,\n                args: [TemplateRef, { static: false }]\n            }], panel: [{\n                type: ViewChild,\n                args: ['panel', { static: false }]\n            }], content: [{\n                type: ViewChild,\n                args: ['content', { static: false }]\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzAutocompleteModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzAutocompleteModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.3.8\", ngImport: i0, type: NzAutocompleteModule, imports: [NzAutocompleteComponent,\n            NzAutocompleteOptionComponent,\n            NzAutocompleteTriggerDirective,\n            NzAutocompleteOptgroupComponent], exports: [NzAutocompleteComponent,\n            NzAutocompleteOptionComponent,\n            NzAutocompleteTriggerDirective,\n            NzAutocompleteOptgroupComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzAutocompleteModule, imports: [NzAutocompleteOptgroupComponent] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzAutocompleteModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [\n                        NzAutocompleteComponent,\n                        NzAutocompleteOptionComponent,\n                        NzAutocompleteTriggerDirective,\n                        NzAutocompleteOptgroupComponent\n                    ],\n                    imports: [\n                        NzAutocompleteComponent,\n                        NzAutocompleteOptionComponent,\n                        NzAutocompleteTriggerDirective,\n                        NzAutocompleteOptgroupComponent\n                    ]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NZ_AUTOCOMPLETE_VALUE_ACCESSOR, NzAutocompleteComponent, NzAutocompleteModule, NzAutocompleteOptgroupComponent, NzAutocompleteOptionComponent, NzAutocompleteTriggerDirective, NzOptionSelectionChange, getNzAutocompleteMissingPanelError };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}