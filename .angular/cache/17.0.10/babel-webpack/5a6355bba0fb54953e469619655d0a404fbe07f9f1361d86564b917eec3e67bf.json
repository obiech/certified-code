{"ast":null,"code":"import { __assign, __values } from \"tslib\";\nimport { MarkerSymbols } from '../../../util/marker';\nimport { getStyle } from '../util/get-style';\nexport var SHAPES = ['circle', 'square', 'bowtie', 'diamond', 'hexagon', 'triangle', 'triangle-down'];\nexport var HOLLOW_SHAPES = ['cross', 'tick', 'plus', 'hyphen', 'line'];\n/**\n * @ignore\n * Draws points\n * @param shape\n * @param cfg\n * @param container\n * @param shapeName\n * @param isStroke\n * @returns points\n */\nexport function drawPoints(shape, cfg, container, shapeName, isStroke) {\n  var e_1, _a;\n  var style = getStyle(cfg, isStroke, !isStroke, 'r');\n  var points = shape.parsePoints(cfg.points);\n  var pointPosition = points[0];\n  if (cfg.isStack) {\n    pointPosition = points[1];\n  } else if (points.length > 1) {\n    var group = container.addGroup();\n    try {\n      for (var points_1 = __values(points), points_1_1 = points_1.next(); !points_1_1.done; points_1_1 = points_1.next()) {\n        var point = points_1_1.value;\n        group.addShape({\n          type: 'marker',\n          attrs: __assign(__assign(__assign({}, style), {\n            symbol: MarkerSymbols[shapeName] || shapeName\n          }), point)\n        });\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (points_1_1 && !points_1_1.done && (_a = points_1.return)) _a.call(points_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    return group;\n  }\n  return container.addShape({\n    type: 'marker',\n    attrs: __assign(__assign(__assign({}, style), {\n      symbol: MarkerSymbols[shapeName] || shapeName\n    }), pointPosition)\n  });\n}","map":{"version":3,"names":["__assign","__values","MarkerSymbols","getStyle","SHAPES","HOLLOW_SHAPES","drawPoints","shape","cfg","container","shapeName","isStroke","e_1","_a","style","points","parsePoints","pointPosition","isStack","length","group","addGroup","points_1","points_1_1","next","done","point","value","addShape","type","attrs","symbol","e_1_1","error","return","call"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g2/esm/geometry/shape/point/util.js"],"sourcesContent":["import { __assign, __values } from \"tslib\";\nimport { MarkerSymbols } from '../../../util/marker';\nimport { getStyle } from '../util/get-style';\nexport var SHAPES = ['circle', 'square', 'bowtie', 'diamond', 'hexagon', 'triangle', 'triangle-down'];\nexport var HOLLOW_SHAPES = ['cross', 'tick', 'plus', 'hyphen', 'line'];\n/**\n * @ignore\n * Draws points\n * @param shape\n * @param cfg\n * @param container\n * @param shapeName\n * @param isStroke\n * @returns points\n */\nexport function drawPoints(shape, cfg, container, shapeName, isStroke) {\n    var e_1, _a;\n    var style = getStyle(cfg, isStroke, !isStroke, 'r');\n    var points = shape.parsePoints(cfg.points);\n    var pointPosition = points[0];\n    if (cfg.isStack) {\n        pointPosition = points[1];\n    }\n    else if (points.length > 1) {\n        var group = container.addGroup();\n        try {\n            for (var points_1 = __values(points), points_1_1 = points_1.next(); !points_1_1.done; points_1_1 = points_1.next()) {\n                var point = points_1_1.value;\n                group.addShape({\n                    type: 'marker',\n                    attrs: __assign(__assign(__assign({}, style), { symbol: MarkerSymbols[shapeName] || shapeName }), point),\n                });\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (points_1_1 && !points_1_1.done && (_a = points_1.return)) _a.call(points_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return group;\n    }\n    return container.addShape({\n        type: 'marker',\n        attrs: __assign(__assign(__assign({}, style), { symbol: MarkerSymbols[shapeName] || shapeName }), pointPosition),\n    });\n}\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,QAAQ,QAAQ,OAAO;AAC1C,SAASC,aAAa,QAAQ,sBAAsB;AACpD,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,OAAO,IAAIC,MAAM,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,eAAe,CAAC;AACrG,OAAO,IAAIC,aAAa,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,CAAC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,UAAUA,CAACC,KAAK,EAAEC,GAAG,EAAEC,SAAS,EAAEC,SAAS,EAAEC,QAAQ,EAAE;EACnE,IAAIC,GAAG,EAAEC,EAAE;EACX,IAAIC,KAAK,GAAGX,QAAQ,CAACK,GAAG,EAAEG,QAAQ,EAAE,CAACA,QAAQ,EAAE,GAAG,CAAC;EACnD,IAAII,MAAM,GAAGR,KAAK,CAACS,WAAW,CAACR,GAAG,CAACO,MAAM,CAAC;EAC1C,IAAIE,aAAa,GAAGF,MAAM,CAAC,CAAC,CAAC;EAC7B,IAAIP,GAAG,CAACU,OAAO,EAAE;IACbD,aAAa,GAAGF,MAAM,CAAC,CAAC,CAAC;EAC7B,CAAC,MACI,IAAIA,MAAM,CAACI,MAAM,GAAG,CAAC,EAAE;IACxB,IAAIC,KAAK,GAAGX,SAAS,CAACY,QAAQ,CAAC,CAAC;IAChC,IAAI;MACA,KAAK,IAAIC,QAAQ,GAAGrB,QAAQ,CAACc,MAAM,CAAC,EAAEQ,UAAU,GAAGD,QAAQ,CAACE,IAAI,CAAC,CAAC,EAAE,CAACD,UAAU,CAACE,IAAI,EAAEF,UAAU,GAAGD,QAAQ,CAACE,IAAI,CAAC,CAAC,EAAE;QAChH,IAAIE,KAAK,GAAGH,UAAU,CAACI,KAAK;QAC5BP,KAAK,CAACQ,QAAQ,CAAC;UACXC,IAAI,EAAE,QAAQ;UACdC,KAAK,EAAE9B,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEc,KAAK,CAAC,EAAE;YAAEiB,MAAM,EAAE7B,aAAa,CAACQ,SAAS,CAAC,IAAIA;UAAU,CAAC,CAAC,EAAEgB,KAAK;QAC3G,CAAC,CAAC;MACN;IACJ,CAAC,CACD,OAAOM,KAAK,EAAE;MAAEpB,GAAG,GAAG;QAAEqB,KAAK,EAAED;MAAM,CAAC;IAAE,CAAC,SACjC;MACJ,IAAI;QACA,IAAIT,UAAU,IAAI,CAACA,UAAU,CAACE,IAAI,KAAKZ,EAAE,GAAGS,QAAQ,CAACY,MAAM,CAAC,EAAErB,EAAE,CAACsB,IAAI,CAACb,QAAQ,CAAC;MACnF,CAAC,SACO;QAAE,IAAIV,GAAG,EAAE,MAAMA,GAAG,CAACqB,KAAK;MAAE;IACxC;IACA,OAAOb,KAAK;EAChB;EACA,OAAOX,SAAS,CAACmB,QAAQ,CAAC;IACtBC,IAAI,EAAE,QAAQ;IACdC,KAAK,EAAE9B,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEc,KAAK,CAAC,EAAE;MAAEiB,MAAM,EAAE7B,aAAa,CAACQ,SAAS,CAAC,IAAIA;IAAU,CAAC,CAAC,EAAEO,aAAa;EACnH,CAAC,CAAC;AACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}