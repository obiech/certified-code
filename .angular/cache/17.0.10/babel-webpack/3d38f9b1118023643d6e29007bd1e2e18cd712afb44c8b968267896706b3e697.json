{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { ManagementServicesListComponent } from './management-services-list/management-services-list.component';\nimport { ManagementServicesViewComponent } from './management-services-view/management-services-view.component';\nimport { ManagementServiceCategoryViewComponent } from './management-service-category-view/management-service-category-view.component';\nimport { ServicesListResolver } from './management-services-list/management-services-list.rsolver';\nimport { ManagementServicesViewResolver } from './management-services-view/management-service-view.resolver';\nimport { ManagementServicesCategoryViewResolver } from './management-service-category-view/management-service-category-view.resolver';\nimport { ManagementServiceNewResolver } from './management-services-view/management-service-new.resolver';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: '',\n  component: ManagementServicesListComponent,\n  resolve: {\n    services: ServicesListResolver\n  },\n  runGuardsAndResolvers: 'paramsOrQueryParamsChange'\n}, {\n  path: 'view/:id',\n  component: ManagementServicesViewComponent,\n  resolve: {\n    service: ManagementServicesViewResolver\n  }\n}, {\n  path: 'new',\n  component: ManagementServicesViewComponent,\n  resolve: {\n    service: ManagementServiceNewResolver\n  }\n}, {\n  path: 'category/view/:id',\n  component: ManagementServiceCategoryViewComponent,\n  resolve: {\n    serviceCategory: ManagementServicesCategoryViewResolver\n  }\n}, {\n  path: 'category/new',\n  component: ManagementServiceCategoryViewComponent\n}];\nexport class ManagementServicesRoutingModule {\n  static {\n    this.ɵfac = function ManagementServicesRoutingModule_Factory(t) {\n      return new (t || ManagementServicesRoutingModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: ManagementServicesRoutingModule\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      providers: [ServicesListResolver, ManagementServicesViewResolver, ManagementServiceNewResolver, ManagementServicesCategoryViewResolver],\n      imports: [RouterModule.forChild(routes), RouterModule]\n    });\n  }\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ManagementServicesRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","ManagementServicesListComponent","ManagementServicesViewComponent","ManagementServiceCategoryViewComponent","ServicesListResolver","ManagementServicesViewResolver","ManagementServicesCategoryViewResolver","ManagementServiceNewResolver","routes","path","component","resolve","services","runGuardsAndResolvers","service","serviceCategory","ManagementServicesRoutingModule","imports","forChild","i1","exports"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/apps/admin-panel/src/app/cms/management/management-services/management-services-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ManagementServicesListComponent } from './management-services-list/management-services-list.component';\nimport { ManagementServicesViewComponent } from './management-services-view/management-services-view.component';\nimport { ManagementServiceCategoryViewComponent } from './management-service-category-view/management-service-category-view.component';\nimport { ServicesListResolver } from './management-services-list/management-services-list.rsolver';\nimport { ManagementServicesViewResolver } from './management-services-view/management-service-view.resolver';\nimport { ManagementServicesCategoryViewResolver } from './management-service-category-view/management-service-category-view.resolver';\nimport { ManagementServiceNewResolver } from './management-services-view/management-service-new.resolver';\n\n\nconst routes: Routes = [\n  { path: '', component: ManagementServicesListComponent, resolve: { services: ServicesListResolver }, runGuardsAndResolvers: 'paramsOrQueryParamsChange' },\n  { path: 'view/:id', component: ManagementServicesViewComponent, resolve: { service: ManagementServicesViewResolver } },\n  { path: 'new', component: ManagementServicesViewComponent, resolve: { service: ManagementServiceNewResolver } },\n  { path: 'category/view/:id', component: ManagementServiceCategoryViewComponent, resolve: { serviceCategory: ManagementServicesCategoryViewResolver } },\n  { path: 'category/new', component: ManagementServiceCategoryViewComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    ServicesListResolver,\n    ManagementServicesViewResolver,\n    ManagementServiceNewResolver,\n    ManagementServicesCategoryViewResolver\n  ]\n})\nexport class ManagementServicesRoutingModule { }\n"],"mappings":"AACA,SAAiBA,YAAY,QAAQ,iBAAiB;AACtD,SAASC,+BAA+B,QAAQ,+DAA+D;AAC/G,SAASC,+BAA+B,QAAQ,+DAA+D;AAC/G,SAASC,sCAAsC,QAAQ,+EAA+E;AACtI,SAASC,oBAAoB,QAAQ,6DAA6D;AAClG,SAASC,8BAA8B,QAAQ,6DAA6D;AAC5G,SAASC,sCAAsC,QAAQ,8EAA8E;AACrI,SAASC,4BAA4B,QAAQ,4DAA4D;;;AAGzG,MAAMC,MAAM,GAAW,CACrB;EAAEC,IAAI,EAAE,EAAE;EAAEC,SAAS,EAAET,+BAA+B;EAAEU,OAAO,EAAE;IAAEC,QAAQ,EAAER;EAAoB,CAAE;EAAES,qBAAqB,EAAE;AAA2B,CAAE,EACzJ;EAAEJ,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAER,+BAA+B;EAAES,OAAO,EAAE;IAAEG,OAAO,EAAET;EAA8B;AAAE,CAAE,EACtH;EAAEI,IAAI,EAAE,KAAK;EAAEC,SAAS,EAAER,+BAA+B;EAAES,OAAO,EAAE;IAAEG,OAAO,EAAEP;EAA4B;AAAE,CAAE,EAC/G;EAAEE,IAAI,EAAE,mBAAmB;EAAEC,SAAS,EAAEP,sCAAsC;EAAEQ,OAAO,EAAE;IAAEI,eAAe,EAAET;EAAsC;AAAE,CAAE,EACtJ;EAAEG,IAAI,EAAE,cAAc;EAAEC,SAAS,EAAEP;AAAsC,CAAE,CAC5E;AAYD,OAAM,MAAOa,+BAA+B;;;uBAA/BA,+BAA+B;IAAA;EAAA;;;YAA/BA;IAA+B;EAAA;;;iBAP/B,CACTZ,oBAAoB,EACpBC,8BAA8B,EAC9BE,4BAA4B,EAC5BD,sCAAsC,CACvC;MAAAW,OAAA,GAPSjB,YAAY,CAACkB,QAAQ,CAACV,MAAM,CAAC,EAC7BR,YAAY;IAAA;EAAA;;;2EAQXgB,+BAA+B;IAAAC,OAAA,GAAAE,EAAA,CAAAnB,YAAA;IAAAoB,OAAA,GARhCpB,YAAY;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}