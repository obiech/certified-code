{"ast":null,"code":"import { __assign, __extends, __values } from \"tslib\";\nimport { each, head, isEqual, last, get, flatten, isArray, uniq, isNil } from '@antv/util';\nimport { findItemsFromViewRecurisive } from '../../util/tooltip';\nimport { getAngle, getSectorPath } from '../../util/graphics';\nimport Action from './base';\nvar DEFAULT_REGION_PATH_STYLE = {\n  fill: '#CCD6EC',\n  opacity: 0.3\n};\nexport function getItemsOfView(view, point, tooltipCfg) {\n  var e_1, _a, e_2, _b, e_3, _c;\n  var items = findItemsFromViewRecurisive(view, point, tooltipCfg);\n  if (items.length) {\n    // 三层\n    items = flatten(items);\n    try {\n      for (var items_1 = __values(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {\n        var itemArr = items_1_1.value;\n        try {\n          for (var itemArr_1 = (e_2 = void 0, __values(itemArr)), itemArr_1_1 = itemArr_1.next(); !itemArr_1_1.done; itemArr_1_1 = itemArr_1.next()) {\n            var item = itemArr_1_1.value;\n            var _d = item.mappingData,\n              x = _d.x,\n              y = _d.y;\n            item.x = isArray(x) ? x[x.length - 1] : x;\n            item.y = isArray(y) ? y[y.length - 1] : y;\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (itemArr_1_1 && !itemArr_1_1.done && (_b = itemArr_1.return)) _b.call(itemArr_1);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    var shared = tooltipCfg.shared;\n    // shared: false 代表只显示当前拾取到的 shape 的数据，但是一个 view 会有多个 Geometry，所以有可能会拾取到多个 shape\n    if (shared === false && items.length > 1) {\n      var snapItem = items[0];\n      var min = Math.abs(point.y - snapItem[0].y);\n      try {\n        for (var items_2 = __values(items), items_2_1 = items_2.next(); !items_2_1.done; items_2_1 = items_2.next()) {\n          var aItem = items_2_1.value;\n          var yDistance = Math.abs(point.y - aItem[0].y);\n          if (yDistance <= min) {\n            snapItem = aItem;\n            min = yDistance;\n          }\n        }\n      } catch (e_3_1) {\n        e_3 = {\n          error: e_3_1\n        };\n      } finally {\n        try {\n          if (items_2_1 && !items_2_1.done && (_c = items_2.return)) _c.call(items_2);\n        } finally {\n          if (e_3) throw e_3.error;\n        }\n      }\n      items = [snapItem];\n    }\n    return uniq(flatten(items));\n  }\n  return [];\n}\n/**\n * 背景框的 Action. 只作用于 interval 和 schema geometry\n * @ignore\n */\nvar ActiveRegion = /** @class */function (_super) {\n  __extends(ActiveRegion, _super);\n  function ActiveRegion() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * 显示\n   * @param {ShapeAttrs} style region-path 的样式\n   * @param {number} appendRatio 适用于笛卡尔坐标系. 对于 x 轴非 linear 类型: 默认：0.25, x 轴 linear 类型: 默认 0\n   * @param {number} appendWidth  适用于笛卡尔坐标系. 像素级别，优先级 > appendRatio\n   */\n  ActiveRegion.prototype.show = function (args) {\n    var view = this.context.view;\n    var ev = this.context.event;\n    var tooltipCfg = view.getController('tooltip').getTooltipCfg();\n    var tooltipItems = getItemsOfView(view, {\n      x: ev.x,\n      y: ev.y\n    }, tooltipCfg);\n    if (isEqual(tooltipItems, this.items)) {\n      // 如果拾取数据同上次相同，则不重复绘制\n      return;\n    }\n    this.items = tooltipItems;\n    if (tooltipItems.length) {\n      var xField_1 = view.getXScale().field;\n      var xValue_1 = tooltipItems[0].data[xField_1];\n      // 根据 x 对应的值查找 elements\n      var elements_1 = [];\n      var geometries = view.geometries;\n      each(geometries, function (geometry) {\n        if (geometry.type === 'interval' || geometry.type === 'schema') {\n          var result = geometry.getElementsBy(function (ele) {\n            var eleData = ele.getData();\n            return eleData[xField_1] === xValue_1;\n          });\n          elements_1 = elements_1.concat(result);\n        }\n      });\n      // 根据 bbox 计算背景框的面积区域\n      if (elements_1.length) {\n        var coordinate_1 = view.getCoordinate();\n        var firstBBox_1 = elements_1[0].shape.getCanvasBBox();\n        var lastBBox_1 = elements_1[0].shape.getCanvasBBox();\n        var groupBBox_1 = firstBBox_1;\n        each(elements_1, function (ele) {\n          var bbox = ele.shape.getCanvasBBox();\n          if (coordinate_1.isTransposed) {\n            if (bbox.minY < firstBBox_1.minY) {\n              firstBBox_1 = bbox;\n            }\n            if (bbox.maxY > lastBBox_1.maxY) {\n              lastBBox_1 = bbox;\n            }\n          } else {\n            if (bbox.minX < firstBBox_1.minX) {\n              firstBBox_1 = bbox;\n            }\n            if (bbox.maxX > lastBBox_1.maxX) {\n              lastBBox_1 = bbox;\n            }\n          }\n          groupBBox_1.x = Math.min(bbox.minX, groupBBox_1.minX);\n          groupBBox_1.y = Math.min(bbox.minY, groupBBox_1.minY);\n          groupBBox_1.width = Math.max(bbox.maxX, groupBBox_1.maxX) - groupBBox_1.x;\n          groupBBox_1.height = Math.max(bbox.maxY, groupBBox_1.maxY) - groupBBox_1.y;\n        });\n        var backgroundGroup = view.backgroundGroup,\n          coordinateBBox = view.coordinateBBox;\n        var path = void 0;\n        if (coordinate_1.isRect) {\n          var xScale = view.getXScale();\n          var _a = args || {},\n            appendRatio = _a.appendRatio,\n            appendWidth = _a.appendWidth;\n          if (isNil(appendWidth)) {\n            appendRatio = isNil(appendRatio) ? xScale.isLinear ? 0 : 0.25 : appendRatio; // 如果 x 轴是数值类型，如直方图，默认不需要加额外的宽度\n            appendWidth = coordinate_1.isTransposed ? appendRatio * lastBBox_1.height : appendRatio * firstBBox_1.width;\n          }\n          var minX = void 0;\n          var minY = void 0;\n          var width = void 0;\n          var height = void 0;\n          if (coordinate_1.isTransposed) {\n            minX = coordinateBBox.minX;\n            minY = Math.min(lastBBox_1.minY, firstBBox_1.minY) - appendWidth;\n            width = coordinateBBox.width;\n            height = groupBBox_1.height + appendWidth * 2;\n          } else {\n            minX = Math.min(firstBBox_1.minX, lastBBox_1.minX) - appendWidth;\n            // 直角坐标系 非转置：最小值直接取 坐标系 minY\n            minY = coordinateBBox.minY;\n            width = groupBBox_1.width + appendWidth * 2;\n            height = coordinateBBox.height;\n          }\n          path = [['M', minX, minY], ['L', minX + width, minY], ['L', minX + width, minY + height], ['L', minX, minY + height], ['Z']];\n        } else {\n          var firstElement = head(elements_1);\n          var lastElement = last(elements_1);\n          var startAngle = getAngle(firstElement.getModel(), coordinate_1).startAngle;\n          var endAngle = getAngle(lastElement.getModel(), coordinate_1).endAngle;\n          var center = coordinate_1.getCenter();\n          var radius = coordinate_1.getRadius();\n          var innterRadius = coordinate_1.innerRadius * radius;\n          path = getSectorPath(center.x, center.y, radius, startAngle, endAngle, innterRadius);\n        }\n        if (this.regionPath) {\n          this.regionPath.attr('path', path);\n          this.regionPath.show();\n        } else {\n          var style = get(args, 'style', DEFAULT_REGION_PATH_STYLE);\n          this.regionPath = backgroundGroup.addShape({\n            type: 'path',\n            name: 'active-region',\n            capture: false,\n            attrs: __assign(__assign({}, style), {\n              path: path\n            })\n          });\n        }\n      }\n    }\n  };\n  /**\n   * 隐藏\n   */\n  ActiveRegion.prototype.hide = function () {\n    if (this.regionPath) {\n      this.regionPath.hide();\n    }\n    // this.regionPath = null;\n    this.items = null;\n  };\n  /**\n   * 销毁\n   */\n  ActiveRegion.prototype.destroy = function () {\n    this.hide();\n    if (this.regionPath) {\n      this.regionPath.remove(true);\n    }\n    _super.prototype.destroy.call(this);\n  };\n  return ActiveRegion;\n}(Action);\nexport default ActiveRegion;","map":{"version":3,"names":["__assign","__extends","__values","each","head","isEqual","last","get","flatten","isArray","uniq","isNil","findItemsFromViewRecurisive","getAngle","getSectorPath","Action","DEFAULT_REGION_PATH_STYLE","fill","opacity","getItemsOfView","view","point","tooltipCfg","e_1","_a","e_2","_b","e_3","_c","items","length","items_1","items_1_1","next","done","itemArr","value","itemArr_1","itemArr_1_1","item","_d","mappingData","x","y","e_2_1","error","return","call","e_1_1","shared","snapItem","min","Math","abs","items_2","items_2_1","aItem","yDistance","e_3_1","ActiveRegion","_super","apply","arguments","prototype","show","args","context","ev","event","getController","getTooltipCfg","tooltipItems","xField_1","getXScale","field","xValue_1","data","elements_1","geometries","geometry","type","result","getElementsBy","ele","eleData","getData","concat","coordinate_1","getCoordinate","firstBBox_1","shape","getCanvasBBox","lastBBox_1","groupBBox_1","bbox","isTransposed","minY","maxY","minX","maxX","width","max","height","backgroundGroup","coordinateBBox","path","isRect","xScale","appendRatio","appendWidth","isLinear","firstElement","lastElement","startAngle","getModel","endAngle","center","getCenter","radius","getRadius","innterRadius","innerRadius","regionPath","attr","style","addShape","name","capture","attrs","hide","destroy","remove"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g2/esm/interaction/action/active-region.js"],"sourcesContent":["import { __assign, __extends, __values } from \"tslib\";\nimport { each, head, isEqual, last, get, flatten, isArray, uniq, isNil } from '@antv/util';\nimport { findItemsFromViewRecurisive } from '../../util/tooltip';\nimport { getAngle, getSectorPath } from '../../util/graphics';\nimport Action from './base';\nvar DEFAULT_REGION_PATH_STYLE = {\n    fill: '#CCD6EC',\n    opacity: 0.3,\n};\nexport function getItemsOfView(view, point, tooltipCfg) {\n    var e_1, _a, e_2, _b, e_3, _c;\n    var items = findItemsFromViewRecurisive(view, point, tooltipCfg);\n    if (items.length) {\n        // 三层\n        items = flatten(items);\n        try {\n            for (var items_1 = __values(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {\n                var itemArr = items_1_1.value;\n                try {\n                    for (var itemArr_1 = (e_2 = void 0, __values(itemArr)), itemArr_1_1 = itemArr_1.next(); !itemArr_1_1.done; itemArr_1_1 = itemArr_1.next()) {\n                        var item = itemArr_1_1.value;\n                        var _d = item.mappingData, x = _d.x, y = _d.y;\n                        item.x = isArray(x) ? x[x.length - 1] : x;\n                        item.y = isArray(y) ? y[y.length - 1] : y;\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (itemArr_1_1 && !itemArr_1_1.done && (_b = itemArr_1.return)) _b.call(itemArr_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        var shared = tooltipCfg.shared;\n        // shared: false 代表只显示当前拾取到的 shape 的数据，但是一个 view 会有多个 Geometry，所以有可能会拾取到多个 shape\n        if (shared === false && items.length > 1) {\n            var snapItem = items[0];\n            var min = Math.abs(point.y - snapItem[0].y);\n            try {\n                for (var items_2 = __values(items), items_2_1 = items_2.next(); !items_2_1.done; items_2_1 = items_2.next()) {\n                    var aItem = items_2_1.value;\n                    var yDistance = Math.abs(point.y - aItem[0].y);\n                    if (yDistance <= min) {\n                        snapItem = aItem;\n                        min = yDistance;\n                    }\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (items_2_1 && !items_2_1.done && (_c = items_2.return)) _c.call(items_2);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n            items = [snapItem];\n        }\n        return uniq(flatten(items));\n    }\n    return [];\n}\n/**\n * 背景框的 Action. 只作用于 interval 和 schema geometry\n * @ignore\n */\nvar ActiveRegion = /** @class */ (function (_super) {\n    __extends(ActiveRegion, _super);\n    function ActiveRegion() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * 显示\n     * @param {ShapeAttrs} style region-path 的样式\n     * @param {number} appendRatio 适用于笛卡尔坐标系. 对于 x 轴非 linear 类型: 默认：0.25, x 轴 linear 类型: 默认 0\n     * @param {number} appendWidth  适用于笛卡尔坐标系. 像素级别，优先级 > appendRatio\n     */\n    ActiveRegion.prototype.show = function (args) {\n        var view = this.context.view;\n        var ev = this.context.event;\n        var tooltipCfg = view.getController('tooltip').getTooltipCfg();\n        var tooltipItems = getItemsOfView(view, {\n            x: ev.x,\n            y: ev.y,\n        }, tooltipCfg);\n        if (isEqual(tooltipItems, this.items)) {\n            // 如果拾取数据同上次相同，则不重复绘制\n            return;\n        }\n        this.items = tooltipItems;\n        if (tooltipItems.length) {\n            var xField_1 = view.getXScale().field;\n            var xValue_1 = tooltipItems[0].data[xField_1];\n            // 根据 x 对应的值查找 elements\n            var elements_1 = [];\n            var geometries = view.geometries;\n            each(geometries, function (geometry) {\n                if (geometry.type === 'interval' || geometry.type === 'schema') {\n                    var result = geometry.getElementsBy(function (ele) {\n                        var eleData = ele.getData();\n                        return eleData[xField_1] === xValue_1;\n                    });\n                    elements_1 = elements_1.concat(result);\n                }\n            });\n            // 根据 bbox 计算背景框的面积区域\n            if (elements_1.length) {\n                var coordinate_1 = view.getCoordinate();\n                var firstBBox_1 = elements_1[0].shape.getCanvasBBox();\n                var lastBBox_1 = elements_1[0].shape.getCanvasBBox();\n                var groupBBox_1 = firstBBox_1;\n                each(elements_1, function (ele) {\n                    var bbox = ele.shape.getCanvasBBox();\n                    if (coordinate_1.isTransposed) {\n                        if (bbox.minY < firstBBox_1.minY) {\n                            firstBBox_1 = bbox;\n                        }\n                        if (bbox.maxY > lastBBox_1.maxY) {\n                            lastBBox_1 = bbox;\n                        }\n                    }\n                    else {\n                        if (bbox.minX < firstBBox_1.minX) {\n                            firstBBox_1 = bbox;\n                        }\n                        if (bbox.maxX > lastBBox_1.maxX) {\n                            lastBBox_1 = bbox;\n                        }\n                    }\n                    groupBBox_1.x = Math.min(bbox.minX, groupBBox_1.minX);\n                    groupBBox_1.y = Math.min(bbox.minY, groupBBox_1.minY);\n                    groupBBox_1.width = Math.max(bbox.maxX, groupBBox_1.maxX) - groupBBox_1.x;\n                    groupBBox_1.height = Math.max(bbox.maxY, groupBBox_1.maxY) - groupBBox_1.y;\n                });\n                var backgroundGroup = view.backgroundGroup, coordinateBBox = view.coordinateBBox;\n                var path = void 0;\n                if (coordinate_1.isRect) {\n                    var xScale = view.getXScale();\n                    var _a = args || {}, appendRatio = _a.appendRatio, appendWidth = _a.appendWidth;\n                    if (isNil(appendWidth)) {\n                        appendRatio = isNil(appendRatio) ? (xScale.isLinear ? 0 : 0.25) : appendRatio; // 如果 x 轴是数值类型，如直方图，默认不需要加额外的宽度\n                        appendWidth = coordinate_1.isTransposed ? appendRatio * lastBBox_1.height : appendRatio * firstBBox_1.width;\n                    }\n                    var minX = void 0;\n                    var minY = void 0;\n                    var width = void 0;\n                    var height = void 0;\n                    if (coordinate_1.isTransposed) {\n                        minX = coordinateBBox.minX;\n                        minY = Math.min(lastBBox_1.minY, firstBBox_1.minY) - appendWidth;\n                        width = coordinateBBox.width;\n                        height = groupBBox_1.height + appendWidth * 2;\n                    }\n                    else {\n                        minX = Math.min(firstBBox_1.minX, lastBBox_1.minX) - appendWidth;\n                        // 直角坐标系 非转置：最小值直接取 坐标系 minY\n                        minY = coordinateBBox.minY;\n                        width = groupBBox_1.width + appendWidth * 2;\n                        height = coordinateBBox.height;\n                    }\n                    path = [\n                        ['M', minX, minY],\n                        ['L', minX + width, minY],\n                        ['L', minX + width, minY + height],\n                        ['L', minX, minY + height],\n                        ['Z'],\n                    ];\n                }\n                else {\n                    var firstElement = head(elements_1);\n                    var lastElement = last(elements_1);\n                    var startAngle = getAngle(firstElement.getModel(), coordinate_1).startAngle;\n                    var endAngle = getAngle(lastElement.getModel(), coordinate_1).endAngle;\n                    var center = coordinate_1.getCenter();\n                    var radius = coordinate_1.getRadius();\n                    var innterRadius = coordinate_1.innerRadius * radius;\n                    path = getSectorPath(center.x, center.y, radius, startAngle, endAngle, innterRadius);\n                }\n                if (this.regionPath) {\n                    this.regionPath.attr('path', path);\n                    this.regionPath.show();\n                }\n                else {\n                    var style = get(args, 'style', DEFAULT_REGION_PATH_STYLE);\n                    this.regionPath = backgroundGroup.addShape({\n                        type: 'path',\n                        name: 'active-region',\n                        capture: false,\n                        attrs: __assign(__assign({}, style), { path: path }),\n                    });\n                }\n            }\n        }\n    };\n    /**\n     * 隐藏\n     */\n    ActiveRegion.prototype.hide = function () {\n        if (this.regionPath) {\n            this.regionPath.hide();\n        }\n        // this.regionPath = null;\n        this.items = null;\n    };\n    /**\n     * 销毁\n     */\n    ActiveRegion.prototype.destroy = function () {\n        this.hide();\n        if (this.regionPath) {\n            this.regionPath.remove(true);\n        }\n        _super.prototype.destroy.call(this);\n    };\n    return ActiveRegion;\n}(Action));\nexport default ActiveRegion;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}