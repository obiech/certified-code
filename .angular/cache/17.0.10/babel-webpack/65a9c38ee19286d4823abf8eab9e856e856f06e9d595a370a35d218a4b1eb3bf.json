{"ast":null,"code":"import { ZonePriceViewGQL } from '@ridy/admin-panel/generated/graphql';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ridy/admin-panel/generated/graphql\";\nexport class ZonePriceViewResolver {\n  constructor(gql) {\n    this.gql = gql;\n  }\n  resolve(route, state) {\n    return this.gql.fetch({\n      id: route.params.id\n    });\n  }\n  static {\n    this.ɵfac = function ZonePriceViewResolver_Factory(t) {\n      return new (t || ZonePriceViewResolver)(i0.ɵɵinject(i1.ZonePriceViewGQL));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ZonePriceViewResolver,\n      factory: ZonePriceViewResolver.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["ZonePriceViewGQL","ZonePriceViewResolver","constructor","gql","resolve","route","state","fetch","id","params","i0","ɵɵinject","i1","factory","ɵfac"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/apps/admin-panel/src/app/cms/management/management-zone-prices/zone-price-view/zone-price-view.resolver.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { ApolloQueryResult } from '@apollo/client/core';\nimport {\n  ZonePriceViewGQL,\n  ZonePriceViewQuery,\n} from '@ridy/admin-panel/generated/graphql';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ZonePriceViewResolver\n  \n{\n  constructor(private gql: ZonePriceViewGQL) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<ApolloQueryResult<ZonePriceViewQuery>> {\n    return this.gql.fetch({ id: route.params.id });\n  }\n}\n"],"mappings":"AAGA,SACEA,gBAAgB,QAEX,qCAAqC;;;AAI5C,OAAM,MAAOC,qBAAqB;EAGhCC,YAAoBC,GAAqB;IAArB,KAAAA,GAAG,GAAHA,GAAG;EAAqB;EAE5CC,OAAOA,CACLC,KAA6B,EAC7BC,KAA0B;IAE1B,OAAO,IAAI,CAACH,GAAG,CAACI,KAAK,CAAC;MAAEC,EAAE,EAAEH,KAAK,CAACI,MAAM,CAACD;IAAE,CAAE,CAAC;EAChD;;;uBAVWP,qBAAqB,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAZ,gBAAA;IAAA;EAAA;;;aAArBC,qBAAqB;MAAAY,OAAA,EAArBZ,qBAAqB,CAAAa;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}