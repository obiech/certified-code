{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Directive, Optional, Input, Pipe, NgModule } from '@angular/core';\nimport { Subject, of, timer, empty } from 'rxjs';\nimport { expand, skip, filter } from 'rxjs/operators';\nfunction isDefined(value) {\n  return typeof value !== 'undefined' && value !== null;\n}\nfunction coerceBooleanProperty(value) {\n  return value != null && `${value}` !== 'false';\n}\nfunction dateParser(date) {\n  const parsed = new Date(date);\n  if (!Number.isNaN(parsed.valueOf())) {\n    return parsed;\n  }\n  const parts = String(date).match(/\\d+/g);\n  if (parts === null || parts.length <= 2) {\n    return parsed;\n  } else {\n    const [firstP, secondP, ...restPs] = parts.map(x => parseInt(x, 10));\n    return new Date(Date.UTC(firstP, secondP - 1, ...restPs));\n  }\n}\nconst MINUTE = 60;\nconst HOUR = MINUTE * 60;\nconst DAY = HOUR * 24;\nconst WEEK = DAY * 7;\nconst MONTH = DAY * 30;\nconst YEAR = DAY * 365;\n;\n/**\n * To modify the text displayed, create a new instance of TimeagoIntl and\n * include it in a custom provider\n */\nclass TimeagoIntl {\n  constructor() {\n    /**\n     * Stream that emits whenever the l10n strings are changed\n     * Use this to notify directives if the l10n strings have changed after initialization.\n     */\n    this.changes = new Subject();\n  }\n  static {\n    this.ɵfac = function TimeagoIntl_Factory(t) {\n      return new (t || TimeagoIntl)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: TimeagoIntl,\n      factory: TimeagoIntl.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimeagoIntl, [{\n    type: Injectable\n  }], null, null);\n})();\nconst defaultFormattter = function (then) {\n  const now = Date.now();\n  const seconds = Math.round(Math.abs(now - then) / 1000);\n  const suffix = then < now ? 'ago' : 'from now';\n  const [value, unit] = seconds < MINUTE ? [Math.round(seconds), 'second'] : seconds < HOUR ? [Math.round(seconds / MINUTE), 'minute'] : seconds < DAY ? [Math.round(seconds / HOUR), 'hour'] : seconds < WEEK ? [Math.round(seconds / DAY), 'day'] : seconds < MONTH ? [Math.round(seconds / WEEK), 'week'] : seconds < YEAR ? [Math.round(seconds / MONTH), 'month'] : [Math.round(seconds / YEAR), 'year'];\n  return {\n    value,\n    unit,\n    suffix\n  };\n};\nclass TimeagoFormatter {}\nclass TimeagoDefaultFormatter extends TimeagoFormatter {\n  format(then) {\n    const {\n      suffix,\n      value,\n      unit\n    } = defaultFormattter(then);\n    return this.parse(value, unit, suffix);\n  }\n  parse(value, unit, suffix) {\n    if (value !== 1) {\n      unit += 's';\n    }\n    return value + ' ' + unit + ' ' + suffix;\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTimeagoDefaultFormatter_BaseFactory;\n      return function TimeagoDefaultFormatter_Factory(t) {\n        return (ɵTimeagoDefaultFormatter_BaseFactory || (ɵTimeagoDefaultFormatter_BaseFactory = i0.ɵɵgetInheritedFactory(TimeagoDefaultFormatter)))(t || TimeagoDefaultFormatter);\n      };\n    })();\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: TimeagoDefaultFormatter,\n      factory: TimeagoDefaultFormatter.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimeagoDefaultFormatter, [{\n    type: Injectable\n  }], null, null);\n})();\nclass TimeagoCustomFormatter extends TimeagoFormatter {\n  constructor(intl) {\n    super();\n    this.intl = intl;\n  }\n  format(then) {\n    const {\n      suffix,\n      value,\n      unit\n    } = defaultFormattter(then);\n    return this.parse(value, unit, suffix, Date.now(), then);\n  }\n  parse(value, unit, suffix, now, then) {\n    /** convert weeks to days if strings don't handle weeks */\n    if (unit === 'week' && !this.intl.strings.week && !this.intl.strings.weeks) {\n      const days = Math.round(Math.abs(now - then) / (1000 * 60 * 60 * 24));\n      value = days;\n      unit = 'day';\n    }\n    /** create a normalize function for given value */\n    const normalize = this.normalizeFn(value, now - then, this.intl.strings.numbers);\n    /** The eventual return value stored in an array so that the wordSeparator can be used */\n    const dateString = [];\n    /** handle prefixes */\n    if (suffix === 'ago' && this.intl.strings.prefixAgo) {\n      dateString.push(normalize(this.intl.strings.prefixAgo));\n    }\n    if (suffix === 'from now' && this.intl.strings.prefixFromNow) {\n      dateString.push(normalize(this.intl.strings.prefixFromNow));\n    }\n    /** Handle Main number and unit */\n    const isPlural = value > 1;\n    if (isPlural) {\n      const stringFn = this.intl.strings[unit + 's'] || this.intl.strings[unit] || '%d ' + unit;\n      dateString.push(normalize(stringFn));\n    } else {\n      const stringFn = this.intl.strings[unit] || this.intl.strings[unit + 's'] || '%d ' + unit;\n      dateString.push(normalize(stringFn));\n    }\n    /** Handle Suffixes */\n    if (suffix === 'ago' && this.intl.strings.suffixAgo) {\n      dateString.push(normalize(this.intl.strings.suffixAgo));\n    }\n    if (suffix === 'from now' && this.intl.strings.suffixFromNow) {\n      dateString.push(normalize(this.intl.strings.suffixFromNow));\n    }\n    /** join the array into a string and return it */\n    const wordSeparator = typeof this.intl.strings.wordSeparator === 'string' ? this.intl.strings.wordSeparator : ' ';\n    return dateString.join(wordSeparator);\n  }\n  /**\n   * If the numbers array is present, format numbers with it,\n   * otherwise just cast the number to a string and return it\n  */\n  normalizeNumber(numbers, value) {\n    return numbers && numbers.length === 10 ? String(value).split('').map(digit => digit.match(/^[0-9]$/) ? numbers[parseInt(digit, 10)] : digit).join('') : String(value);\n  }\n  /**\n   * Take a string or a function that takes number of days and returns a string\n   * and provide a uniform API to create string parts\n  */\n  normalizeFn(value, millisDelta, numbers) {\n    return stringOrFn => typeof stringOrFn === 'function' ? stringOrFn(value, millisDelta).replace(/%d/g, this.normalizeNumber(numbers, value)) : stringOrFn.replace(/%d/g, this.normalizeNumber(numbers, value));\n  }\n  static {\n    this.ɵfac = function TimeagoCustomFormatter_Factory(t) {\n      return new (t || TimeagoCustomFormatter)(i0.ɵɵinject(TimeagoIntl));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: TimeagoCustomFormatter,\n      factory: TimeagoCustomFormatter.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimeagoCustomFormatter, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: TimeagoIntl\n    }];\n  }, null);\n})();\nclass TimeagoClock {}\nclass TimeagoDefaultClock extends TimeagoClock {\n  tick(then) {\n    return of(0).pipe(expand(() => {\n      const now = Date.now();\n      const seconds = Math.round(Math.abs(now - then) / 1000);\n      const period = seconds < MINUTE ? 1000 : seconds < HOUR ? 1000 * MINUTE : seconds < DAY ? 1000 * HOUR : 0;\n      return period ? timer(period) : empty();\n    }), skip(1));\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTimeagoDefaultClock_BaseFactory;\n      return function TimeagoDefaultClock_Factory(t) {\n        return (ɵTimeagoDefaultClock_BaseFactory || (ɵTimeagoDefaultClock_BaseFactory = i0.ɵɵgetInheritedFactory(TimeagoDefaultClock)))(t || TimeagoDefaultClock);\n      };\n    })();\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: TimeagoDefaultClock,\n      factory: TimeagoDefaultClock.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimeagoDefaultClock, [{\n    type: Injectable\n  }], null, null);\n})();\nclass TimeagoDirective {\n  /** The Date to display. An actual Date object or something that can be fed to new Date. */\n  get date() {\n    return this._date;\n  }\n  set date(date) {\n    this._date = dateParser(date).valueOf();\n    if (this._date) {\n      if (this.clockSubscription) {\n        this.clockSubscription.unsubscribe();\n        this.clockSubscription = undefined;\n      }\n      this.clockSubscription = this.clock.tick(this.date).pipe(filter(() => this.live, this)).subscribe(() => this.stateChanges.next());\n    } else {\n      throw new SyntaxError(`Wrong parameter in TimeagoDirective. Expected a valid date, received: ${date}`);\n    }\n  }\n  /** If the directive should update itself over time */\n  get live() {\n    return this._live;\n  }\n  set live(live) {\n    this._live = coerceBooleanProperty(live);\n  }\n  constructor(intl, cd, formatter, element, clock) {\n    this.cd = cd;\n    this.clock = clock;\n    /**\n     * Emits on:\n     * - Input change\n     * - Intl change\n     * - Clock tick\n    */\n    this.stateChanges = new Subject();\n    this._live = true;\n    if (intl) {\n      this.intlSubscription = intl.changes.subscribe(() => this.stateChanges.next());\n    }\n    this.stateChanges.subscribe(() => {\n      this.setContent(element.nativeElement, formatter.format(this.date));\n      this.cd.markForCheck();\n    });\n  }\n  ngOnChanges() {\n    this.stateChanges.next();\n  }\n  setContent(node, content) {\n    if (isDefined(node.textContent)) {\n      node.textContent = content;\n    } else {\n      node.data = content;\n    }\n  }\n  ngOnDestroy() {\n    if (this.intlSubscription) {\n      this.intlSubscription.unsubscribe();\n      this.intlSubscription = undefined;\n    }\n    if (this.clockSubscription) {\n      this.clockSubscription.unsubscribe();\n      this.clockSubscription = undefined;\n    }\n    this.stateChanges.complete();\n  }\n  static {\n    this.ɵfac = function TimeagoDirective_Factory(t) {\n      return new (t || TimeagoDirective)(i0.ɵɵdirectiveInject(TimeagoIntl, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(TimeagoFormatter), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(TimeagoClock));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TimeagoDirective,\n      selectors: [[\"\", \"timeago\", \"\"]],\n      inputs: {\n        date: \"date\",\n        live: \"live\"\n      },\n      exportAs: [\"timeago\"],\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimeagoDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[timeago]',\n      exportAs: 'timeago'\n    }]\n  }], function () {\n    return [{\n      type: TimeagoIntl,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: TimeagoFormatter\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: TimeagoClock\n    }];\n  }, {\n    date: [{\n      type: Input\n    }],\n    live: [{\n      type: Input\n    }]\n  });\n})();\nclass TimeagoPipe {\n  constructor(intl, cd, formatter, clock) {\n    this.clock = clock;\n    this.live = true;\n    /**\n     * Emits on:\n     * - Input change\n     * - Intl change\n     * - Clock tick\n    */\n    this.stateChanges = new Subject();\n    if (intl) {\n      this.intlSubscription = intl.changes.subscribe(() => this.stateChanges.next());\n    }\n    this.stateChanges.subscribe(() => {\n      this.value = formatter.format(this.date);\n      cd.markForCheck();\n    });\n  }\n  transform(date, ...args) {\n    const _date = dateParser(date).valueOf();\n    let _live;\n    _live = isDefined(args[0]) ? coerceBooleanProperty(args[0]) : this.live;\n    if (this.date === _date && this.live === _live) {\n      return this.value;\n    }\n    this.date = _date;\n    this.live = _live;\n    if (this.date) {\n      if (this.clockSubscription) {\n        this.clockSubscription.unsubscribe();\n        this.clockSubscription = undefined;\n      }\n      this.clockSubscription = this.clock.tick(this.date).pipe(filter(() => this.live, this)).subscribe(() => this.stateChanges.next());\n      this.stateChanges.next();\n    } else {\n      throw new SyntaxError(`Wrong parameter in TimeagoPipe. Expected a valid date, received: ${date}`);\n    }\n    return this.value;\n  }\n  ngOnDestroy() {\n    if (this.intlSubscription) {\n      this.intlSubscription.unsubscribe();\n      this.intlSubscription = undefined;\n    }\n    if (this.clockSubscription) {\n      this.clockSubscription.unsubscribe();\n      this.clockSubscription = undefined;\n    }\n    this.stateChanges.complete();\n  }\n  static {\n    this.ɵfac = function TimeagoPipe_Factory(t) {\n      return new (t || TimeagoPipe)(i0.ɵɵdirectiveInject(TimeagoIntl, 24), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef, 16), i0.ɵɵdirectiveInject(TimeagoFormatter, 16), i0.ɵɵdirectiveInject(TimeagoClock, 16));\n    };\n  }\n  static {\n    this.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n      name: \"timeago\",\n      type: TimeagoPipe,\n      pure: false\n    });\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: TimeagoPipe,\n      factory: TimeagoPipe.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimeagoPipe, [{\n    type: Injectable\n  }, {\n    type: Pipe,\n    args: [{\n      name: 'timeago',\n      pure: false // required to update the value when stateChanges emits\n    }]\n  }], function () {\n    return [{\n      type: TimeagoIntl,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: TimeagoFormatter\n    }, {\n      type: TimeagoClock\n    }];\n  }, null);\n})();\nclass TimeagoModule {\n  /**\n   * Use this method in your root module to provide the TimeagoModule\n   */\n  static forRoot(config = {}) {\n    return {\n      ngModule: TimeagoModule,\n      providers: [config.clock || {\n        provide: TimeagoClock,\n        useClass: TimeagoDefaultClock\n      }, config.intl || [], config.formatter || {\n        provide: TimeagoFormatter,\n        useClass: TimeagoDefaultFormatter\n      }]\n    };\n  }\n  /**\n   * Use this method in your other (non root) modules to import the directive/pipe\n   */\n  static forChild(config = {}) {\n    return {\n      ngModule: TimeagoModule,\n      providers: [config.clock || {\n        provide: TimeagoClock,\n        useClass: TimeagoDefaultClock\n      }, config.intl || [], config.formatter || {\n        provide: TimeagoFormatter,\n        useClass: TimeagoDefaultFormatter\n      }]\n    };\n  }\n  static {\n    this.ɵfac = function TimeagoModule_Factory(t) {\n      return new (t || TimeagoModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: TimeagoModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimeagoModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [TimeagoDirective, TimeagoPipe],\n      exports: [TimeagoDirective, TimeagoPipe]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TimeagoClock, TimeagoCustomFormatter, TimeagoDefaultClock, TimeagoDefaultFormatter, TimeagoDirective, TimeagoFormatter, TimeagoIntl, TimeagoModule, TimeagoPipe };","map":{"version":3,"names":["i0","Injectable","Directive","Optional","Input","Pipe","NgModule","Subject","of","timer","empty","expand","skip","filter","isDefined","value","coerceBooleanProperty","dateParser","date","parsed","Date","Number","isNaN","valueOf","parts","String","match","length","firstP","secondP","restPs","map","x","parseInt","UTC","MINUTE","HOUR","DAY","WEEK","MONTH","YEAR","TimeagoIntl","constructor","changes","ɵfac","TimeagoIntl_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","type","defaultFormattter","then","now","seconds","Math","round","abs","suffix","unit","TimeagoFormatter","TimeagoDefaultFormatter","format","parse","ɵTimeagoDefaultFormatter_BaseFactory","TimeagoDefaultFormatter_Factory","ɵɵgetInheritedFactory","TimeagoCustomFormatter","intl","strings","week","weeks","days","normalize","normalizeFn","numbers","dateString","prefixAgo","push","prefixFromNow","isPlural","stringFn","suffixAgo","suffixFromNow","wordSeparator","join","normalizeNumber","split","digit","millisDelta","stringOrFn","replace","TimeagoCustomFormatter_Factory","ɵɵinject","TimeagoClock","TimeagoDefaultClock","tick","pipe","period","ɵTimeagoDefaultClock_BaseFactory","TimeagoDefaultClock_Factory","TimeagoDirective","_date","clockSubscription","unsubscribe","undefined","clock","live","subscribe","stateChanges","next","SyntaxError","_live","cd","formatter","element","intlSubscription","setContent","nativeElement","markForCheck","ngOnChanges","node","content","textContent","data","ngOnDestroy","complete","TimeagoDirective_Factory","ɵɵdirectiveInject","ChangeDetectorRef","ElementRef","ɵdir","ɵɵdefineDirective","selectors","inputs","exportAs","features","ɵɵNgOnChangesFeature","args","selector","decorators","TimeagoPipe","transform","TimeagoPipe_Factory","ɵpipe","ɵɵdefinePipe","name","pure","TimeagoModule","forRoot","config","ngModule","providers","provide","useClass","forChild","TimeagoModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","declarations","exports"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/ngx-timeago/fesm2022/ngx-timeago.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, Directive, Optional, Input, Pipe, NgModule } from '@angular/core';\nimport { Subject, of, timer, empty } from 'rxjs';\nimport { expand, skip, filter } from 'rxjs/operators';\n\nfunction isDefined(value) {\n    return typeof value !== 'undefined' && value !== null;\n}\nfunction coerceBooleanProperty(value) {\n    return value != null && `${value}` !== 'false';\n}\nfunction dateParser(date) {\n    const parsed = new Date(date);\n    if (!Number.isNaN(parsed.valueOf())) {\n        return parsed;\n    }\n    const parts = String(date).match(/\\d+/g);\n    if (parts === null || parts.length <= 2) {\n        return parsed;\n    }\n    else {\n        const [firstP, secondP, ...restPs] = parts.map(x => parseInt(x, 10));\n        return new Date(Date.UTC(firstP, secondP - 1, ...restPs));\n    }\n}\nconst MINUTE = 60;\nconst HOUR = MINUTE * 60;\nconst DAY = HOUR * 24;\nconst WEEK = DAY * 7;\nconst MONTH = DAY * 30;\nconst YEAR = DAY * 365;\n\n;\n/**\n * To modify the text displayed, create a new instance of TimeagoIntl and\n * include it in a custom provider\n */\nclass TimeagoIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the l10n strings are changed\n         * Use this to notify directives if the l10n strings have changed after initialization.\n         */\n        this.changes = new Subject();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: TimeagoIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: TimeagoIntl }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: TimeagoIntl, decorators: [{\n            type: Injectable\n        }] });\n\nconst defaultFormattter = function (then) {\n    const now = Date.now();\n    const seconds = Math.round(Math.abs(now - then) / 1000);\n    const suffix = then < now ? 'ago' : 'from now';\n    const [value, unit] = seconds < MINUTE\n        ? [Math.round(seconds), 'second']\n        : seconds < HOUR\n            ? [Math.round(seconds / MINUTE), 'minute']\n            : seconds < DAY\n                ? [Math.round(seconds / HOUR), 'hour']\n                : seconds < WEEK\n                    ? [Math.round(seconds / DAY), 'day']\n                    : seconds < MONTH\n                        ? [Math.round(seconds / WEEK), 'week']\n                        : seconds < YEAR\n                            ? [Math.round(seconds / MONTH), 'month']\n                            : [Math.round(seconds / YEAR), 'year'];\n    return { value, unit, suffix };\n};\nclass TimeagoFormatter {\n}\nclass TimeagoDefaultFormatter extends TimeagoFormatter {\n    format(then) {\n        const { suffix, value, unit } = defaultFormattter(then);\n        return this.parse(value, unit, suffix);\n    }\n    parse(value, unit, suffix) {\n        if (value !== 1) {\n            unit += 's';\n        }\n        return value + ' ' + unit + ' ' + suffix;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: TimeagoDefaultFormatter, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: TimeagoDefaultFormatter }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: TimeagoDefaultFormatter, decorators: [{\n            type: Injectable\n        }] });\nclass TimeagoCustomFormatter extends TimeagoFormatter {\n    constructor(intl) {\n        super();\n        this.intl = intl;\n    }\n    format(then) {\n        const { suffix, value, unit } = defaultFormattter(then);\n        return this.parse(value, unit, suffix, Date.now(), then);\n    }\n    parse(value, unit, suffix, now, then) {\n        /** convert weeks to days if strings don't handle weeks */\n        if (unit === 'week' && !this.intl.strings.week && !this.intl.strings.weeks) {\n            const days = Math.round(Math.abs(now - then) / (1000 * 60 * 60 * 24));\n            value = days;\n            unit = 'day';\n        }\n        /** create a normalize function for given value */\n        const normalize = this.normalizeFn(value, now - then, this.intl.strings.numbers);\n        /** The eventual return value stored in an array so that the wordSeparator can be used */\n        const dateString = [];\n        /** handle prefixes */\n        if (suffix === 'ago' && this.intl.strings.prefixAgo) {\n            dateString.push(normalize(this.intl.strings.prefixAgo));\n        }\n        if (suffix === 'from now' && this.intl.strings.prefixFromNow) {\n            dateString.push(normalize(this.intl.strings.prefixFromNow));\n        }\n        /** Handle Main number and unit */\n        const isPlural = value > 1;\n        if (isPlural) {\n            const stringFn = this.intl.strings[unit + 's'] || this.intl.strings[unit] || '%d ' + unit;\n            dateString.push(normalize(stringFn));\n        }\n        else {\n            const stringFn = this.intl.strings[unit] || this.intl.strings[unit + 's'] || '%d ' + unit;\n            dateString.push(normalize(stringFn));\n        }\n        /** Handle Suffixes */\n        if (suffix === 'ago' && this.intl.strings.suffixAgo) {\n            dateString.push(normalize(this.intl.strings.suffixAgo));\n        }\n        if (suffix === 'from now' && this.intl.strings.suffixFromNow) {\n            dateString.push(normalize(this.intl.strings.suffixFromNow));\n        }\n        /** join the array into a string and return it */\n        const wordSeparator = typeof this.intl.strings.wordSeparator === 'string' ? this.intl.strings.wordSeparator : ' ';\n        return dateString.join(wordSeparator);\n    }\n    /**\n     * If the numbers array is present, format numbers with it,\n     * otherwise just cast the number to a string and return it\n    */\n    normalizeNumber(numbers, value) {\n        return numbers && numbers.length === 10\n            ? String(value).split('')\n                .map((digit) => digit.match(/^[0-9]$/) ? numbers[parseInt(digit, 10)] : digit)\n                .join('')\n            : String(value);\n    }\n    /**\n     * Take a string or a function that takes number of days and returns a string\n     * and provide a uniform API to create string parts\n    */\n    normalizeFn(value, millisDelta, numbers) {\n        return (stringOrFn) => typeof stringOrFn === 'function'\n            ? stringOrFn(value, millisDelta).replace(/%d/g, this.normalizeNumber(numbers, value))\n            : stringOrFn.replace(/%d/g, this.normalizeNumber(numbers, value));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: TimeagoCustomFormatter, deps: [{ token: TimeagoIntl }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: TimeagoCustomFormatter }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: TimeagoCustomFormatter, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: TimeagoIntl }]; } });\n\nclass TimeagoClock {\n}\nclass TimeagoDefaultClock extends TimeagoClock {\n    tick(then) {\n        return of(0)\n            .pipe(expand(() => {\n            const now = Date.now();\n            const seconds = Math.round(Math.abs(now - then) / 1000);\n            const period = seconds < MINUTE\n                ? 1000\n                : seconds < HOUR\n                    ? 1000 * MINUTE\n                    : seconds < DAY\n                        ? 1000 * HOUR\n                        : 0;\n            return period ? timer(period) : empty();\n        }), skip(1));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: TimeagoDefaultClock, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: TimeagoDefaultClock }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: TimeagoDefaultClock, decorators: [{\n            type: Injectable\n        }] });\n\nclass TimeagoDirective {\n    /** The Date to display. An actual Date object or something that can be fed to new Date. */\n    get date() {\n        return this._date;\n    }\n    set date(date) {\n        this._date = dateParser(date).valueOf();\n        if (this._date) {\n            if (this.clockSubscription) {\n                this.clockSubscription.unsubscribe();\n                this.clockSubscription = undefined;\n            }\n            this.clockSubscription = this.clock.tick(this.date)\n                .pipe(filter(() => this.live, this))\n                .subscribe(() => this.stateChanges.next());\n        }\n        else {\n            throw new SyntaxError(`Wrong parameter in TimeagoDirective. Expected a valid date, received: ${date}`);\n        }\n    }\n    /** If the directive should update itself over time */\n    get live() {\n        return this._live;\n    }\n    set live(live) {\n        this._live = coerceBooleanProperty(live);\n    }\n    constructor(intl, cd, formatter, element, clock) {\n        this.cd = cd;\n        this.clock = clock;\n        /**\n         * Emits on:\n         * - Input change\n         * - Intl change\n         * - Clock tick\n        */\n        this.stateChanges = new Subject();\n        this._live = true;\n        if (intl) {\n            this.intlSubscription = intl.changes.subscribe(() => this.stateChanges.next());\n        }\n        this.stateChanges.subscribe(() => {\n            this.setContent(element.nativeElement, formatter.format(this.date));\n            this.cd.markForCheck();\n        });\n    }\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    setContent(node, content) {\n        if (isDefined(node.textContent)) {\n            node.textContent = content;\n        }\n        else {\n            node.data = content;\n        }\n    }\n    ngOnDestroy() {\n        if (this.intlSubscription) {\n            this.intlSubscription.unsubscribe();\n            this.intlSubscription = undefined;\n        }\n        if (this.clockSubscription) {\n            this.clockSubscription.unsubscribe();\n            this.clockSubscription = undefined;\n        }\n        this.stateChanges.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: TimeagoDirective, deps: [{ token: TimeagoIntl, optional: true }, { token: i0.ChangeDetectorRef }, { token: TimeagoFormatter }, { token: i0.ElementRef }, { token: TimeagoClock }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: TimeagoDirective, selector: \"[timeago]\", inputs: { date: \"date\", live: \"live\" }, exportAs: [\"timeago\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: TimeagoDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[timeago]',\n                    exportAs: 'timeago',\n                }]\n        }], ctorParameters: function () { return [{ type: TimeagoIntl, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }, { type: TimeagoFormatter }, { type: i0.ElementRef }, { type: TimeagoClock }]; }, propDecorators: { date: [{\n                type: Input\n            }], live: [{\n                type: Input\n            }] } });\n\nclass TimeagoPipe {\n    constructor(intl, cd, formatter, clock) {\n        this.clock = clock;\n        this.live = true;\n        /**\n         * Emits on:\n         * - Input change\n         * - Intl change\n         * - Clock tick\n        */\n        this.stateChanges = new Subject();\n        if (intl) {\n            this.intlSubscription = intl.changes.subscribe(() => this.stateChanges.next());\n        }\n        this.stateChanges.subscribe(() => {\n            this.value = formatter.format(this.date);\n            cd.markForCheck();\n        });\n    }\n    transform(date, ...args) {\n        const _date = dateParser(date).valueOf();\n        let _live;\n        _live = isDefined(args[0])\n            ? coerceBooleanProperty(args[0])\n            : this.live;\n        if (this.date === _date && this.live === _live) {\n            return this.value;\n        }\n        this.date = _date;\n        this.live = _live;\n        if (this.date) {\n            if (this.clockSubscription) {\n                this.clockSubscription.unsubscribe();\n                this.clockSubscription = undefined;\n            }\n            this.clockSubscription = this.clock.tick(this.date)\n                .pipe(filter(() => this.live, this))\n                .subscribe(() => this.stateChanges.next());\n            this.stateChanges.next();\n        }\n        else {\n            throw new SyntaxError(`Wrong parameter in TimeagoPipe. Expected a valid date, received: ${date}`);\n        }\n        return this.value;\n    }\n    ngOnDestroy() {\n        if (this.intlSubscription) {\n            this.intlSubscription.unsubscribe();\n            this.intlSubscription = undefined;\n        }\n        if (this.clockSubscription) {\n            this.clockSubscription.unsubscribe();\n            this.clockSubscription = undefined;\n        }\n        this.stateChanges.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: TimeagoPipe, deps: [{ token: TimeagoIntl, optional: true }, { token: i0.ChangeDetectorRef }, { token: TimeagoFormatter }, { token: TimeagoClock }], target: i0.ɵɵFactoryTarget.Pipe }); }\n    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: TimeagoPipe, name: \"timeago\", pure: false }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: TimeagoPipe }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: TimeagoPipe, decorators: [{\n            type: Injectable\n        }, {\n            type: Pipe,\n            args: [{\n                    name: 'timeago',\n                    pure: false, // required to update the value when stateChanges emits\n                }]\n        }], ctorParameters: function () { return [{ type: TimeagoIntl, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }, { type: TimeagoFormatter }, { type: TimeagoClock }]; } });\n\nclass TimeagoModule {\n    /**\n     * Use this method in your root module to provide the TimeagoModule\n     */\n    static forRoot(config = {}) {\n        return {\n            ngModule: TimeagoModule,\n            providers: [\n                config.clock || { provide: TimeagoClock, useClass: TimeagoDefaultClock },\n                config.intl || [],\n                config.formatter || { provide: TimeagoFormatter, useClass: TimeagoDefaultFormatter },\n            ],\n        };\n    }\n    /**\n     * Use this method in your other (non root) modules to import the directive/pipe\n     */\n    static forChild(config = {}) {\n        return {\n            ngModule: TimeagoModule,\n            providers: [\n                config.clock || { provide: TimeagoClock, useClass: TimeagoDefaultClock },\n                config.intl || [],\n                config.formatter || { provide: TimeagoFormatter, useClass: TimeagoDefaultFormatter },\n            ],\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: TimeagoModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: TimeagoModule, declarations: [TimeagoDirective,\n            TimeagoPipe], exports: [TimeagoDirective,\n            TimeagoPipe] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: TimeagoModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: TimeagoModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        TimeagoDirective,\n                        TimeagoPipe,\n                    ],\n                    exports: [\n                        TimeagoDirective,\n                        TimeagoPipe,\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TimeagoClock, TimeagoCustomFormatter, TimeagoDefaultClock, TimeagoDefaultFormatter, TimeagoDirective, TimeagoFormatter, TimeagoIntl, TimeagoModule, TimeagoPipe };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}