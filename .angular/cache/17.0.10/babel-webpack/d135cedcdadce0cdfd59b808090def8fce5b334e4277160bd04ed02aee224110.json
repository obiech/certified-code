{"ast":null,"code":"/**\n * view 中三层 group 分层 key\n */\nexport var LAYER;\n(function (LAYER) {\n  /** 前景层 */\n  LAYER[\"FORE\"] = \"fore\";\n  /** 中间层 */\n  LAYER[\"MID\"] = \"mid\";\n  /** 背景层 */\n  LAYER[\"BG\"] = \"bg\";\n})(LAYER || (LAYER = {}));\n/**\n * 组件在画布的布局方位 12 方位\n */\nexport var DIRECTION;\n(function (DIRECTION) {\n  DIRECTION[\"TOP\"] = \"top\";\n  DIRECTION[\"TOP_LEFT\"] = \"top-left\";\n  DIRECTION[\"TOP_RIGHT\"] = \"top-right\";\n  DIRECTION[\"RIGHT\"] = \"right\";\n  DIRECTION[\"RIGHT_TOP\"] = \"right-top\";\n  DIRECTION[\"RIGHT_BOTTOM\"] = \"right-bottom\";\n  DIRECTION[\"LEFT\"] = \"left\";\n  DIRECTION[\"LEFT_TOP\"] = \"left-top\";\n  DIRECTION[\"LEFT_BOTTOM\"] = \"left-bottom\";\n  DIRECTION[\"BOTTOM\"] = \"bottom\";\n  DIRECTION[\"BOTTOM_LEFT\"] = \"bottom-left\";\n  DIRECTION[\"BOTTOM_RIGHT\"] = \"bottom-right\";\n  DIRECTION[\"RADIUS\"] = \"radius\";\n  DIRECTION[\"CIRCLE\"] = \"circle\";\n  // no direction information\n  DIRECTION[\"NONE\"] = \"none\";\n})(DIRECTION || (DIRECTION = {}));\n/**\n * 组件的类型，可能会影响到布局算法\n */\nexport var COMPONENT_TYPE;\n(function (COMPONENT_TYPE) {\n  /** axis 组件 */\n  COMPONENT_TYPE[\"AXIS\"] = \"axis\";\n  /** grid 组件 */\n  COMPONENT_TYPE[\"GRID\"] = \"grid\";\n  /** legend 组件 */\n  COMPONENT_TYPE[\"LEGEND\"] = \"legend\";\n  /** tooltip 组件 */\n  COMPONENT_TYPE[\"TOOLTIP\"] = \"tooltip\";\n  /** annotation 组件 */\n  COMPONENT_TYPE[\"ANNOTATION\"] = \"annotation\";\n  /** 缩略轴组件 */\n  COMPONENT_TYPE[\"SLIDER\"] = \"slider\";\n  /** 滚动条组件 */\n  COMPONENT_TYPE[\"SCROLLBAR\"] = \"scrollbar\";\n  /** 其他组件，自定义组件 */\n  COMPONENT_TYPE[\"OTHER\"] = \"other\";\n})(COMPONENT_TYPE || (COMPONENT_TYPE = {}));\n/**\n * 三层 group 的 z index\n */\nexport var GROUP_Z_INDEX = {\n  FORE: 3,\n  MID: 2,\n  BG: 1\n};\n/**\n * View 的生命周期阶段（和 3.x 的生命周期略有不同）\n * 我们需要先确定在那写场景需要用到生命周期，如果只是为了在生命周期插入一下什么组件之类的，那么在现有架构就是不需要的\n */\nexport var VIEW_LIFE_CIRCLE;\n(function (VIEW_LIFE_CIRCLE) {\n  VIEW_LIFE_CIRCLE[\"BEFORE_RENDER\"] = \"beforerender\";\n  VIEW_LIFE_CIRCLE[\"AFTER_RENDER\"] = \"afterrender\";\n  VIEW_LIFE_CIRCLE[\"BEFORE_PAINT\"] = \"beforepaint\";\n  VIEW_LIFE_CIRCLE[\"AFTER_PAINT\"] = \"afterpaint\";\n  VIEW_LIFE_CIRCLE[\"BEFORE_CHANGE_DATA\"] = \"beforechangedata\";\n  VIEW_LIFE_CIRCLE[\"AFTER_CHANGE_DATA\"] = \"afterchangedata\";\n  VIEW_LIFE_CIRCLE[\"BEFORE_CLEAR\"] = \"beforeclear\";\n  VIEW_LIFE_CIRCLE[\"AFTER_CLEAR\"] = \"afterclear\";\n  VIEW_LIFE_CIRCLE[\"BEFORE_DESTROY\"] = \"beforedestroy\";\n  VIEW_LIFE_CIRCLE[\"BEFORE_CHANGE_SIZE\"] = \"beforechangesize\";\n  VIEW_LIFE_CIRCLE[\"AFTER_CHANGE_SIZE\"] = \"afterchangesize\";\n})(VIEW_LIFE_CIRCLE || (VIEW_LIFE_CIRCLE = {}));\n/**\n * geometry 的生命周期\n */\nexport var GEOMETRY_LIFE_CIRCLE;\n(function (GEOMETRY_LIFE_CIRCLE) {\n  GEOMETRY_LIFE_CIRCLE[\"BEFORE_DRAW_ANIMATE\"] = \"beforeanimate\";\n  GEOMETRY_LIFE_CIRCLE[\"AFTER_DRAW_ANIMATE\"] = \"afteranimate\";\n  GEOMETRY_LIFE_CIRCLE[\"BEFORE_RENDER_LABEL\"] = \"beforerenderlabel\";\n  GEOMETRY_LIFE_CIRCLE[\"AFTER_RENDER_LABEL\"] = \"afterrenderlabel\";\n})(GEOMETRY_LIFE_CIRCLE || (GEOMETRY_LIFE_CIRCLE = {}));\n/**\n * 绘图区的事件列表\n */\nexport var PLOT_EVENTS;\n(function (PLOT_EVENTS) {\n  // mouse 事件\n  PLOT_EVENTS[\"MOUSE_ENTER\"] = \"plot:mouseenter\";\n  PLOT_EVENTS[\"MOUSE_DOWN\"] = \"plot:mousedown\";\n  PLOT_EVENTS[\"MOUSE_MOVE\"] = \"plot:mousemove\";\n  PLOT_EVENTS[\"MOUSE_UP\"] = \"plot:mouseup\";\n  PLOT_EVENTS[\"MOUSE_LEAVE\"] = \"plot:mouseleave\";\n  // 移动端事件\n  PLOT_EVENTS[\"TOUCH_START\"] = \"plot:touchstart\";\n  PLOT_EVENTS[\"TOUCH_MOVE\"] = \"plot:touchmove\";\n  PLOT_EVENTS[\"TOUCH_END\"] = \"plot:touchend\";\n  PLOT_EVENTS[\"TOUCH_CANCEL\"] = \"plot:touchcancel\";\n  // click 事件\n  PLOT_EVENTS[\"CLICK\"] = \"plot:click\";\n  PLOT_EVENTS[\"DBLCLICK\"] = \"plot:dblclick\";\n  PLOT_EVENTS[\"CONTEXTMENU\"] = \"plot:contextmenu\";\n  PLOT_EVENTS[\"LEAVE\"] = \"plot:leave\";\n  PLOT_EVENTS[\"ENTER\"] = \"plot:enter\";\n})(PLOT_EVENTS || (PLOT_EVENTS = {}));\n/**\n * Element 图形交互状态\n */\nexport var ELEMENT_STATE;\n(function (ELEMENT_STATE) {\n  ELEMENT_STATE[\"ACTIVE\"] = \"active\";\n  ELEMENT_STATE[\"INACTIVE\"] = \"inactive\";\n  ELEMENT_STATE[\"SELECTED\"] = \"selected\";\n  ELEMENT_STATE[\"DEFAULT\"] = \"default\";\n})(ELEMENT_STATE || (ELEMENT_STATE = {}));\n/** 参与分组的图形属性名 */\nexport var GROUP_ATTRS = ['color', 'shape', 'size'];\n/** 存储原始数据的字段名 */\nexport var FIELD_ORIGIN = '_origin';\n/** 最小的图表宽度 */\nexport var MIN_CHART_WIDTH = 1;\n/** 最小的图表高度 */\nexport var MIN_CHART_HEIGHT = 1;\n/** 辅助组件占图表的尺寸的最大比例：如图表上方的图例最多占图表高度的25% */\nexport var COMPONENT_MAX_VIEW_PERCENTAGE = 0.25;","map":{"version":3,"names":["LAYER","DIRECTION","COMPONENT_TYPE","GROUP_Z_INDEX","FORE","MID","BG","VIEW_LIFE_CIRCLE","GEOMETRY_LIFE_CIRCLE","PLOT_EVENTS","ELEMENT_STATE","GROUP_ATTRS","FIELD_ORIGIN","MIN_CHART_WIDTH","MIN_CHART_HEIGHT","COMPONENT_MAX_VIEW_PERCENTAGE"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g2/esm/constant.js"],"sourcesContent":["/**\n * view 中三层 group 分层 key\n */\nexport var LAYER;\n(function (LAYER) {\n    /** 前景层 */\n    LAYER[\"FORE\"] = \"fore\";\n    /** 中间层 */\n    LAYER[\"MID\"] = \"mid\";\n    /** 背景层 */\n    LAYER[\"BG\"] = \"bg\";\n})(LAYER || (LAYER = {}));\n/**\n * 组件在画布的布局方位 12 方位\n */\nexport var DIRECTION;\n(function (DIRECTION) {\n    DIRECTION[\"TOP\"] = \"top\";\n    DIRECTION[\"TOP_LEFT\"] = \"top-left\";\n    DIRECTION[\"TOP_RIGHT\"] = \"top-right\";\n    DIRECTION[\"RIGHT\"] = \"right\";\n    DIRECTION[\"RIGHT_TOP\"] = \"right-top\";\n    DIRECTION[\"RIGHT_BOTTOM\"] = \"right-bottom\";\n    DIRECTION[\"LEFT\"] = \"left\";\n    DIRECTION[\"LEFT_TOP\"] = \"left-top\";\n    DIRECTION[\"LEFT_BOTTOM\"] = \"left-bottom\";\n    DIRECTION[\"BOTTOM\"] = \"bottom\";\n    DIRECTION[\"BOTTOM_LEFT\"] = \"bottom-left\";\n    DIRECTION[\"BOTTOM_RIGHT\"] = \"bottom-right\";\n    DIRECTION[\"RADIUS\"] = \"radius\";\n    DIRECTION[\"CIRCLE\"] = \"circle\";\n    // no direction information\n    DIRECTION[\"NONE\"] = \"none\";\n})(DIRECTION || (DIRECTION = {}));\n/**\n * 组件的类型，可能会影响到布局算法\n */\nexport var COMPONENT_TYPE;\n(function (COMPONENT_TYPE) {\n    /** axis 组件 */\n    COMPONENT_TYPE[\"AXIS\"] = \"axis\";\n    /** grid 组件 */\n    COMPONENT_TYPE[\"GRID\"] = \"grid\";\n    /** legend 组件 */\n    COMPONENT_TYPE[\"LEGEND\"] = \"legend\";\n    /** tooltip 组件 */\n    COMPONENT_TYPE[\"TOOLTIP\"] = \"tooltip\";\n    /** annotation 组件 */\n    COMPONENT_TYPE[\"ANNOTATION\"] = \"annotation\";\n    /** 缩略轴组件 */\n    COMPONENT_TYPE[\"SLIDER\"] = \"slider\";\n    /** 滚动条组件 */\n    COMPONENT_TYPE[\"SCROLLBAR\"] = \"scrollbar\";\n    /** 其他组件，自定义组件 */\n    COMPONENT_TYPE[\"OTHER\"] = \"other\";\n})(COMPONENT_TYPE || (COMPONENT_TYPE = {}));\n/**\n * 三层 group 的 z index\n */\nexport var GROUP_Z_INDEX = {\n    FORE: 3,\n    MID: 2,\n    BG: 1,\n};\n/**\n * View 的生命周期阶段（和 3.x 的生命周期略有不同）\n * 我们需要先确定在那写场景需要用到生命周期，如果只是为了在生命周期插入一下什么组件之类的，那么在现有架构就是不需要的\n */\nexport var VIEW_LIFE_CIRCLE;\n(function (VIEW_LIFE_CIRCLE) {\n    VIEW_LIFE_CIRCLE[\"BEFORE_RENDER\"] = \"beforerender\";\n    VIEW_LIFE_CIRCLE[\"AFTER_RENDER\"] = \"afterrender\";\n    VIEW_LIFE_CIRCLE[\"BEFORE_PAINT\"] = \"beforepaint\";\n    VIEW_LIFE_CIRCLE[\"AFTER_PAINT\"] = \"afterpaint\";\n    VIEW_LIFE_CIRCLE[\"BEFORE_CHANGE_DATA\"] = \"beforechangedata\";\n    VIEW_LIFE_CIRCLE[\"AFTER_CHANGE_DATA\"] = \"afterchangedata\";\n    VIEW_LIFE_CIRCLE[\"BEFORE_CLEAR\"] = \"beforeclear\";\n    VIEW_LIFE_CIRCLE[\"AFTER_CLEAR\"] = \"afterclear\";\n    VIEW_LIFE_CIRCLE[\"BEFORE_DESTROY\"] = \"beforedestroy\";\n    VIEW_LIFE_CIRCLE[\"BEFORE_CHANGE_SIZE\"] = \"beforechangesize\";\n    VIEW_LIFE_CIRCLE[\"AFTER_CHANGE_SIZE\"] = \"afterchangesize\";\n})(VIEW_LIFE_CIRCLE || (VIEW_LIFE_CIRCLE = {}));\n/**\n * geometry 的生命周期\n */\nexport var GEOMETRY_LIFE_CIRCLE;\n(function (GEOMETRY_LIFE_CIRCLE) {\n    GEOMETRY_LIFE_CIRCLE[\"BEFORE_DRAW_ANIMATE\"] = \"beforeanimate\";\n    GEOMETRY_LIFE_CIRCLE[\"AFTER_DRAW_ANIMATE\"] = \"afteranimate\";\n    GEOMETRY_LIFE_CIRCLE[\"BEFORE_RENDER_LABEL\"] = \"beforerenderlabel\";\n    GEOMETRY_LIFE_CIRCLE[\"AFTER_RENDER_LABEL\"] = \"afterrenderlabel\";\n})(GEOMETRY_LIFE_CIRCLE || (GEOMETRY_LIFE_CIRCLE = {}));\n/**\n * 绘图区的事件列表\n */\nexport var PLOT_EVENTS;\n(function (PLOT_EVENTS) {\n    // mouse 事件\n    PLOT_EVENTS[\"MOUSE_ENTER\"] = \"plot:mouseenter\";\n    PLOT_EVENTS[\"MOUSE_DOWN\"] = \"plot:mousedown\";\n    PLOT_EVENTS[\"MOUSE_MOVE\"] = \"plot:mousemove\";\n    PLOT_EVENTS[\"MOUSE_UP\"] = \"plot:mouseup\";\n    PLOT_EVENTS[\"MOUSE_LEAVE\"] = \"plot:mouseleave\";\n    // 移动端事件\n    PLOT_EVENTS[\"TOUCH_START\"] = \"plot:touchstart\";\n    PLOT_EVENTS[\"TOUCH_MOVE\"] = \"plot:touchmove\";\n    PLOT_EVENTS[\"TOUCH_END\"] = \"plot:touchend\";\n    PLOT_EVENTS[\"TOUCH_CANCEL\"] = \"plot:touchcancel\";\n    // click 事件\n    PLOT_EVENTS[\"CLICK\"] = \"plot:click\";\n    PLOT_EVENTS[\"DBLCLICK\"] = \"plot:dblclick\";\n    PLOT_EVENTS[\"CONTEXTMENU\"] = \"plot:contextmenu\";\n    PLOT_EVENTS[\"LEAVE\"] = \"plot:leave\";\n    PLOT_EVENTS[\"ENTER\"] = \"plot:enter\";\n})(PLOT_EVENTS || (PLOT_EVENTS = {}));\n/**\n * Element 图形交互状态\n */\nexport var ELEMENT_STATE;\n(function (ELEMENT_STATE) {\n    ELEMENT_STATE[\"ACTIVE\"] = \"active\";\n    ELEMENT_STATE[\"INACTIVE\"] = \"inactive\";\n    ELEMENT_STATE[\"SELECTED\"] = \"selected\";\n    ELEMENT_STATE[\"DEFAULT\"] = \"default\";\n})(ELEMENT_STATE || (ELEMENT_STATE = {}));\n/** 参与分组的图形属性名 */\nexport var GROUP_ATTRS = ['color', 'shape', 'size'];\n/** 存储原始数据的字段名 */\nexport var FIELD_ORIGIN = '_origin';\n/** 最小的图表宽度 */\nexport var MIN_CHART_WIDTH = 1;\n/** 最小的图表高度 */\nexport var MIN_CHART_HEIGHT = 1;\n/** 辅助组件占图表的尺寸的最大比例：如图表上方的图例最多占图表高度的25% */\nexport var COMPONENT_MAX_VIEW_PERCENTAGE = 0.25;\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,IAAIA,KAAK;AAChB,CAAC,UAAUA,KAAK,EAAE;EACd;EACAA,KAAK,CAAC,MAAM,CAAC,GAAG,MAAM;EACtB;EACAA,KAAK,CAAC,KAAK,CAAC,GAAG,KAAK;EACpB;EACAA,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI;AACtB,CAAC,EAAEA,KAAK,KAAKA,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;AACzB;AACA;AACA;AACA,OAAO,IAAIC,SAAS;AACpB,CAAC,UAAUA,SAAS,EAAE;EAClBA,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK;EACxBA,SAAS,CAAC,UAAU,CAAC,GAAG,UAAU;EAClCA,SAAS,CAAC,WAAW,CAAC,GAAG,WAAW;EACpCA,SAAS,CAAC,OAAO,CAAC,GAAG,OAAO;EAC5BA,SAAS,CAAC,WAAW,CAAC,GAAG,WAAW;EACpCA,SAAS,CAAC,cAAc,CAAC,GAAG,cAAc;EAC1CA,SAAS,CAAC,MAAM,CAAC,GAAG,MAAM;EAC1BA,SAAS,CAAC,UAAU,CAAC,GAAG,UAAU;EAClCA,SAAS,CAAC,aAAa,CAAC,GAAG,aAAa;EACxCA,SAAS,CAAC,QAAQ,CAAC,GAAG,QAAQ;EAC9BA,SAAS,CAAC,aAAa,CAAC,GAAG,aAAa;EACxCA,SAAS,CAAC,cAAc,CAAC,GAAG,cAAc;EAC1CA,SAAS,CAAC,QAAQ,CAAC,GAAG,QAAQ;EAC9BA,SAAS,CAAC,QAAQ,CAAC,GAAG,QAAQ;EAC9B;EACAA,SAAS,CAAC,MAAM,CAAC,GAAG,MAAM;AAC9B,CAAC,EAAEA,SAAS,KAAKA,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;AACjC;AACA;AACA;AACA,OAAO,IAAIC,cAAc;AACzB,CAAC,UAAUA,cAAc,EAAE;EACvB;EACAA,cAAc,CAAC,MAAM,CAAC,GAAG,MAAM;EAC/B;EACAA,cAAc,CAAC,MAAM,CAAC,GAAG,MAAM;EAC/B;EACAA,cAAc,CAAC,QAAQ,CAAC,GAAG,QAAQ;EACnC;EACAA,cAAc,CAAC,SAAS,CAAC,GAAG,SAAS;EACrC;EACAA,cAAc,CAAC,YAAY,CAAC,GAAG,YAAY;EAC3C;EACAA,cAAc,CAAC,QAAQ,CAAC,GAAG,QAAQ;EACnC;EACAA,cAAc,CAAC,WAAW,CAAC,GAAG,WAAW;EACzC;EACAA,cAAc,CAAC,OAAO,CAAC,GAAG,OAAO;AACrC,CAAC,EAAEA,cAAc,KAAKA,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC;AAC3C;AACA;AACA;AACA,OAAO,IAAIC,aAAa,GAAG;EACvBC,IAAI,EAAE,CAAC;EACPC,GAAG,EAAE,CAAC;EACNC,EAAE,EAAE;AACR,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAIC,gBAAgB;AAC3B,CAAC,UAAUA,gBAAgB,EAAE;EACzBA,gBAAgB,CAAC,eAAe,CAAC,GAAG,cAAc;EAClDA,gBAAgB,CAAC,cAAc,CAAC,GAAG,aAAa;EAChDA,gBAAgB,CAAC,cAAc,CAAC,GAAG,aAAa;EAChDA,gBAAgB,CAAC,aAAa,CAAC,GAAG,YAAY;EAC9CA,gBAAgB,CAAC,oBAAoB,CAAC,GAAG,kBAAkB;EAC3DA,gBAAgB,CAAC,mBAAmB,CAAC,GAAG,iBAAiB;EACzDA,gBAAgB,CAAC,cAAc,CAAC,GAAG,aAAa;EAChDA,gBAAgB,CAAC,aAAa,CAAC,GAAG,YAAY;EAC9CA,gBAAgB,CAAC,gBAAgB,CAAC,GAAG,eAAe;EACpDA,gBAAgB,CAAC,oBAAoB,CAAC,GAAG,kBAAkB;EAC3DA,gBAAgB,CAAC,mBAAmB,CAAC,GAAG,iBAAiB;AAC7D,CAAC,EAAEA,gBAAgB,KAAKA,gBAAgB,GAAG,CAAC,CAAC,CAAC,CAAC;AAC/C;AACA;AACA;AACA,OAAO,IAAIC,oBAAoB;AAC/B,CAAC,UAAUA,oBAAoB,EAAE;EAC7BA,oBAAoB,CAAC,qBAAqB,CAAC,GAAG,eAAe;EAC7DA,oBAAoB,CAAC,oBAAoB,CAAC,GAAG,cAAc;EAC3DA,oBAAoB,CAAC,qBAAqB,CAAC,GAAG,mBAAmB;EACjEA,oBAAoB,CAAC,oBAAoB,CAAC,GAAG,kBAAkB;AACnE,CAAC,EAAEA,oBAAoB,KAAKA,oBAAoB,GAAG,CAAC,CAAC,CAAC,CAAC;AACvD;AACA;AACA;AACA,OAAO,IAAIC,WAAW;AACtB,CAAC,UAAUA,WAAW,EAAE;EACpB;EACAA,WAAW,CAAC,aAAa,CAAC,GAAG,iBAAiB;EAC9CA,WAAW,CAAC,YAAY,CAAC,GAAG,gBAAgB;EAC5CA,WAAW,CAAC,YAAY,CAAC,GAAG,gBAAgB;EAC5CA,WAAW,CAAC,UAAU,CAAC,GAAG,cAAc;EACxCA,WAAW,CAAC,aAAa,CAAC,GAAG,iBAAiB;EAC9C;EACAA,WAAW,CAAC,aAAa,CAAC,GAAG,iBAAiB;EAC9CA,WAAW,CAAC,YAAY,CAAC,GAAG,gBAAgB;EAC5CA,WAAW,CAAC,WAAW,CAAC,GAAG,eAAe;EAC1CA,WAAW,CAAC,cAAc,CAAC,GAAG,kBAAkB;EAChD;EACAA,WAAW,CAAC,OAAO,CAAC,GAAG,YAAY;EACnCA,WAAW,CAAC,UAAU,CAAC,GAAG,eAAe;EACzCA,WAAW,CAAC,aAAa,CAAC,GAAG,kBAAkB;EAC/CA,WAAW,CAAC,OAAO,CAAC,GAAG,YAAY;EACnCA,WAAW,CAAC,OAAO,CAAC,GAAG,YAAY;AACvC,CAAC,EAAEA,WAAW,KAAKA,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;AACrC;AACA;AACA;AACA,OAAO,IAAIC,aAAa;AACxB,CAAC,UAAUA,aAAa,EAAE;EACtBA,aAAa,CAAC,QAAQ,CAAC,GAAG,QAAQ;EAClCA,aAAa,CAAC,UAAU,CAAC,GAAG,UAAU;EACtCA,aAAa,CAAC,UAAU,CAAC,GAAG,UAAU;EACtCA,aAAa,CAAC,SAAS,CAAC,GAAG,SAAS;AACxC,CAAC,EAAEA,aAAa,KAAKA,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC;AACzC;AACA,OAAO,IAAIC,WAAW,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC;AACnD;AACA,OAAO,IAAIC,YAAY,GAAG,SAAS;AACnC;AACA,OAAO,IAAIC,eAAe,GAAG,CAAC;AAC9B;AACA,OAAO,IAAIC,gBAAgB,GAAG,CAAC;AAC/B;AACA,OAAO,IAAIC,6BAA6B,GAAG,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}