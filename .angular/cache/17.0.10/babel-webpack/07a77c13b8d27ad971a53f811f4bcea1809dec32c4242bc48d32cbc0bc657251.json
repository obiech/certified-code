{"ast":null,"code":"import { DriverOrdersGQL } from '@ridy/admin-panel/generated/graphql';\nimport { TableService } from '@ridy/admin-panel/src/app/@services/table-service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ridy/admin-panel/generated/graphql\";\nimport * as i2 from \"@ridy/admin-panel/src/app/@services/table-service\";\nexport class DriverProfileOrdersResolver {\n  constructor(gql, tableService) {\n    this.gql = gql;\n    this.tableService = tableService;\n  }\n  resolve(route, state) {\n    const paging = this.tableService.deserializeQueryParams(route.queryParams);\n    return this.gql.fetch({\n      driverId: route.parent?.params.id,\n      ...paging\n    });\n  }\n  static {\n    this.ɵfac = function DriverProfileOrdersResolver_Factory(t) {\n      return new (t || DriverProfileOrdersResolver)(i0.ɵɵinject(i1.DriverOrdersGQL), i0.ɵɵinject(i2.TableService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: DriverProfileOrdersResolver,\n      factory: DriverProfileOrdersResolver.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["DriverOrdersGQL","TableService","DriverProfileOrdersResolver","constructor","gql","tableService","resolve","route","state","paging","deserializeQueryParams","queryParams","fetch","driverId","parent","params","id","i0","ɵɵinject","i1","i2","factory","ɵfac"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/apps/admin-panel/src/app/cms/drivers/driver-profile/driver-profile-orders/driver-profile-orders.resolver.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { ApolloQueryResult } from '@apollo/client/core';\nimport { DriverOrdersGQL, DriverOrdersQuery, OrderFilter, OrderSortFields } from '@ridy/admin-panel/generated/graphql';\nimport { TableService } from '@ridy/admin-panel/src/app/@services/table-service';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class DriverProfileOrdersResolver  {\n  constructor(\n    private gql: DriverOrdersGQL,\n    private tableService: TableService\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ApolloQueryResult<DriverOrdersQuery>> {\n    const paging = this.tableService.deserializeQueryParams<OrderSortFields, OrderFilter>(route.queryParams);\n    return this.gql.fetch({ driverId: route.parent?.params.id, ...paging });\n  }\n}\n"],"mappings":"AAGA,SAASA,eAAe,QAAyD,qCAAqC;AACtH,SAASC,YAAY,QAAQ,mDAAmD;;;;AAIhF,OAAM,MAAOC,2BAA2B;EACtCC,YACUC,GAAoB,EACpBC,YAA0B;IAD1B,KAAAD,GAAG,GAAHA,GAAG;IACH,KAAAC,YAAY,GAAZA,YAAY;EAClB;EAEJC,OAAOA,CAACC,KAA6B,EAAEC,KAA0B;IAC/D,MAAMC,MAAM,GAAG,IAAI,CAACJ,YAAY,CAACK,sBAAsB,CAA+BH,KAAK,CAACI,WAAW,CAAC;IACxG,OAAO,IAAI,CAACP,GAAG,CAACQ,KAAK,CAAC;MAAEC,QAAQ,EAAEN,KAAK,CAACO,MAAM,EAAEC,MAAM,CAACC,EAAE;MAAE,GAAGP;IAAM,CAAE,CAAC;EACzE;;;uBATWP,2BAA2B,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAnB,eAAA,GAAAiB,EAAA,CAAAC,QAAA,CAAAE,EAAA,CAAAnB,YAAA;IAAA;EAAA;;;aAA3BC,2BAA2B;MAAAmB,OAAA,EAA3BnB,2BAA2B,CAAAoB;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}