{"ast":null,"code":"/**\n * @fileoverview 矩形\n * @author dxq613@gmail.com\n */\nimport { __assign, __extends } from \"tslib\";\nimport ShapeBase from './base';\nimport { parseRadius } from '../util/parse';\nimport { inBox } from '../util/util';\nimport inRect from '../util/in-stroke/rect';\nimport inRectWithRadius from '../util/in-stroke/rect-radius';\nimport isPointInPath from '../util/in-path/point-in-path';\nvar Rect = /** @class */function (_super) {\n  __extends(Rect, _super);\n  function Rect() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Rect.prototype.getDefaultAttrs = function () {\n    var attrs = _super.prototype.getDefaultAttrs.call(this);\n    return __assign(__assign({}, attrs), {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0,\n      radius: 0\n    });\n  };\n  Rect.prototype.isInStrokeOrPath = function (x, y, isStroke, isFill, lineWidth) {\n    var attrs = this.attr();\n    var minX = attrs.x;\n    var minY = attrs.y;\n    var width = attrs.width;\n    var height = attrs.height;\n    var radius = attrs.radius;\n    // 无圆角时的策略\n    if (!radius) {\n      var halfWidth = lineWidth / 2;\n      // 同时填充和带有边框\n      if (isFill && isStroke) {\n        return inBox(minX - halfWidth, minY - halfWidth, width + halfWidth, height + halfWidth, x, y);\n      }\n      // 仅填充\n      if (isFill) {\n        return inBox(minX, minY, width, height, x, y);\n      }\n      if (isStroke) {\n        return inRect(minX, minY, width, height, lineWidth, x, y);\n      }\n    } else {\n      var isHit = false;\n      if (isStroke) {\n        isHit = inRectWithRadius(minX, minY, width, height, radius, lineWidth, x, y);\n      }\n      // 仅填充时带有圆角的矩形直接通过图形拾取\n      // 以后可以改成纯数学的近似拾取，将圆弧切割成多边形\n      if (!isHit && isFill) {\n        isHit = isPointInPath(this, x, y);\n      }\n      return isHit;\n    }\n  };\n  Rect.prototype.createPath = function (context) {\n    var attrs = this.attr();\n    var x = attrs.x;\n    var y = attrs.y;\n    var width = attrs.width;\n    var height = attrs.height;\n    var radius = attrs.radius;\n    context.beginPath();\n    if (radius === 0) {\n      // 改成原生的rect方法\n      context.rect(x, y, width, height);\n    } else {\n      var _a = parseRadius(radius),\n        r1 = _a[0],\n        r2 = _a[1],\n        r3 = _a[2],\n        r4 = _a[3];\n      context.moveTo(x + r1, y);\n      context.lineTo(x + width - r2, y);\n      r2 !== 0 && context.arc(x + width - r2, y + r2, r2, -Math.PI / 2, 0);\n      context.lineTo(x + width, y + height - r3);\n      r3 !== 0 && context.arc(x + width - r3, y + height - r3, r3, 0, Math.PI / 2);\n      context.lineTo(x + r4, y + height);\n      r4 !== 0 && context.arc(x + r4, y + height - r4, r4, Math.PI / 2, Math.PI);\n      context.lineTo(x, y + r1);\n      r1 !== 0 && context.arc(x + r1, y + r1, r1, Math.PI, Math.PI * 1.5);\n      context.closePath();\n    }\n  };\n  return Rect;\n}(ShapeBase);\nexport default Rect;","map":{"version":3,"names":["__assign","__extends","ShapeBase","parseRadius","inBox","inRect","inRectWithRadius","isPointInPath","Rect","_super","apply","arguments","prototype","getDefaultAttrs","attrs","call","x","y","width","height","radius","isInStrokeOrPath","isStroke","isFill","lineWidth","attr","minX","minY","halfWidth","isHit","createPath","context","beginPath","rect","_a","r1","r2","r3","r4","moveTo","lineTo","arc","Math","PI","closePath"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g-canvas/esm/shape/rect.js"],"sourcesContent":["/**\n * @fileoverview 矩形\n * @author dxq613@gmail.com\n */\nimport { __assign, __extends } from \"tslib\";\nimport ShapeBase from './base';\nimport { parseRadius } from '../util/parse';\nimport { inBox } from '../util/util';\nimport inRect from '../util/in-stroke/rect';\nimport inRectWithRadius from '../util/in-stroke/rect-radius';\nimport isPointInPath from '../util/in-path/point-in-path';\nvar Rect = /** @class */ (function (_super) {\n    __extends(Rect, _super);\n    function Rect() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Rect.prototype.getDefaultAttrs = function () {\n        var attrs = _super.prototype.getDefaultAttrs.call(this);\n        return __assign(__assign({}, attrs), { x: 0, y: 0, width: 0, height: 0, radius: 0 });\n    };\n    Rect.prototype.isInStrokeOrPath = function (x, y, isStroke, isFill, lineWidth) {\n        var attrs = this.attr();\n        var minX = attrs.x;\n        var minY = attrs.y;\n        var width = attrs.width;\n        var height = attrs.height;\n        var radius = attrs.radius;\n        // 无圆角时的策略\n        if (!radius) {\n            var halfWidth = lineWidth / 2;\n            // 同时填充和带有边框\n            if (isFill && isStroke) {\n                return inBox(minX - halfWidth, minY - halfWidth, width + halfWidth, height + halfWidth, x, y);\n            }\n            // 仅填充\n            if (isFill) {\n                return inBox(minX, minY, width, height, x, y);\n            }\n            if (isStroke) {\n                return inRect(minX, minY, width, height, lineWidth, x, y);\n            }\n        }\n        else {\n            var isHit = false;\n            if (isStroke) {\n                isHit = inRectWithRadius(minX, minY, width, height, radius, lineWidth, x, y);\n            }\n            // 仅填充时带有圆角的矩形直接通过图形拾取\n            // 以后可以改成纯数学的近似拾取，将圆弧切割成多边形\n            if (!isHit && isFill) {\n                isHit = isPointInPath(this, x, y);\n            }\n            return isHit;\n        }\n    };\n    Rect.prototype.createPath = function (context) {\n        var attrs = this.attr();\n        var x = attrs.x;\n        var y = attrs.y;\n        var width = attrs.width;\n        var height = attrs.height;\n        var radius = attrs.radius;\n        context.beginPath();\n        if (radius === 0) {\n            // 改成原生的rect方法\n            context.rect(x, y, width, height);\n        }\n        else {\n            var _a = parseRadius(radius), r1 = _a[0], r2 = _a[1], r3 = _a[2], r4 = _a[3];\n            context.moveTo(x + r1, y);\n            context.lineTo(x + width - r2, y);\n            r2 !== 0 && context.arc(x + width - r2, y + r2, r2, -Math.PI / 2, 0);\n            context.lineTo(x + width, y + height - r3);\n            r3 !== 0 && context.arc(x + width - r3, y + height - r3, r3, 0, Math.PI / 2);\n            context.lineTo(x + r4, y + height);\n            r4 !== 0 && context.arc(x + r4, y + height - r4, r4, Math.PI / 2, Math.PI);\n            context.lineTo(x, y + r1);\n            r1 !== 0 && context.arc(x + r1, y + r1, r1, Math.PI, Math.PI * 1.5);\n            context.closePath();\n        }\n    };\n    return Rect;\n}(ShapeBase));\nexport default Rect;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}