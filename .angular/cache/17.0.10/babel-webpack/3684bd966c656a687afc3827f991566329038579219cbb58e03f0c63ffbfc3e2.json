{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, inject, Injector, afterNextRender, ViewChild, Inject, Optional, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject, Observable, fromEvent, EMPTY, Subscription } from 'rxjs';\nimport { takeUntil, switchMap, first } from 'rxjs/operators';\nimport * as i6 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport * as i4 from 'ng-zorro-antd/core/trans-button';\nimport { NzTransButtonModule } from 'ng-zorro-antd/core/trans-button';\nimport * as i5 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i3 from 'ng-zorro-antd/tooltip';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport * as i1 from '@angular/cdk/clipboard';\nimport * as i2 from 'ng-zorro-antd/i18n';\nimport { ESCAPE, ENTER } from '@angular/cdk/keycodes';\nimport { NgIf, DOCUMENT, NgTemplateOutlet } from '@angular/common';\nimport * as i2$1 from 'ng-zorro-antd/core/services';\nimport { NzDestroyService } from 'ng-zorro-antd/core/services';\nimport * as i3$1 from 'ng-zorro-antd/input';\nimport { NzAutosizeDirective, NzInputModule } from 'ng-zorro-antd/input';\nimport { __decorate } from 'tslib';\nimport * as i1$1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { cancelRequestAnimationFrame, reqAnimFrame } from 'ng-zorro-antd/core/polyfill';\nimport { isStyleSupport, measure, InputBoolean, InputNumber } from 'ng-zorro-antd/core/util';\nimport * as i2$2 from '@angular/cdk/platform';\nimport * as i5$1 from '@angular/cdk/bidi';\nfunction NzTextCopyComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"span\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const icon_r1 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"nzType\", icon_r1);\n  }\n}\nconst _c0 = [\"textarea\"];\nfunction NzTextEditComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"textarea\", 2, 3);\n    i0.ɵɵlistener(\"blur\", function NzTextEditComponent_ng_template_0_Template_textarea_blur_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.confirm());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function NzTextEditComponent_ng_template_0_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.confirm());\n    });\n    i0.ɵɵelement(3, \"span\", 5);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NzTextEditComponent_ng_template_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"span\", 8);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const icon_r8 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"nzType\", icon_r8);\n  }\n}\nfunction NzTextEditComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function NzTextEditComponent_ng_template_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onClick());\n    });\n    i0.ɵɵtemplate(1, NzTextEditComponent_ng_template_1_ng_container_1_Template, 2, 1, \"ng-container\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nzTooltipTitle\", ctx_r1.tooltip === null ? null : ctx_r1.tooltip || (ctx_r1.locale == null ? null : ctx_r1.locale.edit));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r1.icon);\n  }\n}\nconst _c1 = [\"ellipsisContainer\"];\nconst _c2 = [\"expandable\"];\nconst _c3 = [\"contentTemplate\"];\nfunction NzTypographyComponent_ng_template_0_ng_content_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 0, [\"*ngIf\", \"!content\"]);\n  }\n}\nfunction NzTypographyComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzTypographyComponent_ng_template_0_ng_content_0_Template, 1, 0, \"ng-content\", 1);\n    i0.ɵɵtext(1);\n  }\n  if (rf & 2) {\n    const content_r5 = ctx.content;\n    i0.ɵɵproperty(\"ngIf\", !content_r5);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", content_r5, \" \");\n  }\n}\nfunction NzTypographyComponent_ng_container_2_ng_container_1_ng_template_1_Template(rf, ctx) {}\nfunction NzTypographyComponent_ng_container_2_ng_container_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r11.nzSuffix);\n  }\n}\nconst _c4 = a0 => ({\n  content: a0\n});\nfunction NzTypographyComponent_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzTypographyComponent_ng_container_2_ng_container_1_ng_template_1_Template, 0, 0, \"ng-template\", 6)(2, NzTypographyComponent_ng_container_2_ng_container_1_ng_container_2_Template, 2, 1, \"ng-container\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    const _r1 = i0.ɵɵreference(1);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r1)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(3, _c4, ctx_r7.nzContent));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.nzSuffix);\n  }\n}\nfunction NzTypographyComponent_ng_container_2_ng_template_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r13.ellipsisStr);\n  }\n}\nfunction NzTypographyComponent_ng_container_2_ng_template_2_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r14.nzSuffix);\n  }\n}\nfunction NzTypographyComponent_ng_container_2_ng_template_2_a_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 9, 10);\n    i0.ɵɵlistener(\"click\", function NzTypographyComponent_ng_container_2_ng_template_2_a_4_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r17.onExpand());\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r15.locale == null ? null : ctx_r15.locale.expand, \" \");\n  }\n}\nfunction NzTypographyComponent_ng_container_2_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", null, 7);\n    i0.ɵɵtemplate(2, NzTypographyComponent_ng_container_2_ng_template_2_ng_container_2_Template, 2, 1, \"ng-container\", 1)(3, NzTypographyComponent_ng_container_2_ng_template_2_ng_container_3_Template, 2, 1, \"ng-container\", 1)(4, NzTypographyComponent_ng_container_2_ng_template_2_a_4_Template, 3, 1, \"a\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.isEllipsis);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.nzSuffix);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.nzExpandable && ctx_r8.isEllipsis);\n  }\n}\nfunction NzTypographyComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzTypographyComponent_ng_container_2_ng_container_1_Template, 3, 5, \"ng-container\", 4)(2, NzTypographyComponent_ng_container_2_ng_template_2_Template, 5, 3, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const _r9 = i0.ɵɵreference(3);\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.expanded || !ctx_r2.hasOperationsWithEllipsis && ctx_r2.nzEllipsisRows === 1 && !ctx_r2.hasEllipsisObservers || ctx_r2.canCssEllipsis || ctx_r2.nzSuffix && ctx_r2.expanded)(\"ngIfElse\", _r9);\n  }\n}\nfunction NzTypographyComponent_nz_text_edit_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"nz-text-edit\", 11);\n    i0.ɵɵlistener(\"endEditing\", function NzTypographyComponent_nz_text_edit_3_Template_nz_text_edit_endEditing_0_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.onEndEditing($event));\n    })(\"startEditing\", function NzTypographyComponent_nz_text_edit_3_Template_nz_text_edit_startEditing_0_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.onStartEditing());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"text\", ctx_r3.nzContent)(\"icon\", ctx_r3.nzEditIcon)(\"tooltip\", ctx_r3.nzEditTooltip);\n  }\n}\nfunction NzTypographyComponent_nz_text_copy_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"nz-text-copy\", 12);\n    i0.ɵɵlistener(\"textCopy\", function NzTypographyComponent_nz_text_copy_4_Template_nz_text_copy_textCopy_0_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.onTextCopy($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"text\", ctx_r4.copyText)(\"tooltips\", ctx_r4.nzCopyTooltips)(\"icons\", ctx_r4.nzCopyIcons);\n  }\n}\nconst _c5 = [\"*\"];\nclass NzTextCopyComponent {\n  constructor(host, cdr, clipboard, i18n) {\n    this.host = host;\n    this.cdr = cdr;\n    this.clipboard = clipboard;\n    this.i18n = i18n;\n    this.copied = false;\n    this.nativeElement = this.host.nativeElement;\n    this.copyTooltip = null;\n    this.copedTooltip = null;\n    this.copyIcon = 'copy';\n    this.copedIcon = 'check';\n    this.destroy$ = new Subject();\n    this.icons = ['copy', 'check'];\n    this.textCopy = new EventEmitter();\n  }\n  ngOnInit() {\n    this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.locale = this.i18n.getLocaleData('Text');\n      this.updateTooltips();\n      this.cdr.markForCheck();\n    });\n  }\n  ngOnChanges(changes) {\n    const {\n      tooltips,\n      icons\n    } = changes;\n    if (tooltips) {\n      this.updateTooltips();\n    }\n    if (icons) {\n      this.updateIcons();\n    }\n  }\n  ngOnDestroy() {\n    clearTimeout(this.copyId);\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  onClick() {\n    if (this.copied) {\n      return;\n    }\n    this.copied = true;\n    this.cdr.detectChanges();\n    const text = this.text;\n    this.textCopy.emit(text);\n    this.clipboard.copy(text);\n    this.onCopied();\n  }\n  onCopied() {\n    clearTimeout(this.copyId);\n    this.copyId = setTimeout(() => {\n      this.copied = false;\n      this.cdr.detectChanges();\n    }, 3000);\n  }\n  updateTooltips() {\n    if (this.tooltips === null) {\n      this.copedTooltip = null;\n      this.copyTooltip = null;\n    } else if (Array.isArray(this.tooltips)) {\n      const [copyTooltip, copedTooltip] = this.tooltips;\n      this.copyTooltip = copyTooltip || this.locale?.copy;\n      this.copedTooltip = copedTooltip || this.locale?.copied;\n    } else {\n      this.copyTooltip = this.locale?.copy;\n      this.copedTooltip = this.locale?.copied;\n    }\n    this.cdr.markForCheck();\n  }\n  updateIcons() {\n    const [copyIcon, copedIcon] = this.icons;\n    this.copyIcon = copyIcon;\n    this.copedIcon = copedIcon;\n    this.cdr.markForCheck();\n  }\n  static {\n    this.ɵfac = function NzTextCopyComponent_Factory(t) {\n      return new (t || NzTextCopyComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.Clipboard), i0.ɵɵdirectiveInject(i2.NzI18nService));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzTextCopyComponent,\n      selectors: [[\"nz-text-copy\"]],\n      inputs: {\n        text: \"text\",\n        tooltips: \"tooltips\",\n        icons: \"icons\"\n      },\n      outputs: {\n        textCopy: \"textCopy\"\n      },\n      exportAs: [\"nzTextCopy\"],\n      standalone: true,\n      features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      decls: 2,\n      vars: 4,\n      consts: [[\"type\", \"button\", \"nz-tooltip\", \"\", \"nz-trans-button\", \"\", 1, \"ant-typography-copy\", 3, \"nzTooltipTitle\", \"click\"], [4, \"nzStringTemplateOutlet\"], [\"nz-icon\", \"\", 3, \"nzType\"]],\n      template: function NzTextCopyComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"button\", 0);\n          i0.ɵɵlistener(\"click\", function NzTextCopyComponent_Template_button_click_0_listener() {\n            return ctx.onClick();\n          });\n          i0.ɵɵtemplate(1, NzTextCopyComponent_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ant-typography-copy-success\", ctx.copied);\n          i0.ɵɵproperty(\"nzTooltipTitle\", ctx.copied ? ctx.copedTooltip : ctx.copyTooltip);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.copied ? ctx.copedIcon : ctx.copyIcon);\n        }\n      },\n      dependencies: [NzToolTipModule, i3.NzTooltipDirective, NzTransButtonModule, i4.NzTransButtonDirective, NzIconModule, i5.NzIconDirective, NzOutletModule, i6.NzStringTemplateOutletDirective],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTextCopyComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-text-copy',\n      exportAs: 'nzTextCopy',\n      template: `\n    <button\n      type=\"button\"\n      nz-tooltip\n      nz-trans-button\n      [nzTooltipTitle]=\"copied ? copedTooltip : copyTooltip\"\n      class=\"ant-typography-copy\"\n      [class.ant-typography-copy-success]=\"copied\"\n      (click)=\"onClick()\"\n    >\n      <ng-container *nzStringTemplateOutlet=\"copied ? copedIcon : copyIcon; let icon\">\n        <span nz-icon [nzType]=\"icon\"></span>\n      </ng-container>\n    </button>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      preserveWhitespaces: false,\n      imports: [NzToolTipModule, NzTransButtonModule, NzIconModule, NzOutletModule],\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i1.Clipboard\n  }, {\n    type: i2.NzI18nService\n  }], {\n    text: [{\n      type: Input\n    }],\n    tooltips: [{\n      type: Input\n    }],\n    icons: [{\n      type: Input\n    }],\n    textCopy: [{\n      type: Output\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTextEditComponent {\n  set textarea(textarea) {\n    this.textarea$.next(textarea);\n  }\n  constructor(ngZone, host, cdr, i18n, destroy$) {\n    this.ngZone = ngZone;\n    this.host = host;\n    this.cdr = cdr;\n    this.i18n = i18n;\n    this.destroy$ = destroy$;\n    this.editing = false;\n    this.icon = 'edit';\n    this.startEditing = new EventEmitter();\n    this.endEditing = new EventEmitter(true);\n    this.nativeElement = this.host.nativeElement;\n    // We could've saved the textarea within some private property (e.g. `_textarea`) and have a getter,\n    // but having subject makes the code more reactive and cancellable (e.g. event listeners will be\n    // automatically removed and re-added through the `switchMap` below).\n    this.textarea$ = new BehaviorSubject(null);\n    this.injector = inject(Injector);\n  }\n  ngOnInit() {\n    this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.locale = this.i18n.getLocaleData('Text');\n      this.cdr.markForCheck();\n    });\n    this.textarea$.pipe(switchMap(textarea =>\n    // Caretaker note: we explicitly should call `subscribe()` within the root zone.\n    // `runOutsideAngular(() => fromEvent(...))` will just create an observable within the root zone,\n    // but `addEventListener` is called when the `fromEvent` is subscribed.\n    textarea ? new Observable(subscriber => this.ngZone.runOutsideAngular(() => fromEvent(textarea.nativeElement, 'keydown').subscribe(subscriber))) : EMPTY), takeUntil(this.destroy$)).subscribe(event => {\n      // Caretaker note: adding modifier at the end (for instance `(keydown.esc)`) will tell Angular to add\n      // an event listener through the `KeyEventsPlugin`, which always runs `ngZone.runGuarded()` internally.\n      // We're interested only in escape and enter keyboard buttons, otherwise Angular will run change detection\n      // on any `keydown` event.\n      if (event.keyCode !== ESCAPE && event.keyCode !== ENTER) {\n        return;\n      }\n      this.ngZone.run(() => {\n        if (event.keyCode === ESCAPE) {\n          this.onCancel();\n        } else {\n          this.onEnter(event);\n        }\n        this.cdr.markForCheck();\n      });\n    });\n    this.textarea$.pipe(switchMap(textarea => textarea ? new Observable(subscriber => this.ngZone.runOutsideAngular(() => fromEvent(textarea.nativeElement, 'input').subscribe(subscriber))) : EMPTY), takeUntil(this.destroy$)).subscribe(event => {\n      this.currentText = event.target.value;\n    });\n  }\n  onClick() {\n    this.beforeText = this.text;\n    this.currentText = this.beforeText;\n    this.editing = true;\n    this.startEditing.emit();\n    this.focusAndSetValue();\n  }\n  confirm() {\n    this.editing = false;\n    this.endEditing.emit(this.currentText);\n  }\n  onEnter(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    this.confirm();\n  }\n  onCancel() {\n    this.currentText = this.beforeText;\n    this.confirm();\n  }\n  focusAndSetValue() {\n    const {\n      injector\n    } = this;\n    afterNextRender(() => {\n      this.textarea$.pipe(\n      // It may still not be available, so we need to wait until view queries\n      // are executed during the change detection. It's safer to wait until\n      // the query runs and the textarea is set on the behavior subject.\n      first(textarea => textarea != null), takeUntil(this.destroy$)).subscribe(textarea => {\n        textarea.nativeElement.focus();\n        textarea.nativeElement.value = this.currentText || '';\n        this.autosizeDirective.resizeToFitContent();\n        this.cdr.markForCheck();\n      });\n    }, {\n      injector\n    });\n  }\n  static {\n    this.ɵfac = function NzTextEditComponent_Factory(t) {\n      return new (t || NzTextEditComponent)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.NzI18nService), i0.ɵɵdirectiveInject(i2$1.NzDestroyService));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzTextEditComponent,\n      selectors: [[\"nz-text-edit\"]],\n      viewQuery: function NzTextEditComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n          i0.ɵɵviewQuery(NzAutosizeDirective, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textarea = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.autosizeDirective = _t.first);\n        }\n      },\n      inputs: {\n        text: \"text\",\n        icon: \"icon\",\n        tooltip: \"tooltip\"\n      },\n      outputs: {\n        startEditing: \"startEditing\",\n        endEditing: \"endEditing\"\n      },\n      exportAs: [\"nzTextEdit\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([NzDestroyService]), i0.ɵɵStandaloneFeature],\n      decls: 3,\n      vars: 2,\n      consts: [[3, \"ngIf\", \"ngIfElse\"], [\"notEditing\", \"\"], [\"nz-input\", \"\", \"nzAutosize\", \"\", 3, \"blur\"], [\"textarea\", \"\"], [\"nz-trans-button\", \"\", 1, \"ant-typography-edit-content-confirm\", 3, \"click\"], [\"nz-icon\", \"\", \"nzType\", \"enter\"], [\"nz-tooltip\", \"\", \"nz-trans-button\", \"\", 1, \"ant-typography-edit\", 3, \"nzTooltipTitle\", \"click\"], [4, \"nzStringTemplateOutlet\"], [\"nz-icon\", \"\", 3, \"nzType\"]],\n      template: function NzTextEditComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, NzTextEditComponent_ng_template_0_Template, 4, 0, \"ng-template\", 0)(1, NzTextEditComponent_ng_template_1_Template, 2, 2, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n        }\n        if (rf & 2) {\n          const _r2 = i0.ɵɵreference(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.editing)(\"ngIfElse\", _r2);\n        }\n      },\n      dependencies: [NgIf, NzInputModule, i3$1.NzInputDirective, i3$1.NzAutosizeDirective, NzTransButtonModule, i4.NzTransButtonDirective, NzIconModule, i5.NzIconDirective, NzToolTipModule, i3.NzTooltipDirective, NzOutletModule, i6.NzStringTemplateOutletDirective],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTextEditComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-text-edit',\n      exportAs: 'nzTextEdit',\n      template: `\n    <ng-template [ngIf]=\"editing\" [ngIfElse]=\"notEditing\">\n      <textarea #textarea nz-input nzAutosize (blur)=\"confirm()\"></textarea>\n      <button nz-trans-button class=\"ant-typography-edit-content-confirm\" (click)=\"confirm()\">\n        <span nz-icon nzType=\"enter\"></span>\n      </button>\n    </ng-template>\n\n    <ng-template #notEditing>\n      <button\n        nz-tooltip\n        nz-trans-button\n        class=\"ant-typography-edit\"\n        [nzTooltipTitle]=\"tooltip === null ? null : tooltip || locale?.edit\"\n        (click)=\"onClick()\"\n      >\n        <ng-container *nzStringTemplateOutlet=\"icon; let icon\">\n          <span nz-icon [nzType]=\"icon\"></span>\n        </ng-container>\n      </button>\n    </ng-template>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      preserveWhitespaces: false,\n      providers: [NzDestroyService],\n      imports: [NgIf, NzInputModule, NzTransButtonModule, NzIconModule, NzToolTipModule, NzOutletModule],\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.NgZone\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i2.NzI18nService\n  }, {\n    type: i2$1.NzDestroyService\n  }], {\n    text: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }],\n    tooltip: [{\n      type: Input\n    }],\n    startEditing: [{\n      type: Output\n    }],\n    endEditing: [{\n      type: Output\n    }],\n    textarea: [{\n      type: ViewChild,\n      args: ['textarea', {\n        static: false\n      }]\n    }],\n    autosizeDirective: [{\n      type: ViewChild,\n      args: [NzAutosizeDirective, {\n        static: false\n      }]\n    }]\n  });\n})();\nconst NZ_CONFIG_MODULE_NAME = 'typography';\nconst EXPAND_ELEMENT_CLASSNAME = 'ant-typography-expand';\nclass NzTypographyComponent {\n  get hasEllipsisObservers() {\n    return this.nzOnEllipsis.observers.length > 0;\n  }\n  get canCssEllipsis() {\n    return this.nzEllipsis && this.cssEllipsis && !this.expanded && !this.hasEllipsisObservers;\n  }\n  get hasOperationsWithEllipsis() {\n    return (this.nzCopyable || this.nzEditable || this.nzExpandable) && this.nzEllipsis;\n  }\n  get copyText() {\n    return typeof this.nzCopyText === 'string' ? this.nzCopyText : this.nzContent;\n  }\n  constructor(nzConfigService, host, cdr, viewContainerRef, renderer, platform, i18n, document, resizeService, directionality) {\n    this.nzConfigService = nzConfigService;\n    this.host = host;\n    this.cdr = cdr;\n    this.viewContainerRef = viewContainerRef;\n    this.renderer = renderer;\n    this.platform = platform;\n    this.i18n = i18n;\n    this.resizeService = resizeService;\n    this.directionality = directionality;\n    this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n    this.nzCopyable = false;\n    this.nzEditable = false;\n    this.nzDisabled = false;\n    this.nzExpandable = false;\n    this.nzEllipsis = false;\n    this.nzCopyTooltips = undefined;\n    this.nzCopyIcons = ['copy', 'check'];\n    this.nzEditTooltip = undefined;\n    this.nzEditIcon = 'edit';\n    this.nzEllipsisRows = 1;\n    this.nzContentChange = new EventEmitter();\n    this.nzCopy = new EventEmitter();\n    this.nzExpandChange = new EventEmitter();\n    // This is not a two-way binding output with {@link nzEllipsis}\n    this.nzOnEllipsis = new EventEmitter();\n    this.expandableBtnElementCache = null;\n    this.editing = false;\n    this.cssEllipsis = false;\n    this.isEllipsis = true;\n    this.expanded = false;\n    this.ellipsisStr = '...';\n    this.dir = 'ltr';\n    this.viewInit = false;\n    this.rfaId = -1;\n    this.destroy$ = new Subject();\n    this.windowResizeSubscription = Subscription.EMPTY;\n    this.document = document;\n  }\n  onTextCopy(text) {\n    this.nzCopy.emit(text);\n  }\n  onStartEditing() {\n    this.editing = true;\n  }\n  onEndEditing(text) {\n    this.editing = false;\n    this.nzContentChange.emit(text);\n    if (this.nzContent === text) {\n      this.renderOnNextFrame();\n    }\n    this.cdr.markForCheck();\n  }\n  onExpand() {\n    this.isEllipsis = false;\n    this.expanded = true;\n    this.nzExpandChange.emit();\n    this.nzOnEllipsis.emit(false);\n  }\n  canUseCSSEllipsis() {\n    if (this.nzEditable || this.nzCopyable || this.nzExpandable || this.nzSuffix) {\n      return false;\n    }\n    // make sure {@link nzOnEllipsis} works, will force use JS to calculations\n    if (this.hasEllipsisObservers) {\n      return false;\n    }\n    if (this.nzEllipsisRows === 1) {\n      return isStyleSupport('textOverflow');\n    } else {\n      return isStyleSupport('webkitLineClamp');\n    }\n  }\n  renderOnNextFrame() {\n    cancelRequestAnimationFrame(this.rfaId);\n    if (!this.viewInit || !this.nzEllipsis || this.nzEllipsisRows < 0 || this.expanded || !this.platform.isBrowser) {\n      return;\n    }\n    this.rfaId = reqAnimFrame(() => {\n      this.syncEllipsis();\n    });\n  }\n  getOriginContentViewRef() {\n    const viewRef = this.viewContainerRef.createEmbeddedView(this.contentTemplate, {\n      content: this.nzContent\n    });\n    viewRef.detectChanges();\n    return {\n      viewRef,\n      removeView: () => {\n        this.viewContainerRef.remove(this.viewContainerRef.indexOf(viewRef));\n      }\n    };\n  }\n  syncEllipsis() {\n    if (this.cssEllipsis) {\n      return;\n    }\n    const {\n      viewRef,\n      removeView\n    } = this.getOriginContentViewRef();\n    const fixedNodes = [this.textCopyRef, this.textEditRef].filter(e => e && e.nativeElement).map(e => e.nativeElement);\n    const expandableBtnElement = this.getExpandableBtnElement();\n    if (expandableBtnElement) {\n      fixedNodes.push(expandableBtnElement);\n    }\n    const {\n      contentNodes,\n      text,\n      ellipsis\n    } = measure(this.host.nativeElement, this.nzEllipsisRows, viewRef.rootNodes, fixedNodes, this.ellipsisStr, this.nzSuffix);\n    removeView();\n    this.ellipsisText = text;\n    if (ellipsis !== this.isEllipsis) {\n      this.isEllipsis = ellipsis;\n      this.nzOnEllipsis.emit(ellipsis);\n    }\n    const ellipsisContainerNativeElement = this.ellipsisContainer.nativeElement;\n    while (ellipsisContainerNativeElement.firstChild) {\n      this.renderer.removeChild(ellipsisContainerNativeElement, ellipsisContainerNativeElement.firstChild);\n    }\n    contentNodes.forEach(n => {\n      this.renderer.appendChild(ellipsisContainerNativeElement, n.cloneNode(true));\n    });\n    this.cdr.markForCheck();\n  }\n  // Need to create the element for calculation size before view init\n  getExpandableBtnElement() {\n    if (this.nzExpandable) {\n      const expandText = this.locale ? this.locale.expand : '';\n      const cache = this.expandableBtnElementCache;\n      if (!cache || cache.innerText === expandText) {\n        const el = this.document.createElement('a');\n        el.className = EXPAND_ELEMENT_CLASSNAME;\n        el.innerText = expandText;\n        this.expandableBtnElementCache = el;\n      }\n      return this.expandableBtnElementCache;\n    } else {\n      this.expandableBtnElementCache = null;\n      return null;\n    }\n  }\n  renderAndSubscribeWindowResize() {\n    if (this.platform.isBrowser) {\n      this.windowResizeSubscription.unsubscribe();\n      this.cssEllipsis = this.canUseCSSEllipsis();\n      this.renderOnNextFrame();\n      this.windowResizeSubscription = this.resizeService.subscribe().pipe(takeUntil(this.destroy$)).subscribe(() => this.renderOnNextFrame());\n    }\n  }\n  ngOnInit() {\n    this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.locale = this.i18n.getLocaleData('Text');\n      this.cdr.markForCheck();\n    });\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n    this.dir = this.directionality.value;\n  }\n  ngAfterViewInit() {\n    this.viewInit = true;\n    this.renderAndSubscribeWindowResize();\n  }\n  ngOnChanges(changes) {\n    const {\n      nzCopyable,\n      nzEditable,\n      nzExpandable,\n      nzEllipsis,\n      nzContent,\n      nzEllipsisRows,\n      nzSuffix\n    } = changes;\n    if (nzCopyable || nzEditable || nzExpandable || nzEllipsis || nzContent || nzEllipsisRows || nzSuffix) {\n      if (this.nzEllipsis) {\n        if (this.expanded) {\n          this.windowResizeSubscription.unsubscribe();\n        } else {\n          this.renderAndSubscribeWindowResize();\n        }\n      }\n    }\n  }\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n    this.expandableBtnElementCache = null;\n    this.windowResizeSubscription.unsubscribe();\n  }\n  static {\n    this.ɵfac = function NzTypographyComponent_Factory(t) {\n      return new (t || NzTypographyComponent)(i0.ɵɵdirectiveInject(i1$1.NzConfigService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i2$2.Platform), i0.ɵɵdirectiveInject(i2.NzI18nService), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i2$1.NzResizeService), i0.ɵɵdirectiveInject(i5$1.Directionality, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzTypographyComponent,\n      selectors: [[\"nz-typography\"], [\"\", \"nz-typography\", \"\"], [\"p\", \"nz-paragraph\", \"\"], [\"span\", \"nz-text\", \"\"], [\"h1\", \"nz-title\", \"\"], [\"h2\", \"nz-title\", \"\"], [\"h3\", \"nz-title\", \"\"], [\"h4\", \"nz-title\", \"\"]],\n      viewQuery: function NzTypographyComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(NzTextEditComponent, 5);\n          i0.ɵɵviewQuery(NzTextCopyComponent, 5);\n          i0.ɵɵviewQuery(_c1, 5);\n          i0.ɵɵviewQuery(_c2, 5);\n          i0.ɵɵviewQuery(_c3, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textEditRef = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textCopyRef = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ellipsisContainer = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.expandableBtn = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentTemplate = _t.first);\n        }\n      },\n      hostVars: 26,\n      hostBindings: function NzTypographyComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"-webkit-line-clamp\", ctx.canCssEllipsis && ctx.nzEllipsisRows > 1 ? ctx.nzEllipsisRows : null);\n          i0.ɵɵclassProp(\"ant-typography\", !ctx.editing)(\"ant-typography-rtl\", ctx.dir === \"rtl\")(\"ant-typography-edit-content\", ctx.editing)(\"ant-typography-secondary\", ctx.nzType === \"secondary\")(\"ant-typography-warning\", ctx.nzType === \"warning\")(\"ant-typography-danger\", ctx.nzType === \"danger\")(\"ant-typography-success\", ctx.nzType === \"success\")(\"ant-typography-disabled\", ctx.nzDisabled)(\"ant-typography-ellipsis\", ctx.nzEllipsis && !ctx.expanded)(\"ant-typography-single-line\", ctx.nzEllipsis && ctx.nzEllipsisRows === 1)(\"ant-typography-ellipsis-single-line\", ctx.canCssEllipsis && ctx.nzEllipsisRows === 1)(\"ant-typography-ellipsis-multiple-line\", ctx.canCssEllipsis && ctx.nzEllipsisRows > 1);\n        }\n      },\n      inputs: {\n        nzCopyable: \"nzCopyable\",\n        nzEditable: \"nzEditable\",\n        nzDisabled: \"nzDisabled\",\n        nzExpandable: \"nzExpandable\",\n        nzEllipsis: \"nzEllipsis\",\n        nzCopyTooltips: \"nzCopyTooltips\",\n        nzCopyIcons: \"nzCopyIcons\",\n        nzEditTooltip: \"nzEditTooltip\",\n        nzEditIcon: \"nzEditIcon\",\n        nzContent: \"nzContent\",\n        nzEllipsisRows: \"nzEllipsisRows\",\n        nzType: \"nzType\",\n        nzCopyText: \"nzCopyText\",\n        nzSuffix: \"nzSuffix\"\n      },\n      outputs: {\n        nzContentChange: \"nzContentChange\",\n        nzCopy: \"nzCopy\",\n        nzExpandChange: \"nzExpandChange\",\n        nzOnEllipsis: \"nzOnEllipsis\"\n      },\n      exportAs: [\"nzTypography\"],\n      standalone: true,\n      features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c5,\n      decls: 5,\n      vars: 3,\n      consts: [[\"contentTemplate\", \"\"], [4, \"ngIf\"], [3, \"text\", \"icon\", \"tooltip\", \"endEditing\", \"startEditing\", 4, \"ngIf\"], [3, \"text\", \"tooltips\", \"icons\", \"textCopy\", 4, \"ngIf\"], [4, \"ngIf\", \"ngIfElse\"], [\"jsEllipsis\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"ellipsisContainer\", \"\"], [\"class\", \"ant-typography-expand\", 3, \"click\", 4, \"ngIf\"], [1, \"ant-typography-expand\", 3, \"click\"], [\"expandable\", \"\"], [3, \"text\", \"icon\", \"tooltip\", \"endEditing\", \"startEditing\"], [3, \"text\", \"tooltips\", \"icons\", \"textCopy\"]],\n      template: function NzTypographyComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵtemplate(0, NzTypographyComponent_ng_template_0_Template, 2, 2, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor)(2, NzTypographyComponent_ng_container_2_Template, 4, 2, \"ng-container\", 1)(3, NzTypographyComponent_nz_text_edit_3_Template, 1, 3, \"nz-text-edit\", 2)(4, NzTypographyComponent_nz_text_copy_4_Template, 1, 3, \"nz-text-copy\", 3);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", !ctx.editing);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.nzEditable);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.nzCopyable && !ctx.editing);\n        }\n      },\n      dependencies: [NgIf, NgTemplateOutlet, NzTextEditComponent, NzTextCopyComponent],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n__decorate([InputBoolean()], NzTypographyComponent.prototype, \"nzCopyable\", void 0);\n__decorate([InputBoolean()], NzTypographyComponent.prototype, \"nzEditable\", void 0);\n__decorate([InputBoolean()], NzTypographyComponent.prototype, \"nzDisabled\", void 0);\n__decorate([InputBoolean()], NzTypographyComponent.prototype, \"nzExpandable\", void 0);\n__decorate([InputBoolean()], NzTypographyComponent.prototype, \"nzEllipsis\", void 0);\n__decorate([WithConfig()], NzTypographyComponent.prototype, \"nzCopyTooltips\", void 0);\n__decorate([WithConfig()], NzTypographyComponent.prototype, \"nzCopyIcons\", void 0);\n__decorate([WithConfig()], NzTypographyComponent.prototype, \"nzEditTooltip\", void 0);\n__decorate([WithConfig()], NzTypographyComponent.prototype, \"nzEditIcon\", void 0);\n__decorate([WithConfig(), InputNumber()], NzTypographyComponent.prototype, \"nzEllipsisRows\", void 0);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTypographyComponent, [{\n    type: Component,\n    args: [{\n      selector: `\n  nz-typography,\n  [nz-typography],\n  p[nz-paragraph],\n  span[nz-text],\n  h1[nz-title], h2[nz-title], h3[nz-title], h4[nz-title]\n  `,\n      exportAs: 'nzTypography',\n      template: `\n    <ng-template #contentTemplate let-content=\"content\">\n      <ng-content *ngIf=\"!content\"></ng-content>\n      {{ content }}\n    </ng-template>\n    <ng-container *ngIf=\"!editing\">\n      <ng-container\n        *ngIf=\"\n          expanded ||\n            (!hasOperationsWithEllipsis && nzEllipsisRows === 1 && !hasEllipsisObservers) ||\n            canCssEllipsis ||\n            (nzSuffix && expanded);\n          else jsEllipsis\n        \"\n      >\n        <ng-template\n          [ngTemplateOutlet]=\"contentTemplate\"\n          [ngTemplateOutletContext]=\"{ content: nzContent }\"\n        ></ng-template>\n        <ng-container *ngIf=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n      </ng-container>\n      <ng-template #jsEllipsis>\n        <span #ellipsisContainer></span>\n        <ng-container *ngIf=\"isEllipsis\">{{ ellipsisStr }}</ng-container>\n        <ng-container *ngIf=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n        <a #expandable *ngIf=\"nzExpandable && isEllipsis\" class=\"ant-typography-expand\" (click)=\"onExpand()\">\n          {{ locale?.expand }}\n        </a>\n      </ng-template>\n    </ng-container>\n\n    <nz-text-edit\n      *ngIf=\"nzEditable\"\n      [text]=\"nzContent\"\n      [icon]=\"nzEditIcon\"\n      [tooltip]=\"nzEditTooltip\"\n      (endEditing)=\"onEndEditing($event)\"\n      (startEditing)=\"onStartEditing()\"\n    ></nz-text-edit>\n\n    <nz-text-copy\n      *ngIf=\"nzCopyable && !editing\"\n      [text]=\"copyText\"\n      [tooltips]=\"nzCopyTooltips\"\n      [icons]=\"nzCopyIcons\"\n      (textCopy)=\"onTextCopy($event)\"\n    ></nz-text-copy>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      preserveWhitespaces: false,\n      host: {\n        '[class.ant-typography]': '!editing',\n        '[class.ant-typography-rtl]': 'dir === \"rtl\"',\n        '[class.ant-typography-edit-content]': 'editing',\n        '[class.ant-typography-secondary]': 'nzType === \"secondary\"',\n        '[class.ant-typography-warning]': 'nzType === \"warning\"',\n        '[class.ant-typography-danger]': 'nzType === \"danger\"',\n        '[class.ant-typography-success]': 'nzType === \"success\"',\n        '[class.ant-typography-disabled]': 'nzDisabled',\n        '[class.ant-typography-ellipsis]': 'nzEllipsis && !expanded',\n        '[class.ant-typography-single-line]': 'nzEllipsis && nzEllipsisRows === 1',\n        '[class.ant-typography-ellipsis-single-line]': 'canCssEllipsis && nzEllipsisRows === 1',\n        '[class.ant-typography-ellipsis-multiple-line]': 'canCssEllipsis && nzEllipsisRows > 1',\n        '[style.-webkit-line-clamp]': '(canCssEllipsis && nzEllipsisRows > 1) ? nzEllipsisRows : null'\n      },\n      imports: [NgIf, NgTemplateOutlet, NzTextEditComponent, NzTextCopyComponent],\n      standalone: true\n    }]\n  }], () => [{\n    type: i1$1.NzConfigService\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i0.ViewContainerRef\n  }, {\n    type: i0.Renderer2\n  }, {\n    type: i2$2.Platform\n  }, {\n    type: i2.NzI18nService\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: i2$1.NzResizeService\n  }, {\n    type: i5$1.Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    nzCopyable: [{\n      type: Input\n    }],\n    nzEditable: [{\n      type: Input\n    }],\n    nzDisabled: [{\n      type: Input\n    }],\n    nzExpandable: [{\n      type: Input\n    }],\n    nzEllipsis: [{\n      type: Input\n    }],\n    nzCopyTooltips: [{\n      type: Input\n    }],\n    nzCopyIcons: [{\n      type: Input\n    }],\n    nzEditTooltip: [{\n      type: Input\n    }],\n    nzEditIcon: [{\n      type: Input\n    }],\n    nzContent: [{\n      type: Input\n    }],\n    nzEllipsisRows: [{\n      type: Input\n    }],\n    nzType: [{\n      type: Input\n    }],\n    nzCopyText: [{\n      type: Input\n    }],\n    nzSuffix: [{\n      type: Input\n    }],\n    nzContentChange: [{\n      type: Output\n    }],\n    nzCopy: [{\n      type: Output\n    }],\n    nzExpandChange: [{\n      type: Output\n    }],\n    nzOnEllipsis: [{\n      type: Output\n    }],\n    textEditRef: [{\n      type: ViewChild,\n      args: [NzTextEditComponent, {\n        static: false\n      }]\n    }],\n    textCopyRef: [{\n      type: ViewChild,\n      args: [NzTextCopyComponent, {\n        static: false\n      }]\n    }],\n    ellipsisContainer: [{\n      type: ViewChild,\n      args: ['ellipsisContainer', {\n        static: false\n      }]\n    }],\n    expandableBtn: [{\n      type: ViewChild,\n      args: ['expandable', {\n        static: false\n      }]\n    }],\n    contentTemplate: [{\n      type: ViewChild,\n      args: ['contentTemplate', {\n        static: false\n      }]\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTypographyModule {\n  static {\n    this.ɵfac = function NzTypographyModule_Factory(t) {\n      return new (t || NzTypographyModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NzTypographyModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTypographyModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent],\n      exports: [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzTextCopyComponent, NzTextEditComponent, NzTypographyComponent, NzTypographyModule };","map":{"version":3,"names":["i0","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","Output","inject","Injector","afterNextRender","ViewChild","Inject","Optional","NgModule","Subject","BehaviorSubject","Observable","fromEvent","EMPTY","Subscription","takeUntil","switchMap","first","i6","NzOutletModule","i4","NzTransButtonModule","i5","NzIconModule","i3","NzToolTipModule","i1","i2","ESCAPE","ENTER","NgIf","DOCUMENT","NgTemplateOutlet","i2$1","NzDestroyService","i3$1","NzAutosizeDirective","NzInputModule","__decorate","i1$1","WithConfig","cancelRequestAnimationFrame","reqAnimFrame","isStyleSupport","measure","InputBoolean","InputNumber","i2$2","i5$1","NzTextCopyComponent_ng_container_1_Template","rf","ctx","ɵɵelementContainerStart","ɵɵelement","ɵɵelementContainerEnd","icon_r1","$implicit","ɵɵadvance","ɵɵproperty","_c0","NzTextEditComponent_ng_template_0_Template","_r5","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","NzTextEditComponent_ng_template_0_Template_textarea_blur_0_listener","ɵɵrestoreView","ctx_r4","ɵɵnextContext","ɵɵresetView","confirm","ɵɵelementEnd","NzTextEditComponent_ng_template_0_Template_button_click_2_listener","ctx_r6","NzTextEditComponent_ng_template_1_ng_container_1_Template","icon_r8","NzTextEditComponent_ng_template_1_Template","_r10","NzTextEditComponent_ng_template_1_Template_button_click_0_listener","ctx_r9","onClick","ɵɵtemplate","ctx_r1","tooltip","locale","edit","icon","_c1","_c2","_c3","NzTypographyComponent_ng_template_0_ng_content_0_Template","ɵɵprojection","NzTypographyComponent_ng_template_0_Template","ɵɵtext","content_r5","content","ɵɵtextInterpolate1","NzTypographyComponent_ng_container_2_ng_container_1_ng_template_1_Template","NzTypographyComponent_ng_container_2_ng_container_1_ng_container_2_Template","ctx_r11","ɵɵtextInterpolate","nzSuffix","_c4","a0","NzTypographyComponent_ng_container_2_ng_container_1_Template","ctx_r7","_r1","ɵɵreference","ɵɵpureFunction1","nzContent","NzTypographyComponent_ng_container_2_ng_template_2_ng_container_2_Template","ctx_r13","ellipsisStr","NzTypographyComponent_ng_container_2_ng_template_2_ng_container_3_Template","ctx_r14","NzTypographyComponent_ng_container_2_ng_template_2_a_4_Template","_r18","NzTypographyComponent_ng_container_2_ng_template_2_a_4_Template_a_click_0_listener","ctx_r17","onExpand","ctx_r15","expand","NzTypographyComponent_ng_container_2_ng_template_2_Template","ctx_r8","isEllipsis","nzExpandable","NzTypographyComponent_ng_container_2_Template","ɵɵtemplateRefExtractor","_r9","ctx_r2","expanded","hasOperationsWithEllipsis","nzEllipsisRows","hasEllipsisObservers","canCssEllipsis","NzTypographyComponent_nz_text_edit_3_Template","_r20","NzTypographyComponent_nz_text_edit_3_Template_nz_text_edit_endEditing_0_listener","$event","ctx_r19","onEndEditing","NzTypographyComponent_nz_text_edit_3_Template_nz_text_edit_startEditing_0_listener","ctx_r21","onStartEditing","ctx_r3","nzEditIcon","nzEditTooltip","NzTypographyComponent_nz_text_copy_4_Template","_r23","NzTypographyComponent_nz_text_copy_4_Template_nz_text_copy_textCopy_0_listener","ctx_r22","onTextCopy","copyText","nzCopyTooltips","nzCopyIcons","_c5","NzTextCopyComponent","constructor","host","cdr","clipboard","i18n","copied","nativeElement","copyTooltip","copedTooltip","copyIcon","copedIcon","destroy$","icons","textCopy","ngOnInit","localeChange","pipe","subscribe","getLocaleData","updateTooltips","markForCheck","ngOnChanges","changes","tooltips","updateIcons","ngOnDestroy","clearTimeout","copyId","next","complete","detectChanges","text","emit","copy","onCopied","setTimeout","Array","isArray","ɵfac","NzTextCopyComponent_Factory","t","ɵɵdirectiveInject","ElementRef","ChangeDetectorRef","Clipboard","NzI18nService","ɵcmp","ɵɵdefineComponent","type","selectors","inputs","outputs","exportAs","standalone","features","ɵɵNgOnChangesFeature","ɵɵStandaloneFeature","decls","vars","consts","template","NzTextCopyComponent_Template","NzTextCopyComponent_Template_button_click_0_listener","ɵɵclassProp","dependencies","NzTooltipDirective","NzTransButtonDirective","NzIconDirective","NzStringTemplateOutletDirective","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","OnPush","None","preserveWhitespaces","imports","NzTextEditComponent","textarea","textarea$","ngZone","editing","startEditing","endEditing","injector","subscriber","runOutsideAngular","event","keyCode","run","onCancel","onEnter","currentText","target","value","beforeText","focusAndSetValue","stopPropagation","preventDefault","focus","autosizeDirective","resizeToFitContent","NzTextEditComponent_Factory","NgZone","viewQuery","NzTextEditComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵProvidersFeature","NzTextEditComponent_Template","_r2","NzInputDirective","providers","static","NZ_CONFIG_MODULE_NAME","EXPAND_ELEMENT_CLASSNAME","NzTypographyComponent","nzOnEllipsis","observers","length","nzEllipsis","cssEllipsis","nzCopyable","nzEditable","nzCopyText","nzConfigService","viewContainerRef","renderer","platform","document","resizeService","directionality","_nzModuleName","nzDisabled","undefined","nzContentChange","nzCopy","nzExpandChange","expandableBtnElementCache","dir","viewInit","rfaId","windowResizeSubscription","renderOnNextFrame","canUseCSSEllipsis","isBrowser","syncEllipsis","getOriginContentViewRef","viewRef","createEmbeddedView","contentTemplate","removeView","remove","indexOf","fixedNodes","textCopyRef","textEditRef","filter","e","map","expandableBtnElement","getExpandableBtnElement","push","contentNodes","ellipsis","rootNodes","ellipsisText","ellipsisContainerNativeElement","ellipsisContainer","firstChild","removeChild","forEach","n","appendChild","cloneNode","expandText","cache","innerText","el","createElement","className","renderAndSubscribeWindowResize","unsubscribe","change","direction","ngAfterViewInit","NzTypographyComponent_Factory","NzConfigService","ViewContainerRef","Renderer2","Platform","NzResizeService","Directionality","NzTypographyComponent_Query","expandableBtn","hostVars","hostBindings","NzTypographyComponent_HostBindings","ɵɵstyleProp","nzType","ngContentSelectors","NzTypographyComponent_Template","ɵɵprojectionDef","prototype","decorators","NzTypographyModule","NzTypographyModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","exports"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-typography.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, inject, Injector, afterNextRender, ViewChild, Inject, Optional, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject, Observable, fromEvent, EMPTY, Subscription } from 'rxjs';\nimport { takeUntil, switchMap, first } from 'rxjs/operators';\nimport * as i6 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport * as i4 from 'ng-zorro-antd/core/trans-button';\nimport { NzTransButtonModule } from 'ng-zorro-antd/core/trans-button';\nimport * as i5 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i3 from 'ng-zorro-antd/tooltip';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport * as i1 from '@angular/cdk/clipboard';\nimport * as i2 from 'ng-zorro-antd/i18n';\nimport { ESCAPE, ENTER } from '@angular/cdk/keycodes';\nimport { NgIf, DOCUMENT, NgTemplateOutlet } from '@angular/common';\nimport * as i2$1 from 'ng-zorro-antd/core/services';\nimport { NzDestroyService } from 'ng-zorro-antd/core/services';\nimport * as i3$1 from 'ng-zorro-antd/input';\nimport { NzAutosizeDirective, NzInputModule } from 'ng-zorro-antd/input';\nimport { __decorate } from 'tslib';\nimport * as i1$1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { cancelRequestAnimationFrame, reqAnimFrame } from 'ng-zorro-antd/core/polyfill';\nimport { isStyleSupport, measure, InputBoolean, InputNumber } from 'ng-zorro-antd/core/util';\nimport * as i2$2 from '@angular/cdk/platform';\nimport * as i5$1 from '@angular/cdk/bidi';\n\nclass NzTextCopyComponent {\n    constructor(host, cdr, clipboard, i18n) {\n        this.host = host;\n        this.cdr = cdr;\n        this.clipboard = clipboard;\n        this.i18n = i18n;\n        this.copied = false;\n        this.nativeElement = this.host.nativeElement;\n        this.copyTooltip = null;\n        this.copedTooltip = null;\n        this.copyIcon = 'copy';\n        this.copedIcon = 'check';\n        this.destroy$ = new Subject();\n        this.icons = ['copy', 'check'];\n        this.textCopy = new EventEmitter();\n    }\n    ngOnInit() {\n        this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            this.locale = this.i18n.getLocaleData('Text');\n            this.updateTooltips();\n            this.cdr.markForCheck();\n        });\n    }\n    ngOnChanges(changes) {\n        const { tooltips, icons } = changes;\n        if (tooltips) {\n            this.updateTooltips();\n        }\n        if (icons) {\n            this.updateIcons();\n        }\n    }\n    ngOnDestroy() {\n        clearTimeout(this.copyId);\n        this.destroy$.next(true);\n        this.destroy$.complete();\n    }\n    onClick() {\n        if (this.copied) {\n            return;\n        }\n        this.copied = true;\n        this.cdr.detectChanges();\n        const text = this.text;\n        this.textCopy.emit(text);\n        this.clipboard.copy(text);\n        this.onCopied();\n    }\n    onCopied() {\n        clearTimeout(this.copyId);\n        this.copyId = setTimeout(() => {\n            this.copied = false;\n            this.cdr.detectChanges();\n        }, 3000);\n    }\n    updateTooltips() {\n        if (this.tooltips === null) {\n            this.copedTooltip = null;\n            this.copyTooltip = null;\n        }\n        else if (Array.isArray(this.tooltips)) {\n            const [copyTooltip, copedTooltip] = this.tooltips;\n            this.copyTooltip = copyTooltip || this.locale?.copy;\n            this.copedTooltip = copedTooltip || this.locale?.copied;\n        }\n        else {\n            this.copyTooltip = this.locale?.copy;\n            this.copedTooltip = this.locale?.copied;\n        }\n        this.cdr.markForCheck();\n    }\n    updateIcons() {\n        const [copyIcon, copedIcon] = this.icons;\n        this.copyIcon = copyIcon;\n        this.copedIcon = copedIcon;\n        this.cdr.markForCheck();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzTextCopyComponent, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.Clipboard }, { token: i2.NzI18nService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.8\", type: NzTextCopyComponent, isStandalone: true, selector: \"nz-text-copy\", inputs: { text: \"text\", tooltips: \"tooltips\", icons: \"icons\" }, outputs: { textCopy: \"textCopy\" }, exportAs: [\"nzTextCopy\"], usesOnChanges: true, ngImport: i0, template: `\n    <button\n      type=\"button\"\n      nz-tooltip\n      nz-trans-button\n      [nzTooltipTitle]=\"copied ? copedTooltip : copyTooltip\"\n      class=\"ant-typography-copy\"\n      [class.ant-typography-copy-success]=\"copied\"\n      (click)=\"onClick()\"\n    >\n      <ng-container *nzStringTemplateOutlet=\"copied ? copedIcon : copyIcon; let icon\">\n        <span nz-icon [nzType]=\"icon\"></span>\n      </ng-container>\n    </button>\n  `, isInline: true, dependencies: [{ kind: \"ngmodule\", type: NzToolTipModule }, { kind: \"directive\", type: i3.NzTooltipDirective, selector: \"[nz-tooltip]\", inputs: [\"nzTooltipTitle\", \"nzTooltipTitleContext\", \"nz-tooltip\", \"nzTooltipTrigger\", \"nzTooltipPlacement\", \"nzTooltipOrigin\", \"nzTooltipVisible\", \"nzTooltipMouseEnterDelay\", \"nzTooltipMouseLeaveDelay\", \"nzTooltipOverlayClassName\", \"nzTooltipOverlayStyle\", \"nzTooltipArrowPointAtCenter\", \"cdkConnectedOverlayPush\", \"nzTooltipColor\"], outputs: [\"nzTooltipVisibleChange\"], exportAs: [\"nzTooltip\"] }, { kind: \"ngmodule\", type: NzTransButtonModule }, { kind: \"directive\", type: i4.NzTransButtonDirective, selector: \"button[nz-trans-button]\" }, { kind: \"ngmodule\", type: NzIconModule }, { kind: \"directive\", type: i5.NzIconDirective, selector: \"[nz-icon]\", inputs: [\"nzSpin\", \"nzRotate\", \"nzType\", \"nzTheme\", \"nzTwotoneColor\", \"nzIconfont\"], exportAs: [\"nzIcon\"] }, { kind: \"ngmodule\", type: NzOutletModule }, { kind: \"directive\", type: i6.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzTextCopyComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-text-copy',\n                    exportAs: 'nzTextCopy',\n                    template: `\n    <button\n      type=\"button\"\n      nz-tooltip\n      nz-trans-button\n      [nzTooltipTitle]=\"copied ? copedTooltip : copyTooltip\"\n      class=\"ant-typography-copy\"\n      [class.ant-typography-copy-success]=\"copied\"\n      (click)=\"onClick()\"\n    >\n      <ng-container *nzStringTemplateOutlet=\"copied ? copedIcon : copyIcon; let icon\">\n        <span nz-icon [nzType]=\"icon\"></span>\n      </ng-container>\n    </button>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    preserveWhitespaces: false,\n                    imports: [NzToolTipModule, NzTransButtonModule, NzIconModule, NzOutletModule],\n                    standalone: true\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.Clipboard }, { type: i2.NzI18nService }], propDecorators: { text: [{\n                type: Input\n            }], tooltips: [{\n                type: Input\n            }], icons: [{\n                type: Input\n            }], textCopy: [{\n                type: Output\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTextEditComponent {\n    set textarea(textarea) {\n        this.textarea$.next(textarea);\n    }\n    constructor(ngZone, host, cdr, i18n, destroy$) {\n        this.ngZone = ngZone;\n        this.host = host;\n        this.cdr = cdr;\n        this.i18n = i18n;\n        this.destroy$ = destroy$;\n        this.editing = false;\n        this.icon = 'edit';\n        this.startEditing = new EventEmitter();\n        this.endEditing = new EventEmitter(true);\n        this.nativeElement = this.host.nativeElement;\n        // We could've saved the textarea within some private property (e.g. `_textarea`) and have a getter,\n        // but having subject makes the code more reactive and cancellable (e.g. event listeners will be\n        // automatically removed and re-added through the `switchMap` below).\n        this.textarea$ = new BehaviorSubject(null);\n        this.injector = inject(Injector);\n    }\n    ngOnInit() {\n        this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            this.locale = this.i18n.getLocaleData('Text');\n            this.cdr.markForCheck();\n        });\n        this.textarea$\n            .pipe(switchMap(textarea => \n        // Caretaker note: we explicitly should call `subscribe()` within the root zone.\n        // `runOutsideAngular(() => fromEvent(...))` will just create an observable within the root zone,\n        // but `addEventListener` is called when the `fromEvent` is subscribed.\n        textarea\n            ? new Observable(subscriber => this.ngZone.runOutsideAngular(() => fromEvent(textarea.nativeElement, 'keydown').subscribe(subscriber)))\n            : EMPTY), takeUntil(this.destroy$))\n            .subscribe(event => {\n            // Caretaker note: adding modifier at the end (for instance `(keydown.esc)`) will tell Angular to add\n            // an event listener through the `KeyEventsPlugin`, which always runs `ngZone.runGuarded()` internally.\n            // We're interested only in escape and enter keyboard buttons, otherwise Angular will run change detection\n            // on any `keydown` event.\n            if (event.keyCode !== ESCAPE && event.keyCode !== ENTER) {\n                return;\n            }\n            this.ngZone.run(() => {\n                if (event.keyCode === ESCAPE) {\n                    this.onCancel();\n                }\n                else {\n                    this.onEnter(event);\n                }\n                this.cdr.markForCheck();\n            });\n        });\n        this.textarea$\n            .pipe(switchMap(textarea => textarea\n            ? new Observable(subscriber => this.ngZone.runOutsideAngular(() => fromEvent(textarea.nativeElement, 'input').subscribe(subscriber)))\n            : EMPTY), takeUntil(this.destroy$))\n            .subscribe(event => {\n            this.currentText = event.target.value;\n        });\n    }\n    onClick() {\n        this.beforeText = this.text;\n        this.currentText = this.beforeText;\n        this.editing = true;\n        this.startEditing.emit();\n        this.focusAndSetValue();\n    }\n    confirm() {\n        this.editing = false;\n        this.endEditing.emit(this.currentText);\n    }\n    onEnter(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        this.confirm();\n    }\n    onCancel() {\n        this.currentText = this.beforeText;\n        this.confirm();\n    }\n    focusAndSetValue() {\n        const { injector } = this;\n        afterNextRender(() => {\n            this.textarea$\n                .pipe(\n            // It may still not be available, so we need to wait until view queries\n            // are executed during the change detection. It's safer to wait until\n            // the query runs and the textarea is set on the behavior subject.\n            first((textarea) => textarea != null), takeUntil(this.destroy$))\n                .subscribe(textarea => {\n                textarea.nativeElement.focus();\n                textarea.nativeElement.value = this.currentText || '';\n                this.autosizeDirective.resizeToFitContent();\n                this.cdr.markForCheck();\n            });\n        }, { injector });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzTextEditComponent, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i2.NzI18nService }, { token: i2$1.NzDestroyService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.8\", type: NzTextEditComponent, isStandalone: true, selector: \"nz-text-edit\", inputs: { text: \"text\", icon: \"icon\", tooltip: \"tooltip\" }, outputs: { startEditing: \"startEditing\", endEditing: \"endEditing\" }, providers: [NzDestroyService], viewQueries: [{ propertyName: \"textarea\", first: true, predicate: [\"textarea\"], descendants: true }, { propertyName: \"autosizeDirective\", first: true, predicate: NzAutosizeDirective, descendants: true }], exportAs: [\"nzTextEdit\"], ngImport: i0, template: `\n    <ng-template [ngIf]=\"editing\" [ngIfElse]=\"notEditing\">\n      <textarea #textarea nz-input nzAutosize (blur)=\"confirm()\"></textarea>\n      <button nz-trans-button class=\"ant-typography-edit-content-confirm\" (click)=\"confirm()\">\n        <span nz-icon nzType=\"enter\"></span>\n      </button>\n    </ng-template>\n\n    <ng-template #notEditing>\n      <button\n        nz-tooltip\n        nz-trans-button\n        class=\"ant-typography-edit\"\n        [nzTooltipTitle]=\"tooltip === null ? null : tooltip || locale?.edit\"\n        (click)=\"onClick()\"\n      >\n        <ng-container *nzStringTemplateOutlet=\"icon; let icon\">\n          <span nz-icon [nzType]=\"icon\"></span>\n        </ng-container>\n      </button>\n    </ng-template>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"ngmodule\", type: NzInputModule }, { kind: \"directive\", type: i3$1.NzInputDirective, selector: \"input[nz-input],textarea[nz-input]\", inputs: [\"nzBorderless\", \"nzSize\", \"nzStepperless\", \"nzStatus\", \"disabled\"], exportAs: [\"nzInput\"] }, { kind: \"directive\", type: i3$1.NzAutosizeDirective, selector: \"textarea[nzAutosize]\", inputs: [\"nzAutosize\"], exportAs: [\"nzAutosize\"] }, { kind: \"ngmodule\", type: NzTransButtonModule }, { kind: \"directive\", type: i4.NzTransButtonDirective, selector: \"button[nz-trans-button]\" }, { kind: \"ngmodule\", type: NzIconModule }, { kind: \"directive\", type: i5.NzIconDirective, selector: \"[nz-icon]\", inputs: [\"nzSpin\", \"nzRotate\", \"nzType\", \"nzTheme\", \"nzTwotoneColor\", \"nzIconfont\"], exportAs: [\"nzIcon\"] }, { kind: \"ngmodule\", type: NzToolTipModule }, { kind: \"directive\", type: i3.NzTooltipDirective, selector: \"[nz-tooltip]\", inputs: [\"nzTooltipTitle\", \"nzTooltipTitleContext\", \"nz-tooltip\", \"nzTooltipTrigger\", \"nzTooltipPlacement\", \"nzTooltipOrigin\", \"nzTooltipVisible\", \"nzTooltipMouseEnterDelay\", \"nzTooltipMouseLeaveDelay\", \"nzTooltipOverlayClassName\", \"nzTooltipOverlayStyle\", \"nzTooltipArrowPointAtCenter\", \"cdkConnectedOverlayPush\", \"nzTooltipColor\"], outputs: [\"nzTooltipVisibleChange\"], exportAs: [\"nzTooltip\"] }, { kind: \"ngmodule\", type: NzOutletModule }, { kind: \"directive\", type: i6.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzTextEditComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-text-edit',\n                    exportAs: 'nzTextEdit',\n                    template: `\n    <ng-template [ngIf]=\"editing\" [ngIfElse]=\"notEditing\">\n      <textarea #textarea nz-input nzAutosize (blur)=\"confirm()\"></textarea>\n      <button nz-trans-button class=\"ant-typography-edit-content-confirm\" (click)=\"confirm()\">\n        <span nz-icon nzType=\"enter\"></span>\n      </button>\n    </ng-template>\n\n    <ng-template #notEditing>\n      <button\n        nz-tooltip\n        nz-trans-button\n        class=\"ant-typography-edit\"\n        [nzTooltipTitle]=\"tooltip === null ? null : tooltip || locale?.edit\"\n        (click)=\"onClick()\"\n      >\n        <ng-container *nzStringTemplateOutlet=\"icon; let icon\">\n          <span nz-icon [nzType]=\"icon\"></span>\n        </ng-container>\n      </button>\n    </ng-template>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    preserveWhitespaces: false,\n                    providers: [NzDestroyService],\n                    imports: [NgIf, NzInputModule, NzTransButtonModule, NzIconModule, NzToolTipModule, NzOutletModule],\n                    standalone: true\n                }]\n        }], ctorParameters: () => [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i2.NzI18nService }, { type: i2$1.NzDestroyService }], propDecorators: { text: [{\n                type: Input\n            }], icon: [{\n                type: Input\n            }], tooltip: [{\n                type: Input\n            }], startEditing: [{\n                type: Output\n            }], endEditing: [{\n                type: Output\n            }], textarea: [{\n                type: ViewChild,\n                args: ['textarea', { static: false }]\n            }], autosizeDirective: [{\n                type: ViewChild,\n                args: [NzAutosizeDirective, { static: false }]\n            }] } });\n\nconst NZ_CONFIG_MODULE_NAME = 'typography';\nconst EXPAND_ELEMENT_CLASSNAME = 'ant-typography-expand';\nclass NzTypographyComponent {\n    get hasEllipsisObservers() {\n        return this.nzOnEllipsis.observers.length > 0;\n    }\n    get canCssEllipsis() {\n        return this.nzEllipsis && this.cssEllipsis && !this.expanded && !this.hasEllipsisObservers;\n    }\n    get hasOperationsWithEllipsis() {\n        return (this.nzCopyable || this.nzEditable || this.nzExpandable) && this.nzEllipsis;\n    }\n    get copyText() {\n        return (typeof this.nzCopyText === 'string' ? this.nzCopyText : this.nzContent);\n    }\n    constructor(nzConfigService, host, cdr, viewContainerRef, renderer, platform, i18n, document, resizeService, directionality) {\n        this.nzConfigService = nzConfigService;\n        this.host = host;\n        this.cdr = cdr;\n        this.viewContainerRef = viewContainerRef;\n        this.renderer = renderer;\n        this.platform = platform;\n        this.i18n = i18n;\n        this.resizeService = resizeService;\n        this.directionality = directionality;\n        this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n        this.nzCopyable = false;\n        this.nzEditable = false;\n        this.nzDisabled = false;\n        this.nzExpandable = false;\n        this.nzEllipsis = false;\n        this.nzCopyTooltips = undefined;\n        this.nzCopyIcons = ['copy', 'check'];\n        this.nzEditTooltip = undefined;\n        this.nzEditIcon = 'edit';\n        this.nzEllipsisRows = 1;\n        this.nzContentChange = new EventEmitter();\n        this.nzCopy = new EventEmitter();\n        this.nzExpandChange = new EventEmitter();\n        // This is not a two-way binding output with {@link nzEllipsis}\n        this.nzOnEllipsis = new EventEmitter();\n        this.expandableBtnElementCache = null;\n        this.editing = false;\n        this.cssEllipsis = false;\n        this.isEllipsis = true;\n        this.expanded = false;\n        this.ellipsisStr = '...';\n        this.dir = 'ltr';\n        this.viewInit = false;\n        this.rfaId = -1;\n        this.destroy$ = new Subject();\n        this.windowResizeSubscription = Subscription.EMPTY;\n        this.document = document;\n    }\n    onTextCopy(text) {\n        this.nzCopy.emit(text);\n    }\n    onStartEditing() {\n        this.editing = true;\n    }\n    onEndEditing(text) {\n        this.editing = false;\n        this.nzContentChange.emit(text);\n        if (this.nzContent === text) {\n            this.renderOnNextFrame();\n        }\n        this.cdr.markForCheck();\n    }\n    onExpand() {\n        this.isEllipsis = false;\n        this.expanded = true;\n        this.nzExpandChange.emit();\n        this.nzOnEllipsis.emit(false);\n    }\n    canUseCSSEllipsis() {\n        if (this.nzEditable || this.nzCopyable || this.nzExpandable || this.nzSuffix) {\n            return false;\n        }\n        // make sure {@link nzOnEllipsis} works, will force use JS to calculations\n        if (this.hasEllipsisObservers) {\n            return false;\n        }\n        if (this.nzEllipsisRows === 1) {\n            return isStyleSupport('textOverflow');\n        }\n        else {\n            return isStyleSupport('webkitLineClamp');\n        }\n    }\n    renderOnNextFrame() {\n        cancelRequestAnimationFrame(this.rfaId);\n        if (!this.viewInit || !this.nzEllipsis || this.nzEllipsisRows < 0 || this.expanded || !this.platform.isBrowser) {\n            return;\n        }\n        this.rfaId = reqAnimFrame(() => {\n            this.syncEllipsis();\n        });\n    }\n    getOriginContentViewRef() {\n        const viewRef = this.viewContainerRef.createEmbeddedView(this.contentTemplate, {\n            content: this.nzContent\n        });\n        viewRef.detectChanges();\n        return {\n            viewRef,\n            removeView: () => {\n                this.viewContainerRef.remove(this.viewContainerRef.indexOf(viewRef));\n            }\n        };\n    }\n    syncEllipsis() {\n        if (this.cssEllipsis) {\n            return;\n        }\n        const { viewRef, removeView } = this.getOriginContentViewRef();\n        const fixedNodes = [this.textCopyRef, this.textEditRef]\n            .filter(e => e && e.nativeElement)\n            .map(e => e.nativeElement);\n        const expandableBtnElement = this.getExpandableBtnElement();\n        if (expandableBtnElement) {\n            fixedNodes.push(expandableBtnElement);\n        }\n        const { contentNodes, text, ellipsis } = measure(this.host.nativeElement, this.nzEllipsisRows, viewRef.rootNodes, fixedNodes, this.ellipsisStr, this.nzSuffix);\n        removeView();\n        this.ellipsisText = text;\n        if (ellipsis !== this.isEllipsis) {\n            this.isEllipsis = ellipsis;\n            this.nzOnEllipsis.emit(ellipsis);\n        }\n        const ellipsisContainerNativeElement = this.ellipsisContainer.nativeElement;\n        while (ellipsisContainerNativeElement.firstChild) {\n            this.renderer.removeChild(ellipsisContainerNativeElement, ellipsisContainerNativeElement.firstChild);\n        }\n        contentNodes.forEach(n => {\n            this.renderer.appendChild(ellipsisContainerNativeElement, n.cloneNode(true));\n        });\n        this.cdr.markForCheck();\n    }\n    // Need to create the element for calculation size before view init\n    getExpandableBtnElement() {\n        if (this.nzExpandable) {\n            const expandText = this.locale ? this.locale.expand : '';\n            const cache = this.expandableBtnElementCache;\n            if (!cache || cache.innerText === expandText) {\n                const el = this.document.createElement('a');\n                el.className = EXPAND_ELEMENT_CLASSNAME;\n                el.innerText = expandText;\n                this.expandableBtnElementCache = el;\n            }\n            return this.expandableBtnElementCache;\n        }\n        else {\n            this.expandableBtnElementCache = null;\n            return null;\n        }\n    }\n    renderAndSubscribeWindowResize() {\n        if (this.platform.isBrowser) {\n            this.windowResizeSubscription.unsubscribe();\n            this.cssEllipsis = this.canUseCSSEllipsis();\n            this.renderOnNextFrame();\n            this.windowResizeSubscription = this.resizeService\n                .subscribe()\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(() => this.renderOnNextFrame());\n        }\n    }\n    ngOnInit() {\n        this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            this.locale = this.i18n.getLocaleData('Text');\n            this.cdr.markForCheck();\n        });\n        this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n    }\n    ngAfterViewInit() {\n        this.viewInit = true;\n        this.renderAndSubscribeWindowResize();\n    }\n    ngOnChanges(changes) {\n        const { nzCopyable, nzEditable, nzExpandable, nzEllipsis, nzContent, nzEllipsisRows, nzSuffix } = changes;\n        if (nzCopyable || nzEditable || nzExpandable || nzEllipsis || nzContent || nzEllipsisRows || nzSuffix) {\n            if (this.nzEllipsis) {\n                if (this.expanded) {\n                    this.windowResizeSubscription.unsubscribe();\n                }\n                else {\n                    this.renderAndSubscribeWindowResize();\n                }\n            }\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next(true);\n        this.destroy$.complete();\n        this.expandableBtnElementCache = null;\n        this.windowResizeSubscription.unsubscribe();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzTypographyComponent, deps: [{ token: i1$1.NzConfigService }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i0.ViewContainerRef }, { token: i0.Renderer2 }, { token: i2$2.Platform }, { token: i2.NzI18nService }, { token: DOCUMENT }, { token: i2$1.NzResizeService }, { token: i5$1.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.8\", type: NzTypographyComponent, isStandalone: true, selector: \"\\n  nz-typography,\\n  [nz-typography],\\n  p[nz-paragraph],\\n  span[nz-text],\\n  h1[nz-title], h2[nz-title], h3[nz-title], h4[nz-title]\\n  \", inputs: { nzCopyable: \"nzCopyable\", nzEditable: \"nzEditable\", nzDisabled: \"nzDisabled\", nzExpandable: \"nzExpandable\", nzEllipsis: \"nzEllipsis\", nzCopyTooltips: \"nzCopyTooltips\", nzCopyIcons: \"nzCopyIcons\", nzEditTooltip: \"nzEditTooltip\", nzEditIcon: \"nzEditIcon\", nzContent: \"nzContent\", nzEllipsisRows: \"nzEllipsisRows\", nzType: \"nzType\", nzCopyText: \"nzCopyText\", nzSuffix: \"nzSuffix\" }, outputs: { nzContentChange: \"nzContentChange\", nzCopy: \"nzCopy\", nzExpandChange: \"nzExpandChange\", nzOnEllipsis: \"nzOnEllipsis\" }, host: { properties: { \"class.ant-typography\": \"!editing\", \"class.ant-typography-rtl\": \"dir === \\\"rtl\\\"\", \"class.ant-typography-edit-content\": \"editing\", \"class.ant-typography-secondary\": \"nzType === \\\"secondary\\\"\", \"class.ant-typography-warning\": \"nzType === \\\"warning\\\"\", \"class.ant-typography-danger\": \"nzType === \\\"danger\\\"\", \"class.ant-typography-success\": \"nzType === \\\"success\\\"\", \"class.ant-typography-disabled\": \"nzDisabled\", \"class.ant-typography-ellipsis\": \"nzEllipsis && !expanded\", \"class.ant-typography-single-line\": \"nzEllipsis && nzEllipsisRows === 1\", \"class.ant-typography-ellipsis-single-line\": \"canCssEllipsis && nzEllipsisRows === 1\", \"class.ant-typography-ellipsis-multiple-line\": \"canCssEllipsis && nzEllipsisRows > 1\", \"style.-webkit-line-clamp\": \"(canCssEllipsis && nzEllipsisRows > 1) ? nzEllipsisRows : null\" } }, viewQueries: [{ propertyName: \"textEditRef\", first: true, predicate: NzTextEditComponent, descendants: true }, { propertyName: \"textCopyRef\", first: true, predicate: NzTextCopyComponent, descendants: true }, { propertyName: \"ellipsisContainer\", first: true, predicate: [\"ellipsisContainer\"], descendants: true }, { propertyName: \"expandableBtn\", first: true, predicate: [\"expandable\"], descendants: true }, { propertyName: \"contentTemplate\", first: true, predicate: [\"contentTemplate\"], descendants: true }], exportAs: [\"nzTypography\"], usesOnChanges: true, ngImport: i0, template: `\n    <ng-template #contentTemplate let-content=\"content\">\n      <ng-content *ngIf=\"!content\"></ng-content>\n      {{ content }}\n    </ng-template>\n    <ng-container *ngIf=\"!editing\">\n      <ng-container\n        *ngIf=\"\n          expanded ||\n            (!hasOperationsWithEllipsis && nzEllipsisRows === 1 && !hasEllipsisObservers) ||\n            canCssEllipsis ||\n            (nzSuffix && expanded);\n          else jsEllipsis\n        \"\n      >\n        <ng-template\n          [ngTemplateOutlet]=\"contentTemplate\"\n          [ngTemplateOutletContext]=\"{ content: nzContent }\"\n        ></ng-template>\n        <ng-container *ngIf=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n      </ng-container>\n      <ng-template #jsEllipsis>\n        <span #ellipsisContainer></span>\n        <ng-container *ngIf=\"isEllipsis\">{{ ellipsisStr }}</ng-container>\n        <ng-container *ngIf=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n        <a #expandable *ngIf=\"nzExpandable && isEllipsis\" class=\"ant-typography-expand\" (click)=\"onExpand()\">\n          {{ locale?.expand }}\n        </a>\n      </ng-template>\n    </ng-container>\n\n    <nz-text-edit\n      *ngIf=\"nzEditable\"\n      [text]=\"nzContent\"\n      [icon]=\"nzEditIcon\"\n      [tooltip]=\"nzEditTooltip\"\n      (endEditing)=\"onEndEditing($event)\"\n      (startEditing)=\"onStartEditing()\"\n    ></nz-text-edit>\n\n    <nz-text-copy\n      *ngIf=\"nzCopyable && !editing\"\n      [text]=\"copyText\"\n      [tooltips]=\"nzCopyTooltips\"\n      [icons]=\"nzCopyIcons\"\n      (textCopy)=\"onTextCopy($event)\"\n    ></nz-text-copy>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"component\", type: NzTextEditComponent, selector: \"nz-text-edit\", inputs: [\"text\", \"icon\", \"tooltip\"], outputs: [\"startEditing\", \"endEditing\"], exportAs: [\"nzTextEdit\"] }, { kind: \"component\", type: NzTextCopyComponent, selector: \"nz-text-copy\", inputs: [\"text\", \"tooltips\", \"icons\"], outputs: [\"textCopy\"], exportAs: [\"nzTextCopy\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\n__decorate([\n    InputBoolean()\n], NzTypographyComponent.prototype, \"nzCopyable\", void 0);\n__decorate([\n    InputBoolean()\n], NzTypographyComponent.prototype, \"nzEditable\", void 0);\n__decorate([\n    InputBoolean()\n], NzTypographyComponent.prototype, \"nzDisabled\", void 0);\n__decorate([\n    InputBoolean()\n], NzTypographyComponent.prototype, \"nzExpandable\", void 0);\n__decorate([\n    InputBoolean()\n], NzTypographyComponent.prototype, \"nzEllipsis\", void 0);\n__decorate([\n    WithConfig()\n], NzTypographyComponent.prototype, \"nzCopyTooltips\", void 0);\n__decorate([\n    WithConfig()\n], NzTypographyComponent.prototype, \"nzCopyIcons\", void 0);\n__decorate([\n    WithConfig()\n], NzTypographyComponent.prototype, \"nzEditTooltip\", void 0);\n__decorate([\n    WithConfig()\n], NzTypographyComponent.prototype, \"nzEditIcon\", void 0);\n__decorate([\n    WithConfig(),\n    InputNumber()\n], NzTypographyComponent.prototype, \"nzEllipsisRows\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzTypographyComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: `\n  nz-typography,\n  [nz-typography],\n  p[nz-paragraph],\n  span[nz-text],\n  h1[nz-title], h2[nz-title], h3[nz-title], h4[nz-title]\n  `,\n                    exportAs: 'nzTypography',\n                    template: `\n    <ng-template #contentTemplate let-content=\"content\">\n      <ng-content *ngIf=\"!content\"></ng-content>\n      {{ content }}\n    </ng-template>\n    <ng-container *ngIf=\"!editing\">\n      <ng-container\n        *ngIf=\"\n          expanded ||\n            (!hasOperationsWithEllipsis && nzEllipsisRows === 1 && !hasEllipsisObservers) ||\n            canCssEllipsis ||\n            (nzSuffix && expanded);\n          else jsEllipsis\n        \"\n      >\n        <ng-template\n          [ngTemplateOutlet]=\"contentTemplate\"\n          [ngTemplateOutletContext]=\"{ content: nzContent }\"\n        ></ng-template>\n        <ng-container *ngIf=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n      </ng-container>\n      <ng-template #jsEllipsis>\n        <span #ellipsisContainer></span>\n        <ng-container *ngIf=\"isEllipsis\">{{ ellipsisStr }}</ng-container>\n        <ng-container *ngIf=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n        <a #expandable *ngIf=\"nzExpandable && isEllipsis\" class=\"ant-typography-expand\" (click)=\"onExpand()\">\n          {{ locale?.expand }}\n        </a>\n      </ng-template>\n    </ng-container>\n\n    <nz-text-edit\n      *ngIf=\"nzEditable\"\n      [text]=\"nzContent\"\n      [icon]=\"nzEditIcon\"\n      [tooltip]=\"nzEditTooltip\"\n      (endEditing)=\"onEndEditing($event)\"\n      (startEditing)=\"onStartEditing()\"\n    ></nz-text-edit>\n\n    <nz-text-copy\n      *ngIf=\"nzCopyable && !editing\"\n      [text]=\"copyText\"\n      [tooltips]=\"nzCopyTooltips\"\n      [icons]=\"nzCopyIcons\"\n      (textCopy)=\"onTextCopy($event)\"\n    ></nz-text-copy>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    preserveWhitespaces: false,\n                    host: {\n                        '[class.ant-typography]': '!editing',\n                        '[class.ant-typography-rtl]': 'dir === \"rtl\"',\n                        '[class.ant-typography-edit-content]': 'editing',\n                        '[class.ant-typography-secondary]': 'nzType === \"secondary\"',\n                        '[class.ant-typography-warning]': 'nzType === \"warning\"',\n                        '[class.ant-typography-danger]': 'nzType === \"danger\"',\n                        '[class.ant-typography-success]': 'nzType === \"success\"',\n                        '[class.ant-typography-disabled]': 'nzDisabled',\n                        '[class.ant-typography-ellipsis]': 'nzEllipsis && !expanded',\n                        '[class.ant-typography-single-line]': 'nzEllipsis && nzEllipsisRows === 1',\n                        '[class.ant-typography-ellipsis-single-line]': 'canCssEllipsis && nzEllipsisRows === 1',\n                        '[class.ant-typography-ellipsis-multiple-line]': 'canCssEllipsis && nzEllipsisRows > 1',\n                        '[style.-webkit-line-clamp]': '(canCssEllipsis && nzEllipsisRows > 1) ? nzEllipsisRows : null'\n                    },\n                    imports: [NgIf, NgTemplateOutlet, NzTextEditComponent, NzTextCopyComponent],\n                    standalone: true\n                }]\n        }], ctorParameters: () => [{ type: i1$1.NzConfigService }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i0.ViewContainerRef }, { type: i0.Renderer2 }, { type: i2$2.Platform }, { type: i2.NzI18nService }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i2$1.NzResizeService }, { type: i5$1.Directionality, decorators: [{\n                    type: Optional\n                }] }], propDecorators: { nzCopyable: [{\n                type: Input\n            }], nzEditable: [{\n                type: Input\n            }], nzDisabled: [{\n                type: Input\n            }], nzExpandable: [{\n                type: Input\n            }], nzEllipsis: [{\n                type: Input\n            }], nzCopyTooltips: [{\n                type: Input\n            }], nzCopyIcons: [{\n                type: Input\n            }], nzEditTooltip: [{\n                type: Input\n            }], nzEditIcon: [{\n                type: Input\n            }], nzContent: [{\n                type: Input\n            }], nzEllipsisRows: [{\n                type: Input\n            }], nzType: [{\n                type: Input\n            }], nzCopyText: [{\n                type: Input\n            }], nzSuffix: [{\n                type: Input\n            }], nzContentChange: [{\n                type: Output\n            }], nzCopy: [{\n                type: Output\n            }], nzExpandChange: [{\n                type: Output\n            }], nzOnEllipsis: [{\n                type: Output\n            }], textEditRef: [{\n                type: ViewChild,\n                args: [NzTextEditComponent, { static: false }]\n            }], textCopyRef: [{\n                type: ViewChild,\n                args: [NzTextCopyComponent, { static: false }]\n            }], ellipsisContainer: [{\n                type: ViewChild,\n                args: ['ellipsisContainer', { static: false }]\n            }], expandableBtn: [{\n                type: ViewChild,\n                args: ['expandable', { static: false }]\n            }], contentTemplate: [{\n                type: ViewChild,\n                args: ['contentTemplate', { static: false }]\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTypographyModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzTypographyModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.3.8\", ngImport: i0, type: NzTypographyModule, imports: [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent], exports: [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzTypographyModule, imports: [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzTypographyModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent],\n                    exports: [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzTextCopyComponent, NzTextEditComponent, NzTypographyComponent, NzTypographyModule };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}