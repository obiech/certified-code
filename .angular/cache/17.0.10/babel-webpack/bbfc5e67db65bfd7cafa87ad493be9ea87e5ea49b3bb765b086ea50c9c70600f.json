{"ast":null,"code":"import { each, isArray } from '@antv/util';\nvar SPACES = '\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029';\nvar PATH_COMMAND = new RegExp(\"([a-z])[\" + SPACES + \",]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[\" + SPACES + \"]*,?[\" + SPACES + \"]*)+)\", 'ig');\nvar PATH_VALUES = new RegExp(\"(-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?)[\" + SPACES + \"]*,?[\" + SPACES + \"]*\", 'ig');\n// Parse given path string into an array of arrays of path segments\nvar parsePathString = function (pathString) {\n  if (!pathString) {\n    return null;\n  }\n  if (isArray(pathString)) {\n    return pathString;\n  }\n  var paramCounts = {\n    a: 7,\n    c: 6,\n    o: 2,\n    h: 1,\n    l: 2,\n    m: 2,\n    r: 4,\n    q: 4,\n    s: 4,\n    t: 2,\n    v: 1,\n    u: 3,\n    z: 0\n  };\n  var data = [];\n  String(pathString).replace(PATH_COMMAND, function (a, b, c) {\n    var params = [];\n    var name = b.toLowerCase();\n    c.replace(PATH_VALUES, function (a, b) {\n      b && params.push(+b);\n    });\n    if (name === 'm' && params.length > 2) {\n      data.push([b].concat(params.splice(0, 2)));\n      name = 'l';\n      b = b === 'm' ? 'l' : 'L';\n    }\n    if (name === 'o' && params.length === 1) {\n      data.push([b, params[0]]);\n    }\n    if (name === 'r') {\n      data.push([b].concat(params));\n    } else {\n      while (params.length >= paramCounts[name]) {\n        data.push([b].concat(params.splice(0, paramCounts[name])));\n        if (!paramCounts[name]) {\n          break;\n        }\n      }\n    }\n    return pathString;\n  });\n  return data;\n};\n// http://schepers.cc/getting-to-the-point\nvar catmullRomToBezier = function (crp, z) {\n  var d = [];\n  // @ts-ignore\n  for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n    var p = [{\n      x: +crp[i - 2],\n      y: +crp[i - 1]\n    }, {\n      x: +crp[i],\n      y: +crp[i + 1]\n    }, {\n      x: +crp[i + 2],\n      y: +crp[i + 3]\n    }, {\n      x: +crp[i + 4],\n      y: +crp[i + 5]\n    }];\n    if (z) {\n      if (!i) {\n        p[0] = {\n          x: +crp[iLen - 2],\n          y: +crp[iLen - 1]\n        };\n      } else if (iLen - 4 === i) {\n        p[3] = {\n          x: +crp[0],\n          y: +crp[1]\n        };\n      } else if (iLen - 2 === i) {\n        p[2] = {\n          x: +crp[0],\n          y: +crp[1]\n        };\n        p[3] = {\n          x: +crp[2],\n          y: +crp[3]\n        };\n      }\n    } else {\n      if (iLen - 4 === i) {\n        p[3] = p[2];\n      } else if (!i) {\n        p[0] = {\n          x: +crp[i],\n          y: +crp[i + 1]\n        };\n      }\n    }\n    d.push(['C', (-p[0].x + 6 * p[1].x + p[2].x) / 6, (-p[0].y + 6 * p[1].y + p[2].y) / 6, (p[1].x + 6 * p[2].x - p[3].x) / 6, (p[1].y + 6 * p[2].y - p[3].y) / 6, p[2].x, p[2].y]);\n  }\n  return d;\n};\nvar ellipsePath = function (x, y, rx, ry, a) {\n  var res = [];\n  if (a === null && ry === null) {\n    ry = rx;\n  }\n  x = +x;\n  y = +y;\n  rx = +rx;\n  ry = +ry;\n  if (a !== null) {\n    var rad = Math.PI / 180;\n    var x1 = x + rx * Math.cos(-ry * rad);\n    var x2 = x + rx * Math.cos(-a * rad);\n    var y1 = y + rx * Math.sin(-ry * rad);\n    var y2 = y + rx * Math.sin(-a * rad);\n    res = [['M', x1, y1], ['A', rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n  } else {\n    res = [['M', x, y], ['m', 0, -ry], ['a', rx, ry, 0, 1, 1, 0, 2 * ry], ['a', rx, ry, 0, 1, 1, 0, -2 * ry], ['z']];\n  }\n  return res;\n};\nvar pathToAbsolute = function (pathArray) {\n  pathArray = parsePathString(pathArray);\n  if (!pathArray || !pathArray.length) {\n    return [['M', 0, 0]];\n  }\n  var res = [];\n  var x = 0;\n  var y = 0;\n  var mx = 0;\n  var my = 0;\n  var start = 0;\n  var pa0;\n  var dots;\n  if (pathArray[0][0] === 'M') {\n    x = +pathArray[0][1];\n    y = +pathArray[0][2];\n    mx = x;\n    my = y;\n    start++;\n    res[0] = ['M', x, y];\n  }\n  var crz = pathArray.length === 3 && pathArray[0][0] === 'M' && pathArray[1][0].toUpperCase() === 'R' && pathArray[2][0].toUpperCase() === 'Z';\n  for (var r = void 0, pa = void 0, i = start, ii = pathArray.length; i < ii; i++) {\n    res.push(r = []);\n    pa = pathArray[i];\n    pa0 = pa[0];\n    if (pa0 !== pa0.toUpperCase()) {\n      r[0] = pa0.toUpperCase();\n      switch (r[0]) {\n        case 'A':\n          r[1] = pa[1];\n          r[2] = pa[2];\n          r[3] = pa[3];\n          r[4] = pa[4];\n          r[5] = pa[5];\n          r[6] = +pa[6] + x;\n          r[7] = +pa[7] + y;\n          break;\n        case 'V':\n          r[1] = +pa[1] + y;\n          break;\n        case 'H':\n          r[1] = +pa[1] + x;\n          break;\n        case 'R':\n          dots = [x, y].concat(pa.slice(1));\n          for (var j = 2, jj = dots.length; j < jj; j++) {\n            dots[j] = +dots[j] + x;\n            dots[++j] = +dots[j] + y;\n          }\n          res.pop();\n          res = res.concat(catmullRomToBezier(dots, crz));\n          break;\n        case 'O':\n          res.pop();\n          dots = ellipsePath(x, y, pa[1], pa[2]);\n          dots.push(dots[0]);\n          res = res.concat(dots);\n          break;\n        case 'U':\n          res.pop();\n          res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n          r = ['U'].concat(res[res.length - 1].slice(-2));\n          break;\n        case 'M':\n          mx = +pa[1] + x;\n          my = +pa[2] + y;\n          break;\n        // for lint\n        default:\n          for (var j = 1, jj = pa.length; j < jj; j++) {\n            r[j] = +pa[j] + (j % 2 ? x : y);\n          }\n      }\n    } else if (pa0 === 'R') {\n      dots = [x, y].concat(pa.slice(1));\n      res.pop();\n      res = res.concat(catmullRomToBezier(dots, crz));\n      r = ['R'].concat(pa.slice(-2));\n    } else if (pa0 === 'O') {\n      res.pop();\n      dots = ellipsePath(x, y, pa[1], pa[2]);\n      dots.push(dots[0]);\n      res = res.concat(dots);\n    } else if (pa0 === 'U') {\n      res.pop();\n      res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n      r = ['U'].concat(res[res.length - 1].slice(-2));\n    } else {\n      for (var k = 0, kk = pa.length; k < kk; k++) {\n        r[k] = pa[k];\n      }\n    }\n    pa0 = pa0.toUpperCase();\n    if (pa0 !== 'O') {\n      switch (r[0]) {\n        case 'Z':\n          x = +mx;\n          y = +my;\n          break;\n        case 'H':\n          x = r[1];\n          break;\n        case 'V':\n          y = r[1];\n          break;\n        case 'M':\n          mx = r[r.length - 2];\n          my = r[r.length - 1];\n          break;\n        // for lint\n        default:\n          x = r[r.length - 2];\n          y = r[r.length - 1];\n      }\n    }\n  }\n  return res;\n};\nvar l2c = function (x1, y1, x2, y2) {\n  return [x1, y1, x2, y2, x2, y2];\n};\nvar q2c = function (x1, y1, ax, ay, x2, y2) {\n  var _13 = 1 / 3;\n  var _23 = 2 / 3;\n  return [_13 * x1 + _23 * ax, _13 * y1 + _23 * ay, _13 * x2 + _23 * ax, _13 * y2 + _23 * ay, x2, y2];\n};\nvar a2c = function (x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n  // for more information of where this math came from visit:\n  // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n  if (rx === ry) {\n    rx += 1;\n  }\n  var _120 = Math.PI * 120 / 180;\n  var rad = Math.PI / 180 * (+angle || 0);\n  var res = [];\n  var xy;\n  var f1;\n  var f2;\n  var cx;\n  var cy;\n  var rotate = function (x, y, rad) {\n    var X = x * Math.cos(rad) - y * Math.sin(rad);\n    var Y = x * Math.sin(rad) + y * Math.cos(rad);\n    return {\n      x: X,\n      y: Y\n    };\n  };\n  if (!recursive) {\n    xy = rotate(x1, y1, -rad);\n    x1 = xy.x;\n    y1 = xy.y;\n    xy = rotate(x2, y2, -rad);\n    x2 = xy.x;\n    y2 = xy.y;\n    if (x1 === x2 && y1 === y2) {\n      // 若弧的起始点和终点重叠则错开一点\n      x2 += 1;\n      y2 += 1;\n    }\n    // const cos = Math.cos(Math.PI / 180 * angle);\n    // const sin = Math.sin(Math.PI / 180 * angle);\n    var x = (x1 - x2) / 2;\n    var y = (y1 - y2) / 2;\n    var h = x * x / (rx * rx) + y * y / (ry * ry);\n    if (h > 1) {\n      h = Math.sqrt(h);\n      rx = h * rx;\n      ry = h * ry;\n    }\n    var rx2 = rx * rx;\n    var ry2 = ry * ry;\n    var k = (large_arc_flag === sweep_flag ? -1 : 1) * Math.sqrt(Math.abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x)));\n    cx = k * rx * y / ry + (x1 + x2) / 2;\n    cy = k * -ry * x / rx + (y1 + y2) / 2;\n    // @ts-ignore\n    f1 = Math.asin(((y1 - cy) / ry).toFixed(9));\n    // @ts-ignore\n    f2 = Math.asin(((y2 - cy) / ry).toFixed(9));\n    f1 = x1 < cx ? Math.PI - f1 : f1;\n    f2 = x2 < cx ? Math.PI - f2 : f2;\n    f1 < 0 && (f1 = Math.PI * 2 + f1);\n    f2 < 0 && (f2 = Math.PI * 2 + f2);\n    if (sweep_flag && f1 > f2) {\n      f1 = f1 - Math.PI * 2;\n    }\n    if (!sweep_flag && f2 > f1) {\n      f2 = f2 - Math.PI * 2;\n    }\n  } else {\n    f1 = recursive[0];\n    f2 = recursive[1];\n    cx = recursive[2];\n    cy = recursive[3];\n  }\n  var df = f2 - f1;\n  if (Math.abs(df) > _120) {\n    var f2old = f2;\n    var x2old = x2;\n    var y2old = y2;\n    f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n    x2 = cx + rx * Math.cos(f2);\n    y2 = cy + ry * Math.sin(f2);\n    res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n  }\n  df = f2 - f1;\n  var c1 = Math.cos(f1);\n  var s1 = Math.sin(f1);\n  var c2 = Math.cos(f2);\n  var s2 = Math.sin(f2);\n  var t = Math.tan(df / 4);\n  var hx = 4 / 3 * rx * t;\n  var hy = 4 / 3 * ry * t;\n  var m1 = [x1, y1];\n  var m2 = [x1 + hx * s1, y1 - hy * c1];\n  var m3 = [x2 + hx * s2, y2 - hy * c2];\n  var m4 = [x2, y2];\n  m2[0] = 2 * m1[0] - m2[0];\n  m2[1] = 2 * m1[1] - m2[1];\n  if (recursive) {\n    return [m2, m3, m4].concat(res);\n  }\n  res = [m2, m3, m4].concat(res).join().split(',');\n  var newres = [];\n  for (var i = 0, ii = res.length; i < ii; i++) {\n    newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n  }\n  return newres;\n};\nvar pathToCurve = function (path, path2) {\n  var p = pathToAbsolute(path);\n  var p2 = path2 && pathToAbsolute(path2);\n  var attrs = {\n    x: 0,\n    y: 0,\n    bx: 0,\n    by: 0,\n    X: 0,\n    Y: 0,\n    qx: null,\n    qy: null\n  };\n  var attrs2 = {\n    x: 0,\n    y: 0,\n    bx: 0,\n    by: 0,\n    X: 0,\n    Y: 0,\n    qx: null,\n    qy: null\n  };\n  var pcoms1 = []; // path commands of original path p\n  var pcoms2 = []; // path commands of original path p2\n  var pfirst = ''; // temporary holder for original path command\n  var pcom = ''; // holder for previous path command of original path\n  var ii;\n  var processPath = function (path, d, pcom) {\n    var nx;\n    var ny;\n    if (!path) {\n      return ['C', d.x, d.y, d.x, d.y, d.x, d.y];\n    }\n    !(path[0] in {\n      T: 1,\n      Q: 1\n    }) && (d.qx = d.qy = null);\n    switch (path[0]) {\n      case 'M':\n        d.X = path[1];\n        d.Y = path[2];\n        break;\n      case 'A':\n        path = ['C'].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n        break;\n      case 'S':\n        if (pcom === 'C' || pcom === 'S') {\n          // In \"S\" case we have to take into account, if the previous command is C/S.\n          nx = d.x * 2 - d.bx; // And reflect the previous\n          ny = d.y * 2 - d.by; // command's control point relative to the current point.\n        } else {\n          // or some else or nothing\n          nx = d.x;\n          ny = d.y;\n        }\n        path = ['C', nx, ny].concat(path.slice(1));\n        break;\n      case 'T':\n        if (pcom === 'Q' || pcom === 'T') {\n          // In \"T\" case we have to take into account, if the previous command is Q/T.\n          d.qx = d.x * 2 - d.qx; // And make a reflection similar\n          d.qy = d.y * 2 - d.qy; // to case \"S\".\n        } else {\n          // or something else or nothing\n          d.qx = d.x;\n          d.qy = d.y;\n        }\n        path = ['C'].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n        break;\n      case 'Q':\n        d.qx = path[1];\n        d.qy = path[2];\n        path = ['C'].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n        break;\n      case 'L':\n        path = ['C'].concat(l2c(d.x, d.y, path[1], path[2]));\n        break;\n      case 'H':\n        path = ['C'].concat(l2c(d.x, d.y, path[1], d.y));\n        break;\n      case 'V':\n        path = ['C'].concat(l2c(d.x, d.y, d.x, path[1]));\n        break;\n      case 'Z':\n        path = ['C'].concat(l2c(d.x, d.y, d.X, d.Y));\n        break;\n      default:\n        break;\n    }\n    return path;\n  };\n  var fixArc = function (pp, i) {\n    if (pp[i].length > 7) {\n      pp[i].shift();\n      var pi = pp[i];\n      while (pi.length) {\n        pcoms1[i] = 'A'; // if created multiple C:s, their original seg is saved\n        p2 && (pcoms2[i] = 'A'); // the same as above\n        pp.splice(i++, 0, ['C'].concat(pi.splice(0, 6)));\n      }\n      pp.splice(i, 1);\n      ii = Math.max(p.length, p2 && p2.length || 0);\n    }\n  };\n  var fixM = function (path1, path2, a1, a2, i) {\n    if (path1 && path2 && path1[i][0] === 'M' && path2[i][0] !== 'M') {\n      path2.splice(i, 0, ['M', a2.x, a2.y]);\n      a1.bx = 0;\n      a1.by = 0;\n      a1.x = path1[i][1];\n      a1.y = path1[i][2];\n      ii = Math.max(p.length, p2 && p2.length || 0);\n    }\n  };\n  ii = Math.max(p.length, p2 && p2.length || 0);\n  for (var i = 0; i < ii; i++) {\n    p[i] && (pfirst = p[i][0]); // save current path command\n    if (pfirst !== 'C') {\n      // C is not saved yet, because it may be result of conversion\n      pcoms1[i] = pfirst; // Save current path command\n      i && (pcom = pcoms1[i - 1]); // Get previous path command pcom\n    }\n\n    p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n    if (pcoms1[i] !== 'A' && pfirst === 'C') pcoms1[i] = 'C'; // A is the only command\n    // which may produce multiple C:s\n    // so we have to make sure that C is also C in original path\n    fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n    if (p2) {\n      // the same procedures is done to p2\n      p2[i] && (pfirst = p2[i][0]);\n      if (pfirst !== 'C') {\n        pcoms2[i] = pfirst;\n        i && (pcom = pcoms2[i - 1]);\n      }\n      p2[i] = processPath(p2[i], attrs2, pcom);\n      if (pcoms2[i] !== 'A' && pfirst === 'C') {\n        pcoms2[i] = 'C';\n      }\n      fixArc(p2, i);\n    }\n    fixM(p, p2, attrs, attrs2, i);\n    fixM(p2, p, attrs2, attrs, i);\n    var seg = p[i];\n    var seg2 = p2 && p2[i];\n    var seglen = seg.length;\n    var seg2len = p2 && seg2.length;\n    attrs.x = seg[seglen - 2];\n    attrs.y = seg[seglen - 1];\n    attrs.bx = parseFloat(seg[seglen - 4]) || attrs.x;\n    attrs.by = parseFloat(seg[seglen - 3]) || attrs.y;\n    attrs2.bx = p2 && (parseFloat(seg2[seg2len - 4]) || attrs2.x);\n    attrs2.by = p2 && (parseFloat(seg2[seg2len - 3]) || attrs2.y);\n    attrs2.x = p2 && seg2[seg2len - 2];\n    attrs2.y = p2 && seg2[seg2len - 1];\n  }\n  return p2 ? [p, p2] : p;\n};\nvar p2s = /,?([a-z]),?/gi;\nvar parsePathArray = function (path) {\n  return path.join(',').replace(p2s, '$1');\n};\nvar base3 = function (t, p1, p2, p3, p4) {\n  var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4;\n  var t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n  return t * t2 - 3 * p1 + 3 * p2;\n};\nvar bezlen = function (x1, y1, x2, y2, x3, y3, x4, y4, z) {\n  if (z === null) {\n    z = 1;\n  }\n  z = z > 1 ? 1 : z < 0 ? 0 : z;\n  var z2 = z / 2;\n  var n = 12;\n  var Tvalues = [-0.1252, 0.1252, -0.3678, 0.3678, -0.5873, 0.5873, -0.7699, 0.7699, -0.9041, 0.9041, -0.9816, 0.9816];\n  var Cvalues = [0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032, 0.1601, 0.1601, 0.1069, 0.1069, 0.0472, 0.0472];\n  var sum = 0;\n  for (var i = 0; i < n; i++) {\n    var ct = z2 * Tvalues[i] + z2;\n    var xbase = base3(ct, x1, x2, x3, x4);\n    var ybase = base3(ct, y1, y2, y3, y4);\n    var comb = xbase * xbase + ybase * ybase;\n    sum += Cvalues[i] * Math.sqrt(comb);\n  }\n  return z2 * sum;\n};\nvar curveDim = function (x0, y0, x1, y1, x2, y2, x3, y3) {\n  var tvalues = [];\n  var bounds = [[], []];\n  var a;\n  var b;\n  var c;\n  var t;\n  for (var i = 0; i < 2; ++i) {\n    if (i === 0) {\n      b = 6 * x0 - 12 * x1 + 6 * x2;\n      a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n      c = 3 * x1 - 3 * x0;\n    } else {\n      b = 6 * y0 - 12 * y1 + 6 * y2;\n      a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n      c = 3 * y1 - 3 * y0;\n    }\n    if (Math.abs(a) < 1e-12) {\n      if (Math.abs(b) < 1e-12) {\n        continue;\n      }\n      t = -c / b;\n      if (t > 0 && t < 1) {\n        tvalues.push(t);\n      }\n      continue;\n    }\n    var b2ac = b * b - 4 * c * a;\n    var sqrtb2ac = Math.sqrt(b2ac);\n    if (b2ac < 0) {\n      continue;\n    }\n    var t1 = (-b + sqrtb2ac) / (2 * a);\n    if (t1 > 0 && t1 < 1) {\n      tvalues.push(t1);\n    }\n    var t2 = (-b - sqrtb2ac) / (2 * a);\n    if (t2 > 0 && t2 < 1) {\n      tvalues.push(t2);\n    }\n  }\n  var j = tvalues.length;\n  var jlen = j;\n  var mt;\n  while (j--) {\n    t = tvalues[j];\n    mt = 1 - t;\n    bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n    bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n  }\n  bounds[0][jlen] = x0;\n  bounds[1][jlen] = y0;\n  bounds[0][jlen + 1] = x3;\n  bounds[1][jlen + 1] = y3;\n  bounds[0].length = bounds[1].length = jlen + 2;\n  return {\n    min: {\n      x: Math.min.apply(0, bounds[0]),\n      y: Math.min.apply(0, bounds[1])\n    },\n    max: {\n      x: Math.max.apply(0, bounds[0]),\n      y: Math.max.apply(0, bounds[1])\n    }\n  };\n};\nvar intersect = function (x1, y1, x2, y2, x3, y3, x4, y4) {\n  if (Math.max(x1, x2) < Math.min(x3, x4) || Math.min(x1, x2) > Math.max(x3, x4) || Math.max(y1, y2) < Math.min(y3, y4) || Math.min(y1, y2) > Math.max(y3, y4)) {\n    return;\n  }\n  var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4);\n  var ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4);\n  var denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n  if (!denominator) {\n    return;\n  }\n  var px = nx / denominator;\n  var py = ny / denominator;\n  var px2 = +px.toFixed(2);\n  var py2 = +py.toFixed(2);\n  if (px2 < +Math.min(x1, x2).toFixed(2) || px2 > +Math.max(x1, x2).toFixed(2) || px2 < +Math.min(x3, x4).toFixed(2) || px2 > +Math.max(x3, x4).toFixed(2) || py2 < +Math.min(y1, y2).toFixed(2) || py2 > +Math.max(y1, y2).toFixed(2) || py2 < +Math.min(y3, y4).toFixed(2) || py2 > +Math.max(y3, y4).toFixed(2)) {\n    return;\n  }\n  return {\n    x: px,\n    y: py\n  };\n};\nvar isPointInsideBBox = function (bbox, x, y) {\n  return x >= bbox.x && x <= bbox.x + bbox.width && y >= bbox.y && y <= bbox.y + bbox.height;\n};\nvar rectPath = function (x, y, w, h, r) {\n  if (r) {\n    return [['M', +x + +r, y], ['l', w - r * 2, 0], ['a', r, r, 0, 0, 1, r, r], ['l', 0, h - r * 2], ['a', r, r, 0, 0, 1, -r, r], ['l', r * 2 - w, 0], ['a', r, r, 0, 0, 1, -r, -r], ['l', 0, r * 2 - h], ['a', r, r, 0, 0, 1, r, -r], ['z']];\n  }\n  var res = [['M', x, y], ['l', w, 0], ['l', 0, h], ['l', -w, 0], ['z']];\n  // @ts-ignore\n  res.parsePathArray = parsePathArray;\n  return res;\n};\nvar box = function (x, y, width, height) {\n  if (x === null) {\n    x = y = width = height = 0;\n  }\n  if (y === null) {\n    y = x.y;\n    width = x.width;\n    height = x.height;\n    x = x.x;\n  }\n  return {\n    x: x,\n    y: y,\n    width: width,\n    w: width,\n    height: height,\n    h: height,\n    x2: x + width,\n    y2: y + height,\n    cx: x + width / 2,\n    cy: y + height / 2,\n    r1: Math.min(width, height) / 2,\n    r2: Math.max(width, height) / 2,\n    r0: Math.sqrt(width * width + height * height) / 2,\n    path: rectPath(x, y, width, height),\n    vb: [x, y, width, height].join(' ')\n  };\n};\nvar isBBoxIntersect = function (bbox1, bbox2) {\n  bbox1 = box(bbox1);\n  bbox2 = box(bbox2);\n  return isPointInsideBBox(bbox2, bbox1.x, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2) || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x) && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n};\nvar bezierBBox = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n  if (!isArray(p1x)) {\n    p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n  }\n  var bbox = curveDim.apply(null, p1x);\n  return box(bbox.min.x, bbox.min.y, bbox.max.x - bbox.min.x, bbox.max.y - bbox.min.y);\n};\nvar findDotsAtSegment = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n  var t1 = 1 - t;\n  var t13 = Math.pow(t1, 3);\n  var t12 = Math.pow(t1, 2);\n  var t2 = t * t;\n  var t3 = t2 * t;\n  var x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x;\n  var y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y;\n  var mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x);\n  var my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y);\n  var nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x);\n  var ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y);\n  var ax = t1 * p1x + t * c1x;\n  var ay = t1 * p1y + t * c1y;\n  var cx = t1 * c2x + t * p2x;\n  var cy = t1 * c2y + t * p2y;\n  var alpha = 90 - Math.atan2(mx - nx, my - ny) * 180 / Math.PI;\n  // (mx > nx || my < ny) && (alpha += 180);\n  return {\n    x: x,\n    y: y,\n    m: {\n      x: mx,\n      y: my\n    },\n    n: {\n      x: nx,\n      y: ny\n    },\n    start: {\n      x: ax,\n      y: ay\n    },\n    end: {\n      x: cx,\n      y: cy\n    },\n    alpha: alpha\n  };\n};\nvar interHelper = function (bez1, bez2, justCount) {\n  var bbox1 = bezierBBox(bez1);\n  var bbox2 = bezierBBox(bez2);\n  if (!isBBoxIntersect(bbox1, bbox2)) {\n    return justCount ? 0 : [];\n  }\n  var l1 = bezlen.apply(0, bez1);\n  var l2 = bezlen.apply(0, bez2);\n  var n1 = ~~(l1 / 8);\n  var n2 = ~~(l2 / 8);\n  var dots1 = [];\n  var dots2 = [];\n  var xy = {};\n  var res = justCount ? 0 : [];\n  for (var i = 0; i < n1 + 1; i++) {\n    var d = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n    dots1.push({\n      x: d.x,\n      y: d.y,\n      t: i / n1\n    });\n  }\n  for (var i = 0; i < n2 + 1; i++) {\n    var d = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n    dots2.push({\n      x: d.x,\n      y: d.y,\n      t: i / n2\n    });\n  }\n  for (var i = 0; i < n1; i++) {\n    for (var j = 0; j < n2; j++) {\n      var di = dots1[i];\n      var di1 = dots1[i + 1];\n      var dj = dots2[j];\n      var dj1 = dots2[j + 1];\n      var ci = Math.abs(di1.x - di.x) < 0.001 ? 'y' : 'x';\n      var cj = Math.abs(dj1.x - dj.x) < 0.001 ? 'y' : 'x';\n      var is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n      if (is) {\n        if (xy[is.x.toFixed(4)] === is.y.toFixed(4)) {\n          continue;\n        }\n        xy[is.x.toFixed(4)] = is.y.toFixed(4);\n        var t1 = di.t + Math.abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t);\n        var t2 = dj.t + Math.abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n        if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n          if (justCount) {\n            // @ts-ignore\n            res += 1;\n          } else {\n            // @ts-ignore\n            res.push({\n              x: is.x,\n              y: is.y,\n              t1: t1,\n              t2: t2\n            });\n          }\n        }\n      }\n    }\n  }\n  return res;\n};\nvar interPathHelper = function (path1, path2, justCount) {\n  path1 = pathToCurve(path1);\n  path2 = pathToCurve(path2);\n  var x1;\n  var y1;\n  var x2;\n  var y2;\n  var x1m;\n  var y1m;\n  var x2m;\n  var y2m;\n  var bez1;\n  var bez2;\n  var res = justCount ? 0 : [];\n  for (var i = 0, ii = path1.length; i < ii; i++) {\n    var pi = path1[i];\n    if (pi[0] === 'M') {\n      x1 = x1m = pi[1];\n      y1 = y1m = pi[2];\n    } else {\n      if (pi[0] === 'C') {\n        bez1 = [x1, y1].concat(pi.slice(1));\n        x1 = bez1[6];\n        y1 = bez1[7];\n      } else {\n        bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n        x1 = x1m;\n        y1 = y1m;\n      }\n      for (var j = 0, jj = path2.length; j < jj; j++) {\n        var pj = path2[j];\n        if (pj[0] === 'M') {\n          x2 = x2m = pj[1];\n          y2 = y2m = pj[2];\n        } else {\n          if (pj[0] === 'C') {\n            bez2 = [x2, y2].concat(pj.slice(1));\n            x2 = bez2[6];\n            y2 = bez2[7];\n          } else {\n            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n            x2 = x2m;\n            y2 = y2m;\n          }\n          var intr = interHelper(bez1, bez2, justCount);\n          if (justCount) {\n            // @ts-ignore\n            res += intr;\n          } else {\n            // @ts-ignore\n            for (var k = 0, kk = intr.length; k < kk; k++) {\n              intr[k].segment1 = i;\n              intr[k].segment2 = j;\n              intr[k].bez1 = bez1;\n              intr[k].bez2 = bez2;\n            }\n            // @ts-ignore\n            res = res.concat(intr);\n          }\n        }\n      }\n    }\n  }\n  return res;\n};\nvar intersection = function (path1, path2) {\n  return interPathHelper(path1, path2);\n};\nfunction decasteljau(points, t) {\n  var left = [];\n  var right = [];\n  function recurse(points, t) {\n    if (points.length === 1) {\n      left.push(points[0]);\n      right.push(points[0]);\n    } else {\n      var middlePoints = [];\n      for (var i = 0; i < points.length - 1; i++) {\n        if (i === 0) {\n          left.push(points[0]);\n        }\n        if (i === points.length - 2) {\n          right.push(points[i + 1]);\n        }\n        middlePoints[i] = [(1 - t) * points[i][0] + t * points[i + 1][0], (1 - t) * points[i][1] + t * points[i + 1][1]];\n      }\n      recurse(middlePoints, t);\n    }\n  }\n  if (points.length) {\n    recurse(points, t);\n  }\n  return {\n    left: left,\n    right: right.reverse()\n  };\n}\nfunction splitCurve(start, end, count) {\n  var points = [[start[1], start[2]]];\n  count = count || 2;\n  var segments = [];\n  if (end[0] === 'A') {\n    points.push(end[6]);\n    points.push(end[7]);\n  } else if (end[0] === 'C') {\n    points.push([end[1], end[2]]);\n    points.push([end[3], end[4]]);\n    points.push([end[5], end[6]]);\n  } else if (end[0] === 'S' || end[0] === 'Q') {\n    points.push([end[1], end[2]]);\n    points.push([end[3], end[4]]);\n  } else {\n    points.push([end[1], end[2]]);\n  }\n  var leftSegments = points;\n  var t = 1 / count;\n  for (var i = 0; i < count - 1; i++) {\n    var rt = t / (1 - t * i);\n    var split = decasteljau(leftSegments, rt);\n    segments.push(split.left);\n    leftSegments = split.right;\n  }\n  segments.push(leftSegments);\n  var result = segments.map(function (segment) {\n    var cmd = [];\n    if (segment.length === 4) {\n      cmd.push('C');\n      cmd = cmd.concat(segment[2]);\n    }\n    if (segment.length >= 3) {\n      if (segment.length === 3) {\n        cmd.push('Q');\n      }\n      cmd = cmd.concat(segment[1]);\n    }\n    if (segment.length === 2) {\n      cmd.push('L');\n    }\n    cmd = cmd.concat(segment[segment.length - 1]);\n    return cmd;\n  });\n  return result;\n}\nvar splitSegment = function (start, end, count) {\n  if (count === 1) {\n    return [[].concat(start)];\n  }\n  var segments = [];\n  if (end[0] === 'L' || end[0] === 'C' || end[0] === 'Q') {\n    segments = segments.concat(splitCurve(start, end, count));\n  } else {\n    var temp = [].concat(start);\n    if (temp[0] === 'M') {\n      temp[0] = 'L';\n    }\n    for (var i = 0; i <= count - 1; i++) {\n      segments.push(temp);\n    }\n  }\n  return segments;\n};\nvar fillPath = function (source, target) {\n  if (source.length === 1) {\n    return source;\n  }\n  var sourceLen = source.length - 1;\n  var targetLen = target.length - 1;\n  var ratio = sourceLen / targetLen;\n  var segmentsToFill = [];\n  if (source.length === 1 && source[0][0] === 'M') {\n    for (var i = 0; i < targetLen - sourceLen; i++) {\n      source.push(source[0]);\n    }\n    return source;\n  }\n  for (var i = 0; i < targetLen; i++) {\n    var index = Math.floor(ratio * i);\n    segmentsToFill[index] = (segmentsToFill[index] || 0) + 1;\n  }\n  var filled = segmentsToFill.reduce(function (filled, count, i) {\n    if (i === sourceLen) {\n      return filled.concat(source[sourceLen]);\n    }\n    return filled.concat(splitSegment(source[i], source[i + 1], count));\n  }, []);\n  filled.unshift(source[0]);\n  if (target[targetLen] === 'Z' || target[targetLen] === 'z') {\n    filled.push('Z');\n  }\n  return filled;\n};\nvar isEqual = function (obj1, obj2) {\n  if (obj1.length !== obj2.length) {\n    return false;\n  }\n  var result = true;\n  each(obj1, function (item, i) {\n    if (item !== obj2[i]) {\n      result = false;\n      return false;\n    }\n  });\n  return result;\n};\nfunction getMinDiff(del, add, modify) {\n  var type = null;\n  var min = modify;\n  if (add < min) {\n    min = add;\n    type = 'add';\n  }\n  if (del < min) {\n    min = del;\n    type = 'del';\n  }\n  return {\n    type: type,\n    min: min\n  };\n}\n/*\n * https://en.wikipedia.org/wiki/Levenshtein_distance\n * 计算两条path的编辑距离\n */\nvar levenshteinDistance = function (source, target) {\n  var sourceLen = source.length;\n  var targetLen = target.length;\n  var sourceSegment;\n  var targetSegment;\n  var temp = 0;\n  if (sourceLen === 0 || targetLen === 0) {\n    return null;\n  }\n  var dist = [];\n  for (var i = 0; i <= sourceLen; i++) {\n    dist[i] = [];\n    dist[i][0] = {\n      min: i\n    };\n  }\n  for (var j = 0; j <= targetLen; j++) {\n    dist[0][j] = {\n      min: j\n    };\n  }\n  for (var i = 1; i <= sourceLen; i++) {\n    sourceSegment = source[i - 1];\n    for (var j = 1; j <= targetLen; j++) {\n      targetSegment = target[j - 1];\n      if (isEqual(sourceSegment, targetSegment)) {\n        temp = 0;\n      } else {\n        temp = 1;\n      }\n      var del = dist[i - 1][j].min + 1;\n      var add = dist[i][j - 1].min + 1;\n      var modify = dist[i - 1][j - 1].min + temp;\n      dist[i][j] = getMinDiff(del, add, modify);\n    }\n  }\n  return dist;\n};\nvar fillPathByDiff = function (source, target) {\n  var diffMatrix = levenshteinDistance(source, target);\n  var sourceLen = source.length;\n  var targetLen = target.length;\n  var changes = [];\n  var index = 1;\n  var minPos = 1;\n  // 如果source和target不是完全不相等\n  if (diffMatrix[sourceLen][targetLen].min !== sourceLen) {\n    // 获取从source到target所需改动\n    for (var i = 1; i <= sourceLen; i++) {\n      var min = diffMatrix[i][i].min;\n      minPos = i;\n      for (var j = index; j <= targetLen; j++) {\n        if (diffMatrix[i][j].min < min) {\n          min = diffMatrix[i][j].min;\n          minPos = j;\n        }\n      }\n      index = minPos;\n      if (diffMatrix[i][index].type) {\n        changes.push({\n          index: i - 1,\n          type: diffMatrix[i][index].type\n        });\n      }\n    }\n    // 对source进行增删path\n    for (var i = changes.length - 1; i >= 0; i--) {\n      index = changes[i].index;\n      if (changes[i].type === 'add') {\n        source.splice(index, 0, [].concat(source[index]));\n      } else {\n        source.splice(index, 1);\n      }\n    }\n  }\n  // source尾部补齐\n  sourceLen = source.length;\n  var diff = targetLen - sourceLen;\n  if (sourceLen < targetLen) {\n    for (var i = 0; i < diff; i++) {\n      if (source[sourceLen - 1][0] === 'z' || source[sourceLen - 1][0] === 'Z') {\n        source.splice(sourceLen - 2, 0, source[sourceLen - 2]);\n      } else {\n        source.push(source[sourceLen - 1]);\n      }\n      sourceLen += 1;\n    }\n  }\n  return source;\n};\n// 将两个点均分成count个点\nfunction _splitPoints(points, former, count) {\n  var result = [].concat(points);\n  var index;\n  var t = 1 / (count + 1);\n  var formerEnd = _getSegmentPoints(former)[0];\n  for (var i = 1; i <= count; i++) {\n    t *= i;\n    index = Math.floor(points.length * t);\n    if (index === 0) {\n      result.unshift([formerEnd[0] * t + points[index][0] * (1 - t), formerEnd[1] * t + points[index][1] * (1 - t)]);\n    } else {\n      result.splice(index, 0, [formerEnd[0] * t + points[index][0] * (1 - t), formerEnd[1] * t + points[index][1] * (1 - t)]);\n    }\n  }\n  return result;\n}\n/*\n * 抽取pathSegment中的关键点\n * M,L,A,Q,H,V一个端点\n * Q, S抽取一个端点，一个控制点\n * C抽取一个端点，两个控制点\n */\nfunction _getSegmentPoints(segment) {\n  var points = [];\n  switch (segment[0]) {\n    case 'M':\n      points.push([segment[1], segment[2]]);\n      break;\n    case 'L':\n      points.push([segment[1], segment[2]]);\n      break;\n    case 'A':\n      points.push([segment[6], segment[7]]);\n      break;\n    case 'Q':\n      points.push([segment[3], segment[4]]);\n      points.push([segment[1], segment[2]]);\n      break;\n    case 'T':\n      points.push([segment[1], segment[2]]);\n      break;\n    case 'C':\n      points.push([segment[5], segment[6]]);\n      points.push([segment[1], segment[2]]);\n      points.push([segment[3], segment[4]]);\n      break;\n    case 'S':\n      points.push([segment[3], segment[4]]);\n      points.push([segment[1], segment[2]]);\n      break;\n    case 'H':\n      points.push([segment[1], segment[1]]);\n      break;\n    case 'V':\n      points.push([segment[1], segment[1]]);\n      break;\n    default:\n  }\n  return points;\n}\nvar formatPath = function (fromPath, toPath) {\n  if (fromPath.length <= 1) {\n    return fromPath;\n  }\n  var points;\n  for (var i = 0; i < toPath.length; i++) {\n    if (fromPath[i][0] !== toPath[i][0]) {\n      // 获取fromPath的pathSegment的端点，根据toPath的指令对其改造\n      points = _getSegmentPoints(fromPath[i]);\n      switch (toPath[i][0]) {\n        case 'M':\n          fromPath[i] = ['M'].concat(points[0]);\n          break;\n        case 'L':\n          fromPath[i] = ['L'].concat(points[0]);\n          break;\n        case 'A':\n          fromPath[i] = [].concat(toPath[i]);\n          fromPath[i][6] = points[0][0];\n          fromPath[i][7] = points[0][1];\n          break;\n        case 'Q':\n          if (points.length < 2) {\n            if (i > 0) {\n              points = _splitPoints(points, fromPath[i - 1], 1);\n            } else {\n              fromPath[i] = toPath[i];\n              break;\n            }\n          }\n          fromPath[i] = ['Q'].concat(points.reduce(function (arr, i) {\n            return arr.concat(i);\n          }, []));\n          break;\n        case 'T':\n          fromPath[i] = ['T'].concat(points[0]);\n          break;\n        case 'C':\n          if (points.length < 3) {\n            if (i > 0) {\n              points = _splitPoints(points, fromPath[i - 1], 2);\n            } else {\n              fromPath[i] = toPath[i];\n              break;\n            }\n          }\n          fromPath[i] = ['C'].concat(points.reduce(function (arr, i) {\n            return arr.concat(i);\n          }, []));\n          break;\n        case 'S':\n          if (points.length < 2) {\n            if (i > 0) {\n              points = _splitPoints(points, fromPath[i - 1], 1);\n            } else {\n              fromPath[i] = toPath[i];\n              break;\n            }\n          }\n          fromPath[i] = ['S'].concat(points.reduce(function (arr, i) {\n            return arr.concat(i);\n          }, []));\n          break;\n        default:\n          fromPath[i] = toPath[i];\n      }\n    }\n  }\n  return fromPath;\n};\nexport { catmullRomToBezier, fillPath, fillPathByDiff, formatPath, intersection, parsePathArray, parsePathString, pathToAbsolute, pathToCurve, rectPath };","map":{"version":3,"names":["each","isArray","SPACES","PATH_COMMAND","RegExp","PATH_VALUES","parsePathString","pathString","paramCounts","a","c","o","h","l","m","r","q","s","t","v","u","z","data","String","replace","b","params","name","toLowerCase","push","length","concat","splice","catmullRomToBezier","crp","d","i","iLen","p","x","y","ellipsePath","rx","ry","res","rad","Math","PI","x1","cos","x2","y1","sin","y2","pathToAbsolute","pathArray","mx","my","start","pa0","dots","crz","toUpperCase","pa","ii","slice","j","jj","pop","k","kk","l2c","q2c","ax","ay","_13","_23","a2c","angle","large_arc_flag","sweep_flag","recursive","_120","xy","f1","f2","cx","cy","rotate","X","Y","sqrt","rx2","ry2","abs","asin","toFixed","df","f2old","x2old","y2old","c1","s1","c2","s2","tan","hx","hy","m1","m2","m3","m4","join","split","newres","pathToCurve","path","path2","p2","attrs","bx","by","qx","qy","attrs2","pcoms1","pcoms2","pfirst","pcom","processPath","nx","ny","T","Q","apply","fixArc","pp","shift","pi","max","fixM","path1","a1","a2","seg","seg2","seglen","seg2len","parseFloat","p2s","parsePathArray","base3","p1","p3","p4","t1","t2","bezlen","x3","y3","x4","y4","z2","n","Tvalues","Cvalues","sum","ct","xbase","ybase","comb","curveDim","x0","y0","tvalues","bounds","b2ac","sqrtb2ac","jlen","mt","min","intersect","denominator","px","py","px2","py2","isPointInsideBBox","bbox","width","height","rectPath","w","box","r1","r2","r0","vb","isBBoxIntersect","bbox1","bbox2","bezierBBox","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","findDotsAtSegment","t13","pow","t12","t3","alpha","atan2","end","interHelper","bez1","bez2","justCount","l1","l2","n1","n2","dots1","dots2","di","di1","dj","dj1","ci","cj","is","interPathHelper","x1m","y1m","x2m","y2m","pj","intr","segment1","segment2","intersection","decasteljau","points","left","right","recurse","middlePoints","reverse","splitCurve","count","segments","leftSegments","rt","result","map","segment","cmd","splitSegment","temp","fillPath","source","target","sourceLen","targetLen","ratio","segmentsToFill","index","floor","filled","reduce","unshift","isEqual","obj1","obj2","item","getMinDiff","del","add","modify","type","levenshteinDistance","sourceSegment","targetSegment","dist","fillPathByDiff","diffMatrix","changes","minPos","diff","_splitPoints","former","formerEnd","_getSegmentPoints","formatPath","fromPath","toPath","arr"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g-base/esm/util/path.js"],"sourcesContent":["import { each, isArray } from '@antv/util';\nvar SPACES = '\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029';\nvar PATH_COMMAND = new RegExp(\"([a-z])[\" + SPACES + \",]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[\" + SPACES + \"]*,?[\" + SPACES + \"]*)+)\", 'ig');\nvar PATH_VALUES = new RegExp(\"(-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?)[\" + SPACES + \"]*,?[\" + SPACES + \"]*\", 'ig');\n// Parse given path string into an array of arrays of path segments\nvar parsePathString = function (pathString) {\n    if (!pathString) {\n        return null;\n    }\n    if (isArray(pathString)) {\n        return pathString;\n    }\n    var paramCounts = {\n        a: 7,\n        c: 6,\n        o: 2,\n        h: 1,\n        l: 2,\n        m: 2,\n        r: 4,\n        q: 4,\n        s: 4,\n        t: 2,\n        v: 1,\n        u: 3,\n        z: 0,\n    };\n    var data = [];\n    String(pathString).replace(PATH_COMMAND, function (a, b, c) {\n        var params = [];\n        var name = b.toLowerCase();\n        c.replace(PATH_VALUES, function (a, b) {\n            b && params.push(+b);\n        });\n        if (name === 'm' && params.length > 2) {\n            data.push([b].concat(params.splice(0, 2)));\n            name = 'l';\n            b = b === 'm' ? 'l' : 'L';\n        }\n        if (name === 'o' && params.length === 1) {\n            data.push([b, params[0]]);\n        }\n        if (name === 'r') {\n            data.push([b].concat(params));\n        }\n        else {\n            while (params.length >= paramCounts[name]) {\n                data.push([b].concat(params.splice(0, paramCounts[name])));\n                if (!paramCounts[name]) {\n                    break;\n                }\n            }\n        }\n        return pathString;\n    });\n    return data;\n};\n// http://schepers.cc/getting-to-the-point\nvar catmullRomToBezier = function (crp, z) {\n    var d = [];\n    // @ts-ignore\n    for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n        var p = [\n            {\n                x: +crp[i - 2],\n                y: +crp[i - 1],\n            },\n            {\n                x: +crp[i],\n                y: +crp[i + 1],\n            },\n            {\n                x: +crp[i + 2],\n                y: +crp[i + 3],\n            },\n            {\n                x: +crp[i + 4],\n                y: +crp[i + 5],\n            },\n        ];\n        if (z) {\n            if (!i) {\n                p[0] = {\n                    x: +crp[iLen - 2],\n                    y: +crp[iLen - 1],\n                };\n            }\n            else if (iLen - 4 === i) {\n                p[3] = {\n                    x: +crp[0],\n                    y: +crp[1],\n                };\n            }\n            else if (iLen - 2 === i) {\n                p[2] = {\n                    x: +crp[0],\n                    y: +crp[1],\n                };\n                p[3] = {\n                    x: +crp[2],\n                    y: +crp[3],\n                };\n            }\n        }\n        else {\n            if (iLen - 4 === i) {\n                p[3] = p[2];\n            }\n            else if (!i) {\n                p[0] = {\n                    x: +crp[i],\n                    y: +crp[i + 1],\n                };\n            }\n        }\n        d.push([\n            'C',\n            (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n            (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n            (p[1].x + 6 * p[2].x - p[3].x) / 6,\n            (p[1].y + 6 * p[2].y - p[3].y) / 6,\n            p[2].x,\n            p[2].y,\n        ]);\n    }\n    return d;\n};\nvar ellipsePath = function (x, y, rx, ry, a) {\n    var res = [];\n    if (a === null && ry === null) {\n        ry = rx;\n    }\n    x = +x;\n    y = +y;\n    rx = +rx;\n    ry = +ry;\n    if (a !== null) {\n        var rad = Math.PI / 180;\n        var x1 = x + rx * Math.cos(-ry * rad);\n        var x2 = x + rx * Math.cos(-a * rad);\n        var y1 = y + rx * Math.sin(-ry * rad);\n        var y2 = y + rx * Math.sin(-a * rad);\n        res = [\n            ['M', x1, y1],\n            ['A', rx, rx, 0, +(a - ry > 180), 0, x2, y2],\n        ];\n    }\n    else {\n        res = [['M', x, y], ['m', 0, -ry], ['a', rx, ry, 0, 1, 1, 0, 2 * ry], ['a', rx, ry, 0, 1, 1, 0, -2 * ry], ['z']];\n    }\n    return res;\n};\nvar pathToAbsolute = function (pathArray) {\n    pathArray = parsePathString(pathArray);\n    if (!pathArray || !pathArray.length) {\n        return [['M', 0, 0]];\n    }\n    var res = [];\n    var x = 0;\n    var y = 0;\n    var mx = 0;\n    var my = 0;\n    var start = 0;\n    var pa0;\n    var dots;\n    if (pathArray[0][0] === 'M') {\n        x = +pathArray[0][1];\n        y = +pathArray[0][2];\n        mx = x;\n        my = y;\n        start++;\n        res[0] = ['M', x, y];\n    }\n    var crz = pathArray.length === 3 &&\n        pathArray[0][0] === 'M' &&\n        pathArray[1][0].toUpperCase() === 'R' &&\n        pathArray[2][0].toUpperCase() === 'Z';\n    for (var r = void 0, pa = void 0, i = start, ii = pathArray.length; i < ii; i++) {\n        res.push((r = []));\n        pa = pathArray[i];\n        pa0 = pa[0];\n        if (pa0 !== pa0.toUpperCase()) {\n            r[0] = pa0.toUpperCase();\n            switch (r[0]) {\n                case 'A':\n                    r[1] = pa[1];\n                    r[2] = pa[2];\n                    r[3] = pa[3];\n                    r[4] = pa[4];\n                    r[5] = pa[5];\n                    r[6] = +pa[6] + x;\n                    r[7] = +pa[7] + y;\n                    break;\n                case 'V':\n                    r[1] = +pa[1] + y;\n                    break;\n                case 'H':\n                    r[1] = +pa[1] + x;\n                    break;\n                case 'R':\n                    dots = [x, y].concat(pa.slice(1));\n                    for (var j = 2, jj = dots.length; j < jj; j++) {\n                        dots[j] = +dots[j] + x;\n                        dots[++j] = +dots[j] + y;\n                    }\n                    res.pop();\n                    res = res.concat(catmullRomToBezier(dots, crz));\n                    break;\n                case 'O':\n                    res.pop();\n                    dots = ellipsePath(x, y, pa[1], pa[2]);\n                    dots.push(dots[0]);\n                    res = res.concat(dots);\n                    break;\n                case 'U':\n                    res.pop();\n                    res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                    r = ['U'].concat(res[res.length - 1].slice(-2));\n                    break;\n                case 'M':\n                    mx = +pa[1] + x;\n                    my = +pa[2] + y;\n                    break; // for lint\n                default:\n                    for (var j = 1, jj = pa.length; j < jj; j++) {\n                        r[j] = +pa[j] + (j % 2 ? x : y);\n                    }\n            }\n        }\n        else if (pa0 === 'R') {\n            dots = [x, y].concat(pa.slice(1));\n            res.pop();\n            res = res.concat(catmullRomToBezier(dots, crz));\n            r = ['R'].concat(pa.slice(-2));\n        }\n        else if (pa0 === 'O') {\n            res.pop();\n            dots = ellipsePath(x, y, pa[1], pa[2]);\n            dots.push(dots[0]);\n            res = res.concat(dots);\n        }\n        else if (pa0 === 'U') {\n            res.pop();\n            res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n            r = ['U'].concat(res[res.length - 1].slice(-2));\n        }\n        else {\n            for (var k = 0, kk = pa.length; k < kk; k++) {\n                r[k] = pa[k];\n            }\n        }\n        pa0 = pa0.toUpperCase();\n        if (pa0 !== 'O') {\n            switch (r[0]) {\n                case 'Z':\n                    x = +mx;\n                    y = +my;\n                    break;\n                case 'H':\n                    x = r[1];\n                    break;\n                case 'V':\n                    y = r[1];\n                    break;\n                case 'M':\n                    mx = r[r.length - 2];\n                    my = r[r.length - 1];\n                    break; // for lint\n                default:\n                    x = r[r.length - 2];\n                    y = r[r.length - 1];\n            }\n        }\n    }\n    return res;\n};\nvar l2c = function (x1, y1, x2, y2) {\n    return [x1, y1, x2, y2, x2, y2];\n};\nvar q2c = function (x1, y1, ax, ay, x2, y2) {\n    var _13 = 1 / 3;\n    var _23 = 2 / 3;\n    return [_13 * x1 + _23 * ax, _13 * y1 + _23 * ay, _13 * x2 + _23 * ax, _13 * y2 + _23 * ay, x2, y2];\n};\nvar a2c = function (x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n    // for more information of where this math came from visit:\n    // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n    if (rx === ry) {\n        rx += 1;\n    }\n    var _120 = (Math.PI * 120) / 180;\n    var rad = (Math.PI / 180) * (+angle || 0);\n    var res = [];\n    var xy;\n    var f1;\n    var f2;\n    var cx;\n    var cy;\n    var rotate = function (x, y, rad) {\n        var X = x * Math.cos(rad) - y * Math.sin(rad);\n        var Y = x * Math.sin(rad) + y * Math.cos(rad);\n        return {\n            x: X,\n            y: Y,\n        };\n    };\n    if (!recursive) {\n        xy = rotate(x1, y1, -rad);\n        x1 = xy.x;\n        y1 = xy.y;\n        xy = rotate(x2, y2, -rad);\n        x2 = xy.x;\n        y2 = xy.y;\n        if (x1 === x2 && y1 === y2) {\n            // 若弧的起始点和终点重叠则错开一点\n            x2 += 1;\n            y2 += 1;\n        }\n        // const cos = Math.cos(Math.PI / 180 * angle);\n        // const sin = Math.sin(Math.PI / 180 * angle);\n        var x = (x1 - x2) / 2;\n        var y = (y1 - y2) / 2;\n        var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\n        if (h > 1) {\n            h = Math.sqrt(h);\n            rx = h * rx;\n            ry = h * ry;\n        }\n        var rx2 = rx * rx;\n        var ry2 = ry * ry;\n        var k = (large_arc_flag === sweep_flag ? -1 : 1) *\n            Math.sqrt(Math.abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x)));\n        cx = (k * rx * y) / ry + (x1 + x2) / 2;\n        cy = (k * -ry * x) / rx + (y1 + y2) / 2;\n        // @ts-ignore\n        f1 = Math.asin(((y1 - cy) / ry).toFixed(9));\n        // @ts-ignore\n        f2 = Math.asin(((y2 - cy) / ry).toFixed(9));\n        f1 = x1 < cx ? Math.PI - f1 : f1;\n        f2 = x2 < cx ? Math.PI - f2 : f2;\n        f1 < 0 && (f1 = Math.PI * 2 + f1);\n        f2 < 0 && (f2 = Math.PI * 2 + f2);\n        if (sweep_flag && f1 > f2) {\n            f1 = f1 - Math.PI * 2;\n        }\n        if (!sweep_flag && f2 > f1) {\n            f2 = f2 - Math.PI * 2;\n        }\n    }\n    else {\n        f1 = recursive[0];\n        f2 = recursive[1];\n        cx = recursive[2];\n        cy = recursive[3];\n    }\n    var df = f2 - f1;\n    if (Math.abs(df) > _120) {\n        var f2old = f2;\n        var x2old = x2;\n        var y2old = y2;\n        f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n        x2 = cx + rx * Math.cos(f2);\n        y2 = cy + ry * Math.sin(f2);\n        res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n    }\n    df = f2 - f1;\n    var c1 = Math.cos(f1);\n    var s1 = Math.sin(f1);\n    var c2 = Math.cos(f2);\n    var s2 = Math.sin(f2);\n    var t = Math.tan(df / 4);\n    var hx = (4 / 3) * rx * t;\n    var hy = (4 / 3) * ry * t;\n    var m1 = [x1, y1];\n    var m2 = [x1 + hx * s1, y1 - hy * c1];\n    var m3 = [x2 + hx * s2, y2 - hy * c2];\n    var m4 = [x2, y2];\n    m2[0] = 2 * m1[0] - m2[0];\n    m2[1] = 2 * m1[1] - m2[1];\n    if (recursive) {\n        return [m2, m3, m4].concat(res);\n    }\n    res = [m2, m3, m4].concat(res).join().split(',');\n    var newres = [];\n    for (var i = 0, ii = res.length; i < ii; i++) {\n        newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n    }\n    return newres;\n};\nvar pathToCurve = function (path, path2) {\n    var p = pathToAbsolute(path);\n    var p2 = path2 && pathToAbsolute(path2);\n    var attrs = {\n        x: 0,\n        y: 0,\n        bx: 0,\n        by: 0,\n        X: 0,\n        Y: 0,\n        qx: null,\n        qy: null,\n    };\n    var attrs2 = {\n        x: 0,\n        y: 0,\n        bx: 0,\n        by: 0,\n        X: 0,\n        Y: 0,\n        qx: null,\n        qy: null,\n    };\n    var pcoms1 = []; // path commands of original path p\n    var pcoms2 = []; // path commands of original path p2\n    var pfirst = ''; // temporary holder for original path command\n    var pcom = ''; // holder for previous path command of original path\n    var ii;\n    var processPath = function (path, d, pcom) {\n        var nx;\n        var ny;\n        if (!path) {\n            return ['C', d.x, d.y, d.x, d.y, d.x, d.y];\n        }\n        !(path[0] in\n            {\n                T: 1,\n                Q: 1,\n            }) && (d.qx = d.qy = null);\n        switch (path[0]) {\n            case 'M':\n                d.X = path[1];\n                d.Y = path[2];\n                break;\n            case 'A':\n                path = ['C'].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n                break;\n            case 'S':\n                if (pcom === 'C' || pcom === 'S') {\n                    // In \"S\" case we have to take into account, if the previous command is C/S.\n                    nx = d.x * 2 - d.bx; // And reflect the previous\n                    ny = d.y * 2 - d.by; // command's control point relative to the current point.\n                }\n                else {\n                    // or some else or nothing\n                    nx = d.x;\n                    ny = d.y;\n                }\n                path = ['C', nx, ny].concat(path.slice(1));\n                break;\n            case 'T':\n                if (pcom === 'Q' || pcom === 'T') {\n                    // In \"T\" case we have to take into account, if the previous command is Q/T.\n                    d.qx = d.x * 2 - d.qx; // And make a reflection similar\n                    d.qy = d.y * 2 - d.qy; // to case \"S\".\n                }\n                else {\n                    // or something else or nothing\n                    d.qx = d.x;\n                    d.qy = d.y;\n                }\n                path = ['C'].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n                break;\n            case 'Q':\n                d.qx = path[1];\n                d.qy = path[2];\n                path = ['C'].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n                break;\n            case 'L':\n                path = ['C'].concat(l2c(d.x, d.y, path[1], path[2]));\n                break;\n            case 'H':\n                path = ['C'].concat(l2c(d.x, d.y, path[1], d.y));\n                break;\n            case 'V':\n                path = ['C'].concat(l2c(d.x, d.y, d.x, path[1]));\n                break;\n            case 'Z':\n                path = ['C'].concat(l2c(d.x, d.y, d.X, d.Y));\n                break;\n            default:\n                break;\n        }\n        return path;\n    };\n    var fixArc = function (pp, i) {\n        if (pp[i].length > 7) {\n            pp[i].shift();\n            var pi = pp[i];\n            while (pi.length) {\n                pcoms1[i] = 'A'; // if created multiple C:s, their original seg is saved\n                p2 && (pcoms2[i] = 'A'); // the same as above\n                pp.splice(i++, 0, ['C'].concat(pi.splice(0, 6)));\n            }\n            pp.splice(i, 1);\n            ii = Math.max(p.length, (p2 && p2.length) || 0);\n        }\n    };\n    var fixM = function (path1, path2, a1, a2, i) {\n        if (path1 && path2 && path1[i][0] === 'M' && path2[i][0] !== 'M') {\n            path2.splice(i, 0, ['M', a2.x, a2.y]);\n            a1.bx = 0;\n            a1.by = 0;\n            a1.x = path1[i][1];\n            a1.y = path1[i][2];\n            ii = Math.max(p.length, (p2 && p2.length) || 0);\n        }\n    };\n    ii = Math.max(p.length, (p2 && p2.length) || 0);\n    for (var i = 0; i < ii; i++) {\n        p[i] && (pfirst = p[i][0]); // save current path command\n        if (pfirst !== 'C') {\n            // C is not saved yet, because it may be result of conversion\n            pcoms1[i] = pfirst; // Save current path command\n            i && (pcom = pcoms1[i - 1]); // Get previous path command pcom\n        }\n        p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n        if (pcoms1[i] !== 'A' && pfirst === 'C')\n            pcoms1[i] = 'C'; // A is the only command\n        // which may produce multiple C:s\n        // so we have to make sure that C is also C in original path\n        fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n        if (p2) {\n            // the same procedures is done to p2\n            p2[i] && (pfirst = p2[i][0]);\n            if (pfirst !== 'C') {\n                pcoms2[i] = pfirst;\n                i && (pcom = pcoms2[i - 1]);\n            }\n            p2[i] = processPath(p2[i], attrs2, pcom);\n            if (pcoms2[i] !== 'A' && pfirst === 'C') {\n                pcoms2[i] = 'C';\n            }\n            fixArc(p2, i);\n        }\n        fixM(p, p2, attrs, attrs2, i);\n        fixM(p2, p, attrs2, attrs, i);\n        var seg = p[i];\n        var seg2 = p2 && p2[i];\n        var seglen = seg.length;\n        var seg2len = p2 && seg2.length;\n        attrs.x = seg[seglen - 2];\n        attrs.y = seg[seglen - 1];\n        attrs.bx = parseFloat(seg[seglen - 4]) || attrs.x;\n        attrs.by = parseFloat(seg[seglen - 3]) || attrs.y;\n        attrs2.bx = p2 && (parseFloat(seg2[seg2len - 4]) || attrs2.x);\n        attrs2.by = p2 && (parseFloat(seg2[seg2len - 3]) || attrs2.y);\n        attrs2.x = p2 && seg2[seg2len - 2];\n        attrs2.y = p2 && seg2[seg2len - 1];\n    }\n    return p2 ? [p, p2] : p;\n};\nvar p2s = /,?([a-z]),?/gi;\nvar parsePathArray = function (path) {\n    return path.join(',').replace(p2s, '$1');\n};\nvar base3 = function (t, p1, p2, p3, p4) {\n    var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4;\n    var t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n    return t * t2 - 3 * p1 + 3 * p2;\n};\nvar bezlen = function (x1, y1, x2, y2, x3, y3, x4, y4, z) {\n    if (z === null) {\n        z = 1;\n    }\n    z = z > 1 ? 1 : z < 0 ? 0 : z;\n    var z2 = z / 2;\n    var n = 12;\n    var Tvalues = [\n        -0.1252, 0.1252, -0.3678, 0.3678, -0.5873, 0.5873, -0.7699, 0.7699, -0.9041, 0.9041, -0.9816, 0.9816,\n    ];\n    var Cvalues = [0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032, 0.1601, 0.1601, 0.1069, 0.1069, 0.0472, 0.0472];\n    var sum = 0;\n    for (var i = 0; i < n; i++) {\n        var ct = z2 * Tvalues[i] + z2;\n        var xbase = base3(ct, x1, x2, x3, x4);\n        var ybase = base3(ct, y1, y2, y3, y4);\n        var comb = xbase * xbase + ybase * ybase;\n        sum += Cvalues[i] * Math.sqrt(comb);\n    }\n    return z2 * sum;\n};\nvar curveDim = function (x0, y0, x1, y1, x2, y2, x3, y3) {\n    var tvalues = [];\n    var bounds = [[], []];\n    var a;\n    var b;\n    var c;\n    var t;\n    for (var i = 0; i < 2; ++i) {\n        if (i === 0) {\n            b = 6 * x0 - 12 * x1 + 6 * x2;\n            a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n            c = 3 * x1 - 3 * x0;\n        }\n        else {\n            b = 6 * y0 - 12 * y1 + 6 * y2;\n            a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n            c = 3 * y1 - 3 * y0;\n        }\n        if (Math.abs(a) < 1e-12) {\n            if (Math.abs(b) < 1e-12) {\n                continue;\n            }\n            t = -c / b;\n            if (t > 0 && t < 1) {\n                tvalues.push(t);\n            }\n            continue;\n        }\n        var b2ac = b * b - 4 * c * a;\n        var sqrtb2ac = Math.sqrt(b2ac);\n        if (b2ac < 0) {\n            continue;\n        }\n        var t1 = (-b + sqrtb2ac) / (2 * a);\n        if (t1 > 0 && t1 < 1) {\n            tvalues.push(t1);\n        }\n        var t2 = (-b - sqrtb2ac) / (2 * a);\n        if (t2 > 0 && t2 < 1) {\n            tvalues.push(t2);\n        }\n    }\n    var j = tvalues.length;\n    var jlen = j;\n    var mt;\n    while (j--) {\n        t = tvalues[j];\n        mt = 1 - t;\n        bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n        bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n    }\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    bounds[0].length = bounds[1].length = jlen + 2;\n    return {\n        min: {\n            x: Math.min.apply(0, bounds[0]),\n            y: Math.min.apply(0, bounds[1]),\n        },\n        max: {\n            x: Math.max.apply(0, bounds[0]),\n            y: Math.max.apply(0, bounds[1]),\n        },\n    };\n};\nvar intersect = function (x1, y1, x2, y2, x3, y3, x4, y4) {\n    if (Math.max(x1, x2) < Math.min(x3, x4) ||\n        Math.min(x1, x2) > Math.max(x3, x4) ||\n        Math.max(y1, y2) < Math.min(y3, y4) ||\n        Math.min(y1, y2) > Math.max(y3, y4)) {\n        return;\n    }\n    var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4);\n    var ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4);\n    var denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n    if (!denominator) {\n        return;\n    }\n    var px = nx / denominator;\n    var py = ny / denominator;\n    var px2 = +px.toFixed(2);\n    var py2 = +py.toFixed(2);\n    if (px2 < +Math.min(x1, x2).toFixed(2) ||\n        px2 > +Math.max(x1, x2).toFixed(2) ||\n        px2 < +Math.min(x3, x4).toFixed(2) ||\n        px2 > +Math.max(x3, x4).toFixed(2) ||\n        py2 < +Math.min(y1, y2).toFixed(2) ||\n        py2 > +Math.max(y1, y2).toFixed(2) ||\n        py2 < +Math.min(y3, y4).toFixed(2) ||\n        py2 > +Math.max(y3, y4).toFixed(2)) {\n        return;\n    }\n    return {\n        x: px,\n        y: py,\n    };\n};\nvar isPointInsideBBox = function (bbox, x, y) {\n    return x >= bbox.x && x <= bbox.x + bbox.width && y >= bbox.y && y <= bbox.y + bbox.height;\n};\nvar rectPath = function (x, y, w, h, r) {\n    if (r) {\n        return [\n            ['M', +x + +r, y],\n            ['l', w - r * 2, 0],\n            ['a', r, r, 0, 0, 1, r, r],\n            ['l', 0, h - r * 2],\n            ['a', r, r, 0, 0, 1, -r, r],\n            ['l', r * 2 - w, 0],\n            ['a', r, r, 0, 0, 1, -r, -r],\n            ['l', 0, r * 2 - h],\n            ['a', r, r, 0, 0, 1, r, -r],\n            ['z'],\n        ];\n    }\n    var res = [['M', x, y], ['l', w, 0], ['l', 0, h], ['l', -w, 0], ['z']];\n    // @ts-ignore\n    res.parsePathArray = parsePathArray;\n    return res;\n};\nvar box = function (x, y, width, height) {\n    if (x === null) {\n        x = y = width = height = 0;\n    }\n    if (y === null) {\n        y = x.y;\n        width = x.width;\n        height = x.height;\n        x = x.x;\n    }\n    return {\n        x: x,\n        y: y,\n        width: width,\n        w: width,\n        height: height,\n        h: height,\n        x2: x + width,\n        y2: y + height,\n        cx: x + width / 2,\n        cy: y + height / 2,\n        r1: Math.min(width, height) / 2,\n        r2: Math.max(width, height) / 2,\n        r0: Math.sqrt(width * width + height * height) / 2,\n        path: rectPath(x, y, width, height),\n        vb: [x, y, width, height].join(' '),\n    };\n};\nvar isBBoxIntersect = function (bbox1, bbox2) {\n    bbox1 = box(bbox1);\n    bbox2 = box(bbox2);\n    return (isPointInsideBBox(bbox2, bbox1.x, bbox1.y) ||\n        isPointInsideBBox(bbox2, bbox1.x2, bbox1.y) ||\n        isPointInsideBBox(bbox2, bbox1.x, bbox1.y2) ||\n        isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2) ||\n        isPointInsideBBox(bbox1, bbox2.x, bbox2.y) ||\n        isPointInsideBBox(bbox1, bbox2.x2, bbox2.y) ||\n        isPointInsideBBox(bbox1, bbox2.x, bbox2.y2) ||\n        isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2) ||\n        (((bbox1.x < bbox2.x2 && bbox1.x > bbox2.x) || (bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)) &&\n            ((bbox1.y < bbox2.y2 && bbox1.y > bbox2.y) || (bbox2.y < bbox1.y2 && bbox2.y > bbox1.y))));\n};\nvar bezierBBox = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n    if (!isArray(p1x)) {\n        p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n    }\n    var bbox = curveDim.apply(null, p1x);\n    return box(bbox.min.x, bbox.min.y, bbox.max.x - bbox.min.x, bbox.max.y - bbox.min.y);\n};\nvar findDotsAtSegment = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n    var t1 = 1 - t;\n    var t13 = Math.pow(t1, 3);\n    var t12 = Math.pow(t1, 2);\n    var t2 = t * t;\n    var t3 = t2 * t;\n    var x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x;\n    var y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y;\n    var mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x);\n    var my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y);\n    var nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x);\n    var ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y);\n    var ax = t1 * p1x + t * c1x;\n    var ay = t1 * p1y + t * c1y;\n    var cx = t1 * c2x + t * p2x;\n    var cy = t1 * c2y + t * p2y;\n    var alpha = 90 - (Math.atan2(mx - nx, my - ny) * 180) / Math.PI;\n    // (mx > nx || my < ny) && (alpha += 180);\n    return {\n        x: x,\n        y: y,\n        m: {\n            x: mx,\n            y: my,\n        },\n        n: {\n            x: nx,\n            y: ny,\n        },\n        start: {\n            x: ax,\n            y: ay,\n        },\n        end: {\n            x: cx,\n            y: cy,\n        },\n        alpha: alpha,\n    };\n};\nvar interHelper = function (bez1, bez2, justCount) {\n    var bbox1 = bezierBBox(bez1);\n    var bbox2 = bezierBBox(bez2);\n    if (!isBBoxIntersect(bbox1, bbox2)) {\n        return justCount ? 0 : [];\n    }\n    var l1 = bezlen.apply(0, bez1);\n    var l2 = bezlen.apply(0, bez2);\n    var n1 = ~~(l1 / 8);\n    var n2 = ~~(l2 / 8);\n    var dots1 = [];\n    var dots2 = [];\n    var xy = {};\n    var res = justCount ? 0 : [];\n    for (var i = 0; i < n1 + 1; i++) {\n        var d = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n        dots1.push({\n            x: d.x,\n            y: d.y,\n            t: i / n1,\n        });\n    }\n    for (var i = 0; i < n2 + 1; i++) {\n        var d = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n        dots2.push({\n            x: d.x,\n            y: d.y,\n            t: i / n2,\n        });\n    }\n    for (var i = 0; i < n1; i++) {\n        for (var j = 0; j < n2; j++) {\n            var di = dots1[i];\n            var di1 = dots1[i + 1];\n            var dj = dots2[j];\n            var dj1 = dots2[j + 1];\n            var ci = Math.abs(di1.x - di.x) < 0.001 ? 'y' : 'x';\n            var cj = Math.abs(dj1.x - dj.x) < 0.001 ? 'y' : 'x';\n            var is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n            if (is) {\n                if (xy[is.x.toFixed(4)] === is.y.toFixed(4)) {\n                    continue;\n                }\n                xy[is.x.toFixed(4)] = is.y.toFixed(4);\n                var t1 = di.t + Math.abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t);\n                var t2 = dj.t + Math.abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n                if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n                    if (justCount) {\n                        // @ts-ignore\n                        res += 1;\n                    }\n                    else {\n                        // @ts-ignore\n                        res.push({\n                            x: is.x,\n                            y: is.y,\n                            t1: t1,\n                            t2: t2,\n                        });\n                    }\n                }\n            }\n        }\n    }\n    return res;\n};\nvar interPathHelper = function (path1, path2, justCount) {\n    path1 = pathToCurve(path1);\n    path2 = pathToCurve(path2);\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x1m;\n    var y1m;\n    var x2m;\n    var y2m;\n    var bez1;\n    var bez2;\n    var res = justCount ? 0 : [];\n    for (var i = 0, ii = path1.length; i < ii; i++) {\n        var pi = path1[i];\n        if (pi[0] === 'M') {\n            x1 = x1m = pi[1];\n            y1 = y1m = pi[2];\n        }\n        else {\n            if (pi[0] === 'C') {\n                bez1 = [x1, y1].concat(pi.slice(1));\n                x1 = bez1[6];\n                y1 = bez1[7];\n            }\n            else {\n                bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n                x1 = x1m;\n                y1 = y1m;\n            }\n            for (var j = 0, jj = path2.length; j < jj; j++) {\n                var pj = path2[j];\n                if (pj[0] === 'M') {\n                    x2 = x2m = pj[1];\n                    y2 = y2m = pj[2];\n                }\n                else {\n                    if (pj[0] === 'C') {\n                        bez2 = [x2, y2].concat(pj.slice(1));\n                        x2 = bez2[6];\n                        y2 = bez2[7];\n                    }\n                    else {\n                        bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n                        x2 = x2m;\n                        y2 = y2m;\n                    }\n                    var intr = interHelper(bez1, bez2, justCount);\n                    if (justCount) {\n                        // @ts-ignore\n                        res += intr;\n                    }\n                    else {\n                        // @ts-ignore\n                        for (var k = 0, kk = intr.length; k < kk; k++) {\n                            intr[k].segment1 = i;\n                            intr[k].segment2 = j;\n                            intr[k].bez1 = bez1;\n                            intr[k].bez2 = bez2;\n                        }\n                        // @ts-ignore\n                        res = res.concat(intr);\n                    }\n                }\n            }\n        }\n    }\n    return res;\n};\nvar intersection = function (path1, path2) {\n    return interPathHelper(path1, path2);\n};\nfunction decasteljau(points, t) {\n    var left = [];\n    var right = [];\n    function recurse(points, t) {\n        if (points.length === 1) {\n            left.push(points[0]);\n            right.push(points[0]);\n        }\n        else {\n            var middlePoints = [];\n            for (var i = 0; i < points.length - 1; i++) {\n                if (i === 0) {\n                    left.push(points[0]);\n                }\n                if (i === points.length - 2) {\n                    right.push(points[i + 1]);\n                }\n                middlePoints[i] = [\n                    (1 - t) * points[i][0] + t * points[i + 1][0],\n                    (1 - t) * points[i][1] + t * points[i + 1][1],\n                ];\n            }\n            recurse(middlePoints, t);\n        }\n    }\n    if (points.length) {\n        recurse(points, t);\n    }\n    return { left: left, right: right.reverse() };\n}\nfunction splitCurve(start, end, count) {\n    var points = [[start[1], start[2]]];\n    count = count || 2;\n    var segments = [];\n    if (end[0] === 'A') {\n        points.push(end[6]);\n        points.push(end[7]);\n    }\n    else if (end[0] === 'C') {\n        points.push([end[1], end[2]]);\n        points.push([end[3], end[4]]);\n        points.push([end[5], end[6]]);\n    }\n    else if (end[0] === 'S' || end[0] === 'Q') {\n        points.push([end[1], end[2]]);\n        points.push([end[3], end[4]]);\n    }\n    else {\n        points.push([end[1], end[2]]);\n    }\n    var leftSegments = points;\n    var t = 1 / count;\n    for (var i = 0; i < count - 1; i++) {\n        var rt = t / (1 - t * i);\n        var split = decasteljau(leftSegments, rt);\n        segments.push(split.left);\n        leftSegments = split.right;\n    }\n    segments.push(leftSegments);\n    var result = segments.map(function (segment) {\n        var cmd = [];\n        if (segment.length === 4) {\n            cmd.push('C');\n            cmd = cmd.concat(segment[2]);\n        }\n        if (segment.length >= 3) {\n            if (segment.length === 3) {\n                cmd.push('Q');\n            }\n            cmd = cmd.concat(segment[1]);\n        }\n        if (segment.length === 2) {\n            cmd.push('L');\n        }\n        cmd = cmd.concat(segment[segment.length - 1]);\n        return cmd;\n    });\n    return result;\n}\nvar splitSegment = function (start, end, count) {\n    if (count === 1) {\n        return [[].concat(start)];\n    }\n    var segments = [];\n    if (end[0] === 'L' || end[0] === 'C' || end[0] === 'Q') {\n        segments = segments.concat(splitCurve(start, end, count));\n    }\n    else {\n        var temp = [].concat(start);\n        if (temp[0] === 'M') {\n            temp[0] = 'L';\n        }\n        for (var i = 0; i <= count - 1; i++) {\n            segments.push(temp);\n        }\n    }\n    return segments;\n};\nvar fillPath = function (source, target) {\n    if (source.length === 1) {\n        return source;\n    }\n    var sourceLen = source.length - 1;\n    var targetLen = target.length - 1;\n    var ratio = sourceLen / targetLen;\n    var segmentsToFill = [];\n    if (source.length === 1 && source[0][0] === 'M') {\n        for (var i = 0; i < targetLen - sourceLen; i++) {\n            source.push(source[0]);\n        }\n        return source;\n    }\n    for (var i = 0; i < targetLen; i++) {\n        var index = Math.floor(ratio * i);\n        segmentsToFill[index] = (segmentsToFill[index] || 0) + 1;\n    }\n    var filled = segmentsToFill.reduce(function (filled, count, i) {\n        if (i === sourceLen) {\n            return filled.concat(source[sourceLen]);\n        }\n        return filled.concat(splitSegment(source[i], source[i + 1], count));\n    }, []);\n    filled.unshift(source[0]);\n    if (target[targetLen] === 'Z' || target[targetLen] === 'z') {\n        filled.push('Z');\n    }\n    return filled;\n};\nvar isEqual = function (obj1, obj2) {\n    if (obj1.length !== obj2.length) {\n        return false;\n    }\n    var result = true;\n    each(obj1, function (item, i) {\n        if (item !== obj2[i]) {\n            result = false;\n            return false;\n        }\n    });\n    return result;\n};\nfunction getMinDiff(del, add, modify) {\n    var type = null;\n    var min = modify;\n    if (add < min) {\n        min = add;\n        type = 'add';\n    }\n    if (del < min) {\n        min = del;\n        type = 'del';\n    }\n    return {\n        type: type,\n        min: min,\n    };\n}\n/*\n * https://en.wikipedia.org/wiki/Levenshtein_distance\n * 计算两条path的编辑距离\n */\nvar levenshteinDistance = function (source, target) {\n    var sourceLen = source.length;\n    var targetLen = target.length;\n    var sourceSegment;\n    var targetSegment;\n    var temp = 0;\n    if (sourceLen === 0 || targetLen === 0) {\n        return null;\n    }\n    var dist = [];\n    for (var i = 0; i <= sourceLen; i++) {\n        dist[i] = [];\n        dist[i][0] = { min: i };\n    }\n    for (var j = 0; j <= targetLen; j++) {\n        dist[0][j] = { min: j };\n    }\n    for (var i = 1; i <= sourceLen; i++) {\n        sourceSegment = source[i - 1];\n        for (var j = 1; j <= targetLen; j++) {\n            targetSegment = target[j - 1];\n            if (isEqual(sourceSegment, targetSegment)) {\n                temp = 0;\n            }\n            else {\n                temp = 1;\n            }\n            var del = dist[i - 1][j].min + 1;\n            var add = dist[i][j - 1].min + 1;\n            var modify = dist[i - 1][j - 1].min + temp;\n            dist[i][j] = getMinDiff(del, add, modify);\n        }\n    }\n    return dist;\n};\nvar fillPathByDiff = function (source, target) {\n    var diffMatrix = levenshteinDistance(source, target);\n    var sourceLen = source.length;\n    var targetLen = target.length;\n    var changes = [];\n    var index = 1;\n    var minPos = 1;\n    // 如果source和target不是完全不相等\n    if (diffMatrix[sourceLen][targetLen].min !== sourceLen) {\n        // 获取从source到target所需改动\n        for (var i = 1; i <= sourceLen; i++) {\n            var min = diffMatrix[i][i].min;\n            minPos = i;\n            for (var j = index; j <= targetLen; j++) {\n                if (diffMatrix[i][j].min < min) {\n                    min = diffMatrix[i][j].min;\n                    minPos = j;\n                }\n            }\n            index = minPos;\n            if (diffMatrix[i][index].type) {\n                changes.push({ index: i - 1, type: diffMatrix[i][index].type });\n            }\n        }\n        // 对source进行增删path\n        for (var i = changes.length - 1; i >= 0; i--) {\n            index = changes[i].index;\n            if (changes[i].type === 'add') {\n                source.splice(index, 0, [].concat(source[index]));\n            }\n            else {\n                source.splice(index, 1);\n            }\n        }\n    }\n    // source尾部补齐\n    sourceLen = source.length;\n    var diff = targetLen - sourceLen;\n    if (sourceLen < targetLen) {\n        for (var i = 0; i < diff; i++) {\n            if (source[sourceLen - 1][0] === 'z' || source[sourceLen - 1][0] === 'Z') {\n                source.splice(sourceLen - 2, 0, source[sourceLen - 2]);\n            }\n            else {\n                source.push(source[sourceLen - 1]);\n            }\n            sourceLen += 1;\n        }\n    }\n    return source;\n};\n// 将两个点均分成count个点\nfunction _splitPoints(points, former, count) {\n    var result = [].concat(points);\n    var index;\n    var t = 1 / (count + 1);\n    var formerEnd = _getSegmentPoints(former)[0];\n    for (var i = 1; i <= count; i++) {\n        t *= i;\n        index = Math.floor(points.length * t);\n        if (index === 0) {\n            result.unshift([formerEnd[0] * t + points[index][0] * (1 - t), formerEnd[1] * t + points[index][1] * (1 - t)]);\n        }\n        else {\n            result.splice(index, 0, [\n                formerEnd[0] * t + points[index][0] * (1 - t),\n                formerEnd[1] * t + points[index][1] * (1 - t),\n            ]);\n        }\n    }\n    return result;\n}\n/*\n * 抽取pathSegment中的关键点\n * M,L,A,Q,H,V一个端点\n * Q, S抽取一个端点，一个控制点\n * C抽取一个端点，两个控制点\n */\nfunction _getSegmentPoints(segment) {\n    var points = [];\n    switch (segment[0]) {\n        case 'M':\n            points.push([segment[1], segment[2]]);\n            break;\n        case 'L':\n            points.push([segment[1], segment[2]]);\n            break;\n        case 'A':\n            points.push([segment[6], segment[7]]);\n            break;\n        case 'Q':\n            points.push([segment[3], segment[4]]);\n            points.push([segment[1], segment[2]]);\n            break;\n        case 'T':\n            points.push([segment[1], segment[2]]);\n            break;\n        case 'C':\n            points.push([segment[5], segment[6]]);\n            points.push([segment[1], segment[2]]);\n            points.push([segment[3], segment[4]]);\n            break;\n        case 'S':\n            points.push([segment[3], segment[4]]);\n            points.push([segment[1], segment[2]]);\n            break;\n        case 'H':\n            points.push([segment[1], segment[1]]);\n            break;\n        case 'V':\n            points.push([segment[1], segment[1]]);\n            break;\n        default:\n    }\n    return points;\n}\nvar formatPath = function (fromPath, toPath) {\n    if (fromPath.length <= 1) {\n        return fromPath;\n    }\n    var points;\n    for (var i = 0; i < toPath.length; i++) {\n        if (fromPath[i][0] !== toPath[i][0]) {\n            // 获取fromPath的pathSegment的端点，根据toPath的指令对其改造\n            points = _getSegmentPoints(fromPath[i]);\n            switch (toPath[i][0]) {\n                case 'M':\n                    fromPath[i] = ['M'].concat(points[0]);\n                    break;\n                case 'L':\n                    fromPath[i] = ['L'].concat(points[0]);\n                    break;\n                case 'A':\n                    fromPath[i] = [].concat(toPath[i]);\n                    fromPath[i][6] = points[0][0];\n                    fromPath[i][7] = points[0][1];\n                    break;\n                case 'Q':\n                    if (points.length < 2) {\n                        if (i > 0) {\n                            points = _splitPoints(points, fromPath[i - 1], 1);\n                        }\n                        else {\n                            fromPath[i] = toPath[i];\n                            break;\n                        }\n                    }\n                    fromPath[i] = ['Q'].concat(points.reduce(function (arr, i) {\n                        return arr.concat(i);\n                    }, []));\n                    break;\n                case 'T':\n                    fromPath[i] = ['T'].concat(points[0]);\n                    break;\n                case 'C':\n                    if (points.length < 3) {\n                        if (i > 0) {\n                            points = _splitPoints(points, fromPath[i - 1], 2);\n                        }\n                        else {\n                            fromPath[i] = toPath[i];\n                            break;\n                        }\n                    }\n                    fromPath[i] = ['C'].concat(points.reduce(function (arr, i) {\n                        return arr.concat(i);\n                    }, []));\n                    break;\n                case 'S':\n                    if (points.length < 2) {\n                        if (i > 0) {\n                            points = _splitPoints(points, fromPath[i - 1], 1);\n                        }\n                        else {\n                            fromPath[i] = toPath[i];\n                            break;\n                        }\n                    }\n                    fromPath[i] = ['S'].concat(points.reduce(function (arr, i) {\n                        return arr.concat(i);\n                    }, []));\n                    break;\n                default:\n                    fromPath[i] = toPath[i];\n            }\n        }\n    }\n    return fromPath;\n};\nexport { catmullRomToBezier, fillPath, fillPathByDiff, formatPath, intersection, parsePathArray, parsePathString, pathToAbsolute, pathToCurve, rectPath, };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}