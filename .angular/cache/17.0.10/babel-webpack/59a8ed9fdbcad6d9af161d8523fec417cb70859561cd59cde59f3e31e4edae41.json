{"ast":null,"code":"import { isNil, each, isString } from './util';\nimport { getOffScreenContext } from './offscreen';\n/**\n * 获取文本的高度\n * @param text 文本\n * @param fontSize 字体大小\n * @param lineHeight 行高，可以为空\n */\nexport function getTextHeight(text, fontSize, lineHeight) {\n  var lineCount = 1;\n  if (isString(text)) {\n    lineCount = text.split('\\n').length;\n  }\n  if (lineCount > 1) {\n    var spaceingY = getLineSpaceing(fontSize, lineHeight);\n    return fontSize * lineCount + spaceingY * (lineCount - 1);\n  }\n  return fontSize;\n}\n/**\n * 获取行间距如果文本多行，需要获取文本间距\n * @param fontSize 字体大小\n * @param lineHeight 行高\n */\nexport function getLineSpaceing(fontSize, lineHeight) {\n  return lineHeight ? lineHeight - fontSize : fontSize * 0.14;\n}\n/**\n * 字体宽度\n * @param text 文本\n * @param font 字体\n */\nexport function getTextWidth(text, font) {\n  var context = getOffScreenContext(); // 获取离屏的 ctx 进行计算\n  var width = 0;\n  // null 或者 undefined 时，宽度为 0\n  if (isNil(text) || text === '') {\n    return width;\n  }\n  context.save();\n  context.font = font;\n  if (isString(text) && text.includes('\\n')) {\n    var textArr = text.split('\\n');\n    each(textArr, function (subText) {\n      var measureWidth = context.measureText(subText).width;\n      if (width < measureWidth) {\n        width = measureWidth;\n      }\n    });\n  } else {\n    width = context.measureText(text).width;\n  }\n  context.restore();\n  return width;\n}\nexport function assembleFont(attrs) {\n  var fontSize = attrs.fontSize,\n    fontFamily = attrs.fontFamily,\n    fontWeight = attrs.fontWeight,\n    fontStyle = attrs.fontStyle,\n    fontVariant = attrs.fontVariant;\n  return [fontStyle, fontVariant, fontWeight, fontSize + \"px\", fontFamily].join(' ').trim();\n}","map":{"version":3,"names":["isNil","each","isString","getOffScreenContext","getTextHeight","text","fontSize","lineHeight","lineCount","split","length","spaceingY","getLineSpaceing","getTextWidth","font","context","width","save","includes","textArr","subText","measureWidth","measureText","restore","assembleFont","attrs","fontFamily","fontWeight","fontStyle","fontVariant","join","trim"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g-base/esm/util/text.js"],"sourcesContent":["import { isNil, each, isString } from './util';\nimport { getOffScreenContext } from './offscreen';\n/**\n * 获取文本的高度\n * @param text 文本\n * @param fontSize 字体大小\n * @param lineHeight 行高，可以为空\n */\nexport function getTextHeight(text, fontSize, lineHeight) {\n    var lineCount = 1;\n    if (isString(text)) {\n        lineCount = text.split('\\n').length;\n    }\n    if (lineCount > 1) {\n        var spaceingY = getLineSpaceing(fontSize, lineHeight);\n        return fontSize * lineCount + spaceingY * (lineCount - 1);\n    }\n    return fontSize;\n}\n/**\n * 获取行间距如果文本多行，需要获取文本间距\n * @param fontSize 字体大小\n * @param lineHeight 行高\n */\nexport function getLineSpaceing(fontSize, lineHeight) {\n    return lineHeight ? lineHeight - fontSize : fontSize * 0.14;\n}\n/**\n * 字体宽度\n * @param text 文本\n * @param font 字体\n */\nexport function getTextWidth(text, font) {\n    var context = getOffScreenContext(); // 获取离屏的 ctx 进行计算\n    var width = 0;\n    // null 或者 undefined 时，宽度为 0\n    if (isNil(text) || text === '') {\n        return width;\n    }\n    context.save();\n    context.font = font;\n    if (isString(text) && text.includes('\\n')) {\n        var textArr = text.split('\\n');\n        each(textArr, function (subText) {\n            var measureWidth = context.measureText(subText).width;\n            if (width < measureWidth) {\n                width = measureWidth;\n            }\n        });\n    }\n    else {\n        width = context.measureText(text).width;\n    }\n    context.restore();\n    return width;\n}\nexport function assembleFont(attrs) {\n    var fontSize = attrs.fontSize, fontFamily = attrs.fontFamily, fontWeight = attrs.fontWeight, fontStyle = attrs.fontStyle, fontVariant = attrs.fontVariant;\n    return [fontStyle, fontVariant, fontWeight, fontSize + \"px\", fontFamily].join(' ').trim();\n}\n"],"mappings":"AAAA,SAASA,KAAK,EAAEC,IAAI,EAAEC,QAAQ,QAAQ,QAAQ;AAC9C,SAASC,mBAAmB,QAAQ,aAAa;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,aAAaA,CAACC,IAAI,EAAEC,QAAQ,EAAEC,UAAU,EAAE;EACtD,IAAIC,SAAS,GAAG,CAAC;EACjB,IAAIN,QAAQ,CAACG,IAAI,CAAC,EAAE;IAChBG,SAAS,GAAGH,IAAI,CAACI,KAAK,CAAC,IAAI,CAAC,CAACC,MAAM;EACvC;EACA,IAAIF,SAAS,GAAG,CAAC,EAAE;IACf,IAAIG,SAAS,GAAGC,eAAe,CAACN,QAAQ,EAAEC,UAAU,CAAC;IACrD,OAAOD,QAAQ,GAAGE,SAAS,GAAGG,SAAS,IAAIH,SAAS,GAAG,CAAC,CAAC;EAC7D;EACA,OAAOF,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASM,eAAeA,CAACN,QAAQ,EAAEC,UAAU,EAAE;EAClD,OAAOA,UAAU,GAAGA,UAAU,GAAGD,QAAQ,GAAGA,QAAQ,GAAG,IAAI;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASO,YAAYA,CAACR,IAAI,EAAES,IAAI,EAAE;EACrC,IAAIC,OAAO,GAAGZ,mBAAmB,CAAC,CAAC,CAAC,CAAC;EACrC,IAAIa,KAAK,GAAG,CAAC;EACb;EACA,IAAIhB,KAAK,CAACK,IAAI,CAAC,IAAIA,IAAI,KAAK,EAAE,EAAE;IAC5B,OAAOW,KAAK;EAChB;EACAD,OAAO,CAACE,IAAI,CAAC,CAAC;EACdF,OAAO,CAACD,IAAI,GAAGA,IAAI;EACnB,IAAIZ,QAAQ,CAACG,IAAI,CAAC,IAAIA,IAAI,CAACa,QAAQ,CAAC,IAAI,CAAC,EAAE;IACvC,IAAIC,OAAO,GAAGd,IAAI,CAACI,KAAK,CAAC,IAAI,CAAC;IAC9BR,IAAI,CAACkB,OAAO,EAAE,UAAUC,OAAO,EAAE;MAC7B,IAAIC,YAAY,GAAGN,OAAO,CAACO,WAAW,CAACF,OAAO,CAAC,CAACJ,KAAK;MACrD,IAAIA,KAAK,GAAGK,YAAY,EAAE;QACtBL,KAAK,GAAGK,YAAY;MACxB;IACJ,CAAC,CAAC;EACN,CAAC,MACI;IACDL,KAAK,GAAGD,OAAO,CAACO,WAAW,CAACjB,IAAI,CAAC,CAACW,KAAK;EAC3C;EACAD,OAAO,CAACQ,OAAO,CAAC,CAAC;EACjB,OAAOP,KAAK;AAChB;AACA,OAAO,SAASQ,YAAYA,CAACC,KAAK,EAAE;EAChC,IAAInB,QAAQ,GAAGmB,KAAK,CAACnB,QAAQ;IAAEoB,UAAU,GAAGD,KAAK,CAACC,UAAU;IAAEC,UAAU,GAAGF,KAAK,CAACE,UAAU;IAAEC,SAAS,GAAGH,KAAK,CAACG,SAAS;IAAEC,WAAW,GAAGJ,KAAK,CAACI,WAAW;EACzJ,OAAO,CAACD,SAAS,EAAEC,WAAW,EAAEF,UAAU,EAAErB,QAAQ,GAAG,IAAI,EAAEoB,UAAU,CAAC,CAACI,IAAI,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,CAAC;AAC7F","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}