{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class PhonePipe {\n  transform(value, ...args) {\n    var value = value.toString().trim().replace(/^\\+/, '');\n    // if (value.match(/[^0-9]/)) {\n    //     return value;\n    // }\n    var country, city, number;\n    switch (value.length) {\n      case 10:\n        // +1PPP####### -> C (PPP) ###-####\n        country = 1;\n        city = value.slice(0, 3);\n        number = value.slice(3);\n        break;\n      case 11:\n        // +CPPP####### -> CCC (PP) ###-####\n        country = value[0];\n        city = value.slice(1, 4);\n        number = value.slice(4);\n        break;\n      case 12:\n        // +CCCPP####### -> CCC (PP) ###-####\n        country = value.slice(0, 3);\n        city = value.slice(3, 5);\n        number = value.slice(5);\n        break;\n      default:\n        return value;\n    }\n    /*if (country == 1) {\n        country = \"\";\n    }*/\n    number = number.slice(0, 3) + '-' + number.slice(3);\n    return `+${country} (${city}) ${number}`;\n  }\n  static {\n    this.ɵfac = function PhonePipe_Factory(t) {\n      return new (t || PhonePipe)();\n    };\n  }\n  static {\n    this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n      name: \"phone\",\n      type: PhonePipe,\n      pure: true\n    });\n  }\n}","map":{"version":3,"names":["PhonePipe","transform","value","args","toString","trim","replace","country","city","number","length","slice","pure"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/apps/admin-panel/src/app/@pipes/phone.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'phone' })\nexport class PhonePipe implements PipeTransform {\n    transform(value: any, ...args: any[]) {\n        var value = value.toString().trim().replace(/^\\+/, '');\n\n        // if (value.match(/[^0-9]/)) {\n        //     return value;\n        // }\n\n        var country, city, number;\n\n        switch (value.length) {\n            case 10: // +1PPP####### -> C (PPP) ###-####\n                country = 1;\n                city = value.slice(0, 3);\n                number = value.slice(3);\n                break;\n\n            case 11: // +CPPP####### -> CCC (PP) ###-####\n                country = value[0];\n                city = value.slice(1, 4);\n                number = value.slice(4);\n                break;\n\n            case 12: // +CCCPP####### -> CCC (PP) ###-####\n                country = value.slice(0, 3);\n                city = value.slice(3, 5);\n                number = value.slice(5);\n                break;\n\n            default:\n                return value;\n        }\n\n        /*if (country == 1) {\n            country = \"\";\n        }*/\n\n        number = number.slice(0, 3) + '-' + number.slice(3);\n        return `+${country} (${city}) ${number}`;\n    }\n}"],"mappings":";AAGA,OAAM,MAAOA,SAAS;EAClBC,SAASA,CAACC,KAAU,EAAE,GAAGC,IAAW;IAChC,IAAID,KAAK,GAAGA,KAAK,CAACE,QAAQ,EAAE,CAACC,IAAI,EAAE,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;IAEtD;IACA;IACA;IAEA,IAAIC,OAAO,EAAEC,IAAI,EAAEC,MAAM;IAEzB,QAAQP,KAAK,CAACQ,MAAM;MAChB,KAAK,EAAE;QAAE;QACLH,OAAO,GAAG,CAAC;QACXC,IAAI,GAAGN,KAAK,CAACS,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;QACxBF,MAAM,GAAGP,KAAK,CAACS,KAAK,CAAC,CAAC,CAAC;QACvB;MAEJ,KAAK,EAAE;QAAE;QACLJ,OAAO,GAAGL,KAAK,CAAC,CAAC,CAAC;QAClBM,IAAI,GAAGN,KAAK,CAACS,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;QACxBF,MAAM,GAAGP,KAAK,CAACS,KAAK,CAAC,CAAC,CAAC;QACvB;MAEJ,KAAK,EAAE;QAAE;QACLJ,OAAO,GAAGL,KAAK,CAACS,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;QAC3BH,IAAI,GAAGN,KAAK,CAACS,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;QACxBF,MAAM,GAAGP,KAAK,CAACS,KAAK,CAAC,CAAC,CAAC;QACvB;MAEJ;QACI,OAAOT,KAAK;;IAGpB;;;IAIAO,MAAM,GAAGA,MAAM,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAGF,MAAM,CAACE,KAAK,CAAC,CAAC,CAAC;IACnD,OAAO,IAAIJ,OAAO,KAAKC,IAAI,KAAKC,MAAM,EAAE;EAC5C;;;uBAvCST,SAAS;IAAA;EAAA;;;;YAATA,SAAS;MAAAY,IAAA;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}