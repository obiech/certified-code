{"ast":null,"code":"import { toArray } from '@antv/util';\nimport { SHAPE_TO_TAGS } from '../constant';\n/**\n * 创建并返回图形的 svg 元素\n * @param type svg类型\n */\nexport function createSVGElement(type) {\n  return document.createElementNS('http://www.w3.org/2000/svg', type);\n}\n/**\n * 创建并返回图形的 dom 元素\n * @param  {IShape} shape 图形\n * @return {SVGElement}\n */\nexport function createDom(shape) {\n  var type = SHAPE_TO_TAGS[shape.type];\n  var parent = shape.getParent();\n  if (!type) {\n    throw new Error(\"the type \" + shape.type + \" is not supported by svg\");\n  }\n  var element = createSVGElement(type);\n  if (shape.get('id')) {\n    element.id = shape.get('id');\n  }\n  shape.set('el', element);\n  shape.set('attrs', {});\n  // 对于 defs 下的 dom 节点，parent 为空，通过 context 统一挂载到 defs 节点下\n  if (parent) {\n    var parentNode = parent.get('el');\n    if (parentNode) {\n      parentNode.appendChild(element);\n    } else {\n      // parentNode maybe null for group\n      parentNode = parent.createDom();\n      parent.set('el', parentNode);\n      parentNode.appendChild(element);\n    }\n  }\n  return element;\n}\n/**\n * 对 dom 元素进行排序\n * @param {IElement} element  元素\n * @param {sorter}   function 排序函数\n */\nexport function sortDom(element, sorter) {\n  var el = element.get('el');\n  var childList = toArray(el.children).sort(sorter);\n  // create empty fragment\n  var fragment = document.createDocumentFragment();\n  childList.forEach(function (child) {\n    fragment.appendChild(child);\n  });\n  el.appendChild(fragment);\n}\n/**\n * 将 dom 元素移动到父元素下的指定位置\n * @param {SVGElement} element     dom 元素\n * @param {number}     targetIndex 目标位置(从 0 开始)\n */\nexport function moveTo(element, targetIndex) {\n  var parentNode = element.parentNode;\n  var siblings = Array.from(parentNode.childNodes).filter(\n  // 要求为元素节点，且不能为 defs 节点\n  function (node) {\n    return node.nodeType === 1 && node.nodeName.toLowerCase() !== 'defs';\n  });\n  // 获取目标节点\n  var target = siblings[targetIndex];\n  var currentIndex = siblings.indexOf(element);\n  // 如果目标节点存在\n  if (target) {\n    // 当前索引 > 目标索引，直接插入到目标节点之前即可\n    if (currentIndex > targetIndex) {\n      parentNode.insertBefore(element, target);\n    } else if (currentIndex < targetIndex) {\n      // 当前索引 < 目标索引\n      // 获取目标节点的下一个节点\n      var targetNext = siblings[targetIndex + 1];\n      // 如果目标节点的下一个节点存在，插入到该节点之前\n      if (targetNext) {\n        parentNode.insertBefore(element, targetNext);\n      } else {\n        // 如果该节点不存在，则追加到末尾\n        parentNode.appendChild(element);\n      }\n    }\n  } else {\n    parentNode.appendChild(element);\n  }\n}","map":{"version":3,"names":["toArray","SHAPE_TO_TAGS","createSVGElement","type","document","createElementNS","createDom","shape","parent","getParent","Error","element","get","id","set","parentNode","appendChild","sortDom","sorter","el","childList","children","sort","fragment","createDocumentFragment","forEach","child","moveTo","targetIndex","siblings","Array","from","childNodes","filter","node","nodeType","nodeName","toLowerCase","target","currentIndex","indexOf","insertBefore","targetNext"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g-svg/esm/util/dom.js"],"sourcesContent":["import { toArray } from '@antv/util';\nimport { SHAPE_TO_TAGS } from '../constant';\n/**\n * 创建并返回图形的 svg 元素\n * @param type svg类型\n */\nexport function createSVGElement(type) {\n    return document.createElementNS('http://www.w3.org/2000/svg', type);\n}\n/**\n * 创建并返回图形的 dom 元素\n * @param  {IShape} shape 图形\n * @return {SVGElement}\n */\nexport function createDom(shape) {\n    var type = SHAPE_TO_TAGS[shape.type];\n    var parent = shape.getParent();\n    if (!type) {\n        throw new Error(\"the type \" + shape.type + \" is not supported by svg\");\n    }\n    var element = createSVGElement(type);\n    if (shape.get('id')) {\n        element.id = shape.get('id');\n    }\n    shape.set('el', element);\n    shape.set('attrs', {});\n    // 对于 defs 下的 dom 节点，parent 为空，通过 context 统一挂载到 defs 节点下\n    if (parent) {\n        var parentNode = parent.get('el');\n        if (parentNode) {\n            parentNode.appendChild(element);\n        }\n        else {\n            // parentNode maybe null for group\n            parentNode = parent.createDom();\n            parent.set('el', parentNode);\n            parentNode.appendChild(element);\n        }\n    }\n    return element;\n}\n/**\n * 对 dom 元素进行排序\n * @param {IElement} element  元素\n * @param {sorter}   function 排序函数\n */\nexport function sortDom(element, sorter) {\n    var el = element.get('el');\n    var childList = toArray(el.children).sort(sorter);\n    // create empty fragment\n    var fragment = document.createDocumentFragment();\n    childList.forEach(function (child) {\n        fragment.appendChild(child);\n    });\n    el.appendChild(fragment);\n}\n/**\n * 将 dom 元素移动到父元素下的指定位置\n * @param {SVGElement} element     dom 元素\n * @param {number}     targetIndex 目标位置(从 0 开始)\n */\nexport function moveTo(element, targetIndex) {\n    var parentNode = element.parentNode;\n    var siblings = Array.from(parentNode.childNodes).filter(\n    // 要求为元素节点，且不能为 defs 节点\n    function (node) { return node.nodeType === 1 && node.nodeName.toLowerCase() !== 'defs'; });\n    // 获取目标节点\n    var target = siblings[targetIndex];\n    var currentIndex = siblings.indexOf(element);\n    // 如果目标节点存在\n    if (target) {\n        // 当前索引 > 目标索引，直接插入到目标节点之前即可\n        if (currentIndex > targetIndex) {\n            parentNode.insertBefore(element, target);\n        }\n        else if (currentIndex < targetIndex) {\n            // 当前索引 < 目标索引\n            // 获取目标节点的下一个节点\n            var targetNext = siblings[targetIndex + 1];\n            // 如果目标节点的下一个节点存在，插入到该节点之前\n            if (targetNext) {\n                parentNode.insertBefore(element, targetNext);\n            }\n            else {\n                // 如果该节点不存在，则追加到末尾\n                parentNode.appendChild(element);\n            }\n        }\n    }\n    else {\n        parentNode.appendChild(element);\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}