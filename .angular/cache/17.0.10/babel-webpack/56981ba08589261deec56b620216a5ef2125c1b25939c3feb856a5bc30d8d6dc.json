{"ast":null,"code":"export default function d3Linear(cfg) {\n  var min = cfg.min,\n    max = cfg.max,\n    nice = cfg.nice,\n    tickCount = cfg.tickCount;\n  var linear = new D3Linear();\n  linear.domain([min, max]);\n  if (nice) {\n    linear.nice(tickCount);\n  }\n  return linear.ticks(tickCount);\n}\nvar DEFAULT_COUNT = 5;\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n// https://github.com/d3/d3-scale\nvar D3Linear = /** @class */function () {\n  function D3Linear() {\n    this._domain = [0, 1];\n  }\n  D3Linear.prototype.domain = function (domain) {\n    if (domain) {\n      this._domain = Array.from(domain, Number);\n      return this;\n    }\n    return this._domain.slice();\n  };\n  D3Linear.prototype.nice = function (count) {\n    var _a, _b;\n    if (count === void 0) {\n      count = DEFAULT_COUNT;\n    }\n    var d = this._domain.slice();\n    var i0 = 0;\n    var i1 = this._domain.length - 1;\n    var start = this._domain[i0];\n    var stop = this._domain[i1];\n    var step;\n    if (stop < start) {\n      _a = [stop, start], start = _a[0], stop = _a[1];\n      _b = [i1, i0], i0 = _b[0], i1 = _b[1];\n    }\n    step = tickIncrement(start, stop, count);\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      this.domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      this.domain(d);\n    }\n    return this;\n  };\n  D3Linear.prototype.ticks = function (count) {\n    if (count === void 0) {\n      count = DEFAULT_COUNT;\n    }\n    return d3ArrayTicks(this._domain[0], this._domain[this._domain.length - 1], count || DEFAULT_COUNT);\n  };\n  return D3Linear;\n}();\nexport { D3Linear };\nfunction d3ArrayTicks(start, stop, count) {\n  var reverse;\n  var i = -1;\n  var n;\n  var ticks;\n  var step;\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) {\n    return [start];\n  }\n  // tslint:disable-next-line\n  if (reverse = stop < start) {\n    n = start, start = stop, stop = n;\n  }\n  // tslint:disable-next-line\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) {\n    return [];\n  }\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) {\n      ticks[i] = (start + i) * step;\n    }\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) {\n      ticks[i] = (start - i) / step;\n    }\n  }\n  if (reverse) {\n    ticks.reverse();\n  }\n  return ticks;\n}\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count);\n  var power = Math.floor(Math.log(step) / Math.LN10);\n  var error = step / Math.pow(10, power);\n  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}","map":{"version":3,"names":["d3Linear","cfg","min","max","nice","tickCount","linear","D3Linear","domain","ticks","DEFAULT_COUNT","e10","Math","sqrt","e5","e2","_domain","prototype","Array","from","Number","slice","count","_a","_b","d","i0","i1","length","start","stop","step","tickIncrement","floor","ceil","d3ArrayTicks","reverse","i","n","isFinite","power","log","LN10","error","pow"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/scale/esm/util/d3-linear.js"],"sourcesContent":["export default function d3Linear(cfg) {\n    var min = cfg.min, max = cfg.max, nice = cfg.nice, tickCount = cfg.tickCount;\n    var linear = new D3Linear();\n    linear.domain([min, max]);\n    if (nice) {\n        linear.nice(tickCount);\n    }\n    return linear.ticks(tickCount);\n}\nvar DEFAULT_COUNT = 5;\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n// https://github.com/d3/d3-scale\nvar D3Linear = /** @class */ (function () {\n    function D3Linear() {\n        this._domain = [0, 1];\n    }\n    D3Linear.prototype.domain = function (domain) {\n        if (domain) {\n            this._domain = Array.from(domain, Number);\n            return this;\n        }\n        return this._domain.slice();\n    };\n    D3Linear.prototype.nice = function (count) {\n        var _a, _b;\n        if (count === void 0) { count = DEFAULT_COUNT; }\n        var d = this._domain.slice();\n        var i0 = 0;\n        var i1 = this._domain.length - 1;\n        var start = this._domain[i0];\n        var stop = this._domain[i1];\n        var step;\n        if (stop < start) {\n            _a = [stop, start], start = _a[0], stop = _a[1];\n            _b = [i1, i0], i0 = _b[0], i1 = _b[1];\n        }\n        step = tickIncrement(start, stop, count);\n        if (step > 0) {\n            start = Math.floor(start / step) * step;\n            stop = Math.ceil(stop / step) * step;\n            step = tickIncrement(start, stop, count);\n        }\n        else if (step < 0) {\n            start = Math.ceil(start * step) / step;\n            stop = Math.floor(stop * step) / step;\n            step = tickIncrement(start, stop, count);\n        }\n        if (step > 0) {\n            d[i0] = Math.floor(start / step) * step;\n            d[i1] = Math.ceil(stop / step) * step;\n            this.domain(d);\n        }\n        else if (step < 0) {\n            d[i0] = Math.ceil(start * step) / step;\n            d[i1] = Math.floor(stop * step) / step;\n            this.domain(d);\n        }\n        return this;\n    };\n    D3Linear.prototype.ticks = function (count) {\n        if (count === void 0) { count = DEFAULT_COUNT; }\n        return d3ArrayTicks(this._domain[0], this._domain[this._domain.length - 1], count || DEFAULT_COUNT);\n    };\n    return D3Linear;\n}());\nexport { D3Linear };\nfunction d3ArrayTicks(start, stop, count) {\n    var reverse;\n    var i = -1;\n    var n;\n    var ticks;\n    var step;\n    (stop = +stop), (start = +start), (count = +count);\n    if (start === stop && count > 0) {\n        return [start];\n    }\n    // tslint:disable-next-line\n    if ((reverse = stop < start)) {\n        (n = start), (start = stop), (stop = n);\n    }\n    // tslint:disable-next-line\n    if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) {\n        return [];\n    }\n    if (step > 0) {\n        start = Math.ceil(start / step);\n        stop = Math.floor(stop / step);\n        ticks = new Array((n = Math.ceil(stop - start + 1)));\n        while (++i < n) {\n            ticks[i] = (start + i) * step;\n        }\n    }\n    else {\n        start = Math.floor(start * step);\n        stop = Math.ceil(stop * step);\n        ticks = new Array((n = Math.ceil(start - stop + 1)));\n        while (++i < n) {\n            ticks[i] = (start - i) / step;\n        }\n    }\n    if (reverse) {\n        ticks.reverse();\n    }\n    return ticks;\n}\nfunction tickIncrement(start, stop, count) {\n    var step = (stop - start) / Math.max(0, count);\n    var power = Math.floor(Math.log(step) / Math.LN10);\n    var error = step / Math.pow(10, power);\n    return power >= 0\n        ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n        : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}