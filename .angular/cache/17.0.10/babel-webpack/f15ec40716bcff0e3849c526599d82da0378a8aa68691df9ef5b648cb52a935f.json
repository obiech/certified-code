{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { each, get, isArray, map, isNumber, isString } from '@antv/util';\nimport { getDistanceToCenter } from '../../util/coordinate';\nimport { getAngleByPoint } from '../../util/coordinate';\nimport GeometryLabel from './base';\nvar HALF_PI = Math.PI / 2;\n/**\n * 极坐标下的图形 label\n */\nvar PolarLabel = /** @class */function (_super) {\n  __extends(PolarLabel, _super);\n  function PolarLabel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @override\n   * @desc 获取 label offset\n   * polar & theta coordinate support「string」type, should transform to 「number」\n   */\n  PolarLabel.prototype.getLabelOffset = function (offset) {\n    var coordinate = this.getCoordinate();\n    var actualOffset = 0;\n    if (isNumber(offset)) {\n      actualOffset = offset;\n    } else if (isString(offset) && offset.indexOf('%') !== -1) {\n      var r = coordinate.getRadius();\n      if (coordinate.innerRadius > 0) {\n        r = r * (1 - coordinate.innerRadius);\n      }\n      actualOffset = parseFloat(offset) * 0.01 * r;\n    }\n    return actualOffset;\n  };\n  /**\n   * @override\n   * 获取 labelItems, 增加切片 percent\n   * @param mapppingArray\n   */\n  PolarLabel.prototype.getLabelItems = function (mapppingArray) {\n    var items = _super.prototype.getLabelItems.call(this, mapppingArray);\n    var yScale = this.geometry.getYScale();\n    return map(items, function (item) {\n      if (item && yScale) {\n        var percent = yScale.scale(get(item.data, yScale.field));\n        return __assign(__assign({}, item), {\n          percent: percent\n        });\n      }\n      return item;\n    });\n  };\n  /**\n   * @override\n   * 获取文本的对齐方式\n   * @param point\n   */\n  PolarLabel.prototype.getLabelAlign = function (point) {\n    var coordinate = this.getCoordinate();\n    var align;\n    if (point.labelEmit) {\n      align = point.angle <= Math.PI / 2 && point.angle >= -Math.PI / 2 ? 'left' : 'right';\n    } else if (!coordinate.isTransposed) {\n      align = 'center';\n    } else {\n      var center = coordinate.getCenter();\n      var offset = point.offset;\n      if (Math.abs(point.x - center.x) < 1) {\n        align = 'center';\n      } else if (point.angle > Math.PI || point.angle <= 0) {\n        align = offset > 0 ? 'left' : 'right';\n      } else {\n        align = offset > 0 ? 'right' : 'left';\n      }\n    }\n    return align;\n  };\n  /**\n   * @override\n   * 获取 label 的位置\n   * @param labelCfg\n   * @param mappingData\n   * @param index\n   */\n  PolarLabel.prototype.getLabelPoint = function (labelCfg, mappingData, index) {\n    var factor = 1;\n    var arcPoint;\n    var content = labelCfg.content[index];\n    if (this.isToMiddle(mappingData)) {\n      arcPoint = this.getMiddlePoint(mappingData.points);\n    } else {\n      if (labelCfg.content.length === 1 && index === 0) {\n        index = 1;\n      } else if (index === 0) {\n        factor = -1;\n      }\n      arcPoint = this.getArcPoint(mappingData, index);\n    }\n    var offset = labelCfg.offset * factor;\n    var middleAngle = this.getPointAngle(arcPoint);\n    var isLabelEmit = labelCfg.labelEmit;\n    var labelPositionCfg = this.getCirclePoint(middleAngle, offset, arcPoint, isLabelEmit);\n    if (labelPositionCfg.r === 0) {\n      // 如果文本位置位于圆心，则不展示\n      labelPositionCfg.content = '';\n    } else {\n      labelPositionCfg.content = content;\n      labelPositionCfg.angle = middleAngle;\n      labelPositionCfg.color = mappingData.color;\n    }\n    labelPositionCfg.rotate = labelCfg.autoRotate ? this.getLabelRotate(middleAngle, offset, isLabelEmit) : labelCfg.rotate;\n    labelPositionCfg.start = {\n      x: arcPoint.x,\n      y: arcPoint.y\n    };\n    return labelPositionCfg;\n  };\n  /**\n   * 获取圆弧的位置\n   */\n  PolarLabel.prototype.getArcPoint = function (mappingData, index) {\n    if (index === void 0) {\n      index = 0;\n    }\n    if (!isArray(mappingData.x) && !isArray(mappingData.y)) {\n      return {\n        x: mappingData.x,\n        y: mappingData.y\n      };\n    }\n    return {\n      x: isArray(mappingData.x) ? mappingData.x[index] : mappingData.x,\n      y: isArray(mappingData.y) ? mappingData.y[index] : mappingData.y\n    };\n  };\n  /**\n   * 计算坐标线点在极坐标系下角度\n   * @param point\n   */\n  PolarLabel.prototype.getPointAngle = function (point) {\n    return getAngleByPoint(this.getCoordinate(), point);\n  };\n  /**\n   * 获取坐标点与圆心形成的圆的位置信息\n   * @param angle\n   * @param offset\n   * @param point\n   * @param isLabelEmit\n   */\n  PolarLabel.prototype.getCirclePoint = function (angle, offset, point, isLabelEmit) {\n    var coordinate = this.getCoordinate();\n    var center = coordinate.getCenter();\n    var r = getDistanceToCenter(coordinate, point);\n    if (r === 0) {\n      return __assign(__assign({}, center), {\n        r: r\n      });\n    }\n    var labelAngle = angle;\n    if (coordinate.isTransposed && r > offset && !isLabelEmit) {\n      var appendAngle = Math.asin(offset / (2 * r));\n      labelAngle = angle + appendAngle * 2;\n    } else {\n      r = r + offset;\n    }\n    return {\n      x: center.x + r * Math.cos(labelAngle),\n      y: center.y + r * Math.sin(labelAngle),\n      r: r\n    };\n  };\n  /**\n   * 获取 label 的旋转角度\n   * @param angle\n   * @param offset\n   * @param isLabelEmit\n   */\n  PolarLabel.prototype.getLabelRotate = function (angle, offset, isLabelEmit) {\n    var rotate = angle + HALF_PI;\n    if (isLabelEmit) {\n      rotate -= HALF_PI;\n    }\n    if (rotate) {\n      if (rotate > HALF_PI) {\n        rotate = rotate - Math.PI;\n      } else if (rotate < -HALF_PI) {\n        rotate = rotate + Math.PI;\n      }\n    }\n    return rotate;\n  };\n  // 获取中心的位置\n  PolarLabel.prototype.getMiddlePoint = function (points) {\n    var coordinate = this.getCoordinate();\n    var count = points.length;\n    var middlePoint = {\n      x: 0,\n      y: 0\n    };\n    each(points, function (point) {\n      middlePoint.x += point.x;\n      middlePoint.y += point.y;\n    });\n    middlePoint.x /= count;\n    middlePoint.y /= count;\n    middlePoint = coordinate.convert(middlePoint);\n    return middlePoint;\n  };\n  // 是否居中\n  PolarLabel.prototype.isToMiddle = function (mappingData) {\n    return mappingData.x.length > 2;\n  };\n  return PolarLabel;\n}(GeometryLabel);\nexport default PolarLabel;","map":{"version":3,"names":["__assign","__extends","each","get","isArray","map","isNumber","isString","getDistanceToCenter","getAngleByPoint","GeometryLabel","HALF_PI","Math","PI","PolarLabel","_super","apply","arguments","prototype","getLabelOffset","offset","coordinate","getCoordinate","actualOffset","indexOf","r","getRadius","innerRadius","parseFloat","getLabelItems","mapppingArray","items","call","yScale","geometry","getYScale","item","percent","scale","data","field","getLabelAlign","point","align","labelEmit","angle","isTransposed","center","getCenter","abs","x","getLabelPoint","labelCfg","mappingData","index","factor","arcPoint","content","isToMiddle","getMiddlePoint","points","length","getArcPoint","middleAngle","getPointAngle","isLabelEmit","labelPositionCfg","getCirclePoint","color","rotate","autoRotate","getLabelRotate","start","y","labelAngle","appendAngle","asin","cos","sin","count","middlePoint","convert"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g2/esm/geometry/label/polar.js"],"sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { each, get, isArray, map, isNumber, isString } from '@antv/util';\nimport { getDistanceToCenter } from '../../util/coordinate';\nimport { getAngleByPoint } from '../../util/coordinate';\nimport GeometryLabel from './base';\nvar HALF_PI = Math.PI / 2;\n/**\n * 极坐标下的图形 label\n */\nvar PolarLabel = /** @class */ (function (_super) {\n    __extends(PolarLabel, _super);\n    function PolarLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @override\n     * @desc 获取 label offset\n     * polar & theta coordinate support「string」type, should transform to 「number」\n     */\n    PolarLabel.prototype.getLabelOffset = function (offset) {\n        var coordinate = this.getCoordinate();\n        var actualOffset = 0;\n        if (isNumber(offset)) {\n            actualOffset = offset;\n        }\n        else if (isString(offset) && offset.indexOf('%') !== -1) {\n            var r = coordinate.getRadius();\n            if (coordinate.innerRadius > 0) {\n                r = r * (1 - coordinate.innerRadius);\n            }\n            actualOffset = parseFloat(offset) * 0.01 * r;\n        }\n        return actualOffset;\n    };\n    /**\n     * @override\n     * 获取 labelItems, 增加切片 percent\n     * @param mapppingArray\n     */\n    PolarLabel.prototype.getLabelItems = function (mapppingArray) {\n        var items = _super.prototype.getLabelItems.call(this, mapppingArray);\n        var yScale = this.geometry.getYScale();\n        return map(items, function (item) {\n            if (item && yScale) {\n                var percent = yScale.scale(get(item.data, yScale.field));\n                return __assign(__assign({}, item), { percent: percent });\n            }\n            return item;\n        });\n    };\n    /**\n     * @override\n     * 获取文本的对齐方式\n     * @param point\n     */\n    PolarLabel.prototype.getLabelAlign = function (point) {\n        var coordinate = this.getCoordinate();\n        var align;\n        if (point.labelEmit) {\n            align = point.angle <= Math.PI / 2 && point.angle >= -Math.PI / 2 ? 'left' : 'right';\n        }\n        else if (!coordinate.isTransposed) {\n            align = 'center';\n        }\n        else {\n            var center = coordinate.getCenter();\n            var offset = point.offset;\n            if (Math.abs(point.x - center.x) < 1) {\n                align = 'center';\n            }\n            else if (point.angle > Math.PI || point.angle <= 0) {\n                align = offset > 0 ? 'left' : 'right';\n            }\n            else {\n                align = offset > 0 ? 'right' : 'left';\n            }\n        }\n        return align;\n    };\n    /**\n     * @override\n     * 获取 label 的位置\n     * @param labelCfg\n     * @param mappingData\n     * @param index\n     */\n    PolarLabel.prototype.getLabelPoint = function (labelCfg, mappingData, index) {\n        var factor = 1;\n        var arcPoint;\n        var content = labelCfg.content[index];\n        if (this.isToMiddle(mappingData)) {\n            arcPoint = this.getMiddlePoint(mappingData.points);\n        }\n        else {\n            if (labelCfg.content.length === 1 && index === 0) {\n                index = 1;\n            }\n            else if (index === 0) {\n                factor = -1;\n            }\n            arcPoint = this.getArcPoint(mappingData, index);\n        }\n        var offset = labelCfg.offset * factor;\n        var middleAngle = this.getPointAngle(arcPoint);\n        var isLabelEmit = labelCfg.labelEmit;\n        var labelPositionCfg = this.getCirclePoint(middleAngle, offset, arcPoint, isLabelEmit);\n        if (labelPositionCfg.r === 0) {\n            // 如果文本位置位于圆心，则不展示\n            labelPositionCfg.content = '';\n        }\n        else {\n            labelPositionCfg.content = content;\n            labelPositionCfg.angle = middleAngle;\n            labelPositionCfg.color = mappingData.color;\n        }\n        labelPositionCfg.rotate = labelCfg.autoRotate\n            ? this.getLabelRotate(middleAngle, offset, isLabelEmit)\n            : labelCfg.rotate;\n        labelPositionCfg.start = {\n            x: arcPoint.x,\n            y: arcPoint.y,\n        };\n        return labelPositionCfg;\n    };\n    /**\n     * 获取圆弧的位置\n     */\n    PolarLabel.prototype.getArcPoint = function (mappingData, index) {\n        if (index === void 0) { index = 0; }\n        if (!isArray(mappingData.x) && !isArray(mappingData.y)) {\n            return {\n                x: mappingData.x,\n                y: mappingData.y,\n            };\n        }\n        return {\n            x: isArray(mappingData.x) ? mappingData.x[index] : mappingData.x,\n            y: isArray(mappingData.y) ? mappingData.y[index] : mappingData.y,\n        };\n    };\n    /**\n     * 计算坐标线点在极坐标系下角度\n     * @param point\n     */\n    PolarLabel.prototype.getPointAngle = function (point) {\n        return getAngleByPoint(this.getCoordinate(), point);\n    };\n    /**\n     * 获取坐标点与圆心形成的圆的位置信息\n     * @param angle\n     * @param offset\n     * @param point\n     * @param isLabelEmit\n     */\n    PolarLabel.prototype.getCirclePoint = function (angle, offset, point, isLabelEmit) {\n        var coordinate = this.getCoordinate();\n        var center = coordinate.getCenter();\n        var r = getDistanceToCenter(coordinate, point);\n        if (r === 0) {\n            return __assign(__assign({}, center), { r: r });\n        }\n        var labelAngle = angle;\n        if (coordinate.isTransposed && r > offset && !isLabelEmit) {\n            var appendAngle = Math.asin(offset / (2 * r));\n            labelAngle = angle + appendAngle * 2;\n        }\n        else {\n            r = r + offset;\n        }\n        return {\n            x: center.x + r * Math.cos(labelAngle),\n            y: center.y + r * Math.sin(labelAngle),\n            r: r,\n        };\n    };\n    /**\n     * 获取 label 的旋转角度\n     * @param angle\n     * @param offset\n     * @param isLabelEmit\n     */\n    PolarLabel.prototype.getLabelRotate = function (angle, offset, isLabelEmit) {\n        var rotate = angle + HALF_PI;\n        if (isLabelEmit) {\n            rotate -= HALF_PI;\n        }\n        if (rotate) {\n            if (rotate > HALF_PI) {\n                rotate = rotate - Math.PI;\n            }\n            else if (rotate < -HALF_PI) {\n                rotate = rotate + Math.PI;\n            }\n        }\n        return rotate;\n    };\n    // 获取中心的位置\n    PolarLabel.prototype.getMiddlePoint = function (points) {\n        var coordinate = this.getCoordinate();\n        var count = points.length;\n        var middlePoint = {\n            x: 0,\n            y: 0,\n        };\n        each(points, function (point) {\n            middlePoint.x += point.x;\n            middlePoint.y += point.y;\n        });\n        middlePoint.x /= count;\n        middlePoint.y /= count;\n        middlePoint = coordinate.convert(middlePoint);\n        return middlePoint;\n    };\n    // 是否居中\n    PolarLabel.prototype.isToMiddle = function (mappingData) {\n        return mappingData.x.length > 2;\n    };\n    return PolarLabel;\n}(GeometryLabel));\nexport default PolarLabel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}