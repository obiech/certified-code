{"ast":null,"code":"function decasteljau(points, t) {\n  var left = [];\n  var right = [];\n  function recurse(points, t) {\n    if (points.length === 1) {\n      left.push(points[0]);\n      right.push(points[0]);\n    } else {\n      var middlePoints = [];\n      for (var i = 0; i < points.length - 1; i++) {\n        if (i === 0) {\n          left.push(points[0]);\n        }\n        if (i === points.length - 2) {\n          right.push(points[i + 1]);\n        }\n        middlePoints[i] = [(1 - t) * points[i][0] + t * points[i + 1][0], (1 - t) * points[i][1] + t * points[i + 1][1]];\n      }\n      recurse(middlePoints, t);\n    }\n  }\n  if (points.length) {\n    recurse(points, t);\n  }\n  return {\n    left: left,\n    right: right.reverse()\n  };\n}\nfunction splitCurve(start, end, count) {\n  var points = [[start[1], start[2]]];\n  count = count || 2;\n  var segments = [];\n  if (end[0] === 'A') {\n    points.push(end[6]);\n    points.push(end[7]);\n  } else if (end[0] === 'C') {\n    points.push([end[1], end[2]]);\n    points.push([end[3], end[4]]);\n    points.push([end[5], end[6]]);\n  } else if (end[0] === 'S' || end[0] === 'Q') {\n    points.push([end[1], end[2]]);\n    points.push([end[3], end[4]]);\n  } else {\n    points.push([end[1], end[2]]);\n  }\n  var leftSegments = points;\n  var t = 1 / count;\n  for (var i = 0; i < count - 1; i++) {\n    var rt = t / (1 - t * i);\n    var split = decasteljau(leftSegments, rt);\n    segments.push(split.left);\n    leftSegments = split.right;\n  }\n  segments.push(leftSegments);\n  var result = segments.map(function (segment) {\n    var cmd = [];\n    if (segment.length === 4) {\n      cmd.push('C');\n      cmd = cmd.concat(segment[2]);\n    }\n    if (segment.length >= 3) {\n      if (segment.length === 3) {\n        cmd.push('Q');\n      }\n      cmd = cmd.concat(segment[1]);\n    }\n    if (segment.length === 2) {\n      cmd.push('L');\n    }\n    cmd = cmd.concat(segment[segment.length - 1]);\n    return cmd;\n  });\n  return result;\n}\nfunction splitSegment(start, end, count) {\n  if (count === 1) {\n    return [[].concat(start)];\n  }\n  var segments = [];\n  if (end[0] === 'L' || end[0] === 'C' || end[0] === 'Q') {\n    segments = segments.concat(splitCurve(start, end, count));\n  } else {\n    var temp = [].concat(start);\n    if (temp[0] === 'M') {\n      temp[0] = 'L';\n    }\n    for (var i = 0; i <= count - 1; i++) {\n      segments.push(temp);\n    }\n  }\n  return segments;\n}\nexport default function fillPath(source, target) {\n  if (source.length === 1) {\n    return source;\n  }\n  var sourceLen = source.length - 1;\n  var targetLen = target.length - 1;\n  var ratio = sourceLen / targetLen;\n  var segmentsToFill = [];\n  if (source.length === 1 && source[0][0] === 'M') {\n    for (var i = 0; i < targetLen - sourceLen; i++) {\n      source.push(source[0]);\n    }\n    return source;\n  }\n  for (var i = 0; i < targetLen; i++) {\n    var index = Math.floor(ratio * i);\n    segmentsToFill[index] = (segmentsToFill[index] || 0) + 1;\n  }\n  var filled = segmentsToFill.reduce(function (filled, count, i) {\n    if (i === sourceLen) {\n      return filled.concat(source[sourceLen]);\n    }\n    return filled.concat(splitSegment(source[i], source[i + 1], count));\n  }, []);\n  filled.unshift(source[0]);\n  if (target[targetLen] === 'Z' || target[targetLen] === 'z') {\n    filled.push('Z');\n  }\n  return filled;\n}","map":{"version":3,"names":["decasteljau","points","t","left","right","recurse","length","push","middlePoints","i","reverse","splitCurve","start","end","count","segments","leftSegments","rt","split","result","map","segment","cmd","concat","splitSegment","temp","fillPath","source","target","sourceLen","targetLen","ratio","segmentsToFill","index","Math","floor","filled","reduce","unshift"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/path-util/esm/fill-path.js"],"sourcesContent":["function decasteljau(points, t) {\n    var left = [];\n    var right = [];\n    function recurse(points, t) {\n        if (points.length === 1) {\n            left.push(points[0]);\n            right.push(points[0]);\n        }\n        else {\n            var middlePoints = [];\n            for (var i = 0; i < points.length - 1; i++) {\n                if (i === 0) {\n                    left.push(points[0]);\n                }\n                if (i === points.length - 2) {\n                    right.push(points[i + 1]);\n                }\n                middlePoints[i] = [(1 - t) * points[i][0] + t * points[i + 1][0], (1 - t) * points[i][1] + t * points[i + 1][1]];\n            }\n            recurse(middlePoints, t);\n        }\n    }\n    if (points.length) {\n        recurse(points, t);\n    }\n    return { left: left, right: right.reverse() };\n}\nfunction splitCurve(start, end, count) {\n    var points = [[start[1], start[2]]];\n    count = count || 2;\n    var segments = [];\n    if (end[0] === 'A') {\n        points.push(end[6]);\n        points.push(end[7]);\n    }\n    else if (end[0] === 'C') {\n        points.push([end[1], end[2]]);\n        points.push([end[3], end[4]]);\n        points.push([end[5], end[6]]);\n    }\n    else if (end[0] === 'S' || end[0] === 'Q') {\n        points.push([end[1], end[2]]);\n        points.push([end[3], end[4]]);\n    }\n    else {\n        points.push([end[1], end[2]]);\n    }\n    var leftSegments = points;\n    var t = 1 / count;\n    for (var i = 0; i < count - 1; i++) {\n        var rt = t / (1 - t * i);\n        var split = decasteljau(leftSegments, rt);\n        segments.push(split.left);\n        leftSegments = split.right;\n    }\n    segments.push(leftSegments);\n    var result = segments.map(function (segment) {\n        var cmd = [];\n        if (segment.length === 4) {\n            cmd.push('C');\n            cmd = cmd.concat(segment[2]);\n        }\n        if (segment.length >= 3) {\n            if (segment.length === 3) {\n                cmd.push('Q');\n            }\n            cmd = cmd.concat(segment[1]);\n        }\n        if (segment.length === 2) {\n            cmd.push('L');\n        }\n        cmd = cmd.concat(segment[segment.length - 1]);\n        return cmd;\n    });\n    return result;\n}\nfunction splitSegment(start, end, count) {\n    if (count === 1) {\n        return [[].concat(start)];\n    }\n    var segments = [];\n    if (end[0] === 'L' || end[0] === 'C' || end[0] === 'Q') {\n        segments = segments.concat(splitCurve(start, end, count));\n    }\n    else {\n        var temp = [].concat(start);\n        if (temp[0] === 'M') {\n            temp[0] = 'L';\n        }\n        for (var i = 0; i <= count - 1; i++) {\n            segments.push(temp);\n        }\n    }\n    return segments;\n}\nexport default function fillPath(source, target) {\n    if (source.length === 1) {\n        return source;\n    }\n    var sourceLen = source.length - 1;\n    var targetLen = target.length - 1;\n    var ratio = sourceLen / targetLen;\n    var segmentsToFill = [];\n    if (source.length === 1 && source[0][0] === 'M') {\n        for (var i = 0; i < targetLen - sourceLen; i++) {\n            source.push(source[0]);\n        }\n        return source;\n    }\n    for (var i = 0; i < targetLen; i++) {\n        var index = Math.floor(ratio * i);\n        segmentsToFill[index] = (segmentsToFill[index] || 0) + 1;\n    }\n    var filled = segmentsToFill.reduce(function (filled, count, i) {\n        if (i === sourceLen) {\n            return filled.concat(source[sourceLen]);\n        }\n        return filled.concat(splitSegment(source[i], source[i + 1], count));\n    }, []);\n    filled.unshift(source[0]);\n    if (target[targetLen] === 'Z' || target[targetLen] === 'z') {\n        filled.push('Z');\n    }\n    return filled;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}