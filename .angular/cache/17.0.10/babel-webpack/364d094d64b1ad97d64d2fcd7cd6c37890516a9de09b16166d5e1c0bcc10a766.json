{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { each, isNil, get } from '@antv/util';\nimport { getCurrentElement, getDelegationObject, getElements, getElementValue, getScaleByField, isElementChange, isList } from '../util';\nimport StateBase from './state-base';\nfunction getItem(shape) {\n  return get(shape.get('delegateObject'), 'item');\n}\n/**\n * 状态量 Action 的基类，允许多个 Element 同时拥有某个状态\n * @class\n * @ignore\n */\nvar ElementState = /** @class */function (_super) {\n  __extends(ElementState, _super);\n  function ElementState() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.ignoreListItemStates = ['unchecked'];\n    return _this;\n  }\n  // 是否忽略触发的列表项\n  ElementState.prototype.isItemIgnore = function (item, list) {\n    var states = this.ignoreListItemStates;\n    var filtered = states.filter(function (state) {\n      return list.hasState(item, state);\n    });\n    return !!filtered.length;\n  };\n  // 设置由组件选项导致的状态变化\n  ElementState.prototype.setStateByComponent = function (component, item, enable) {\n    var view = this.context.view;\n    var field = component.get('field');\n    var elements = getElements(view);\n    this.setElementsStateByItem(elements, field, item, enable);\n  };\n  // 处理触发源由 element 导致的状态变化\n  ElementState.prototype.setStateByElement = function (element, enable) {\n    this.setElementState(element, enable);\n  };\n  /** 组件的选项是否同 element 匹配 */\n  ElementState.prototype.isMathItem = function (element, field, item) {\n    var view = this.context.view;\n    var scale = getScaleByField(view, field);\n    var value = getElementValue(element, field);\n    return !isNil(value) && item.name === scale.getText(value);\n  };\n  ElementState.prototype.setElementsStateByItem = function (elements, field, item, enable) {\n    var _this = this;\n    each(elements, function (el) {\n      if (_this.isMathItem(el, field, item)) {\n        el.setState(_this.stateName, enable);\n      }\n    });\n  };\n  /** 设置状态是否激活 */\n  ElementState.prototype.setStateEnable = function (enable) {\n    var element = getCurrentElement(this.context);\n    if (element) {\n      // 触发源由于 element 导致\n      if (isElementChange(this.context)) {\n        this.setStateByElement(element, enable);\n      }\n    } else {\n      // 触发源由组件导致\n      var delegateObject = getDelegationObject(this.context);\n      // 如果触发源时列表，图例、坐标轴\n      if (isList(delegateObject)) {\n        var item = delegateObject.item,\n          component = delegateObject.component;\n        if (item && component && !this.isItemIgnore(item, component)) {\n          var event_1 = this.context.event.gEvent;\n          // 防止闪烁\n          if (event_1 && event_1.fromShape && event_1.toShape && getItem(event_1.fromShape) === getItem(event_1.toShape)) {\n            return;\n          }\n          this.setStateByComponent(component, item, enable);\n        }\n      }\n    }\n  };\n  /**\n   * 切换状态\n   */\n  ElementState.prototype.toggle = function () {\n    var element = getCurrentElement(this.context);\n    if (element) {\n      var hasState = element.hasState(this.stateName);\n      this.setElementState(element, !hasState);\n    }\n  };\n  /**\n   * 取消当前时间影响的状态\n   */\n  ElementState.prototype.reset = function () {\n    this.setStateEnable(false);\n  };\n  return ElementState;\n}(StateBase);\nexport default ElementState;","map":{"version":3,"names":["__extends","each","isNil","get","getCurrentElement","getDelegationObject","getElements","getElementValue","getScaleByField","isElementChange","isList","StateBase","getItem","shape","ElementState","_super","_this","apply","arguments","ignoreListItemStates","prototype","isItemIgnore","item","list","states","filtered","filter","state","hasState","length","setStateByComponent","component","enable","view","context","field","elements","setElementsStateByItem","setStateByElement","element","setElementState","isMathItem","scale","value","name","getText","el","setState","stateName","setStateEnable","delegateObject","event_1","event","gEvent","fromShape","toShape","toggle","reset"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g2/esm/interaction/action/element/state.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { each, isNil, get } from '@antv/util';\nimport { getCurrentElement, getDelegationObject, getElements, getElementValue, getScaleByField, isElementChange, isList, } from '../util';\nimport StateBase from './state-base';\nfunction getItem(shape) {\n    return get(shape.get('delegateObject'), 'item');\n}\n/**\n * 状态量 Action 的基类，允许多个 Element 同时拥有某个状态\n * @class\n * @ignore\n */\nvar ElementState = /** @class */ (function (_super) {\n    __extends(ElementState, _super);\n    function ElementState() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.ignoreListItemStates = ['unchecked'];\n        return _this;\n    }\n    // 是否忽略触发的列表项\n    ElementState.prototype.isItemIgnore = function (item, list) {\n        var states = this.ignoreListItemStates;\n        var filtered = states.filter(function (state) {\n            return list.hasState(item, state);\n        });\n        return !!filtered.length;\n    };\n    // 设置由组件选项导致的状态变化\n    ElementState.prototype.setStateByComponent = function (component, item, enable) {\n        var view = this.context.view;\n        var field = component.get('field');\n        var elements = getElements(view);\n        this.setElementsStateByItem(elements, field, item, enable);\n    };\n    // 处理触发源由 element 导致的状态变化\n    ElementState.prototype.setStateByElement = function (element, enable) {\n        this.setElementState(element, enable);\n    };\n    /** 组件的选项是否同 element 匹配 */\n    ElementState.prototype.isMathItem = function (element, field, item) {\n        var view = this.context.view;\n        var scale = getScaleByField(view, field);\n        var value = getElementValue(element, field);\n        return !isNil(value) && item.name === scale.getText(value);\n    };\n    ElementState.prototype.setElementsStateByItem = function (elements, field, item, enable) {\n        var _this = this;\n        each(elements, function (el) {\n            if (_this.isMathItem(el, field, item)) {\n                el.setState(_this.stateName, enable);\n            }\n        });\n    };\n    /** 设置状态是否激活 */\n    ElementState.prototype.setStateEnable = function (enable) {\n        var element = getCurrentElement(this.context);\n        if (element) {\n            // 触发源由于 element 导致\n            if (isElementChange(this.context)) {\n                this.setStateByElement(element, enable);\n            }\n        }\n        else {\n            // 触发源由组件导致\n            var delegateObject = getDelegationObject(this.context);\n            // 如果触发源时列表，图例、坐标轴\n            if (isList(delegateObject)) {\n                var item = delegateObject.item, component = delegateObject.component;\n                if (item && component && !this.isItemIgnore(item, component)) {\n                    var event_1 = this.context.event.gEvent;\n                    // 防止闪烁\n                    if (event_1 && event_1.fromShape && event_1.toShape && getItem(event_1.fromShape) === getItem(event_1.toShape)) {\n                        return;\n                    }\n                    this.setStateByComponent(component, item, enable);\n                }\n            }\n        }\n    };\n    /**\n     * 切换状态\n     */\n    ElementState.prototype.toggle = function () {\n        var element = getCurrentElement(this.context);\n        if (element) {\n            var hasState = element.hasState(this.stateName);\n            this.setElementState(element, !hasState);\n        }\n    };\n    /**\n     * 取消当前时间影响的状态\n     */\n    ElementState.prototype.reset = function () {\n        this.setStateEnable(false);\n    };\n    return ElementState;\n}(StateBase));\nexport default ElementState;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}