{"ast":null,"code":"var WILDCARD = '*';\n/* event-emitter */\nvar EventEmitter = /** @class */function () {\n  function EventEmitter() {\n    this._events = {};\n  }\n  /**\n   * 监听一个事件\n   * @param evt\n   * @param callback\n   * @param once\n   */\n  EventEmitter.prototype.on = function (evt, callback, once) {\n    if (!this._events[evt]) {\n      this._events[evt] = [];\n    }\n    this._events[evt].push({\n      callback: callback,\n      once: !!once\n    });\n    return this;\n  };\n  /**\n   * 监听一个事件一次\n   * @param evt\n   * @param callback\n   */\n  EventEmitter.prototype.once = function (evt, callback) {\n    return this.on(evt, callback, true);\n  };\n  /**\n   * 触发一个事件\n   * @param evt\n   * @param args\n   */\n  EventEmitter.prototype.emit = function (evt) {\n    var _this = this;\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n    var events = this._events[evt] || [];\n    var wildcardEvents = this._events[WILDCARD] || [];\n    // 实际的处理 emit 方法\n    var doEmit = function (es) {\n      var length = es.length;\n      for (var i = 0; i < length; i++) {\n        if (!es[i]) {\n          continue;\n        }\n        var _a = es[i],\n          callback = _a.callback,\n          once = _a.once;\n        if (once) {\n          es.splice(i, 1);\n          if (es.length === 0) {\n            delete _this._events[evt];\n          }\n          length--;\n          i--;\n        }\n        callback.apply(_this, args);\n      }\n    };\n    doEmit(events);\n    doEmit(wildcardEvents);\n  };\n  /**\n   * 取消监听一个事件，或者一个channel\n   * @param evt\n   * @param callback\n   */\n  EventEmitter.prototype.off = function (evt, callback) {\n    if (!evt) {\n      // evt 为空全部清除\n      this._events = {};\n    } else {\n      if (!callback) {\n        // evt 存在，callback 为空，清除事件所有方法\n        delete this._events[evt];\n      } else {\n        // evt 存在，callback 存在，清除匹配的\n        var events = this._events[evt] || [];\n        var length_1 = events.length;\n        for (var i = 0; i < length_1; i++) {\n          if (events[i].callback === callback) {\n            events.splice(i, 1);\n            length_1--;\n            i--;\n          }\n        }\n        if (events.length === 0) {\n          delete this._events[evt];\n        }\n      }\n    }\n    return this;\n  };\n  /* 当前所有的事件 */\n  EventEmitter.prototype.getEvents = function () {\n    return this._events;\n  };\n  return EventEmitter;\n}();\nexport default EventEmitter;","map":{"version":3,"names":["WILDCARD","EventEmitter","_events","prototype","on","evt","callback","once","push","emit","_this","args","_i","arguments","length","events","wildcardEvents","doEmit","es","i","_a","splice","apply","off","length_1","getEvents"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/event-emitter/esm/index.js"],"sourcesContent":["var WILDCARD = '*';\n/* event-emitter */\nvar EventEmitter = /** @class */ (function () {\n    function EventEmitter() {\n        this._events = {};\n    }\n    /**\n     * 监听一个事件\n     * @param evt\n     * @param callback\n     * @param once\n     */\n    EventEmitter.prototype.on = function (evt, callback, once) {\n        if (!this._events[evt]) {\n            this._events[evt] = [];\n        }\n        this._events[evt].push({\n            callback: callback,\n            once: !!once,\n        });\n        return this;\n    };\n    /**\n     * 监听一个事件一次\n     * @param evt\n     * @param callback\n     */\n    EventEmitter.prototype.once = function (evt, callback) {\n        return this.on(evt, callback, true);\n    };\n    /**\n     * 触发一个事件\n     * @param evt\n     * @param args\n     */\n    EventEmitter.prototype.emit = function (evt) {\n        var _this = this;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var events = this._events[evt] || [];\n        var wildcardEvents = this._events[WILDCARD] || [];\n        // 实际的处理 emit 方法\n        var doEmit = function (es) {\n            var length = es.length;\n            for (var i = 0; i < length; i++) {\n                if (!es[i]) {\n                    continue;\n                }\n                var _a = es[i], callback = _a.callback, once = _a.once;\n                if (once) {\n                    es.splice(i, 1);\n                    if (es.length === 0) {\n                        delete _this._events[evt];\n                    }\n                    length--;\n                    i--;\n                }\n                callback.apply(_this, args);\n            }\n        };\n        doEmit(events);\n        doEmit(wildcardEvents);\n    };\n    /**\n     * 取消监听一个事件，或者一个channel\n     * @param evt\n     * @param callback\n     */\n    EventEmitter.prototype.off = function (evt, callback) {\n        if (!evt) {\n            // evt 为空全部清除\n            this._events = {};\n        }\n        else {\n            if (!callback) {\n                // evt 存在，callback 为空，清除事件所有方法\n                delete this._events[evt];\n            }\n            else {\n                // evt 存在，callback 存在，清除匹配的\n                var events = this._events[evt] || [];\n                var length_1 = events.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (events[i].callback === callback) {\n                        events.splice(i, 1);\n                        length_1--;\n                        i--;\n                    }\n                }\n                if (events.length === 0) {\n                    delete this._events[evt];\n                }\n            }\n        }\n        return this;\n    };\n    /* 当前所有的事件 */\n    EventEmitter.prototype.getEvents = function () {\n        return this._events;\n    };\n    return EventEmitter;\n}());\nexport default EventEmitter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}