{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport GridBase from './base';\nfunction distance(x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  return Math.sqrt(dx * dx + dy * dy);\n}\nvar Circle = /** @class */function (_super) {\n  __extends(Circle, _super);\n  function Circle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Circle.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n    return __assign(__assign({}, cfg), {\n      type: 'circle',\n      /**\n       * 中心点\n       * @type {object}\n       */\n      center: null,\n      /**\n       * 栅格线是否封闭\n       * @type {true}\n       */\n      closed: true\n    });\n  };\n  Circle.prototype.getGridPath = function (points, reversed) {\n    var lineType = this.getLineType();\n    var closed = this.get('closed');\n    var path = [];\n    if (points.length) {\n      // 防止出错\n      if (lineType === 'circle') {\n        var center = this.get('center');\n        var firstPoint = points[0];\n        var radius_1 = distance(center.x, center.y, firstPoint.x, firstPoint.y);\n        var sweepFlag_1 = reversed ? 0 : 1; // 顺时针还是逆时针\n        if (closed) {\n          // 封闭时，绘制整个圆\n          path.push(['M', center.x, center.y - radius_1]);\n          path.push(['A', radius_1, radius_1, 0, 0, sweepFlag_1, center.x, center.y + radius_1]);\n          path.push(['A', radius_1, radius_1, 0, 0, sweepFlag_1, center.x, center.y - radius_1]);\n          path.push(['Z']);\n        } else {\n          each(points, function (point, index) {\n            if (index === 0) {\n              path.push(['M', point.x, point.y]);\n            } else {\n              path.push(['A', radius_1, radius_1, 0, 0, sweepFlag_1, point.x, point.y]);\n            }\n          });\n        }\n      } else {\n        each(points, function (point, index) {\n          if (index === 0) {\n            path.push(['M', point.x, point.y]);\n          } else {\n            path.push(['L', point.x, point.y]);\n          }\n        });\n        if (closed) {\n          path.push(['Z']);\n        }\n      }\n    }\n    return path;\n  };\n  return Circle;\n}(GridBase);\nexport default Circle;","map":{"version":3,"names":["__assign","__extends","each","GridBase","distance","x1","y1","x2","y2","dx","dy","Math","sqrt","Circle","_super","apply","arguments","prototype","getDefaultCfg","cfg","call","type","center","closed","getGridPath","points","reversed","lineType","getLineType","get","path","length","firstPoint","radius_1","x","y","sweepFlag_1","push","point","index"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/component/esm/grid/circle.js"],"sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport GridBase from './base';\nfunction distance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return Math.sqrt(dx * dx + dy * dy);\n}\nvar Circle = /** @class */ (function (_super) {\n    __extends(Circle, _super);\n    function Circle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Circle.prototype.getDefaultCfg = function () {\n        var cfg = _super.prototype.getDefaultCfg.call(this);\n        return __assign(__assign({}, cfg), { type: 'circle', \n            /**\n             * 中心点\n             * @type {object}\n             */\n            center: null, \n            /**\n             * 栅格线是否封闭\n             * @type {true}\n             */\n            closed: true });\n    };\n    Circle.prototype.getGridPath = function (points, reversed) {\n        var lineType = this.getLineType();\n        var closed = this.get('closed');\n        var path = [];\n        if (points.length) {\n            // 防止出错\n            if (lineType === 'circle') {\n                var center = this.get('center');\n                var firstPoint = points[0];\n                var radius_1 = distance(center.x, center.y, firstPoint.x, firstPoint.y);\n                var sweepFlag_1 = reversed ? 0 : 1; // 顺时针还是逆时针\n                if (closed) {\n                    // 封闭时，绘制整个圆\n                    path.push(['M', center.x, center.y - radius_1]);\n                    path.push(['A', radius_1, radius_1, 0, 0, sweepFlag_1, center.x, center.y + radius_1]);\n                    path.push(['A', radius_1, radius_1, 0, 0, sweepFlag_1, center.x, center.y - radius_1]);\n                    path.push(['Z']);\n                }\n                else {\n                    each(points, function (point, index) {\n                        if (index === 0) {\n                            path.push(['M', point.x, point.y]);\n                        }\n                        else {\n                            path.push(['A', radius_1, radius_1, 0, 0, sweepFlag_1, point.x, point.y]);\n                        }\n                    });\n                }\n            }\n            else {\n                each(points, function (point, index) {\n                    if (index === 0) {\n                        path.push(['M', point.x, point.y]);\n                    }\n                    else {\n                        path.push(['L', point.x, point.y]);\n                    }\n                });\n                if (closed) {\n                    path.push(['Z']);\n                }\n            }\n        }\n        return path;\n    };\n    return Circle;\n}(GridBase));\nexport default Circle;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}