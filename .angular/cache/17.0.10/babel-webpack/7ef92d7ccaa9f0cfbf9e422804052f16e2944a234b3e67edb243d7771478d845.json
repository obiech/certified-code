{"ast":null,"code":"/* G2 的一个壳子，不包含 Geometry，由开发者自己定义和引入 */\nexport var VERSION = '4.2.11';\n// 核心基类导出\nexport { Chart, View, Event } from './chart'; // Chart, View 类\nexport { Controller as ComponentController } from './chart/controller/base'; // G2 组件基类\nexport { default as TooltipController } from './chart/controller/tooltip'; // G2 tooltip 组件基类\nexport { default as Geometry } from './geometry/base'; // Geometry 基类\nexport { default as Element } from './geometry/element'; // Element 类\nexport { default as GeometryLabel } from './geometry/label/base'; // Geometry Label 基类\nexport { Interaction, Action } from './interaction'; // Interaction, Action 基类\nexport { Facet } from './facet'; // Facet 基类\nexport { default as InteractionAction } from './interaction/action/base'; // Interaction Action 基类\n// 注册 ComponentController\nexport { registerComponentController } from './chart';\n// 注册 Geometry\nexport { registerGeometry } from './chart';\n// 注册 Geometry Shape\nexport { registerShape, registerShapeFactory, getShapeFactory } from './geometry/shape/base';\n// 注册 Geometry label 以及 Geometry Label 布局函数\nexport { registerGeometryLabel, registerGeometryLabelLayout, getGeometryLabel, getGeometryLabelLayout } from './geometry/label';\n// 注册 interaction\nexport { getInteraction, registerInteraction, registerAction, getActionClass } from './interaction';\n// 注册 facet\nexport { getFacet, registerFacet } from './facet';\n// 注册主题\nexport { getTheme, registerTheme } from './theme';\n// G engine 管理相关\nexport { registerEngine, getEngine } from './engine';\n// 注册动画函数\nexport { registerAnimation, getAnimation } from './animate/animation';\nexport { LAYER, DIRECTION } from './constant';\nexport { Coordinate, Scale } from './dependents';\n// 一些工具方法导出\nimport { getMappingValue } from './util/attr';\nimport { getLegendItems } from './util/legend';\nimport { getAngle, getSectorPath, polarToCartesian } from './util/graphics';\nimport { rotate, transform, translate, zoom } from './util/transform';\nimport { getTooltipItems } from './util/tooltip';\nimport { getDelegationObject } from './interaction/action/util';\nimport { getPathPoints } from './geometry/shape/util/get-path-points';\nimport { getPath } from './geometry/shape/line';\nexport var Util = {\n  getLegendItems: getLegendItems,\n  translate: translate,\n  rotate: rotate,\n  zoom: zoom,\n  transform: transform,\n  getAngle: getAngle,\n  getSectorPath: getSectorPath,\n  polarToCartesian: polarToCartesian,\n  getDelegationObject: getDelegationObject,\n  getTooltipItems: getTooltipItems,\n  getMappingValue: getMappingValue,\n  // shape 的一些操作方法\n  getPath: getPath,\n  getPathPoints: getPathPoints\n};","map":{"version":3,"names":["VERSION","Chart","View","Event","Controller","ComponentController","default","TooltipController","Geometry","Element","GeometryLabel","Interaction","Action","Facet","InteractionAction","registerComponentController","registerGeometry","registerShape","registerShapeFactory","getShapeFactory","registerGeometryLabel","registerGeometryLabelLayout","getGeometryLabel","getGeometryLabelLayout","getInteraction","registerInteraction","registerAction","getActionClass","getFacet","registerFacet","getTheme","registerTheme","registerEngine","getEngine","registerAnimation","getAnimation","LAYER","DIRECTION","Coordinate","Scale","getMappingValue","getLegendItems","getAngle","getSectorPath","polarToCartesian","rotate","transform","translate","zoom","getTooltipItems","getDelegationObject","getPathPoints","getPath","Util"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g2/esm/core.js"],"sourcesContent":["/* G2 的一个壳子，不包含 Geometry，由开发者自己定义和引入 */\nexport var VERSION = '4.2.11';\n// 核心基类导出\nexport { Chart, View, Event } from './chart'; // Chart, View 类\nexport { Controller as ComponentController } from './chart/controller/base'; // G2 组件基类\nexport { default as TooltipController } from './chart/controller/tooltip'; // G2 tooltip 组件基类\nexport { default as Geometry } from './geometry/base'; // Geometry 基类\nexport { default as Element } from './geometry/element'; // Element 类\nexport { default as GeometryLabel } from './geometry/label/base'; // Geometry Label 基类\nexport { Interaction, Action } from './interaction'; // Interaction, Action 基类\nexport { Facet } from './facet'; // Facet 基类\nexport { default as InteractionAction } from './interaction/action/base'; // Interaction Action 基类\n// 注册 ComponentController\nexport { registerComponentController } from './chart';\n// 注册 Geometry\nexport { registerGeometry } from './chart';\n// 注册 Geometry Shape\nexport { registerShape, registerShapeFactory, getShapeFactory } from './geometry/shape/base';\n// 注册 Geometry label 以及 Geometry Label 布局函数\nexport { registerGeometryLabel, registerGeometryLabelLayout, getGeometryLabel, getGeometryLabelLayout, } from './geometry/label';\n// 注册 interaction\nexport { getInteraction, registerInteraction, registerAction, getActionClass } from './interaction';\n// 注册 facet\nexport { getFacet, registerFacet } from './facet';\n// 注册主题\nexport { getTheme, registerTheme } from './theme';\n// G engine 管理相关\nexport { registerEngine, getEngine } from './engine';\n// 注册动画函数\nexport { registerAnimation, getAnimation } from './animate/animation';\nexport { LAYER, DIRECTION } from './constant';\nexport { Coordinate, Scale } from './dependents';\n// 一些工具方法导出\nimport { getMappingValue } from './util/attr';\nimport { getLegendItems } from './util/legend';\nimport { getAngle, getSectorPath, polarToCartesian } from './util/graphics';\nimport { rotate, transform, translate, zoom } from './util/transform';\nimport { getTooltipItems } from './util/tooltip';\nimport { getDelegationObject } from './interaction/action/util';\nimport { getPathPoints } from './geometry/shape/util/get-path-points';\nimport { getPath } from './geometry/shape/line';\nexport var Util = {\n    getLegendItems: getLegendItems,\n    translate: translate,\n    rotate: rotate,\n    zoom: zoom,\n    transform: transform,\n    getAngle: getAngle,\n    getSectorPath: getSectorPath,\n    polarToCartesian: polarToCartesian,\n    getDelegationObject: getDelegationObject,\n    getTooltipItems: getTooltipItems,\n    getMappingValue: getMappingValue,\n    // shape 的一些操作方法\n    getPath: getPath,\n    getPathPoints: getPathPoints,\n};\n"],"mappings":"AAAA;AACA,OAAO,IAAIA,OAAO,GAAG,QAAQ;AAC7B;AACA,SAASC,KAAK,EAAEC,IAAI,EAAEC,KAAK,QAAQ,SAAS,CAAC,CAAC;AAC9C,SAASC,UAAU,IAAIC,mBAAmB,QAAQ,yBAAyB,CAAC,CAAC;AAC7E,SAASC,OAAO,IAAIC,iBAAiB,QAAQ,4BAA4B,CAAC,CAAC;AAC3E,SAASD,OAAO,IAAIE,QAAQ,QAAQ,iBAAiB,CAAC,CAAC;AACvD,SAASF,OAAO,IAAIG,OAAO,QAAQ,oBAAoB,CAAC,CAAC;AACzD,SAASH,OAAO,IAAII,aAAa,QAAQ,uBAAuB,CAAC,CAAC;AAClE,SAASC,WAAW,EAAEC,MAAM,QAAQ,eAAe,CAAC,CAAC;AACrD,SAASC,KAAK,QAAQ,SAAS,CAAC,CAAC;AACjC,SAASP,OAAO,IAAIQ,iBAAiB,QAAQ,2BAA2B,CAAC,CAAC;AAC1E;AACA,SAASC,2BAA2B,QAAQ,SAAS;AACrD;AACA,SAASC,gBAAgB,QAAQ,SAAS;AAC1C;AACA,SAASC,aAAa,EAAEC,oBAAoB,EAAEC,eAAe,QAAQ,uBAAuB;AAC5F;AACA,SAASC,qBAAqB,EAAEC,2BAA2B,EAAEC,gBAAgB,EAAEC,sBAAsB,QAAS,kBAAkB;AAChI;AACA,SAASC,cAAc,EAAEC,mBAAmB,EAAEC,cAAc,EAAEC,cAAc,QAAQ,eAAe;AACnG;AACA,SAASC,QAAQ,EAAEC,aAAa,QAAQ,SAAS;AACjD;AACA,SAASC,QAAQ,EAAEC,aAAa,QAAQ,SAAS;AACjD;AACA,SAASC,cAAc,EAAEC,SAAS,QAAQ,UAAU;AACpD;AACA,SAASC,iBAAiB,EAAEC,YAAY,QAAQ,qBAAqB;AACrE,SAASC,KAAK,EAAEC,SAAS,QAAQ,YAAY;AAC7C,SAASC,UAAU,EAAEC,KAAK,QAAQ,cAAc;AAChD;AACA,SAASC,eAAe,QAAQ,aAAa;AAC7C,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,QAAQ,EAAEC,aAAa,EAAEC,gBAAgB,QAAQ,iBAAiB;AAC3E,SAASC,MAAM,EAAEC,SAAS,EAAEC,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AACrE,SAASC,eAAe,QAAQ,gBAAgB;AAChD,SAASC,mBAAmB,QAAQ,2BAA2B;AAC/D,SAASC,aAAa,QAAQ,uCAAuC;AACrE,SAASC,OAAO,QAAQ,uBAAuB;AAC/C,OAAO,IAAIC,IAAI,GAAG;EACdZ,cAAc,EAAEA,cAAc;EAC9BM,SAAS,EAAEA,SAAS;EACpBF,MAAM,EAAEA,MAAM;EACdG,IAAI,EAAEA,IAAI;EACVF,SAAS,EAAEA,SAAS;EACpBJ,QAAQ,EAAEA,QAAQ;EAClBC,aAAa,EAAEA,aAAa;EAC5BC,gBAAgB,EAAEA,gBAAgB;EAClCM,mBAAmB,EAAEA,mBAAmB;EACxCD,eAAe,EAAEA,eAAe;EAChCT,eAAe,EAAEA,eAAe;EAChC;EACAY,OAAO,EAAEA,OAAO;EAChBD,aAAa,EAAEA;AACnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}