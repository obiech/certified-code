{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { getLogPositiveMin, log } from '../util/math';\nimport Continuous from './base';\n/**\n * Log 度量，处理非均匀分布\n */\nvar Log = /** @class */function (_super) {\n  __extends(Log, _super);\n  function Log() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = 'log';\n    return _this;\n  }\n  /**\n   * @override\n   */\n  Log.prototype.invert = function (value) {\n    var base = this.base;\n    var max = log(base, this.max);\n    var rangeMin = this.rangeMin();\n    var range = this.rangeMax() - rangeMin;\n    var min;\n    var positiveMin = this.positiveMin;\n    if (positiveMin) {\n      if (value === 0) {\n        return 0;\n      }\n      min = log(base, positiveMin / base);\n      var appendPercent = 1 / (max - min) * range; // 0 到 positiveMin的占比\n      if (value < appendPercent) {\n        // 落到 0 - positiveMin 之间\n        return value / appendPercent * positiveMin;\n      }\n    } else {\n      min = log(base, this.min);\n    }\n    var percent = (value - rangeMin) / range;\n    var tmp = percent * (max - min) + min;\n    return Math.pow(base, tmp);\n  };\n  Log.prototype.initCfg = function () {\n    this.tickMethod = 'log';\n    this.base = 10;\n    this.tickCount = 6;\n    this.nice = true;\n  };\n  // 设置\n  Log.prototype.setDomain = function () {\n    _super.prototype.setDomain.call(this);\n    var min = this.min;\n    if (min < 0) {\n      throw new Error('When you use log scale, the minimum value must be greater than zero!');\n    }\n    if (min === 0) {\n      this.positiveMin = getLogPositiveMin(this.values, this.base, this.max);\n    }\n  };\n  // 根据当前值获取占比\n  Log.prototype.getScalePercent = function (value) {\n    var max = this.max;\n    var min = this.min;\n    if (max === min) {\n      return 0;\n    }\n    // 如果值小于等于0，则按照0处理\n    if (value <= 0) {\n      return 0;\n    }\n    var base = this.base;\n    var positiveMin = this.positiveMin;\n    // 如果min == 0, 则根据比0大的最小值，计算比例关系。这个最小值作为坐标轴上的第二个tick，第一个是0但是不显示\n    if (positiveMin) {\n      min = positiveMin * 1 / base;\n    }\n    var percent;\n    // 如果数值小于次小值，那么就计算 value / 次小值 占整体的比例\n    if (value < positiveMin) {\n      percent = value / positiveMin / (log(base, max) - log(base, min));\n    } else {\n      percent = (log(base, value) - log(base, min)) / (log(base, max) - log(base, min));\n    }\n    return percent;\n  };\n  return Log;\n}(Continuous);\nexport default Log;","map":{"version":3,"names":["__extends","getLogPositiveMin","log","Continuous","Log","_super","_this","apply","arguments","type","prototype","invert","value","base","max","rangeMin","range","rangeMax","min","positiveMin","appendPercent","percent","tmp","Math","pow","initCfg","tickMethod","tickCount","nice","setDomain","call","Error","values","getScalePercent"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/scale/esm/continuous/log.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { getLogPositiveMin, log } from '../util/math';\nimport Continuous from './base';\n/**\n * Log 度量，处理非均匀分布\n */\nvar Log = /** @class */ (function (_super) {\n    __extends(Log, _super);\n    function Log() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'log';\n        return _this;\n    }\n    /**\n     * @override\n     */\n    Log.prototype.invert = function (value) {\n        var base = this.base;\n        var max = log(base, this.max);\n        var rangeMin = this.rangeMin();\n        var range = this.rangeMax() - rangeMin;\n        var min;\n        var positiveMin = this.positiveMin;\n        if (positiveMin) {\n            if (value === 0) {\n                return 0;\n            }\n            min = log(base, positiveMin / base);\n            var appendPercent = (1 / (max - min)) * range; // 0 到 positiveMin的占比\n            if (value < appendPercent) {\n                // 落到 0 - positiveMin 之间\n                return (value / appendPercent) * positiveMin;\n            }\n        }\n        else {\n            min = log(base, this.min);\n        }\n        var percent = (value - rangeMin) / range;\n        var tmp = percent * (max - min) + min;\n        return Math.pow(base, tmp);\n    };\n    Log.prototype.initCfg = function () {\n        this.tickMethod = 'log';\n        this.base = 10;\n        this.tickCount = 6;\n        this.nice = true;\n    };\n    // 设置\n    Log.prototype.setDomain = function () {\n        _super.prototype.setDomain.call(this);\n        var min = this.min;\n        if (min < 0) {\n            throw new Error('When you use log scale, the minimum value must be greater than zero!');\n        }\n        if (min === 0) {\n            this.positiveMin = getLogPositiveMin(this.values, this.base, this.max);\n        }\n    };\n    // 根据当前值获取占比\n    Log.prototype.getScalePercent = function (value) {\n        var max = this.max;\n        var min = this.min;\n        if (max === min) {\n            return 0;\n        }\n        // 如果值小于等于0，则按照0处理\n        if (value <= 0) {\n            return 0;\n        }\n        var base = this.base;\n        var positiveMin = this.positiveMin;\n        // 如果min == 0, 则根据比0大的最小值，计算比例关系。这个最小值作为坐标轴上的第二个tick，第一个是0但是不显示\n        if (positiveMin) {\n            min = (positiveMin * 1) / base;\n        }\n        var percent;\n        // 如果数值小于次小值，那么就计算 value / 次小值 占整体的比例\n        if (value < positiveMin) {\n            percent = value / positiveMin / (log(base, max) - log(base, min));\n        }\n        else {\n            percent = (log(base, value) - log(base, min)) / (log(base, max) - log(base, min));\n        }\n        return percent;\n    };\n    return Log;\n}(Continuous));\nexport default Log;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}