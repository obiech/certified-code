{"ast":null,"code":"import { ComplaintStatus, DriverStatus, OrderStatus, RiderStatus, SosStatus, TransactionStatus } from '@ridy/admin-panel/generated/graphql';\nimport * as i0 from \"@angular/core\";\nexport class TagColorService {\n  getTransactionStatusStatusColor(status) {\n    switch (status) {\n      case TransactionStatus.Processing:\n        return 'blue';\n      case TransactionStatus.Canceled:\n        return 'orange';\n      case TransactionStatus.Done:\n        return 'green';\n      case TransactionStatus.Rejected:\n        return 'red';\n    }\n  }\n  orderStatus(value) {\n    switch (value) {\n      case OrderStatus.Expired:\n        return 'default';\n      case OrderStatus.RiderCanceled:\n      case OrderStatus.DriverCanceled:\n      case OrderStatus.NotFound:\n      case OrderStatus.NoCloseFound:\n        return 'red';\n      case OrderStatus.Booked:\n        return 'orange';\n      case OrderStatus.Finished:\n        return 'green';\n      default:\n        return 'blue';\n    }\n  }\n  boolean(value) {\n    return value ? 'green' : 'red';\n  }\n  driver(value) {\n    switch (value) {\n      case DriverStatus.Blocked:\n      case DriverStatus.HardReject:\n        return 'red';\n      case DriverStatus.Online:\n        return 'blue';\n      case DriverStatus.InService:\n        return 'green';\n      case DriverStatus.WaitingDocuments:\n      case DriverStatus.SoftReject:\n      case DriverStatus.Offline:\n        return 'default';\n      case DriverStatus.PendingApproval:\n        return 'orange';\n    }\n  }\n  rider(value) {\n    switch (value) {\n      case RiderStatus.Disabled:\n        return 'red';\n      case RiderStatus.Enabled:\n        return 'green';\n    }\n  }\n  complaintStatus(status) {\n    switch (status) {\n      case ComplaintStatus.Resolved:\n        return 'green';\n      case ComplaintStatus.Submitted:\n        return 'orange';\n      case ComplaintStatus.UnderInvestigation:\n        return 'blue';\n    }\n  }\n  sosStatus(status) {\n    switch (status) {\n      case SosStatus.Resolved:\n        return 'green';\n      case SosStatus.Submitted:\n        return 'orange';\n      case SosStatus.FalseAlarm:\n        return 'default';\n      case SosStatus.UnderReview:\n        return 'blue';\n    }\n  }\n  static {\n    this.ɵfac = function TagColorService_Factory(t) {\n      return new (t || TagColorService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TagColorService,\n      factory: TagColorService.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["ComplaintStatus","DriverStatus","OrderStatus","RiderStatus","SosStatus","TransactionStatus","TagColorService","getTransactionStatusStatusColor","status","Processing","Canceled","Done","Rejected","orderStatus","value","Expired","RiderCanceled","DriverCanceled","NotFound","NoCloseFound","Booked","Finished","boolean","driver","Blocked","HardReject","Online","InService","WaitingDocuments","SoftReject","Offline","PendingApproval","rider","Disabled","Enabled","complaintStatus","Resolved","Submitted","UnderInvestigation","sosStatus","FalseAlarm","UnderReview","factory","ɵfac"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/apps/admin-panel/src/app/@services/tag-color/tag-color.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  ComplaintStatus,\n  DriverStatus,\n  OrderStatus,\n  RiderStatus,\n  SosStatus,\n  TransactionStatus,\n} from '@ridy/admin-panel/generated/graphql';\nimport { NzPresetColor, NzStatusColor } from 'ng-zorro-antd/core/color';\n\n@Injectable()\nexport class TagColorService {\n  getTransactionStatusStatusColor(\n    status: TransactionStatus,\n  ): NzStatusColor | NzPresetColor {\n    switch (status) {\n      case TransactionStatus.Processing:\n        return 'blue';\n      case TransactionStatus.Canceled:\n        return 'orange';\n      case TransactionStatus.Done:\n        return 'green';\n      case TransactionStatus.Rejected:\n        return 'red';\n    }\n  }\n\n  orderStatus(value: OrderStatus): NzStatusColor | NzPresetColor {\n    switch (value) {\n      case OrderStatus.Expired:\n        return 'default';\n\n      case OrderStatus.RiderCanceled:\n      case OrderStatus.DriverCanceled:\n      case OrderStatus.NotFound:\n      case OrderStatus.NoCloseFound:\n        return 'red';\n\n      case OrderStatus.Booked:\n        return 'orange';\n\n      case OrderStatus.Finished:\n        return 'green';\n\n      default:\n        return 'blue';\n    }\n  }\n\n  boolean(value: boolean): NzStatusColor | NzPresetColor {\n    return value ? 'green' : 'red';\n  }\n\n  driver(value: DriverStatus): NzStatusColor | NzPresetColor {\n    switch (value) {\n      case DriverStatus.Blocked:\n      case DriverStatus.HardReject:\n        return 'red';\n\n      case DriverStatus.Online:\n        return 'blue';\n\n      case DriverStatus.InService:\n        return 'green';\n\n      case DriverStatus.WaitingDocuments:\n      case DriverStatus.SoftReject:\n      case DriverStatus.Offline:\n        return 'default';\n\n      case DriverStatus.PendingApproval:\n        return 'orange';\n    }\n  }\n\n  rider(value: RiderStatus): NzStatusColor | NzPresetColor {\n    switch (value) {\n      case RiderStatus.Disabled:\n        return 'red';\n\n      case RiderStatus.Enabled:\n        return 'green';\n    }\n  }\n\n  complaintStatus(status: ComplaintStatus): NzStatusColor | NzPresetColor {\n    switch (status) {\n      case ComplaintStatus.Resolved:\n        return 'green';\n\n      case ComplaintStatus.Submitted:\n        return 'orange';\n\n      case ComplaintStatus.UnderInvestigation:\n        return 'blue';\n    }\n  }\n\n  sosStatus(status: SosStatus): NzStatusColor | NzPresetColor {\n    switch (status) {\n      case SosStatus.Resolved:\n        return 'green';\n\n      case SosStatus.Submitted:\n        return 'orange';\n\n      case SosStatus.FalseAlarm:\n        return 'default';\n\n      case SosStatus.UnderReview:\n        return 'blue';\n    }\n  }\n\n  // requestBadge(value: RequestStatus) {\n  //   switch (value) {\n  //     case (RequestStatus.RiderCanceled):\n  //     case (RequestStatus.DriverCanceled):\n  //     case (RequestStatus.NotFound):\n  //     case (RequestStatus.NoCloseFound):\n  //     case (RequestStatus.Expired):\n  //       return 'error';\n\n  //     case (RequestStatus.Booked):\n  //     case (RequestStatus.Started):\n  //     case (RequestStatus.WaitingForPostPay):\n  //     case (RequestStatus.WaitingForReview):\n  //       return 'processing';\n\n  //     case (RequestStatus.Finished):\n  //       return 'success';\n\n  //     default:\n  //       return 'default';\n  //   }\n\n  // }\n}\n"],"mappings":"AACA,SACEA,eAAe,EACfC,YAAY,EACZC,WAAW,EACXC,WAAW,EACXC,SAAS,EACTC,iBAAiB,QACZ,qCAAqC;;AAI5C,OAAM,MAAOC,eAAe;EAC1BC,+BAA+BA,CAC7BC,MAAyB;IAEzB,QAAQA,MAAM;MACZ,KAAKH,iBAAiB,CAACI,UAAU;QAC/B,OAAO,MAAM;MACf,KAAKJ,iBAAiB,CAACK,QAAQ;QAC7B,OAAO,QAAQ;MACjB,KAAKL,iBAAiB,CAACM,IAAI;QACzB,OAAO,OAAO;MAChB,KAAKN,iBAAiB,CAACO,QAAQ;QAC7B,OAAO,KAAK;;EAElB;EAEAC,WAAWA,CAACC,KAAkB;IAC5B,QAAQA,KAAK;MACX,KAAKZ,WAAW,CAACa,OAAO;QACtB,OAAO,SAAS;MAElB,KAAKb,WAAW,CAACc,aAAa;MAC9B,KAAKd,WAAW,CAACe,cAAc;MAC/B,KAAKf,WAAW,CAACgB,QAAQ;MACzB,KAAKhB,WAAW,CAACiB,YAAY;QAC3B,OAAO,KAAK;MAEd,KAAKjB,WAAW,CAACkB,MAAM;QACrB,OAAO,QAAQ;MAEjB,KAAKlB,WAAW,CAACmB,QAAQ;QACvB,OAAO,OAAO;MAEhB;QACE,OAAO,MAAM;;EAEnB;EAEAC,OAAOA,CAACR,KAAc;IACpB,OAAOA,KAAK,GAAG,OAAO,GAAG,KAAK;EAChC;EAEAS,MAAMA,CAACT,KAAmB;IACxB,QAAQA,KAAK;MACX,KAAKb,YAAY,CAACuB,OAAO;MACzB,KAAKvB,YAAY,CAACwB,UAAU;QAC1B,OAAO,KAAK;MAEd,KAAKxB,YAAY,CAACyB,MAAM;QACtB,OAAO,MAAM;MAEf,KAAKzB,YAAY,CAAC0B,SAAS;QACzB,OAAO,OAAO;MAEhB,KAAK1B,YAAY,CAAC2B,gBAAgB;MAClC,KAAK3B,YAAY,CAAC4B,UAAU;MAC5B,KAAK5B,YAAY,CAAC6B,OAAO;QACvB,OAAO,SAAS;MAElB,KAAK7B,YAAY,CAAC8B,eAAe;QAC/B,OAAO,QAAQ;;EAErB;EAEAC,KAAKA,CAAClB,KAAkB;IACtB,QAAQA,KAAK;MACX,KAAKX,WAAW,CAAC8B,QAAQ;QACvB,OAAO,KAAK;MAEd,KAAK9B,WAAW,CAAC+B,OAAO;QACtB,OAAO,OAAO;;EAEpB;EAEAC,eAAeA,CAAC3B,MAAuB;IACrC,QAAQA,MAAM;MACZ,KAAKR,eAAe,CAACoC,QAAQ;QAC3B,OAAO,OAAO;MAEhB,KAAKpC,eAAe,CAACqC,SAAS;QAC5B,OAAO,QAAQ;MAEjB,KAAKrC,eAAe,CAACsC,kBAAkB;QACrC,OAAO,MAAM;;EAEnB;EAEAC,SAASA,CAAC/B,MAAiB;IACzB,QAAQA,MAAM;MACZ,KAAKJ,SAAS,CAACgC,QAAQ;QACrB,OAAO,OAAO;MAEhB,KAAKhC,SAAS,CAACiC,SAAS;QACtB,OAAO,QAAQ;MAEjB,KAAKjC,SAAS,CAACoC,UAAU;QACvB,OAAO,SAAS;MAElB,KAAKpC,SAAS,CAACqC,WAAW;QACxB,OAAO,MAAM;;EAEnB;;;uBArGWnC,eAAe;IAAA;EAAA;;;aAAfA,eAAe;MAAAoC,OAAA,EAAfpC,eAAe,CAAAqC;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}