{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { detect } from 'detect-browser';\nimport Container from './container';\nimport { isBrowser, isNil, isString } from '../util/util';\nimport Timeline from '../animate/timeline';\nimport EventController from '../event/event-contoller';\nvar PX_SUFFIX = 'px';\nvar browser = detect();\nvar isFirefox = browser && browser.name === 'firefox';\nvar Canvas = /** @class */function (_super) {\n  __extends(Canvas, _super);\n  function Canvas(cfg) {\n    var _this = _super.call(this, cfg) || this;\n    _this.initContainer();\n    _this.initDom();\n    _this.initEvents();\n    _this.initTimeline();\n    return _this;\n  }\n  Canvas.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n    // set default cursor style for canvas\n    cfg['cursor'] = 'default';\n    // CSS transform 目前尚未经过长时间验证，为了避免影响上层业务，默认关闭，上层按需开启\n    cfg['supportCSSTransform'] = false;\n    return cfg;\n  };\n  /**\n   * @protected\n   * 初始化容器\n   */\n  Canvas.prototype.initContainer = function () {\n    var container = this.get('container');\n    if (isString(container)) {\n      container = document.getElementById(container);\n      this.set('container', container);\n    }\n  };\n  /**\n   * @protected\n   * 初始化 DOM\n   */\n  Canvas.prototype.initDom = function () {\n    var el = this.createDom();\n    this.set('el', el);\n    // 附加到容器\n    var container = this.get('container');\n    container.appendChild(el);\n    // 设置初始宽度\n    this.setDOMSize(this.get('width'), this.get('height'));\n  };\n  /**\n   * @protected\n   * 初始化绑定的事件\n   */\n  Canvas.prototype.initEvents = function () {\n    var eventController = new EventController({\n      canvas: this\n    });\n    eventController.init();\n    this.set('eventController', eventController);\n  };\n  /**\n   * @protected\n   * 初始化时间轴\n   */\n  Canvas.prototype.initTimeline = function () {\n    var timeline = new Timeline(this);\n    this.set('timeline', timeline);\n  };\n  /**\n   * @protected\n   * 修改画布对应的 DOM 的大小\n   * @param {number} width  宽度\n   * @param {number} height 高度\n   */\n  Canvas.prototype.setDOMSize = function (width, height) {\n    var el = this.get('el');\n    if (isBrowser) {\n      el.style.width = width + PX_SUFFIX;\n      el.style.height = height + PX_SUFFIX;\n    }\n  };\n  // 实现接口\n  Canvas.prototype.changeSize = function (width, height) {\n    this.setDOMSize(width, height);\n    this.set('width', width);\n    this.set('height', height);\n    this.onCanvasChange('changeSize');\n  };\n  /**\n   * 获取当前的渲染引擎\n   * @return {Renderer} 返回当前的渲染引擎\n   */\n  Canvas.prototype.getRenderer = function () {\n    return this.get('renderer');\n  };\n  /**\n   * 获取画布的 cursor 样式\n   * @return {Cursor}\n   */\n  Canvas.prototype.getCursor = function () {\n    return this.get('cursor');\n  };\n  /**\n   * 设置画布的 cursor 样式\n   * @param {Cursor} cursor  cursor 样式\n   */\n  Canvas.prototype.setCursor = function (cursor) {\n    this.set('cursor', cursor);\n    var el = this.get('el');\n    if (isBrowser && el) {\n      // 直接设置样式，不等待鼠标移动时再设置\n      el.style.cursor = cursor;\n    }\n  };\n  // 实现接口\n  Canvas.prototype.getPointByEvent = function (ev) {\n    var supportCSSTransform = this.get('supportCSSTransform');\n    if (supportCSSTransform) {\n      // For Firefox <= 38\n      if (isFirefox && !isNil(ev.layerX) && ev.layerX !== ev.offsetX) {\n        return {\n          x: ev.layerX,\n          y: ev.layerY\n        };\n      }\n      if (!isNil(ev.offsetX)) {\n        // For IE6+, Firefox >= 39, Chrome, Safari, Opera\n        return {\n          x: ev.offsetX,\n          y: ev.offsetY\n        };\n      }\n    }\n    // should calculate by self for other cases, like Safari in ios\n    // TODO: support CSS transform\n    var _a = this.getClientByEvent(ev),\n      clientX = _a.x,\n      clientY = _a.y;\n    return this.getPointByClient(clientX, clientY);\n  };\n  // 获取 touch 事件的 clientX 和 clientY 需要单独处理\n  Canvas.prototype.getClientByEvent = function (ev) {\n    var clientInfo = ev;\n    if (ev.touches) {\n      if (ev.type === 'touchend') {\n        clientInfo = ev.changedTouches[0];\n      } else {\n        clientInfo = ev.touches[0];\n      }\n    }\n    return {\n      x: clientInfo.clientX,\n      y: clientInfo.clientY\n    };\n  };\n  // 实现接口\n  Canvas.prototype.getPointByClient = function (clientX, clientY) {\n    var el = this.get('el');\n    var bbox = el.getBoundingClientRect();\n    return {\n      x: clientX - bbox.left,\n      y: clientY - bbox.top\n    };\n  };\n  // 实现接口\n  Canvas.prototype.getClientByPoint = function (x, y) {\n    var el = this.get('el');\n    var bbox = el.getBoundingClientRect();\n    return {\n      x: x + bbox.left,\n      y: y + bbox.top\n    };\n  };\n  // 实现接口\n  Canvas.prototype.draw = function () {};\n  /**\n   * @protected\n   * 销毁 DOM 容器\n   */\n  Canvas.prototype.removeDom = function () {\n    var el = this.get('el');\n    el.parentNode.removeChild(el);\n  };\n  /**\n   * @protected\n   * 清理所有的事件\n   */\n  Canvas.prototype.clearEvents = function () {\n    var eventController = this.get('eventController');\n    eventController.destroy();\n  };\n  Canvas.prototype.isCanvas = function () {\n    return true;\n  };\n  Canvas.prototype.getParent = function () {\n    return null;\n  };\n  Canvas.prototype.destroy = function () {\n    var timeline = this.get('timeline');\n    if (this.get('destroyed')) {\n      return;\n    }\n    this.clear();\n    // 同初始化时相反顺序调用\n    if (timeline) {\n      // 画布销毁时自动停止动画\n      timeline.stop();\n    }\n    this.clearEvents();\n    this.removeDom();\n    _super.prototype.destroy.call(this);\n  };\n  return Canvas;\n}(Container);\nexport default Canvas;","map":{"version":3,"names":["__extends","detect","Container","isBrowser","isNil","isString","Timeline","EventController","PX_SUFFIX","browser","isFirefox","name","Canvas","_super","cfg","_this","call","initContainer","initDom","initEvents","initTimeline","prototype","getDefaultCfg","container","get","document","getElementById","set","el","createDom","appendChild","setDOMSize","eventController","canvas","init","timeline","width","height","style","changeSize","onCanvasChange","getRenderer","getCursor","setCursor","cursor","getPointByEvent","ev","supportCSSTransform","layerX","offsetX","x","y","layerY","offsetY","_a","getClientByEvent","clientX","clientY","getPointByClient","clientInfo","touches","type","changedTouches","bbox","getBoundingClientRect","left","top","getClientByPoint","draw","removeDom","parentNode","removeChild","clearEvents","destroy","isCanvas","getParent","clear","stop"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g-base/esm/abstract/canvas.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { detect } from 'detect-browser';\nimport Container from './container';\nimport { isBrowser, isNil, isString } from '../util/util';\nimport Timeline from '../animate/timeline';\nimport EventController from '../event/event-contoller';\nvar PX_SUFFIX = 'px';\nvar browser = detect();\nvar isFirefox = browser && browser.name === 'firefox';\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas(cfg) {\n        var _this = _super.call(this, cfg) || this;\n        _this.initContainer();\n        _this.initDom();\n        _this.initEvents();\n        _this.initTimeline();\n        return _this;\n    }\n    Canvas.prototype.getDefaultCfg = function () {\n        var cfg = _super.prototype.getDefaultCfg.call(this);\n        // set default cursor style for canvas\n        cfg['cursor'] = 'default';\n        // CSS transform 目前尚未经过长时间验证，为了避免影响上层业务，默认关闭，上层按需开启\n        cfg['supportCSSTransform'] = false;\n        return cfg;\n    };\n    /**\n     * @protected\n     * 初始化容器\n     */\n    Canvas.prototype.initContainer = function () {\n        var container = this.get('container');\n        if (isString(container)) {\n            container = document.getElementById(container);\n            this.set('container', container);\n        }\n    };\n    /**\n     * @protected\n     * 初始化 DOM\n     */\n    Canvas.prototype.initDom = function () {\n        var el = this.createDom();\n        this.set('el', el);\n        // 附加到容器\n        var container = this.get('container');\n        container.appendChild(el);\n        // 设置初始宽度\n        this.setDOMSize(this.get('width'), this.get('height'));\n    };\n    /**\n     * @protected\n     * 初始化绑定的事件\n     */\n    Canvas.prototype.initEvents = function () {\n        var eventController = new EventController({\n            canvas: this,\n        });\n        eventController.init();\n        this.set('eventController', eventController);\n    };\n    /**\n     * @protected\n     * 初始化时间轴\n     */\n    Canvas.prototype.initTimeline = function () {\n        var timeline = new Timeline(this);\n        this.set('timeline', timeline);\n    };\n    /**\n     * @protected\n     * 修改画布对应的 DOM 的大小\n     * @param {number} width  宽度\n     * @param {number} height 高度\n     */\n    Canvas.prototype.setDOMSize = function (width, height) {\n        var el = this.get('el');\n        if (isBrowser) {\n            el.style.width = width + PX_SUFFIX;\n            el.style.height = height + PX_SUFFIX;\n        }\n    };\n    // 实现接口\n    Canvas.prototype.changeSize = function (width, height) {\n        this.setDOMSize(width, height);\n        this.set('width', width);\n        this.set('height', height);\n        this.onCanvasChange('changeSize');\n    };\n    /**\n     * 获取当前的渲染引擎\n     * @return {Renderer} 返回当前的渲染引擎\n     */\n    Canvas.prototype.getRenderer = function () {\n        return this.get('renderer');\n    };\n    /**\n     * 获取画布的 cursor 样式\n     * @return {Cursor}\n     */\n    Canvas.prototype.getCursor = function () {\n        return this.get('cursor');\n    };\n    /**\n     * 设置画布的 cursor 样式\n     * @param {Cursor} cursor  cursor 样式\n     */\n    Canvas.prototype.setCursor = function (cursor) {\n        this.set('cursor', cursor);\n        var el = this.get('el');\n        if (isBrowser && el) {\n            // 直接设置样式，不等待鼠标移动时再设置\n            el.style.cursor = cursor;\n        }\n    };\n    // 实现接口\n    Canvas.prototype.getPointByEvent = function (ev) {\n        var supportCSSTransform = this.get('supportCSSTransform');\n        if (supportCSSTransform) {\n            // For Firefox <= 38\n            if (isFirefox && !isNil(ev.layerX) && ev.layerX !== ev.offsetX) {\n                return {\n                    x: ev.layerX,\n                    y: ev.layerY,\n                };\n            }\n            if (!isNil(ev.offsetX)) {\n                // For IE6+, Firefox >= 39, Chrome, Safari, Opera\n                return {\n                    x: ev.offsetX,\n                    y: ev.offsetY,\n                };\n            }\n        }\n        // should calculate by self for other cases, like Safari in ios\n        // TODO: support CSS transform\n        var _a = this.getClientByEvent(ev), clientX = _a.x, clientY = _a.y;\n        return this.getPointByClient(clientX, clientY);\n    };\n    // 获取 touch 事件的 clientX 和 clientY 需要单独处理\n    Canvas.prototype.getClientByEvent = function (ev) {\n        var clientInfo = ev;\n        if (ev.touches) {\n            if (ev.type === 'touchend') {\n                clientInfo = ev.changedTouches[0];\n            }\n            else {\n                clientInfo = ev.touches[0];\n            }\n        }\n        return {\n            x: clientInfo.clientX,\n            y: clientInfo.clientY,\n        };\n    };\n    // 实现接口\n    Canvas.prototype.getPointByClient = function (clientX, clientY) {\n        var el = this.get('el');\n        var bbox = el.getBoundingClientRect();\n        return {\n            x: clientX - bbox.left,\n            y: clientY - bbox.top,\n        };\n    };\n    // 实现接口\n    Canvas.prototype.getClientByPoint = function (x, y) {\n        var el = this.get('el');\n        var bbox = el.getBoundingClientRect();\n        return {\n            x: x + bbox.left,\n            y: y + bbox.top,\n        };\n    };\n    // 实现接口\n    Canvas.prototype.draw = function () { };\n    /**\n     * @protected\n     * 销毁 DOM 容器\n     */\n    Canvas.prototype.removeDom = function () {\n        var el = this.get('el');\n        el.parentNode.removeChild(el);\n    };\n    /**\n     * @protected\n     * 清理所有的事件\n     */\n    Canvas.prototype.clearEvents = function () {\n        var eventController = this.get('eventController');\n        eventController.destroy();\n    };\n    Canvas.prototype.isCanvas = function () {\n        return true;\n    };\n    Canvas.prototype.getParent = function () {\n        return null;\n    };\n    Canvas.prototype.destroy = function () {\n        var timeline = this.get('timeline');\n        if (this.get('destroyed')) {\n            return;\n        }\n        this.clear();\n        // 同初始化时相反顺序调用\n        if (timeline) {\n            // 画布销毁时自动停止动画\n            timeline.stop();\n        }\n        this.clearEvents();\n        this.removeDom();\n        _super.prototype.destroy.call(this);\n    };\n    return Canvas;\n}(Container));\nexport default Canvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}