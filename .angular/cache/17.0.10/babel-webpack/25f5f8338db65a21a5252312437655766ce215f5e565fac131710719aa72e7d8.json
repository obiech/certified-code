{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Output, forwardRef, Optional, ViewChild, Input, NgModule } from '@angular/core';\nimport * as i5 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { Subject, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i2 from '@angular/cdk/a11y';\nimport * as i3 from '@angular/cdk/bidi';\nimport * as i4 from 'ng-zorro-antd/core/form';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst _c0 = [\"*\"];\nconst _c1 = [\"inputElement\"];\nconst _c2 = [\"nz-checkbox\", \"\"];\nconst _forTrack3 = ($index, $item) => $item.value;\nfunction NzCheckboxGroupComponent_For_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"label\", 0);\n    i0.ɵɵlistener(\"nzCheckedChange\", function NzCheckboxGroupComponent_For_1_Template_label_nzCheckedChange_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const option_r1 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onCheckedChange(option_r1, $event));\n    });\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const option_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nzDisabled\", option_r1.disabled || ctx_r0.nzDisabled)(\"nzChecked\", option_r1.checked);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(option_r1.label);\n  }\n}\nclass NzCheckboxWrapperComponent {\n  constructor() {\n    this.nzOnChange = new EventEmitter();\n    this.checkboxList = [];\n  }\n  addCheckbox(value) {\n    this.checkboxList.push(value);\n  }\n  removeCheckbox(value) {\n    this.checkboxList.splice(this.checkboxList.indexOf(value), 1);\n  }\n  onChange() {\n    const listOfCheckedValue = this.checkboxList.filter(item => item.nzChecked).map(item => item.nzValue);\n    this.nzOnChange.emit(listOfCheckedValue);\n  }\n  static {\n    this.ɵfac = function NzCheckboxWrapperComponent_Factory(t) {\n      return new (t || NzCheckboxWrapperComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzCheckboxWrapperComponent,\n      selectors: [[\"nz-checkbox-wrapper\"]],\n      hostAttrs: [1, \"ant-checkbox-group\"],\n      outputs: {\n        nzOnChange: \"nzOnChange\"\n      },\n      exportAs: [\"nzCheckboxWrapper\"],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function NzCheckboxWrapperComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzCheckboxWrapperComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-checkbox-wrapper',\n      exportAs: 'nzCheckboxWrapper',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: ` <ng-content></ng-content> `,\n      host: {\n        class: 'ant-checkbox-group'\n      },\n      standalone: true\n    }]\n  }], null, {\n    nzOnChange: [{\n      type: Output\n    }]\n  });\n})();\nclass NzCheckboxComponent {\n  innerCheckedChange(checked) {\n    if (!this.nzDisabled) {\n      this.nzChecked = checked;\n      this.onChange(this.nzChecked);\n      this.nzCheckedChange.emit(this.nzChecked);\n      if (this.nzCheckboxWrapperComponent) {\n        this.nzCheckboxWrapperComponent.onChange();\n      }\n    }\n  }\n  writeValue(value) {\n    this.nzChecked = value;\n    this.cdr.markForCheck();\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  setDisabledState(disabled) {\n    this.nzDisabled = this.isNzDisableFirstChange && this.nzDisabled || disabled;\n    this.isNzDisableFirstChange = false;\n    this.cdr.markForCheck();\n  }\n  focus() {\n    this.focusMonitor.focusVia(this.inputElement, 'keyboard');\n  }\n  blur() {\n    this.inputElement.nativeElement.blur();\n  }\n  constructor(ngZone, elementRef, nzCheckboxWrapperComponent, cdr, focusMonitor, directionality, nzFormStatusService) {\n    this.ngZone = ngZone;\n    this.elementRef = elementRef;\n    this.nzCheckboxWrapperComponent = nzCheckboxWrapperComponent;\n    this.cdr = cdr;\n    this.focusMonitor = focusMonitor;\n    this.directionality = directionality;\n    this.nzFormStatusService = nzFormStatusService;\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n    this.isNzDisableFirstChange = true;\n    this.onChange = () => {};\n    this.onTouched = () => {};\n    this.nzCheckedChange = new EventEmitter();\n    this.nzValue = null;\n    this.nzAutoFocus = false;\n    this.nzDisabled = false;\n    this.nzIndeterminate = false;\n    this.nzChecked = false;\n    this.nzId = null;\n  }\n  ngOnInit() {\n    this.focusMonitor.monitor(this.elementRef, true).pipe(takeUntil(this.destroy$)).subscribe(focusOrigin => {\n      if (!focusOrigin) {\n        Promise.resolve().then(() => this.onTouched());\n      }\n    });\n    if (this.nzCheckboxWrapperComponent) {\n      this.nzCheckboxWrapperComponent.addCheckbox(this);\n    }\n    this.directionality.change.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n    this.dir = this.directionality.value;\n    this.ngZone.runOutsideAngular(() => {\n      fromEvent(this.elementRef.nativeElement, 'click').pipe(takeUntil(this.destroy$)).subscribe(event => {\n        event.preventDefault();\n        this.focus();\n        if (this.nzDisabled) {\n          return;\n        }\n        this.ngZone.run(() => {\n          this.innerCheckedChange(!this.nzChecked);\n          this.cdr.markForCheck();\n        });\n      });\n      fromEvent(this.inputElement.nativeElement, 'click').pipe(takeUntil(this.destroy$)).subscribe(event => event.stopPropagation());\n    });\n  }\n  ngAfterViewInit() {\n    if (this.nzAutoFocus) {\n      this.focus();\n    }\n  }\n  ngOnDestroy() {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n    if (this.nzCheckboxWrapperComponent) {\n      this.nzCheckboxWrapperComponent.removeCheckbox(this);\n    }\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  static {\n    this.ɵfac = function NzCheckboxComponent_Factory(t) {\n      return new (t || NzCheckboxComponent)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(NzCheckboxWrapperComponent, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.FocusMonitor), i0.ɵɵdirectiveInject(i3.Directionality, 8), i0.ɵɵdirectiveInject(i4.NzFormStatusService, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzCheckboxComponent,\n      selectors: [[\"\", \"nz-checkbox\", \"\"]],\n      viewQuery: function NzCheckboxComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c1, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputElement = _t.first);\n        }\n      },\n      hostAttrs: [1, \"ant-checkbox-wrapper\"],\n      hostVars: 6,\n      hostBindings: function NzCheckboxComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ant-checkbox-wrapper-in-form-item\", !!ctx.nzFormStatusService)(\"ant-checkbox-wrapper-checked\", ctx.nzChecked)(\"ant-checkbox-rtl\", ctx.dir === \"rtl\");\n        }\n      },\n      inputs: {\n        nzValue: \"nzValue\",\n        nzAutoFocus: \"nzAutoFocus\",\n        nzDisabled: \"nzDisabled\",\n        nzIndeterminate: \"nzIndeterminate\",\n        nzChecked: \"nzChecked\",\n        nzId: \"nzId\"\n      },\n      outputs: {\n        nzCheckedChange: \"nzCheckedChange\"\n      },\n      exportAs: [\"nzCheckbox\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NzCheckboxComponent),\n        multi: true\n      }]), i0.ɵɵStandaloneFeature],\n      attrs: _c2,\n      ngContentSelectors: _c0,\n      decls: 6,\n      vars: 11,\n      consts: [[1, \"ant-checkbox\"], [\"type\", \"checkbox\", 1, \"ant-checkbox-input\", 3, \"checked\", \"ngModel\", \"disabled\", \"ngModelChange\"], [\"inputElement\", \"\"], [1, \"ant-checkbox-inner\"]],\n      template: function NzCheckboxComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"span\", 0)(1, \"input\", 1, 2);\n          i0.ɵɵlistener(\"ngModelChange\", function NzCheckboxComponent_Template_input_ngModelChange_1_listener($event) {\n            return ctx.innerCheckedChange($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(3, \"span\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"span\");\n          i0.ɵɵprojection(5);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ant-checkbox-checked\", ctx.nzChecked && !ctx.nzIndeterminate)(\"ant-checkbox-disabled\", ctx.nzDisabled)(\"ant-checkbox-indeterminate\", ctx.nzIndeterminate);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"checked\", ctx.nzChecked)(\"ngModel\", ctx.nzChecked)(\"disabled\", ctx.nzDisabled);\n          i0.ɵɵattribute(\"autofocus\", ctx.nzAutoFocus ? \"autofocus\" : null)(\"id\", ctx.nzId);\n        }\n      },\n      dependencies: [FormsModule, i5.CheckboxControlValueAccessor, i5.NgControlStatus, i5.NgModel],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n__decorate([InputBoolean()], NzCheckboxComponent.prototype, \"nzAutoFocus\", void 0);\n__decorate([InputBoolean()], NzCheckboxComponent.prototype, \"nzDisabled\", void 0);\n__decorate([InputBoolean()], NzCheckboxComponent.prototype, \"nzIndeterminate\", void 0);\n__decorate([InputBoolean()], NzCheckboxComponent.prototype, \"nzChecked\", void 0);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzCheckboxComponent, [{\n    type: Component,\n    args: [{\n      selector: '[nz-checkbox]',\n      exportAs: 'nzCheckbox',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <span\n      class=\"ant-checkbox\"\n      [class.ant-checkbox-checked]=\"nzChecked && !nzIndeterminate\"\n      [class.ant-checkbox-disabled]=\"nzDisabled\"\n      [class.ant-checkbox-indeterminate]=\"nzIndeterminate\"\n    >\n      <input\n        #inputElement\n        type=\"checkbox\"\n        class=\"ant-checkbox-input\"\n        [attr.autofocus]=\"nzAutoFocus ? 'autofocus' : null\"\n        [attr.id]=\"nzId\"\n        [checked]=\"nzChecked\"\n        [ngModel]=\"nzChecked\"\n        [disabled]=\"nzDisabled\"\n        (ngModelChange)=\"innerCheckedChange($event)\"\n      />\n      <span class=\"ant-checkbox-inner\"></span>\n    </span>\n    <span><ng-content></ng-content></span>\n  `,\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NzCheckboxComponent),\n        multi: true\n      }],\n      host: {\n        class: 'ant-checkbox-wrapper',\n        '[class.ant-checkbox-wrapper-in-form-item]': '!!nzFormStatusService',\n        '[class.ant-checkbox-wrapper-checked]': 'nzChecked',\n        '[class.ant-checkbox-rtl]': `dir === 'rtl'`\n      },\n      imports: [FormsModule],\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.NgZone\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: NzCheckboxWrapperComponent,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i2.FocusMonitor\n  }, {\n    type: i3.Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i4.NzFormStatusService,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    inputElement: [{\n      type: ViewChild,\n      args: ['inputElement', {\n        static: true\n      }]\n    }],\n    nzCheckedChange: [{\n      type: Output\n    }],\n    nzValue: [{\n      type: Input\n    }],\n    nzAutoFocus: [{\n      type: Input\n    }],\n    nzDisabled: [{\n      type: Input\n    }],\n    nzIndeterminate: [{\n      type: Input\n    }],\n    nzChecked: [{\n      type: Input\n    }],\n    nzId: [{\n      type: Input\n    }]\n  });\n})();\nclass NzCheckboxGroupComponent {\n  onCheckedChange(option, checked) {\n    option.checked = checked;\n    this.onChange(this.options);\n  }\n  constructor(elementRef, focusMonitor, cdr, directionality) {\n    this.elementRef = elementRef;\n    this.focusMonitor = focusMonitor;\n    this.cdr = cdr;\n    this.directionality = directionality;\n    this.onChange = () => {};\n    this.onTouched = () => {};\n    this.options = [];\n    this.nzDisabled = false;\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n    this.isNzDisableFirstChange = true;\n  }\n  ngOnInit() {\n    this.focusMonitor.monitor(this.elementRef, true).pipe(takeUntil(this.destroy$)).subscribe(focusOrigin => {\n      if (!focusOrigin) {\n        Promise.resolve().then(() => this.onTouched());\n      }\n    });\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n    this.dir = this.directionality.value;\n  }\n  ngOnDestroy() {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  writeValue(value) {\n    this.options = value;\n    this.cdr.markForCheck();\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  setDisabledState(disabled) {\n    this.nzDisabled = this.isNzDisableFirstChange && this.nzDisabled || disabled;\n    this.isNzDisableFirstChange = false;\n    this.cdr.markForCheck();\n  }\n  static {\n    this.ɵfac = function NzCheckboxGroupComponent_Factory(t) {\n      return new (t || NzCheckboxGroupComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.FocusMonitor), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i3.Directionality, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzCheckboxGroupComponent,\n      selectors: [[\"nz-checkbox-group\"]],\n      hostAttrs: [1, \"ant-checkbox-group\"],\n      hostVars: 2,\n      hostBindings: function NzCheckboxGroupComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ant-checkbox-group-rtl\", ctx.dir === \"rtl\");\n        }\n      },\n      inputs: {\n        nzDisabled: \"nzDisabled\"\n      },\n      exportAs: [\"nzCheckboxGroup\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NzCheckboxGroupComponent),\n        multi: true\n      }]), i0.ɵɵStandaloneFeature],\n      decls: 2,\n      vars: 0,\n      consts: [[\"nz-checkbox\", \"\", 1, \"ant-checkbox-group-item\", 3, \"nzDisabled\", \"nzChecked\", \"nzCheckedChange\"], [\"nz-checkbox\", \"\", \"class\", \"ant-checkbox-group-item\", 3, \"nzDisabled\", \"nzChecked\"]],\n      template: function NzCheckboxGroupComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵrepeaterCreate(0, NzCheckboxGroupComponent_For_1_Template, 3, 3, \"label\", 1, _forTrack3);\n        }\n        if (rf & 2) {\n          i0.ɵɵrepeater(ctx.options);\n        }\n      },\n      dependencies: [NzCheckboxComponent],\n      encapsulation: 2\n    });\n  }\n}\n__decorate([InputBoolean()], NzCheckboxGroupComponent.prototype, \"nzDisabled\", void 0);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzCheckboxGroupComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-checkbox-group',\n      exportAs: 'nzCheckboxGroup',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    @for (option of options; track option.value) {\n      <label\n        nz-checkbox\n        class=\"ant-checkbox-group-item\"\n        [nzDisabled]=\"option.disabled || nzDisabled\"\n        [nzChecked]=\"option.checked!\"\n        (nzCheckedChange)=\"onCheckedChange(option, $event)\"\n      >\n        <span>{{ option.label }}</span>\n      </label>\n    }\n  `,\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NzCheckboxGroupComponent),\n        multi: true\n      }],\n      host: {\n        class: 'ant-checkbox-group',\n        '[class.ant-checkbox-group-rtl]': `dir === 'rtl'`\n      },\n      imports: [NzCheckboxComponent],\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i2.FocusMonitor\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i3.Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    nzDisabled: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzCheckboxModule {\n  static {\n    this.ɵfac = function NzCheckboxModule_Factory(t) {\n      return new (t || NzCheckboxModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NzCheckboxModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [NzCheckboxComponent, NzCheckboxGroupComponent]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzCheckboxModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent],\n      exports: [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxModule, NzCheckboxWrapperComponent };","map":{"version":3,"names":["__decorate","i0","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Output","forwardRef","Optional","ViewChild","Input","NgModule","i5","NG_VALUE_ACCESSOR","FormsModule","Subject","fromEvent","takeUntil","InputBoolean","i2","i3","i4","_c0","_c1","_c2","_forTrack3","$index","$item","value","NzCheckboxGroupComponent_For_1_Template","rf","ctx","_r7","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","NzCheckboxGroupComponent_For_1_Template_label_nzCheckedChange_0_listener","$event","restoredCtx","ɵɵrestoreView","option_r1","$implicit","ctx_r6","ɵɵnextContext","ɵɵresetView","onCheckedChange","ɵɵtext","ɵɵelementEnd","ctx_r0","ɵɵproperty","disabled","nzDisabled","checked","ɵɵadvance","ɵɵtextInterpolate","label","NzCheckboxWrapperComponent","constructor","nzOnChange","checkboxList","addCheckbox","push","removeCheckbox","splice","indexOf","onChange","listOfCheckedValue","filter","item","nzChecked","map","nzValue","emit","ɵfac","NzCheckboxWrapperComponent_Factory","t","ɵcmp","ɵɵdefineComponent","type","selectors","hostAttrs","outputs","exportAs","standalone","features","ɵɵStandaloneFeature","ngContentSelectors","decls","vars","template","NzCheckboxWrapperComponent_Template","ɵɵprojectionDef","ɵɵprojection","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","preserveWhitespaces","OnPush","None","host","class","NzCheckboxComponent","innerCheckedChange","nzCheckedChange","nzCheckboxWrapperComponent","writeValue","cdr","markForCheck","registerOnChange","fn","registerOnTouched","onTouched","setDisabledState","isNzDisableFirstChange","focus","focusMonitor","focusVia","inputElement","blur","nativeElement","ngZone","elementRef","directionality","nzFormStatusService","dir","destroy$","nzAutoFocus","nzIndeterminate","nzId","ngOnInit","monitor","pipe","subscribe","focusOrigin","Promise","resolve","then","change","direction","detectChanges","runOutsideAngular","event","preventDefault","run","stopPropagation","ngAfterViewInit","ngOnDestroy","stopMonitoring","next","complete","NzCheckboxComponent_Factory","ɵɵdirectiveInject","NgZone","ElementRef","ChangeDetectorRef","FocusMonitor","Directionality","NzFormStatusService","viewQuery","NzCheckboxComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostVars","hostBindings","NzCheckboxComponent_HostBindings","ɵɵclassProp","inputs","ɵɵProvidersFeature","provide","useExisting","multi","attrs","consts","NzCheckboxComponent_Template","NzCheckboxComponent_Template_input_ngModelChange_1_listener","ɵɵelement","ɵɵattribute","dependencies","CheckboxControlValueAccessor","NgControlStatus","NgModel","prototype","providers","imports","decorators","static","NzCheckboxGroupComponent","option","options","NzCheckboxGroupComponent_Factory","NzCheckboxGroupComponent_HostBindings","NzCheckboxGroupComponent_Template","ɵɵrepeaterCreate","ɵɵrepeater","NzCheckboxModule","NzCheckboxModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","exports"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-checkbox.mjs"],"sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Output, forwardRef, Optional, ViewChild, Input, NgModule } from '@angular/core';\nimport * as i5 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { Subject, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i2 from '@angular/cdk/a11y';\nimport * as i3 from '@angular/cdk/bidi';\nimport * as i4 from 'ng-zorro-antd/core/form';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzCheckboxWrapperComponent {\n    constructor() {\n        this.nzOnChange = new EventEmitter();\n        this.checkboxList = [];\n    }\n    addCheckbox(value) {\n        this.checkboxList.push(value);\n    }\n    removeCheckbox(value) {\n        this.checkboxList.splice(this.checkboxList.indexOf(value), 1);\n    }\n    onChange() {\n        const listOfCheckedValue = this.checkboxList.filter(item => item.nzChecked).map(item => item.nzValue);\n        this.nzOnChange.emit(listOfCheckedValue);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzCheckboxWrapperComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.8\", type: NzCheckboxWrapperComponent, isStandalone: true, selector: \"nz-checkbox-wrapper\", outputs: { nzOnChange: \"nzOnChange\" }, host: { classAttribute: \"ant-checkbox-group\" }, exportAs: [\"nzCheckboxWrapper\"], ngImport: i0, template: ` <ng-content></ng-content> `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzCheckboxWrapperComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-checkbox-wrapper',\n                    exportAs: 'nzCheckboxWrapper',\n                    preserveWhitespaces: false,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    template: ` <ng-content></ng-content> `,\n                    host: {\n                        class: 'ant-checkbox-group'\n                    },\n                    standalone: true\n                }]\n        }], propDecorators: { nzOnChange: [{\n                type: Output\n            }] } });\n\nclass NzCheckboxComponent {\n    innerCheckedChange(checked) {\n        if (!this.nzDisabled) {\n            this.nzChecked = checked;\n            this.onChange(this.nzChecked);\n            this.nzCheckedChange.emit(this.nzChecked);\n            if (this.nzCheckboxWrapperComponent) {\n                this.nzCheckboxWrapperComponent.onChange();\n            }\n        }\n    }\n    writeValue(value) {\n        this.nzChecked = value;\n        this.cdr.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    setDisabledState(disabled) {\n        this.nzDisabled = (this.isNzDisableFirstChange && this.nzDisabled) || disabled;\n        this.isNzDisableFirstChange = false;\n        this.cdr.markForCheck();\n    }\n    focus() {\n        this.focusMonitor.focusVia(this.inputElement, 'keyboard');\n    }\n    blur() {\n        this.inputElement.nativeElement.blur();\n    }\n    constructor(ngZone, elementRef, nzCheckboxWrapperComponent, cdr, focusMonitor, directionality, nzFormStatusService) {\n        this.ngZone = ngZone;\n        this.elementRef = elementRef;\n        this.nzCheckboxWrapperComponent = nzCheckboxWrapperComponent;\n        this.cdr = cdr;\n        this.focusMonitor = focusMonitor;\n        this.directionality = directionality;\n        this.nzFormStatusService = nzFormStatusService;\n        this.dir = 'ltr';\n        this.destroy$ = new Subject();\n        this.isNzDisableFirstChange = true;\n        this.onChange = () => { };\n        this.onTouched = () => { };\n        this.nzCheckedChange = new EventEmitter();\n        this.nzValue = null;\n        this.nzAutoFocus = false;\n        this.nzDisabled = false;\n        this.nzIndeterminate = false;\n        this.nzChecked = false;\n        this.nzId = null;\n    }\n    ngOnInit() {\n        this.focusMonitor\n            .monitor(this.elementRef, true)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(focusOrigin => {\n            if (!focusOrigin) {\n                Promise.resolve().then(() => this.onTouched());\n            }\n        });\n        if (this.nzCheckboxWrapperComponent) {\n            this.nzCheckboxWrapperComponent.addCheckbox(this);\n        }\n        this.directionality.change.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n        this.ngZone.runOutsideAngular(() => {\n            fromEvent(this.elementRef.nativeElement, 'click')\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(event => {\n                event.preventDefault();\n                this.focus();\n                if (this.nzDisabled) {\n                    return;\n                }\n                this.ngZone.run(() => {\n                    this.innerCheckedChange(!this.nzChecked);\n                    this.cdr.markForCheck();\n                });\n            });\n            fromEvent(this.inputElement.nativeElement, 'click')\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(event => event.stopPropagation());\n        });\n    }\n    ngAfterViewInit() {\n        if (this.nzAutoFocus) {\n            this.focus();\n        }\n    }\n    ngOnDestroy() {\n        this.focusMonitor.stopMonitoring(this.elementRef);\n        if (this.nzCheckboxWrapperComponent) {\n            this.nzCheckboxWrapperComponent.removeCheckbox(this);\n        }\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzCheckboxComponent, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: NzCheckboxWrapperComponent, optional: true }, { token: i0.ChangeDetectorRef }, { token: i2.FocusMonitor }, { token: i3.Directionality, optional: true }, { token: i4.NzFormStatusService, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.8\", type: NzCheckboxComponent, isStandalone: true, selector: \"[nz-checkbox]\", inputs: { nzValue: \"nzValue\", nzAutoFocus: \"nzAutoFocus\", nzDisabled: \"nzDisabled\", nzIndeterminate: \"nzIndeterminate\", nzChecked: \"nzChecked\", nzId: \"nzId\" }, outputs: { nzCheckedChange: \"nzCheckedChange\" }, host: { properties: { \"class.ant-checkbox-wrapper-in-form-item\": \"!!nzFormStatusService\", \"class.ant-checkbox-wrapper-checked\": \"nzChecked\", \"class.ant-checkbox-rtl\": \"dir === 'rtl'\" }, classAttribute: \"ant-checkbox-wrapper\" }, providers: [\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => NzCheckboxComponent),\n                multi: true\n            }\n        ], viewQueries: [{ propertyName: \"inputElement\", first: true, predicate: [\"inputElement\"], descendants: true, static: true }], exportAs: [\"nzCheckbox\"], ngImport: i0, template: `\n    <span\n      class=\"ant-checkbox\"\n      [class.ant-checkbox-checked]=\"nzChecked && !nzIndeterminate\"\n      [class.ant-checkbox-disabled]=\"nzDisabled\"\n      [class.ant-checkbox-indeterminate]=\"nzIndeterminate\"\n    >\n      <input\n        #inputElement\n        type=\"checkbox\"\n        class=\"ant-checkbox-input\"\n        [attr.autofocus]=\"nzAutoFocus ? 'autofocus' : null\"\n        [attr.id]=\"nzId\"\n        [checked]=\"nzChecked\"\n        [ngModel]=\"nzChecked\"\n        [disabled]=\"nzDisabled\"\n        (ngModelChange)=\"innerCheckedChange($event)\"\n      />\n      <span class=\"ant-checkbox-inner\"></span>\n    </span>\n    <span><ng-content></ng-content></span>\n  `, isInline: true, dependencies: [{ kind: \"ngmodule\", type: FormsModule }, { kind: \"directive\", type: i5.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i5.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i5.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\n__decorate([\n    InputBoolean()\n], NzCheckboxComponent.prototype, \"nzAutoFocus\", void 0);\n__decorate([\n    InputBoolean()\n], NzCheckboxComponent.prototype, \"nzDisabled\", void 0);\n__decorate([\n    InputBoolean()\n], NzCheckboxComponent.prototype, \"nzIndeterminate\", void 0);\n__decorate([\n    InputBoolean()\n], NzCheckboxComponent.prototype, \"nzChecked\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzCheckboxComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[nz-checkbox]',\n                    exportAs: 'nzCheckbox',\n                    preserveWhitespaces: false,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n    <span\n      class=\"ant-checkbox\"\n      [class.ant-checkbox-checked]=\"nzChecked && !nzIndeterminate\"\n      [class.ant-checkbox-disabled]=\"nzDisabled\"\n      [class.ant-checkbox-indeterminate]=\"nzIndeterminate\"\n    >\n      <input\n        #inputElement\n        type=\"checkbox\"\n        class=\"ant-checkbox-input\"\n        [attr.autofocus]=\"nzAutoFocus ? 'autofocus' : null\"\n        [attr.id]=\"nzId\"\n        [checked]=\"nzChecked\"\n        [ngModel]=\"nzChecked\"\n        [disabled]=\"nzDisabled\"\n        (ngModelChange)=\"innerCheckedChange($event)\"\n      />\n      <span class=\"ant-checkbox-inner\"></span>\n    </span>\n    <span><ng-content></ng-content></span>\n  `,\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => NzCheckboxComponent),\n                            multi: true\n                        }\n                    ],\n                    host: {\n                        class: 'ant-checkbox-wrapper',\n                        '[class.ant-checkbox-wrapper-in-form-item]': '!!nzFormStatusService',\n                        '[class.ant-checkbox-wrapper-checked]': 'nzChecked',\n                        '[class.ant-checkbox-rtl]': `dir === 'rtl'`\n                    },\n                    imports: [FormsModule],\n                    standalone: true\n                }]\n        }], ctorParameters: () => [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: NzCheckboxWrapperComponent, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }, { type: i2.FocusMonitor }, { type: i3.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i4.NzFormStatusService, decorators: [{\n                    type: Optional\n                }] }], propDecorators: { inputElement: [{\n                type: ViewChild,\n                args: ['inputElement', { static: true }]\n            }], nzCheckedChange: [{\n                type: Output\n            }], nzValue: [{\n                type: Input\n            }], nzAutoFocus: [{\n                type: Input\n            }], nzDisabled: [{\n                type: Input\n            }], nzIndeterminate: [{\n                type: Input\n            }], nzChecked: [{\n                type: Input\n            }], nzId: [{\n                type: Input\n            }] } });\n\nclass NzCheckboxGroupComponent {\n    onCheckedChange(option, checked) {\n        option.checked = checked;\n        this.onChange(this.options);\n    }\n    constructor(elementRef, focusMonitor, cdr, directionality) {\n        this.elementRef = elementRef;\n        this.focusMonitor = focusMonitor;\n        this.cdr = cdr;\n        this.directionality = directionality;\n        this.onChange = () => { };\n        this.onTouched = () => { };\n        this.options = [];\n        this.nzDisabled = false;\n        this.dir = 'ltr';\n        this.destroy$ = new Subject();\n        this.isNzDisableFirstChange = true;\n    }\n    ngOnInit() {\n        this.focusMonitor\n            .monitor(this.elementRef, true)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(focusOrigin => {\n            if (!focusOrigin) {\n                Promise.resolve().then(() => this.onTouched());\n            }\n        });\n        this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n    }\n    ngOnDestroy() {\n        this.focusMonitor.stopMonitoring(this.elementRef);\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    writeValue(value) {\n        this.options = value;\n        this.cdr.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    setDisabledState(disabled) {\n        this.nzDisabled = (this.isNzDisableFirstChange && this.nzDisabled) || disabled;\n        this.isNzDisableFirstChange = false;\n        this.cdr.markForCheck();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzCheckboxGroupComponent, deps: [{ token: i0.ElementRef }, { token: i2.FocusMonitor }, { token: i0.ChangeDetectorRef }, { token: i3.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"17.3.8\", type: NzCheckboxGroupComponent, isStandalone: true, selector: \"nz-checkbox-group\", inputs: { nzDisabled: \"nzDisabled\" }, host: { properties: { \"class.ant-checkbox-group-rtl\": \"dir === 'rtl'\" }, classAttribute: \"ant-checkbox-group\" }, providers: [\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => NzCheckboxGroupComponent),\n                multi: true\n            }\n        ], exportAs: [\"nzCheckboxGroup\"], ngImport: i0, template: `\n    @for (option of options; track option.value) {\n      <label\n        nz-checkbox\n        class=\"ant-checkbox-group-item\"\n        [nzDisabled]=\"option.disabled || nzDisabled\"\n        [nzChecked]=\"option.checked!\"\n        (nzCheckedChange)=\"onCheckedChange(option, $event)\"\n      >\n        <span>{{ option.label }}</span>\n      </label>\n    }\n  `, isInline: true, dependencies: [{ kind: \"component\", type: NzCheckboxComponent, selector: \"[nz-checkbox]\", inputs: [\"nzValue\", \"nzAutoFocus\", \"nzDisabled\", \"nzIndeterminate\", \"nzChecked\", \"nzId\"], outputs: [\"nzCheckedChange\"], exportAs: [\"nzCheckbox\"] }], encapsulation: i0.ViewEncapsulation.None }); }\n}\n__decorate([\n    InputBoolean()\n], NzCheckboxGroupComponent.prototype, \"nzDisabled\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzCheckboxGroupComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-checkbox-group',\n                    exportAs: 'nzCheckboxGroup',\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n    @for (option of options; track option.value) {\n      <label\n        nz-checkbox\n        class=\"ant-checkbox-group-item\"\n        [nzDisabled]=\"option.disabled || nzDisabled\"\n        [nzChecked]=\"option.checked!\"\n        (nzCheckedChange)=\"onCheckedChange(option, $event)\"\n      >\n        <span>{{ option.label }}</span>\n      </label>\n    }\n  `,\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => NzCheckboxGroupComponent),\n                            multi: true\n                        }\n                    ],\n                    host: {\n                        class: 'ant-checkbox-group',\n                        '[class.ant-checkbox-group-rtl]': `dir === 'rtl'`\n                    },\n                    imports: [NzCheckboxComponent],\n                    standalone: true\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i2.FocusMonitor }, { type: i0.ChangeDetectorRef }, { type: i3.Directionality, decorators: [{\n                    type: Optional\n                }] }], propDecorators: { nzDisabled: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzCheckboxModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzCheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.3.8\", ngImport: i0, type: NzCheckboxModule, imports: [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent], exports: [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzCheckboxModule, imports: [NzCheckboxComponent, NzCheckboxGroupComponent] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzCheckboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent],\n                    exports: [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxModule, NzCheckboxWrapperComponent };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}