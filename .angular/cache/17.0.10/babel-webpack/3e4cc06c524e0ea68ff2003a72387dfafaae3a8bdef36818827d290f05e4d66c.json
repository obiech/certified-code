{"ast":null,"code":"import isArray from './is-array';\n/**\n * Flattens `array` a single level deep.\n *\n * @param {Array} arr The array to flatten.\n * @return {Array} Returns the new flattened array.\n * @example\n *\n * flatten([1, [2, [3, [4]], 5]]);  // => [1, 2, [3, [4]], 5]\n */\nvar flatten = function (arr) {\n  if (!isArray(arr)) {\n    return [];\n  }\n  var rst = [];\n  for (var i = 0; i < arr.length; i++) {\n    rst = rst.concat(arr[i]);\n  }\n  return rst;\n};\nexport default flatten;","map":{"version":3,"names":["isArray","flatten","arr","rst","i","length","concat"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/util/esm/flatten.js"],"sourcesContent":["import isArray from './is-array';\n/**\n * Flattens `array` a single level deep.\n *\n * @param {Array} arr The array to flatten.\n * @return {Array} Returns the new flattened array.\n * @example\n *\n * flatten([1, [2, [3, [4]], 5]]);  // => [1, 2, [3, [4]], 5]\n */\nvar flatten = function (arr) {\n    if (!isArray(arr)) {\n        return [];\n    }\n    var rst = [];\n    for (var i = 0; i < arr.length; i++) {\n        rst = rst.concat(arr[i]);\n    }\n    return rst;\n};\nexport default flatten;\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,YAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,OAAO,GAAG,SAAAA,CAAUC,GAAG,EAAE;EACzB,IAAI,CAACF,OAAO,CAACE,GAAG,CAAC,EAAE;IACf,OAAO,EAAE;EACb;EACA,IAAIC,GAAG,GAAG,EAAE;EACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;IACjCD,GAAG,GAAGA,GAAG,CAACG,MAAM,CAACJ,GAAG,CAACE,CAAC,CAAC,CAAC;EAC5B;EACA,OAAOD,GAAG;AACd,CAAC;AACD,eAAeF,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}