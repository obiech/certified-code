{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport Action from '../base';\nimport { getCurrentElement, getElementValue, getElementsByField } from '../util';\nimport { deepMix, each, isFunction } from '@antv/util';\n/**\n * Link Elements by color\n *\n * public 方法是对外可用的反馈交互。使用方式，如：element-link-by-color:link, element-link-by-color:unlink, element-link-by-color:clear\n */\nvar LinkByColor = /** @class */function (_super) {\n  __extends(LinkByColor, _super);\n  function LinkByColor() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.cache = {};\n    return _this;\n  }\n  // 获取颜色对应的 scale\n  LinkByColor.prototype.getColorScale = function (view, element) {\n    var colorAttr = element.geometry.getAttribute('color');\n    if (!colorAttr) {\n      return null;\n    }\n    var scale = view.getScaleByField(colorAttr.getFields()[0]);\n    return scale;\n  };\n  // 获取连接的 path\n  LinkByColor.prototype.getLinkPath = function (element, nextElement) {\n    var view = this.context.view;\n    var isTransposed = view.getCoordinate().isTransposed;\n    var bbox = element.shape.getCanvasBBox();\n    var nextBBox = nextElement.shape.getCanvasBBox();\n    var path = isTransposed ? [['M', bbox.minX, bbox.minY], ['L', nextBBox.minX, nextBBox.maxY], ['L', nextBBox.maxX, nextBBox.maxY], ['L', bbox.maxX, bbox.minY], ['Z']] : [['M', bbox.maxX, bbox.minY], ['L', nextBBox.minX, nextBBox.minY], ['L', nextBBox.minX, nextBBox.maxY], ['L', bbox.maxX, bbox.maxY], ['Z']];\n    return path;\n  };\n  // 添加连接的图形\n  LinkByColor.prototype.addLinkShape = function (group, element, nextElement, activeStyle) {\n    var style = {\n      opacity: 0.4,\n      fill: element.shape.attr('fill')\n    };\n    group.addShape({\n      type: 'path',\n      attrs: __assign(__assign({}, deepMix({}, style, isFunction(activeStyle) ? activeStyle(style, element) : activeStyle)), {\n        path: this.getLinkPath(element, nextElement)\n      })\n    });\n  };\n  // 使用图形连接\n  LinkByColor.prototype.linkByElement = function (element, activeStyle) {\n    var _this = this;\n    var view = this.context.view;\n    var scale = this.getColorScale(view, element);\n    if (!scale) {\n      return;\n    }\n    var value = getElementValue(element, scale.field);\n    if (!this.cache[value]) {\n      var elements_1 = getElementsByField(view, scale.field, value);\n      var linkGroup = this.linkGroup;\n      var group_1 = linkGroup.addGroup();\n      this.cache[value] = group_1; // 缓存\n      var count_1 = elements_1.length;\n      each(elements_1, function (el, index) {\n        if (index < count_1 - 1) {\n          var nextEl = elements_1[index + 1];\n          _this.addLinkShape(group_1, el, nextEl, activeStyle);\n        }\n      });\n    }\n  };\n  // 移除连接\n  LinkByColor.prototype.removeLink = function (element) {\n    var scale = this.getColorScale(this.context.view, element);\n    if (!scale) {\n      return;\n    }\n    var value = getElementValue(element, scale.field);\n    if (this.cache[value]) {\n      this.cache[value].remove();\n      this.cache[value] = null;\n    }\n  };\n  /**\n   * 连接 elements\n   *\n   * @usage\n   * registerInteraction('xxx', {\n   *   start: [\n   *    {\n   *      trigger: 'interval:mouseenter',\n   *      action: 'element-link-by-color:link',\n   *      arg: {\n   *        // style: { fill: 'red' }\n   *        style: (style, element) => ({ fill: 'red' })\n   *     },\n   *   },\n   *  ],\n   * });\n   */\n  LinkByColor.prototype.link = function (args) {\n    var context = this.context;\n    if (!this.linkGroup) {\n      // 不允许被拾取\n      this.linkGroup = context.view.foregroundGroup.addGroup({\n        id: 'link-by-color-group',\n        capture: false\n      });\n    }\n    var element = getCurrentElement(context);\n    if (element) {\n      this.linkByElement(element, args === null || args === void 0 ? void 0 : args.style);\n    }\n  };\n  /**\n   * 取消连接 elements\n   */\n  LinkByColor.prototype.unlink = function () {\n    var element = getCurrentElement(this.context);\n    if (element) {\n      this.removeLink(element);\n    }\n  };\n  /**\n   * 清除所有连接\n   */\n  LinkByColor.prototype.clear = function () {\n    if (this.linkGroup) {\n      this.linkGroup.clear();\n    }\n    this.cache = {};\n  };\n  /**\n   * 销毁\n   */\n  LinkByColor.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n    if (this.linkGroup) {\n      this.linkGroup.remove();\n    }\n  };\n  return LinkByColor;\n}(Action);\nexport default LinkByColor;","map":{"version":3,"names":["__assign","__extends","Action","getCurrentElement","getElementValue","getElementsByField","deepMix","each","isFunction","LinkByColor","_super","_this","apply","arguments","cache","prototype","getColorScale","view","element","colorAttr","geometry","getAttribute","scale","getScaleByField","getFields","getLinkPath","nextElement","context","isTransposed","getCoordinate","bbox","shape","getCanvasBBox","nextBBox","path","minX","minY","maxY","maxX","addLinkShape","group","activeStyle","style","opacity","fill","attr","addShape","type","attrs","linkByElement","value","field","elements_1","linkGroup","group_1","addGroup","count_1","length","el","index","nextEl","removeLink","remove","link","args","foregroundGroup","id","capture","unlink","clear","destroy","call"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g2/esm/interaction/action/element/link-by-color.js"],"sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport Action from '../base';\nimport { getCurrentElement, getElementValue, getElementsByField } from '../util';\nimport { deepMix, each, isFunction } from '@antv/util';\n/**\n * Link Elements by color\n *\n * public 方法是对外可用的反馈交互。使用方式，如：element-link-by-color:link, element-link-by-color:unlink, element-link-by-color:clear\n */\nvar LinkByColor = /** @class */ (function (_super) {\n    __extends(LinkByColor, _super);\n    function LinkByColor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.cache = {};\n        return _this;\n    }\n    // 获取颜色对应的 scale\n    LinkByColor.prototype.getColorScale = function (view, element) {\n        var colorAttr = element.geometry.getAttribute('color');\n        if (!colorAttr) {\n            return null;\n        }\n        var scale = view.getScaleByField(colorAttr.getFields()[0]);\n        return scale;\n    };\n    // 获取连接的 path\n    LinkByColor.prototype.getLinkPath = function (element, nextElement) {\n        var view = this.context.view;\n        var isTransposed = view.getCoordinate().isTransposed;\n        var bbox = element.shape.getCanvasBBox();\n        var nextBBox = nextElement.shape.getCanvasBBox();\n        var path = isTransposed\n            ? [\n                ['M', bbox.minX, bbox.minY],\n                ['L', nextBBox.minX, nextBBox.maxY],\n                ['L', nextBBox.maxX, nextBBox.maxY],\n                ['L', bbox.maxX, bbox.minY],\n                ['Z'],\n            ]\n            : [\n                ['M', bbox.maxX, bbox.minY],\n                ['L', nextBBox.minX, nextBBox.minY],\n                ['L', nextBBox.minX, nextBBox.maxY],\n                ['L', bbox.maxX, bbox.maxY],\n                ['Z'],\n            ];\n        return path;\n    };\n    // 添加连接的图形\n    LinkByColor.prototype.addLinkShape = function (group, element, nextElement, activeStyle) {\n        var style = {\n            opacity: 0.4,\n            fill: element.shape.attr('fill'),\n        };\n        group.addShape({\n            type: 'path',\n            attrs: __assign(__assign({}, deepMix({}, style, isFunction(activeStyle) ? activeStyle(style, element) : activeStyle)), { path: this.getLinkPath(element, nextElement) }),\n        });\n    };\n    // 使用图形连接\n    LinkByColor.prototype.linkByElement = function (element, activeStyle) {\n        var _this = this;\n        var view = this.context.view;\n        var scale = this.getColorScale(view, element);\n        if (!scale) {\n            return;\n        }\n        var value = getElementValue(element, scale.field);\n        if (!this.cache[value]) {\n            var elements_1 = getElementsByField(view, scale.field, value);\n            var linkGroup = this.linkGroup;\n            var group_1 = linkGroup.addGroup();\n            this.cache[value] = group_1; // 缓存\n            var count_1 = elements_1.length;\n            each(elements_1, function (el, index) {\n                if (index < count_1 - 1) {\n                    var nextEl = elements_1[index + 1];\n                    _this.addLinkShape(group_1, el, nextEl, activeStyle);\n                }\n            });\n        }\n    };\n    // 移除连接\n    LinkByColor.prototype.removeLink = function (element) {\n        var scale = this.getColorScale(this.context.view, element);\n        if (!scale) {\n            return;\n        }\n        var value = getElementValue(element, scale.field);\n        if (this.cache[value]) {\n            this.cache[value].remove();\n            this.cache[value] = null;\n        }\n    };\n    /**\n     * 连接 elements\n     *\n     * @usage\n     * registerInteraction('xxx', {\n     *   start: [\n     *    {\n     *      trigger: 'interval:mouseenter',\n     *      action: 'element-link-by-color:link',\n     *      arg: {\n     *        // style: { fill: 'red' }\n     *        style: (style, element) => ({ fill: 'red' })\n     *     },\n     *   },\n     *  ],\n     * });\n     */\n    LinkByColor.prototype.link = function (args) {\n        var context = this.context;\n        if (!this.linkGroup) {\n            // 不允许被拾取\n            this.linkGroup = context.view.foregroundGroup.addGroup({\n                id: 'link-by-color-group',\n                capture: false,\n            });\n        }\n        var element = getCurrentElement(context);\n        if (element) {\n            this.linkByElement(element, args === null || args === void 0 ? void 0 : args.style);\n        }\n    };\n    /**\n     * 取消连接 elements\n     */\n    LinkByColor.prototype.unlink = function () {\n        var element = getCurrentElement(this.context);\n        if (element) {\n            this.removeLink(element);\n        }\n    };\n    /**\n     * 清除所有连接\n     */\n    LinkByColor.prototype.clear = function () {\n        if (this.linkGroup) {\n            this.linkGroup.clear();\n        }\n        this.cache = {};\n    };\n    /**\n     * 销毁\n     */\n    LinkByColor.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        if (this.linkGroup) {\n            this.linkGroup.remove();\n        }\n    };\n    return LinkByColor;\n}(Action));\nexport default LinkByColor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}