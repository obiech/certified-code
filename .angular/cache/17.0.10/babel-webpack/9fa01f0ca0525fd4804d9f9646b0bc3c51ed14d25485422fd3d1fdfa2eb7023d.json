{"ast":null,"code":"import { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class LoginGuard {\n  constructor(router) {\n    this.router = router;\n  }\n  canActivate(next, state) {\n    const token = localStorage.getItem('ridy_admin_token');\n    if (token != null) {\n      return true;\n    } else {\n      this.router.navigate(['login'], {});\n      return false;\n    }\n  }\n  static {\n    this.ɵfac = function LoginGuard_Factory(t) {\n      return new (t || LoginGuard)(i0.ɵɵinject(i1.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: LoginGuard,\n      factory: LoginGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["Router","LoginGuard","constructor","router","canActivate","next","state","token","localStorage","getItem","navigate","i0","ɵɵinject","i1","factory","ɵfac","providedIn"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/apps/admin-panel/src/app/@guards/login.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginGuard  {\n  constructor(private router: Router) {\n\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      const token = localStorage.getItem('ridy_admin_token');\n      if(token != null) {\n        return true;\n      } else {\n        this.router.navigate(['login'], {});\n        return false;\n      }\n  }\n  \n}\n"],"mappings":"AACA,SAA+DA,MAAM,QAAQ,iBAAiB;;;AAM9F,OAAM,MAAOC,UAAU;EACrBC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;EAE1B;EACAC,WAAWA,CACTC,IAA4B,EAC5BC,KAA0B;IACxB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC;IACtD,IAAGF,KAAK,IAAI,IAAI,EAAE;MAChB,OAAO,IAAI;KACZ,MAAM;MACL,IAAI,CAACJ,MAAM,CAACO,QAAQ,CAAC,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC;MACnC,OAAO,KAAK;;EAElB;;;uBAdWT,UAAU,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAb,MAAA;IAAA;EAAA;;;aAAVC,UAAU;MAAAa,OAAA,EAAVb,UAAU,CAAAc,IAAA;MAAAC,UAAA,EAFT;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}