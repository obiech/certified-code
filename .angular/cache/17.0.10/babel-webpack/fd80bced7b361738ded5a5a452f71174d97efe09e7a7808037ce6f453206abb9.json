{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { getTextPoint } from '../util/util';\nimport CrosshairBase from './base';\nvar LineCrosshair = /** @class */function (_super) {\n  __extends(LineCrosshair, _super);\n  function LineCrosshair() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  LineCrosshair.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n    return __assign(__assign({}, cfg), {\n      type: 'line',\n      locationType: 'region',\n      start: null,\n      end: null\n    });\n  };\n  // 直线的文本需要同直线垂直\n  LineCrosshair.prototype.getRotateAngle = function () {\n    var _a = this.getLocation(),\n      start = _a.start,\n      end = _a.end;\n    var position = this.get('text').position;\n    var angle = Math.atan2(end.y - start.y, end.x - start.x);\n    var tangentAngle = position === 'start' ? angle - Math.PI / 2 : angle + Math.PI / 2;\n    return tangentAngle;\n  };\n  LineCrosshair.prototype.getTextPoint = function () {\n    var _a = this.getLocation(),\n      start = _a.start,\n      end = _a.end;\n    var _b = this.get('text'),\n      position = _b.position,\n      offset = _b.offset;\n    return getTextPoint(start, end, position, offset);\n  };\n  LineCrosshair.prototype.getLinePath = function () {\n    var _a = this.getLocation(),\n      start = _a.start,\n      end = _a.end;\n    return [['M', start.x, start.y], ['L', end.x, end.y]];\n  };\n  return LineCrosshair;\n}(CrosshairBase);\nexport default LineCrosshair;","map":{"version":3,"names":["__assign","__extends","getTextPoint","CrosshairBase","LineCrosshair","_super","apply","arguments","prototype","getDefaultCfg","cfg","call","type","locationType","start","end","getRotateAngle","_a","getLocation","position","get","angle","Math","atan2","y","x","tangentAngle","PI","_b","offset","getLinePath"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/component/esm/crosshair/line.js"],"sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { getTextPoint } from '../util/util';\nimport CrosshairBase from './base';\nvar LineCrosshair = /** @class */ (function (_super) {\n    __extends(LineCrosshair, _super);\n    function LineCrosshair() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    LineCrosshair.prototype.getDefaultCfg = function () {\n        var cfg = _super.prototype.getDefaultCfg.call(this);\n        return __assign(__assign({}, cfg), { type: 'line', locationType: 'region', start: null, end: null });\n    };\n    // 直线的文本需要同直线垂直\n    LineCrosshair.prototype.getRotateAngle = function () {\n        var _a = this.getLocation(), start = _a.start, end = _a.end;\n        var position = this.get('text').position;\n        var angle = Math.atan2(end.y - start.y, end.x - start.x);\n        var tangentAngle = position === 'start' ? angle - Math.PI / 2 : angle + Math.PI / 2;\n        return tangentAngle;\n    };\n    LineCrosshair.prototype.getTextPoint = function () {\n        var _a = this.getLocation(), start = _a.start, end = _a.end;\n        var _b = this.get('text'), position = _b.position, offset = _b.offset;\n        return getTextPoint(start, end, position, offset);\n    };\n    LineCrosshair.prototype.getLinePath = function () {\n        var _a = this.getLocation(), start = _a.start, end = _a.end;\n        return [\n            ['M', start.x, start.y],\n            ['L', end.x, end.y],\n        ];\n    };\n    return LineCrosshair;\n}(CrosshairBase));\nexport default LineCrosshair;\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,YAAY,QAAQ,cAAc;AAC3C,OAAOC,aAAa,MAAM,QAAQ;AAClC,IAAIC,aAAa,GAAG,aAAe,UAAUC,MAAM,EAAE;EACjDJ,SAAS,CAACG,aAAa,EAAEC,MAAM,CAAC;EAChC,SAASD,aAAaA,CAAA,EAAG;IACrB,OAAOC,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACC,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,IAAI,IAAI;EACnE;EACAH,aAAa,CAACI,SAAS,CAACC,aAAa,GAAG,YAAY;IAChD,IAAIC,GAAG,GAAGL,MAAM,CAACG,SAAS,CAACC,aAAa,CAACE,IAAI,CAAC,IAAI,CAAC;IACnD,OAAOX,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEU,GAAG,CAAC,EAAE;MAAEE,IAAI,EAAE,MAAM;MAAEC,YAAY,EAAE,QAAQ;MAAEC,KAAK,EAAE,IAAI;MAAEC,GAAG,EAAE;IAAK,CAAC,CAAC;EACxG,CAAC;EACD;EACAX,aAAa,CAACI,SAAS,CAACQ,cAAc,GAAG,YAAY;IACjD,IAAIC,EAAE,GAAG,IAAI,CAACC,WAAW,CAAC,CAAC;MAAEJ,KAAK,GAAGG,EAAE,CAACH,KAAK;MAAEC,GAAG,GAAGE,EAAE,CAACF,GAAG;IAC3D,IAAII,QAAQ,GAAG,IAAI,CAACC,GAAG,CAAC,MAAM,CAAC,CAACD,QAAQ;IACxC,IAAIE,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACR,GAAG,CAACS,CAAC,GAAGV,KAAK,CAACU,CAAC,EAAET,GAAG,CAACU,CAAC,GAAGX,KAAK,CAACW,CAAC,CAAC;IACxD,IAAIC,YAAY,GAAGP,QAAQ,KAAK,OAAO,GAAGE,KAAK,GAAGC,IAAI,CAACK,EAAE,GAAG,CAAC,GAAGN,KAAK,GAAGC,IAAI,CAACK,EAAE,GAAG,CAAC;IACnF,OAAOD,YAAY;EACvB,CAAC;EACDtB,aAAa,CAACI,SAAS,CAACN,YAAY,GAAG,YAAY;IAC/C,IAAIe,EAAE,GAAG,IAAI,CAACC,WAAW,CAAC,CAAC;MAAEJ,KAAK,GAAGG,EAAE,CAACH,KAAK;MAAEC,GAAG,GAAGE,EAAE,CAACF,GAAG;IAC3D,IAAIa,EAAE,GAAG,IAAI,CAACR,GAAG,CAAC,MAAM,CAAC;MAAED,QAAQ,GAAGS,EAAE,CAACT,QAAQ;MAAEU,MAAM,GAAGD,EAAE,CAACC,MAAM;IACrE,OAAO3B,YAAY,CAACY,KAAK,EAAEC,GAAG,EAAEI,QAAQ,EAAEU,MAAM,CAAC;EACrD,CAAC;EACDzB,aAAa,CAACI,SAAS,CAACsB,WAAW,GAAG,YAAY;IAC9C,IAAIb,EAAE,GAAG,IAAI,CAACC,WAAW,CAAC,CAAC;MAAEJ,KAAK,GAAGG,EAAE,CAACH,KAAK;MAAEC,GAAG,GAAGE,EAAE,CAACF,GAAG;IAC3D,OAAO,CACH,CAAC,GAAG,EAAED,KAAK,CAACW,CAAC,EAAEX,KAAK,CAACU,CAAC,CAAC,EACvB,CAAC,GAAG,EAAET,GAAG,CAACU,CAAC,EAAEV,GAAG,CAACS,CAAC,CAAC,CACtB;EACL,CAAC;EACD,OAAOpB,aAAa;AACxB,CAAC,CAACD,aAAa,CAAE;AACjB,eAAeC,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}