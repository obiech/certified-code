{"ast":null,"code":"/**\n * @fileoverview 判断点是否在多边形内\n * @author dxq613@gmail.com\n */\n// 多边形的射线检测，参考：https://blog.csdn.net/WilliamSun0122/article/details/77994526\nvar tolerance = 1e-6;\n// 三态函数，判断两个double在eps精度下的大小关系\nfunction dcmp(x) {\n  if (Math.abs(x) < tolerance) {\n    return 0;\n  }\n  return x < 0 ? -1 : 1;\n}\n// 判断点Q是否在p1和p2的线段上\nfunction onSegment(p1, p2, q) {\n  if ((q[0] - p1[0]) * (p2[1] - p1[1]) === (p2[0] - p1[0]) * (q[1] - p1[1]) && Math.min(p1[0], p2[0]) <= q[0] && q[0] <= Math.max(p1[0], p2[0]) && Math.min(p1[1], p2[1]) <= q[1] && q[1] <= Math.max(p1[1], p2[1])) {\n    return true;\n  }\n  return false;\n}\n// 判断点P在多边形内-射线法\nexport default function isInPolygon(points, x, y) {\n  var isHit = false;\n  var n = points.length;\n  if (n <= 2) {\n    // svg 中点小于 3 个时，不显示，也无法被拾取\n    return false;\n  }\n  for (var i = 0; i < n; i++) {\n    var p1 = points[i];\n    var p2 = points[(i + 1) % n];\n    if (onSegment(p1, p2, [x, y])) {\n      // 点在多边形一条边上\n      return true;\n    }\n    // 前一个判断min(p1[1],p2[1])<P.y<=max(p1[1],p2[1])\n    // 后一个判断被测点 在 射线与边交点 的左边\n    if (dcmp(p1[1] - y) > 0 !== dcmp(p2[1] - y) > 0 && dcmp(x - (y - p1[1]) * (p1[0] - p2[0]) / (p1[1] - p2[1]) - p1[0]) < 0) {\n      isHit = !isHit;\n    }\n  }\n  return isHit;\n}","map":{"version":3,"names":["tolerance","dcmp","x","Math","abs","onSegment","p1","p2","q","min","max","isInPolygon","points","y","isHit","n","length","i"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/path-util/esm/point-in-polygon.js"],"sourcesContent":["/**\n * @fileoverview 判断点是否在多边形内\n * @author dxq613@gmail.com\n */\n// 多边形的射线检测，参考：https://blog.csdn.net/WilliamSun0122/article/details/77994526\nvar tolerance = 1e-6;\n// 三态函数，判断两个double在eps精度下的大小关系\nfunction dcmp(x) {\n    if (Math.abs(x) < tolerance) {\n        return 0;\n    }\n    return x < 0 ? -1 : 1;\n}\n// 判断点Q是否在p1和p2的线段上\nfunction onSegment(p1, p2, q) {\n    if ((q[0] - p1[0]) * (p2[1] - p1[1]) === (p2[0] - p1[0]) * (q[1] - p1[1]) &&\n        Math.min(p1[0], p2[0]) <= q[0] &&\n        q[0] <= Math.max(p1[0], p2[0]) &&\n        Math.min(p1[1], p2[1]) <= q[1] &&\n        q[1] <= Math.max(p1[1], p2[1])) {\n        return true;\n    }\n    return false;\n}\n// 判断点P在多边形内-射线法\nexport default function isInPolygon(points, x, y) {\n    var isHit = false;\n    var n = points.length;\n    if (n <= 2) {\n        // svg 中点小于 3 个时，不显示，也无法被拾取\n        return false;\n    }\n    for (var i = 0; i < n; i++) {\n        var p1 = points[i];\n        var p2 = points[(i + 1) % n];\n        if (onSegment(p1, p2, [x, y])) {\n            // 点在多边形一条边上\n            return true;\n        }\n        // 前一个判断min(p1[1],p2[1])<P.y<=max(p1[1],p2[1])\n        // 后一个判断被测点 在 射线与边交点 的左边\n        if (dcmp(p1[1] - y) > 0 !== dcmp(p2[1] - y) > 0 &&\n            dcmp(x - ((y - p1[1]) * (p1[0] - p2[0])) / (p1[1] - p2[1]) - p1[0]) < 0) {\n            isHit = !isHit;\n        }\n    }\n    return isHit;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,IAAIA,SAAS,GAAG,IAAI;AACpB;AACA,SAASC,IAAIA,CAACC,CAAC,EAAE;EACb,IAAIC,IAAI,CAACC,GAAG,CAACF,CAAC,CAAC,GAAGF,SAAS,EAAE;IACzB,OAAO,CAAC;EACZ;EACA,OAAOE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AACzB;AACA;AACA,SAASG,SAASA,CAACC,EAAE,EAAEC,EAAE,EAAEC,CAAC,EAAE;EAC1B,IAAI,CAACA,CAAC,CAAC,CAAC,CAAC,GAAGF,EAAE,CAAC,CAAC,CAAC,KAAKC,EAAE,CAAC,CAAC,CAAC,GAAGD,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAACC,EAAE,CAAC,CAAC,CAAC,GAAGD,EAAE,CAAC,CAAC,CAAC,KAAKE,CAAC,CAAC,CAAC,CAAC,GAAGF,EAAE,CAAC,CAAC,CAAC,CAAC,IACrEH,IAAI,CAACM,GAAG,CAACH,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAIC,CAAC,CAAC,CAAC,CAAC,IAC9BA,CAAC,CAAC,CAAC,CAAC,IAAIL,IAAI,CAACO,GAAG,CAACJ,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,CAAC,IAC9BJ,IAAI,CAACM,GAAG,CAACH,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAIC,CAAC,CAAC,CAAC,CAAC,IAC9BA,CAAC,CAAC,CAAC,CAAC,IAAIL,IAAI,CAACO,GAAG,CAACJ,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;IAChC,OAAO,IAAI;EACf;EACA,OAAO,KAAK;AAChB;AACA;AACA,eAAe,SAASI,WAAWA,CAACC,MAAM,EAAEV,CAAC,EAAEW,CAAC,EAAE;EAC9C,IAAIC,KAAK,GAAG,KAAK;EACjB,IAAIC,CAAC,GAAGH,MAAM,CAACI,MAAM;EACrB,IAAID,CAAC,IAAI,CAAC,EAAE;IACR;IACA,OAAO,KAAK;EAChB;EACA,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,CAAC,EAAEE,CAAC,EAAE,EAAE;IACxB,IAAIX,EAAE,GAAGM,MAAM,CAACK,CAAC,CAAC;IAClB,IAAIV,EAAE,GAAGK,MAAM,CAAC,CAACK,CAAC,GAAG,CAAC,IAAIF,CAAC,CAAC;IAC5B,IAAIV,SAAS,CAACC,EAAE,EAAEC,EAAE,EAAE,CAACL,CAAC,EAAEW,CAAC,CAAC,CAAC,EAAE;MAC3B;MACA,OAAO,IAAI;IACf;IACA;IACA;IACA,IAAIZ,IAAI,CAACK,EAAE,CAAC,CAAC,CAAC,GAAGO,CAAC,CAAC,GAAG,CAAC,KAAKZ,IAAI,CAACM,EAAE,CAAC,CAAC,CAAC,GAAGM,CAAC,CAAC,GAAG,CAAC,IAC3CZ,IAAI,CAACC,CAAC,GAAI,CAACW,CAAC,GAAGP,EAAE,CAAC,CAAC,CAAC,KAAKA,EAAE,CAAC,CAAC,CAAC,GAAGC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAKD,EAAE,CAAC,CAAC,CAAC,GAAGC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAGD,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;MACzEQ,KAAK,GAAG,CAACA,KAAK;IAClB;EACJ;EACA,OAAOA,KAAK;AAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}