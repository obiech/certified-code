{"ast":null,"code":"import { __extends, __spreadArrays } from \"tslib\";\nimport { isNil, isNumber } from '@antv/util';\nimport Base from '../base';\n/**\n * 分类度量\n * @class\n */\nvar Category = /** @class */function (_super) {\n  __extends(Category, _super);\n  function Category() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = 'cat';\n    _this.isCategory = true;\n    return _this;\n  }\n  Category.prototype.buildIndexMap = function () {\n    if (!this.translateIndexMap) {\n      this.translateIndexMap = new Map();\n      // 重新构建缓存\n      for (var i = 0; i < this.values.length; i++) {\n        this.translateIndexMap.set(this.values[i], i);\n      }\n    }\n  };\n  Category.prototype.translate = function (value) {\n    // 按需构建 map\n    this.buildIndexMap();\n    // 找得到\n    var idx = this.translateIndexMap.get(value);\n    if (idx === undefined) {\n      idx = isNumber(value) ? value : NaN;\n    }\n    return idx;\n  };\n  Category.prototype.scale = function (value) {\n    var order = this.translate(value);\n    // 分类数据允许 0.5 范围内调整\n    // if (order < this.min - 0.5 || order > this.max + 0.5) {\n    //   return NaN;\n    // }\n    var percent = this.calcPercent(order, this.min, this.max);\n    return this.calcValue(percent, this.rangeMin(), this.rangeMax());\n  };\n  Category.prototype.invert = function (scaledValue) {\n    var domainRange = this.max - this.min;\n    var percent = this.calcPercent(scaledValue, this.rangeMin(), this.rangeMax());\n    var idx = Math.round(domainRange * percent) + this.min;\n    if (idx < this.min || idx > this.max) {\n      return NaN;\n    }\n    return this.values[idx];\n  };\n  Category.prototype.getText = function (value) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n    var v = value;\n    // value为index\n    if (isNumber(value) && !this.values.includes(value)) {\n      v = this.values[v];\n    }\n    return _super.prototype.getText.apply(this, __spreadArrays([v], args));\n  };\n  // 复写属性\n  Category.prototype.initCfg = function () {\n    this.tickMethod = 'cat';\n  };\n  // 设置 min, max\n  Category.prototype.setDomain = function () {\n    // 用户有可能设置 min\n    if (isNil(this.getConfig('min'))) {\n      this.min = 0;\n    }\n    if (isNil(this.getConfig('max'))) {\n      var size = this.values.length;\n      this.max = size > 1 ? size - 1 : size;\n    }\n    // scale.init 的时候清除缓存\n    if (this.translateIndexMap) {\n      this.translateIndexMap = undefined;\n    }\n  };\n  return Category;\n}(Base);\nexport default Category;","map":{"version":3,"names":["__extends","__spreadArrays","isNil","isNumber","Base","Category","_super","_this","apply","arguments","type","isCategory","prototype","buildIndexMap","translateIndexMap","Map","i","values","length","set","translate","value","idx","get","undefined","NaN","scale","order","percent","calcPercent","min","max","calcValue","rangeMin","rangeMax","invert","scaledValue","domainRange","Math","round","getText","args","_i","v","includes","initCfg","tickMethod","setDomain","getConfig","size"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/scale/esm/category/base.js"],"sourcesContent":["import { __extends, __spreadArrays } from \"tslib\";\nimport { isNil, isNumber } from '@antv/util';\nimport Base from '../base';\n/**\n * 分类度量\n * @class\n */\nvar Category = /** @class */ (function (_super) {\n    __extends(Category, _super);\n    function Category() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'cat';\n        _this.isCategory = true;\n        return _this;\n    }\n    Category.prototype.buildIndexMap = function () {\n        if (!this.translateIndexMap) {\n            this.translateIndexMap = new Map();\n            // 重新构建缓存\n            for (var i = 0; i < this.values.length; i++) {\n                this.translateIndexMap.set(this.values[i], i);\n            }\n        }\n    };\n    Category.prototype.translate = function (value) {\n        // 按需构建 map\n        this.buildIndexMap();\n        // 找得到\n        var idx = this.translateIndexMap.get(value);\n        if (idx === undefined) {\n            idx = isNumber(value) ? value : NaN;\n        }\n        return idx;\n    };\n    Category.prototype.scale = function (value) {\n        var order = this.translate(value);\n        // 分类数据允许 0.5 范围内调整\n        // if (order < this.min - 0.5 || order > this.max + 0.5) {\n        //   return NaN;\n        // }\n        var percent = this.calcPercent(order, this.min, this.max);\n        return this.calcValue(percent, this.rangeMin(), this.rangeMax());\n    };\n    Category.prototype.invert = function (scaledValue) {\n        var domainRange = this.max - this.min;\n        var percent = this.calcPercent(scaledValue, this.rangeMin(), this.rangeMax());\n        var idx = Math.round(domainRange * percent) + this.min;\n        if (idx < this.min || idx > this.max) {\n            return NaN;\n        }\n        return this.values[idx];\n    };\n    Category.prototype.getText = function (value) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var v = value;\n        // value为index\n        if (isNumber(value) && !this.values.includes(value)) {\n            v = this.values[v];\n        }\n        return _super.prototype.getText.apply(this, __spreadArrays([v], args));\n    };\n    // 复写属性\n    Category.prototype.initCfg = function () {\n        this.tickMethod = 'cat';\n    };\n    // 设置 min, max\n    Category.prototype.setDomain = function () {\n        // 用户有可能设置 min\n        if (isNil(this.getConfig('min'))) {\n            this.min = 0;\n        }\n        if (isNil(this.getConfig('max'))) {\n            var size = this.values.length;\n            this.max = size > 1 ? size - 1 : size;\n        }\n        // scale.init 的时候清除缓存\n        if (this.translateIndexMap) {\n            this.translateIndexMap = undefined;\n        }\n    };\n    return Category;\n}(Base));\nexport default Category;\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,OAAO;AACjD,SAASC,KAAK,EAAEC,QAAQ,QAAQ,YAAY;AAC5C,OAAOC,IAAI,MAAM,SAAS;AAC1B;AACA;AACA;AACA;AACA,IAAIC,QAAQ,GAAG,aAAe,UAAUC,MAAM,EAAE;EAC5CN,SAAS,CAACK,QAAQ,EAAEC,MAAM,CAAC;EAC3B,SAASD,QAAQA,CAAA,EAAG;IAChB,IAAIE,KAAK,GAAGD,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACE,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,IAAI,IAAI;IACpEF,KAAK,CAACG,IAAI,GAAG,KAAK;IAClBH,KAAK,CAACI,UAAU,GAAG,IAAI;IACvB,OAAOJ,KAAK;EAChB;EACAF,QAAQ,CAACO,SAAS,CAACC,aAAa,GAAG,YAAY;IAC3C,IAAI,CAAC,IAAI,CAACC,iBAAiB,EAAE;MACzB,IAAI,CAACA,iBAAiB,GAAG,IAAIC,GAAG,CAAC,CAAC;MAClC;MACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACC,MAAM,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;QACzC,IAAI,CAACF,iBAAiB,CAACK,GAAG,CAAC,IAAI,CAACF,MAAM,CAACD,CAAC,CAAC,EAAEA,CAAC,CAAC;MACjD;IACJ;EACJ,CAAC;EACDX,QAAQ,CAACO,SAAS,CAACQ,SAAS,GAAG,UAAUC,KAAK,EAAE;IAC5C;IACA,IAAI,CAACR,aAAa,CAAC,CAAC;IACpB;IACA,IAAIS,GAAG,GAAG,IAAI,CAACR,iBAAiB,CAACS,GAAG,CAACF,KAAK,CAAC;IAC3C,IAAIC,GAAG,KAAKE,SAAS,EAAE;MACnBF,GAAG,GAAGnB,QAAQ,CAACkB,KAAK,CAAC,GAAGA,KAAK,GAAGI,GAAG;IACvC;IACA,OAAOH,GAAG;EACd,CAAC;EACDjB,QAAQ,CAACO,SAAS,CAACc,KAAK,GAAG,UAAUL,KAAK,EAAE;IACxC,IAAIM,KAAK,GAAG,IAAI,CAACP,SAAS,CAACC,KAAK,CAAC;IACjC;IACA;IACA;IACA;IACA,IAAIO,OAAO,GAAG,IAAI,CAACC,WAAW,CAACF,KAAK,EAAE,IAAI,CAACG,GAAG,EAAE,IAAI,CAACC,GAAG,CAAC;IACzD,OAAO,IAAI,CAACC,SAAS,CAACJ,OAAO,EAAE,IAAI,CAACK,QAAQ,CAAC,CAAC,EAAE,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC;EACpE,CAAC;EACD7B,QAAQ,CAACO,SAAS,CAACuB,MAAM,GAAG,UAAUC,WAAW,EAAE;IAC/C,IAAIC,WAAW,GAAG,IAAI,CAACN,GAAG,GAAG,IAAI,CAACD,GAAG;IACrC,IAAIF,OAAO,GAAG,IAAI,CAACC,WAAW,CAACO,WAAW,EAAE,IAAI,CAACH,QAAQ,CAAC,CAAC,EAAE,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC;IAC7E,IAAIZ,GAAG,GAAGgB,IAAI,CAACC,KAAK,CAACF,WAAW,GAAGT,OAAO,CAAC,GAAG,IAAI,CAACE,GAAG;IACtD,IAAIR,GAAG,GAAG,IAAI,CAACQ,GAAG,IAAIR,GAAG,GAAG,IAAI,CAACS,GAAG,EAAE;MAClC,OAAON,GAAG;IACd;IACA,OAAO,IAAI,CAACR,MAAM,CAACK,GAAG,CAAC;EAC3B,CAAC;EACDjB,QAAQ,CAACO,SAAS,CAAC4B,OAAO,GAAG,UAAUnB,KAAK,EAAE;IAC1C,IAAIoB,IAAI,GAAG,EAAE;IACb,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGjC,SAAS,CAACS,MAAM,EAAEwB,EAAE,EAAE,EAAE;MAC1CD,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC,GAAGjC,SAAS,CAACiC,EAAE,CAAC;IAChC;IACA,IAAIC,CAAC,GAAGtB,KAAK;IACb;IACA,IAAIlB,QAAQ,CAACkB,KAAK,CAAC,IAAI,CAAC,IAAI,CAACJ,MAAM,CAAC2B,QAAQ,CAACvB,KAAK,CAAC,EAAE;MACjDsB,CAAC,GAAG,IAAI,CAAC1B,MAAM,CAAC0B,CAAC,CAAC;IACtB;IACA,OAAOrC,MAAM,CAACM,SAAS,CAAC4B,OAAO,CAAChC,KAAK,CAAC,IAAI,EAAEP,cAAc,CAAC,CAAC0C,CAAC,CAAC,EAAEF,IAAI,CAAC,CAAC;EAC1E,CAAC;EACD;EACApC,QAAQ,CAACO,SAAS,CAACiC,OAAO,GAAG,YAAY;IACrC,IAAI,CAACC,UAAU,GAAG,KAAK;EAC3B,CAAC;EACD;EACAzC,QAAQ,CAACO,SAAS,CAACmC,SAAS,GAAG,YAAY;IACvC;IACA,IAAI7C,KAAK,CAAC,IAAI,CAAC8C,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE;MAC9B,IAAI,CAAClB,GAAG,GAAG,CAAC;IAChB;IACA,IAAI5B,KAAK,CAAC,IAAI,CAAC8C,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE;MAC9B,IAAIC,IAAI,GAAG,IAAI,CAAChC,MAAM,CAACC,MAAM;MAC7B,IAAI,CAACa,GAAG,GAAGkB,IAAI,GAAG,CAAC,GAAGA,IAAI,GAAG,CAAC,GAAGA,IAAI;IACzC;IACA;IACA,IAAI,IAAI,CAACnC,iBAAiB,EAAE;MACxB,IAAI,CAACA,iBAAiB,GAAGU,SAAS;IACtC;EACJ,CAAC;EACD,OAAOnB,QAAQ;AACnB,CAAC,CAACD,IAAI,CAAE;AACR,eAAeC,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}