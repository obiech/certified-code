{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Directive, TemplateRef, Component, ChangeDetectionStrategy, Input, ContentChildren, NgModule } from '@angular/core';\nimport { __decorate } from 'tslib';\nimport { NgTemplateOutlet, NgIf, NgForOf } from '@angular/common';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nfunction NzSpaceComponent_ng_template_1_span_2_ng_template_1_Template(rf, ctx) {}\nconst _c0 = a0 => ({\n  $implicit: a0\n});\nfunction NzSpaceComponent_ng_template_1_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtemplate(1, NzSpaceComponent_ng_template_1_span_2_ng_template_1_Template, 0, 0, \"ng-template\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    const last_r2 = ctx_r6.last;\n    const index_r3 = ctx_r6.index;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"margin-bottom\", ctx_r4.nzDirection === \"vertical\" ? last_r2 ? null : ctx_r4.spaceSize : null, \"px\")(\"margin-right\", ctx_r4.nzDirection === \"horizontal\" ? last_r2 ? null : ctx_r4.spaceSize : null, \"px\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.nzSplit)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(6, _c0, index_r3));\n  }\n}\nfunction NzSpaceComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelementContainer(1, 2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, NzSpaceComponent_ng_template_1_span_2_Template, 2, 8, \"span\", 3);\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const last_r2 = ctx.last;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"margin-bottom\", ctx_r0.nzDirection === \"vertical\" ? last_r2 ? null : ctx_r0.spaceSize : null, \"px\")(\"margin-right\", ctx_r0.nzDirection === \"horizontal\" ? last_r2 ? null : ctx_r0.spaceSize : null, \"px\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", item_r1);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.nzSplit && !last_r2);\n  }\n}\nconst _c1 = [\"*\"];\nclass NzSpaceItemDirective {\n  constructor() {}\n  static {\n    this.ɵfac = function NzSpaceItemDirective_Factory(t) {\n      return new (t || NzSpaceItemDirective)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NzSpaceItemDirective,\n      selectors: [[\"\", \"nzSpaceItem\", \"\"]],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSpaceItemDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[nzSpaceItem]',\n      standalone: true\n    }]\n  }], () => [], null);\n})();\nconst NZ_CONFIG_MODULE_NAME = 'space';\nconst SPACE_SIZE = {\n  small: 8,\n  middle: 16,\n  large: 24\n};\nclass NzSpaceComponent {\n  constructor(nzConfigService, cdr) {\n    this.nzConfigService = nzConfigService;\n    this.cdr = cdr;\n    this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n    this.nzDirection = 'horizontal';\n    this.nzSplit = null;\n    this.nzWrap = false;\n    this.nzSize = 'small';\n    this.spaceSize = SPACE_SIZE.small;\n    this.destroy$ = new Subject();\n  }\n  updateSpaceItems() {\n    const numberSize = typeof this.nzSize === 'string' ? SPACE_SIZE[this.nzSize] : this.nzSize;\n    this.spaceSize = numberSize / (this.nzSplit ? 2 : 1);\n    this.cdr.markForCheck();\n  }\n  ngOnChanges() {\n    this.updateSpaceItems();\n    this.mergedAlign = this.nzAlign === undefined && this.nzDirection === 'horizontal' ? 'center' : this.nzAlign;\n  }\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  ngAfterContentInit() {\n    this.updateSpaceItems();\n    this.items.changes.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.cdr.markForCheck();\n    });\n  }\n  static {\n    this.ɵfac = function NzSpaceComponent_Factory(t) {\n      return new (t || NzSpaceComponent)(i0.ɵɵdirectiveInject(i1.NzConfigService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzSpaceComponent,\n      selectors: [[\"nz-space\"], [\"\", \"nz-space\", \"\"]],\n      contentQueries: function NzSpaceComponent_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, NzSpaceItemDirective, 4, TemplateRef);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.items = _t);\n        }\n      },\n      hostAttrs: [1, \"ant-space\"],\n      hostVars: 14,\n      hostBindings: function NzSpaceComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"flex-wrap\", ctx.nzWrap ? \"wrap\" : null);\n          i0.ɵɵclassProp(\"ant-space-horizontal\", ctx.nzDirection === \"horizontal\")(\"ant-space-vertical\", ctx.nzDirection === \"vertical\")(\"ant-space-align-start\", ctx.mergedAlign === \"start\")(\"ant-space-align-end\", ctx.mergedAlign === \"end\")(\"ant-space-align-center\", ctx.mergedAlign === \"center\")(\"ant-space-align-baseline\", ctx.mergedAlign === \"baseline\");\n        }\n      },\n      inputs: {\n        nzDirection: \"nzDirection\",\n        nzAlign: \"nzAlign\",\n        nzSplit: \"nzSplit\",\n        nzWrap: \"nzWrap\",\n        nzSize: \"nzSize\"\n      },\n      exportAs: [\"NzSpace\"],\n      standalone: true,\n      features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c1,\n      decls: 2,\n      vars: 1,\n      consts: [[\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"ant-space-item\"], [3, \"ngTemplateOutlet\"], [\"class\", \"ant-space-split\", 3, \"margin-bottom\", \"margin-right\", 4, \"ngIf\"], [1, \"ant-space-split\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n      template: function NzSpaceComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n          i0.ɵɵtemplate(1, NzSpaceComponent_ng_template_1_Template, 3, 6, \"ng-template\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngForOf\", ctx.items);\n        }\n      },\n      dependencies: [NgTemplateOutlet, NgIf, NgForOf],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n__decorate([InputBoolean()], NzSpaceComponent.prototype, \"nzWrap\", void 0);\n__decorate([WithConfig()], NzSpaceComponent.prototype, \"nzSize\", void 0);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSpaceComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-space, [nz-space]',\n      exportAs: 'NzSpace',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: `\n    <ng-content></ng-content>\n    <ng-template ngFor let-item let-last=\"last\" let-index=\"index\" [ngForOf]=\"items\">\n      <div\n        class=\"ant-space-item\"\n        [style.margin-bottom.px]=\"nzDirection === 'vertical' ? (last ? null : spaceSize) : null\"\n        [style.margin-right.px]=\"nzDirection === 'horizontal' ? (last ? null : spaceSize) : null\"\n      >\n        <ng-container [ngTemplateOutlet]=\"item\"></ng-container>\n      </div>\n      <span\n        *ngIf=\"nzSplit && !last\"\n        class=\"ant-space-split\"\n        [style.margin-bottom.px]=\"nzDirection === 'vertical' ? (last ? null : spaceSize) : null\"\n        [style.margin-right.px]=\"nzDirection === 'horizontal' ? (last ? null : spaceSize) : null\"\n      >\n        <ng-template [ngTemplateOutlet]=\"nzSplit\" [ngTemplateOutletContext]=\"{ $implicit: index }\"></ng-template>\n      </span>\n    </ng-template>\n  `,\n      host: {\n        class: 'ant-space',\n        '[class.ant-space-horizontal]': 'nzDirection === \"horizontal\"',\n        '[class.ant-space-vertical]': 'nzDirection === \"vertical\"',\n        '[class.ant-space-align-start]': 'mergedAlign === \"start\"',\n        '[class.ant-space-align-end]': 'mergedAlign === \"end\"',\n        '[class.ant-space-align-center]': 'mergedAlign === \"center\"',\n        '[class.ant-space-align-baseline]': 'mergedAlign === \"baseline\"',\n        '[style.flex-wrap]': 'nzWrap ? \"wrap\" : null'\n      },\n      imports: [NgTemplateOutlet, NgIf, NgForOf],\n      standalone: true\n    }]\n  }], () => [{\n    type: i1.NzConfigService\n  }, {\n    type: i0.ChangeDetectorRef\n  }], {\n    nzDirection: [{\n      type: Input\n    }],\n    nzAlign: [{\n      type: Input\n    }],\n    nzSplit: [{\n      type: Input\n    }],\n    nzWrap: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }],\n    items: [{\n      type: ContentChildren,\n      args: [NzSpaceItemDirective, {\n        read: TemplateRef\n      }]\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzSpaceModule {\n  static {\n    this.ɵfac = function NzSpaceModule_Factory(t) {\n      return new (t || NzSpaceModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NzSpaceModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSpaceModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NzSpaceComponent, NzSpaceItemDirective],\n      exports: [NzSpaceComponent, NzSpaceItemDirective]\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzSpaceComponent, NzSpaceItemDirective, NzSpaceModule };","map":{"version":3,"names":["i0","Directive","TemplateRef","Component","ChangeDetectionStrategy","Input","ContentChildren","NgModule","__decorate","NgTemplateOutlet","NgIf","NgForOf","Subject","takeUntil","i1","WithConfig","InputBoolean","NzSpaceComponent_ng_template_1_span_2_ng_template_1_Template","rf","ctx","_c0","a0","$implicit","NzSpaceComponent_ng_template_1_span_2_Template","ɵɵelementStart","ɵɵtemplate","ɵɵelementEnd","ctx_r6","ɵɵnextContext","last_r2","last","index_r3","index","ctx_r4","ɵɵstyleProp","nzDirection","spaceSize","ɵɵadvance","ɵɵproperty","nzSplit","ɵɵpureFunction1","NzSpaceComponent_ng_template_1_Template","ɵɵelementContainer","item_r1","ctx_r0","_c1","NzSpaceItemDirective","constructor","ɵfac","NzSpaceItemDirective_Factory","t","ɵdir","ɵɵdefineDirective","type","selectors","standalone","ngDevMode","ɵsetClassMetadata","args","selector","NZ_CONFIG_MODULE_NAME","SPACE_SIZE","small","middle","large","NzSpaceComponent","nzConfigService","cdr","_nzModuleName","nzWrap","nzSize","destroy$","updateSpaceItems","numberSize","markForCheck","ngOnChanges","mergedAlign","nzAlign","undefined","ngOnDestroy","next","complete","ngAfterContentInit","items","changes","pipe","subscribe","NzSpaceComponent_Factory","ɵɵdirectiveInject","NzConfigService","ChangeDetectorRef","ɵcmp","ɵɵdefineComponent","contentQueries","NzSpaceComponent_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","hostAttrs","hostVars","hostBindings","NzSpaceComponent_HostBindings","ɵɵclassProp","inputs","exportAs","features","ɵɵNgOnChangesFeature","ɵɵStandaloneFeature","ngContentSelectors","decls","vars","consts","template","NzSpaceComponent_Template","ɵɵprojectionDef","ɵɵprojection","dependencies","encapsulation","changeDetection","prototype","OnPush","host","class","imports","read","NzSpaceModule","NzSpaceModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","exports"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-space.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Directive, TemplateRef, Component, ChangeDetectionStrategy, Input, ContentChildren, NgModule } from '@angular/core';\nimport { __decorate } from 'tslib';\nimport { NgTemplateOutlet, NgIf, NgForOf } from '@angular/common';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzSpaceItemDirective {\n    constructor() { }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzSpaceItemDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.3.8\", type: NzSpaceItemDirective, isStandalone: true, selector: \"[nzSpaceItem]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzSpaceItemDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[nzSpaceItem]',\n                    standalone: true\n                }]\n        }], ctorParameters: () => [] });\n\nconst NZ_CONFIG_MODULE_NAME = 'space';\nconst SPACE_SIZE = {\n    small: 8,\n    middle: 16,\n    large: 24\n};\nclass NzSpaceComponent {\n    constructor(nzConfigService, cdr) {\n        this.nzConfigService = nzConfigService;\n        this.cdr = cdr;\n        this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n        this.nzDirection = 'horizontal';\n        this.nzSplit = null;\n        this.nzWrap = false;\n        this.nzSize = 'small';\n        this.spaceSize = SPACE_SIZE.small;\n        this.destroy$ = new Subject();\n    }\n    updateSpaceItems() {\n        const numberSize = typeof this.nzSize === 'string' ? SPACE_SIZE[this.nzSize] : this.nzSize;\n        this.spaceSize = numberSize / (this.nzSplit ? 2 : 1);\n        this.cdr.markForCheck();\n    }\n    ngOnChanges() {\n        this.updateSpaceItems();\n        this.mergedAlign = this.nzAlign === undefined && this.nzDirection === 'horizontal' ? 'center' : this.nzAlign;\n    }\n    ngOnDestroy() {\n        this.destroy$.next(true);\n        this.destroy$.complete();\n    }\n    ngAfterContentInit() {\n        this.updateSpaceItems();\n        this.items.changes.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            this.cdr.markForCheck();\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzSpaceComponent, deps: [{ token: i1.NzConfigService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.8\", type: NzSpaceComponent, isStandalone: true, selector: \"nz-space, [nz-space]\", inputs: { nzDirection: \"nzDirection\", nzAlign: \"nzAlign\", nzSplit: \"nzSplit\", nzWrap: \"nzWrap\", nzSize: \"nzSize\" }, host: { properties: { \"class.ant-space-horizontal\": \"nzDirection === \\\"horizontal\\\"\", \"class.ant-space-vertical\": \"nzDirection === \\\"vertical\\\"\", \"class.ant-space-align-start\": \"mergedAlign === \\\"start\\\"\", \"class.ant-space-align-end\": \"mergedAlign === \\\"end\\\"\", \"class.ant-space-align-center\": \"mergedAlign === \\\"center\\\"\", \"class.ant-space-align-baseline\": \"mergedAlign === \\\"baseline\\\"\", \"style.flex-wrap\": \"nzWrap ? \\\"wrap\\\" : null\" }, classAttribute: \"ant-space\" }, queries: [{ propertyName: \"items\", predicate: NzSpaceItemDirective, read: TemplateRef }], exportAs: [\"NzSpace\"], usesOnChanges: true, ngImport: i0, template: `\n    <ng-content></ng-content>\n    <ng-template ngFor let-item let-last=\"last\" let-index=\"index\" [ngForOf]=\"items\">\n      <div\n        class=\"ant-space-item\"\n        [style.margin-bottom.px]=\"nzDirection === 'vertical' ? (last ? null : spaceSize) : null\"\n        [style.margin-right.px]=\"nzDirection === 'horizontal' ? (last ? null : spaceSize) : null\"\n      >\n        <ng-container [ngTemplateOutlet]=\"item\"></ng-container>\n      </div>\n      <span\n        *ngIf=\"nzSplit && !last\"\n        class=\"ant-space-split\"\n        [style.margin-bottom.px]=\"nzDirection === 'vertical' ? (last ? null : spaceSize) : null\"\n        [style.margin-right.px]=\"nzDirection === 'horizontal' ? (last ? null : spaceSize) : null\"\n      >\n        <ng-template [ngTemplateOutlet]=\"nzSplit\" [ngTemplateOutletContext]=\"{ $implicit: index }\"></ng-template>\n      </span>\n    </ng-template>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\n__decorate([\n    InputBoolean()\n], NzSpaceComponent.prototype, \"nzWrap\", void 0);\n__decorate([\n    WithConfig()\n], NzSpaceComponent.prototype, \"nzSize\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzSpaceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-space, [nz-space]',\n                    exportAs: 'NzSpace',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n    <ng-content></ng-content>\n    <ng-template ngFor let-item let-last=\"last\" let-index=\"index\" [ngForOf]=\"items\">\n      <div\n        class=\"ant-space-item\"\n        [style.margin-bottom.px]=\"nzDirection === 'vertical' ? (last ? null : spaceSize) : null\"\n        [style.margin-right.px]=\"nzDirection === 'horizontal' ? (last ? null : spaceSize) : null\"\n      >\n        <ng-container [ngTemplateOutlet]=\"item\"></ng-container>\n      </div>\n      <span\n        *ngIf=\"nzSplit && !last\"\n        class=\"ant-space-split\"\n        [style.margin-bottom.px]=\"nzDirection === 'vertical' ? (last ? null : spaceSize) : null\"\n        [style.margin-right.px]=\"nzDirection === 'horizontal' ? (last ? null : spaceSize) : null\"\n      >\n        <ng-template [ngTemplateOutlet]=\"nzSplit\" [ngTemplateOutletContext]=\"{ $implicit: index }\"></ng-template>\n      </span>\n    </ng-template>\n  `,\n                    host: {\n                        class: 'ant-space',\n                        '[class.ant-space-horizontal]': 'nzDirection === \"horizontal\"',\n                        '[class.ant-space-vertical]': 'nzDirection === \"vertical\"',\n                        '[class.ant-space-align-start]': 'mergedAlign === \"start\"',\n                        '[class.ant-space-align-end]': 'mergedAlign === \"end\"',\n                        '[class.ant-space-align-center]': 'mergedAlign === \"center\"',\n                        '[class.ant-space-align-baseline]': 'mergedAlign === \"baseline\"',\n                        '[style.flex-wrap]': 'nzWrap ? \"wrap\" : null'\n                    },\n                    imports: [NgTemplateOutlet, NgIf, NgForOf],\n                    standalone: true\n                }]\n        }], ctorParameters: () => [{ type: i1.NzConfigService }, { type: i0.ChangeDetectorRef }], propDecorators: { nzDirection: [{\n                type: Input\n            }], nzAlign: [{\n                type: Input\n            }], nzSplit: [{\n                type: Input\n            }], nzWrap: [{\n                type: Input\n            }], nzSize: [{\n                type: Input\n            }], items: [{\n                type: ContentChildren,\n                args: [NzSpaceItemDirective, { read: TemplateRef }]\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzSpaceModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzSpaceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.3.8\", ngImport: i0, type: NzSpaceModule, imports: [NzSpaceComponent, NzSpaceItemDirective], exports: [NzSpaceComponent, NzSpaceItemDirective] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzSpaceModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzSpaceModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NzSpaceComponent, NzSpaceItemDirective],\n                    exports: [NzSpaceComponent, NzSpaceItemDirective]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzSpaceComponent, NzSpaceItemDirective, NzSpaceModule };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}