{"ast":null,"code":"import { distance } from './util';\nvar EPSILON = 0.0001;\n/**\n * 使用牛顿切割法求最近的点\n * @param {number[]} xArr      点的 x 数组\n * @param {number[]} yArr      点的 y 数组\n * @param {number}   x         指定的点 x\n * @param {number}   y         指定的点 y\n * @param {Function} tCallback 差值函数\n */\nexport function nearestPoint(xArr, yArr, x, y, tCallback, length) {\n  var t;\n  var d = Infinity;\n  var v0 = [x, y];\n  var segNum = 20;\n  if (length && length > 200) {\n    segNum = length / 10;\n  }\n  var increaseRate = 1 / segNum;\n  var interval = increaseRate / 10;\n  for (var i = 0; i <= segNum; i++) {\n    var _t = i * increaseRate;\n    var v1 = [tCallback.apply(null, xArr.concat([_t])), tCallback.apply(null, yArr.concat([_t]))];\n    var d1 = distance(v0[0], v0[1], v1[0], v1[1]);\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n  // 提前终止\n  if (t === 0) {\n    return {\n      x: xArr[0],\n      y: yArr[0]\n    };\n  }\n  if (t === 1) {\n    var count = xArr.length;\n    return {\n      x: xArr[count - 1],\n      y: yArr[count - 1]\n    };\n  }\n  d = Infinity;\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON) {\n      break;\n    }\n    var prev = t - interval;\n    var next = t + interval;\n    var v1 = [tCallback.apply(null, xArr.concat([prev])), tCallback.apply(null, yArr.concat([prev]))];\n    var d1 = distance(v0[0], v0[1], v1[0], v1[1]);\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      var v2 = [tCallback.apply(null, xArr.concat([next])), tCallback.apply(null, yArr.concat([next]))];\n      var d2 = distance(v0[0], v0[1], v2[0], v2[1]);\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  }\n  return {\n    x: tCallback.apply(null, xArr.concat([t])),\n    y: tCallback.apply(null, yArr.concat([t]))\n  };\n}\n// 近似求解 https://community.khronos.org/t/3d-cubic-bezier-segment-length/62363/2\nexport function snapLength(xArr, yArr) {\n  var totalLength = 0;\n  var count = xArr.length;\n  for (var i = 0; i < count; i++) {\n    var x = xArr[i];\n    var y = yArr[i];\n    var nextX = xArr[(i + 1) % count];\n    var nextY = yArr[(i + 1) % count];\n    totalLength += distance(x, y, nextX, nextY);\n  }\n  return totalLength / 2;\n}","map":{"version":3,"names":["distance","EPSILON","nearestPoint","xArr","yArr","x","y","tCallback","length","t","d","Infinity","v0","segNum","increaseRate","interval","i","_t","v1","apply","concat","d1","count","prev","next","v2","d2","snapLength","totalLength","nextX","nextY"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g-math/esm/bezier.js"],"sourcesContent":["import { distance } from './util';\nvar EPSILON = 0.0001;\n/**\n * 使用牛顿切割法求最近的点\n * @param {number[]} xArr      点的 x 数组\n * @param {number[]} yArr      点的 y 数组\n * @param {number}   x         指定的点 x\n * @param {number}   y         指定的点 y\n * @param {Function} tCallback 差值函数\n */\nexport function nearestPoint(xArr, yArr, x, y, tCallback, length) {\n    var t;\n    var d = Infinity;\n    var v0 = [x, y];\n    var segNum = 20;\n    if (length && length > 200) {\n        segNum = length / 10;\n    }\n    var increaseRate = 1 / segNum;\n    var interval = increaseRate / 10;\n    for (var i = 0; i <= segNum; i++) {\n        var _t = i * increaseRate;\n        var v1 = [tCallback.apply(null, xArr.concat([_t])), tCallback.apply(null, yArr.concat([_t]))];\n        var d1 = distance(v0[0], v0[1], v1[0], v1[1]);\n        if (d1 < d) {\n            t = _t;\n            d = d1;\n        }\n    }\n    // 提前终止\n    if (t === 0) {\n        return {\n            x: xArr[0],\n            y: yArr[0],\n        };\n    }\n    if (t === 1) {\n        var count = xArr.length;\n        return {\n            x: xArr[count - 1],\n            y: yArr[count - 1],\n        };\n    }\n    d = Infinity;\n    for (var i = 0; i < 32; i++) {\n        if (interval < EPSILON) {\n            break;\n        }\n        var prev = t - interval;\n        var next = t + interval;\n        var v1 = [tCallback.apply(null, xArr.concat([prev])), tCallback.apply(null, yArr.concat([prev]))];\n        var d1 = distance(v0[0], v0[1], v1[0], v1[1]);\n        if (prev >= 0 && d1 < d) {\n            t = prev;\n            d = d1;\n        }\n        else {\n            var v2 = [tCallback.apply(null, xArr.concat([next])), tCallback.apply(null, yArr.concat([next]))];\n            var d2 = distance(v0[0], v0[1], v2[0], v2[1]);\n            if (next <= 1 && d2 < d) {\n                t = next;\n                d = d2;\n            }\n            else {\n                interval *= 0.5;\n            }\n        }\n    }\n    return {\n        x: tCallback.apply(null, xArr.concat([t])),\n        y: tCallback.apply(null, yArr.concat([t])),\n    };\n}\n// 近似求解 https://community.khronos.org/t/3d-cubic-bezier-segment-length/62363/2\nexport function snapLength(xArr, yArr) {\n    var totalLength = 0;\n    var count = xArr.length;\n    for (var i = 0; i < count; i++) {\n        var x = xArr[i];\n        var y = yArr[i];\n        var nextX = xArr[(i + 1) % count];\n        var nextY = yArr[(i + 1) % count];\n        totalLength += distance(x, y, nextX, nextY);\n    }\n    return totalLength / 2;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}