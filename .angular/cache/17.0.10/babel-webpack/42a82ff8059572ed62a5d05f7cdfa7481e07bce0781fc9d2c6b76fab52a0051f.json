{"ast":null,"code":"import { each, isNil, getEllipsisText, pick } from '@antv/util';\nimport { ellipsisString, strLen } from './text';\nvar ELLIPSIS_CODE = '\\u2026';\nvar ELLIPSIS_CODE_LENGTH = 2; // 省略号的长度\n/** 大数据量阈值 */\nvar OPTIMIZE_THRESHOLD = 400;\n/**\n * 针对大数据量做优化的 getMaxLabelWidth，做法不是直接去比较每一个 label 的最大宽度\n * 而是先通过比较每个 label 每个的字符串的长度，这里区分了下中英文字符\n * 最终是去字符串最“长”的那个 label 的宽度。\n * @param labels\n */\nfunction getMaxLabelWidthOptimized(labels) {\n  var texts = labels.map(function (label) {\n    var text = label.attr('text');\n    return isNil(text) ? '' : \"\" + text;\n  });\n  var maxLen = 0;\n  var maxIdx = 0;\n  for (var i = 0; i < texts.length; i += 1) {\n    var len = 0;\n    for (var j = 0; j <= texts[i].length; j += 1) {\n      var code = texts[i].charCodeAt(j);\n      if (code >= 19968 && code <= 40869) {\n        len += 2;\n      } else {\n        len += 1;\n      }\n    }\n    if (len > maxLen) {\n      maxLen = len;\n      maxIdx = i;\n    }\n  }\n  return labels[maxIdx].getBBox().width;\n}\n/** 获取最长的 label */\nexport function getMaxLabelWidth(labels) {\n  if (labels.length > OPTIMIZE_THRESHOLD) {\n    return getMaxLabelWidthOptimized(labels);\n  }\n  var max = 0;\n  each(labels, function (label) {\n    var bbox = label.getBBox();\n    var width = bbox.width;\n    if (max < width) {\n      max = width;\n    }\n  });\n  return max;\n}\n/** 获取label长度 */\nexport function getLabelLength(isVertical, label) {\n  var bbox = label.getCanvasBBox();\n  return isVertical ? bbox.width : bbox.height;\n}\n/* label长度是否超过约束值 */\nexport function testLabel(label, limitLength) {\n  return label.getBBox().width < limitLength;\n}\n/** 处理 text shape 的自动省略 */\nexport function ellipsisLabel(isVertical, label, limitLength, position) {\n  var _a;\n  if (position === void 0) {\n    position = 'tail';\n  }\n  var text = (_a = label.attr('text')) !== null && _a !== void 0 ? _a : ''; // 避免出现null、undefined\n  if (position === 'tail') {\n    // component 里的缩略处理做得很糟糕，文字长度测算完全不准确\n    // 这里暂时只对 tail 做处理\n    var font = pick(label.attr(), ['fontSize', 'fontFamily', 'fontWeight', 'fontStyle', 'fontVariant']);\n    var ellipsisText = getEllipsisText(text, limitLength, font, '…');\n    if (text !== ellipsisText) {\n      label.attr('text', ellipsisText);\n      label.set('tip', text);\n      return true;\n    }\n    label.set('tip', null);\n    return false;\n  }\n  var labelLength = getLabelLength(isVertical, label);\n  var codeLength = strLen(text);\n  var ellipsisFlag = false;\n  if (limitLength < labelLength) {\n    var reserveLength = Math.floor(limitLength / labelLength * codeLength) - ELLIPSIS_CODE_LENGTH; // 计算出来的应该保存的长度\n    var newText = void 0;\n    if (reserveLength >= 0) {\n      newText = ellipsisString(text, reserveLength, position);\n    } else {\n      newText = ELLIPSIS_CODE;\n    }\n    if (newText) {\n      label.attr('text', newText);\n      ellipsisFlag = true;\n    }\n  }\n  if (ellipsisFlag) {\n    label.set('tip', text);\n  } else {\n    label.set('tip', null);\n  }\n  return ellipsisFlag;\n}","map":{"version":3,"names":["each","isNil","getEllipsisText","pick","ellipsisString","strLen","ELLIPSIS_CODE","ELLIPSIS_CODE_LENGTH","OPTIMIZE_THRESHOLD","getMaxLabelWidthOptimized","labels","texts","map","label","text","attr","maxLen","maxIdx","i","length","len","j","code","charCodeAt","getBBox","width","getMaxLabelWidth","max","bbox","getLabelLength","isVertical","getCanvasBBox","height","testLabel","limitLength","ellipsisLabel","position","_a","font","ellipsisText","set","labelLength","codeLength","ellipsisFlag","reserveLength","Math","floor","newText"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/component/esm/util/label.js"],"sourcesContent":["import { each, isNil, getEllipsisText, pick } from '@antv/util';\nimport { ellipsisString, strLen } from './text';\nvar ELLIPSIS_CODE = '\\u2026';\nvar ELLIPSIS_CODE_LENGTH = 2; // 省略号的长度\n/** 大数据量阈值 */\nvar OPTIMIZE_THRESHOLD = 400;\n/**\n * 针对大数据量做优化的 getMaxLabelWidth，做法不是直接去比较每一个 label 的最大宽度\n * 而是先通过比较每个 label 每个的字符串的长度，这里区分了下中英文字符\n * 最终是去字符串最“长”的那个 label 的宽度。\n * @param labels\n */\nfunction getMaxLabelWidthOptimized(labels) {\n    var texts = labels.map(function (label) {\n        var text = label.attr('text');\n        return isNil(text) ? '' : \"\" + text;\n    });\n    var maxLen = 0;\n    var maxIdx = 0;\n    for (var i = 0; i < texts.length; i += 1) {\n        var len = 0;\n        for (var j = 0; j <= texts[i].length; j += 1) {\n            var code = texts[i].charCodeAt(j);\n            if (code >= 19968 && code <= 40869) {\n                len += 2;\n            }\n            else {\n                len += 1;\n            }\n        }\n        if (len > maxLen) {\n            maxLen = len;\n            maxIdx = i;\n        }\n    }\n    return labels[maxIdx].getBBox().width;\n}\n/** 获取最长的 label */\nexport function getMaxLabelWidth(labels) {\n    if (labels.length > OPTIMIZE_THRESHOLD) {\n        return getMaxLabelWidthOptimized(labels);\n    }\n    var max = 0;\n    each(labels, function (label) {\n        var bbox = label.getBBox();\n        var width = bbox.width;\n        if (max < width) {\n            max = width;\n        }\n    });\n    return max;\n}\n/** 获取label长度 */\nexport function getLabelLength(isVertical, label) {\n    var bbox = label.getCanvasBBox();\n    return isVertical ? bbox.width : bbox.height;\n}\n/* label长度是否超过约束值 */\nexport function testLabel(label, limitLength) {\n    return label.getBBox().width < limitLength;\n}\n/** 处理 text shape 的自动省略 */\nexport function ellipsisLabel(isVertical, label, limitLength, position) {\n    var _a;\n    if (position === void 0) { position = 'tail'; }\n    var text = (_a = label.attr('text')) !== null && _a !== void 0 ? _a : ''; // 避免出现null、undefined\n    if (position === 'tail') {\n        // component 里的缩略处理做得很糟糕，文字长度测算完全不准确\n        // 这里暂时只对 tail 做处理\n        var font = pick(label.attr(), ['fontSize', 'fontFamily', 'fontWeight', 'fontStyle', 'fontVariant']);\n        var ellipsisText = getEllipsisText(text, limitLength, font, '…');\n        if (text !== ellipsisText) {\n            label.attr('text', ellipsisText);\n            label.set('tip', text);\n            return true;\n        }\n        label.set('tip', null);\n        return false;\n    }\n    var labelLength = getLabelLength(isVertical, label);\n    var codeLength = strLen(text);\n    var ellipsisFlag = false;\n    if (limitLength < labelLength) {\n        var reserveLength = Math.floor((limitLength / labelLength) * codeLength) - ELLIPSIS_CODE_LENGTH; // 计算出来的应该保存的长度\n        var newText = void 0;\n        if (reserveLength >= 0) {\n            newText = ellipsisString(text, reserveLength, position);\n        }\n        else {\n            newText = ELLIPSIS_CODE;\n        }\n        if (newText) {\n            label.attr('text', newText);\n            ellipsisFlag = true;\n        }\n    }\n    if (ellipsisFlag) {\n        label.set('tip', text);\n    }\n    else {\n        label.set('tip', null);\n    }\n    return ellipsisFlag;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}