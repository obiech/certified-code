{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { isArray } from '@antv/util';\nimport Geometry from './base';\n/** 引入 Path 对应的 ShapeFactory */\nimport './shape/polygon';\n/**\n * Polygon 几何标记。\n * 常用于绘制色块图、日历图等。\n */\nvar Polygon = /** @class */function (_super) {\n  __extends(Polygon, _super);\n  function Polygon() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = 'polygon';\n    _this.shapeType = 'polygon';\n    _this.generatePoints = true;\n    return _this;\n  }\n  /**\n   * 获取 Shape 的关键点数据。\n   * @param obj\n   * @returns\n   */\n  Polygon.prototype.createShapePointsCfg = function (obj) {\n    var cfg = _super.prototype.createShapePointsCfg.call(this, obj);\n    var x = cfg.x;\n    var y = cfg.y;\n    var temp;\n    // x y 都是数组时，不做处理\n    if (!(isArray(x) && isArray(y))) {\n      var xScale = this.getXScale();\n      var yScale = this.getYScale();\n      var xCount = xScale.values.length;\n      var yCount = yScale.values.length;\n      var xOffset = 0.5 * 1 / xCount;\n      var yOffset = 0.5 * 1 / yCount;\n      if (xScale.isCategory && yScale.isCategory) {\n        // 如果x,y都是分类\n        x = [x - xOffset, x - xOffset, x + xOffset, x + xOffset];\n        y = [y - yOffset, y + yOffset, y + yOffset, y - yOffset];\n      } else if (isArray(x)) {\n        // x 是数组\n        temp = x;\n        x = [temp[0], temp[0], temp[1], temp[1]];\n        y = [y - yOffset / 2, y + yOffset / 2, y + yOffset / 2, y - yOffset / 2];\n      } else if (isArray(y)) {\n        // y 是数组\n        temp = y;\n        y = [temp[0], temp[1], temp[1], temp[0]];\n        x = [x - xOffset / 2, x - xOffset / 2, x + xOffset / 2, x + xOffset / 2];\n      }\n      cfg.x = x;\n      cfg.y = y;\n    }\n    return cfg;\n  };\n  return Polygon;\n}(Geometry);\nexport default Polygon;","map":{"version":3,"names":["__extends","isArray","Geometry","Polygon","_super","_this","apply","arguments","type","shapeType","generatePoints","prototype","createShapePointsCfg","obj","cfg","call","x","y","temp","xScale","getXScale","yScale","getYScale","xCount","values","length","yCount","xOffset","yOffset","isCategory"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g2/esm/geometry/polygon.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { isArray } from '@antv/util';\nimport Geometry from './base';\n/** 引入 Path 对应的 ShapeFactory */\nimport './shape/polygon';\n/**\n * Polygon 几何标记。\n * 常用于绘制色块图、日历图等。\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    function Polygon() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'polygon';\n        _this.shapeType = 'polygon';\n        _this.generatePoints = true;\n        return _this;\n    }\n    /**\n     * 获取 Shape 的关键点数据。\n     * @param obj\n     * @returns\n     */\n    Polygon.prototype.createShapePointsCfg = function (obj) {\n        var cfg = _super.prototype.createShapePointsCfg.call(this, obj);\n        var x = cfg.x;\n        var y = cfg.y;\n        var temp;\n        // x y 都是数组时，不做处理\n        if (!(isArray(x) && isArray(y))) {\n            var xScale = this.getXScale();\n            var yScale = this.getYScale();\n            var xCount = xScale.values.length;\n            var yCount = yScale.values.length;\n            var xOffset = (0.5 * 1) / xCount;\n            var yOffset = (0.5 * 1) / yCount;\n            if (xScale.isCategory && yScale.isCategory) {\n                // 如果x,y都是分类\n                x = [x - xOffset, x - xOffset, x + xOffset, x + xOffset];\n                y = [y - yOffset, y + yOffset, y + yOffset, y - yOffset];\n            }\n            else if (isArray(x)) {\n                // x 是数组\n                temp = x;\n                x = [temp[0], temp[0], temp[1], temp[1]];\n                y = [y - yOffset / 2, y + yOffset / 2, y + yOffset / 2, y - yOffset / 2];\n            }\n            else if (isArray(y)) {\n                // y 是数组\n                temp = y;\n                y = [temp[0], temp[1], temp[1], temp[0]];\n                x = [x - xOffset / 2, x - xOffset / 2, x + xOffset / 2, x + xOffset / 2];\n            }\n            cfg.x = x;\n            cfg.y = y;\n        }\n        return cfg;\n    };\n    return Polygon;\n}(Geometry));\nexport default Polygon;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}