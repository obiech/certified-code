{"ast":null,"code":"import { isAllowCapture, multiplyVec2, invert } from '@antv/g-base';\nfunction invertFromMatrix(v, matrix) {\n  if (matrix) {\n    var invertMatrix = invert(matrix);\n    return multiplyVec2(invertMatrix, v);\n  }\n  return v;\n}\nfunction getRefXY(element, x, y) {\n  // @ts-ignore\n  var totalMatrix = element.getTotalMatrix();\n  if (totalMatrix) {\n    var _a = invertFromMatrix([x, y, 1], totalMatrix),\n      refX = _a[0],\n      refY = _a[1];\n    return [refX, refY];\n  }\n  return [x, y];\n}\n// 拾取前的检测，只有通过检测才能继续拾取\nfunction preTest(element, x, y) {\n  // @ts-ignore\n  if (element.isCanvas && element.isCanvas()) {\n    return true;\n  }\n  // 不允许被拾取，则返回 null\n  // @ts-ignore\n  if (!isAllowCapture(element) || element.cfg.isInView === false) {\n    return false;\n  }\n  if (element.cfg.clipShape) {\n    // 如果存在 clip\n    var _a = getRefXY(element, x, y),\n      refX = _a[0],\n      refY = _a[1];\n    if (element.isClipped(refX, refY)) {\n      return false;\n    }\n  }\n  // @ts-ignore ，这个地方调用过于频繁\n  var bbox = element.cfg.cacheCanvasBBox || element.getCanvasBBox();\n  // 如果没有缓存 bbox，则说明不可见\n  // 注释掉的这段可能会加速拾取，上面的语句改写成 const bbox = element.cfg.cacheCanvasBBox;\n  // 这时候的拾取假设图形/分组在上一次绘制都在视窗内，但是上面已经判定了 isInView 所以意义不大\n  // 现在还调用 element.getCanvasBBox(); 一个很大的原因是便于单元测试\n  // if (!bbox) {\n  //   return false;\n  // }\n  if (!(x >= bbox.minX && x <= bbox.maxX && y >= bbox.minY && y <= bbox.maxY)) {\n    return false;\n  }\n  return true;\n}\n// 这个方法复写了 g-base 的 getShape\nexport function getShape(container, x, y) {\n  // 没有通过检测，则返回 null\n  if (!preTest(container, x, y)) {\n    return null;\n  }\n  var shape = null;\n  var children = container.getChildren();\n  var count = children.length;\n  for (var i = count - 1; i >= 0; i--) {\n    var child = children[i];\n    if (child.isGroup()) {\n      shape = getShape(child, x, y);\n    } else if (preTest(child, x, y)) {\n      var curShape = child;\n      var _a = getRefXY(child, x, y),\n        refX = _a[0],\n        refY = _a[1];\n      // @ts-ignore\n      if (curShape.isInShape(refX, refY)) {\n        shape = child;\n      }\n    }\n    if (shape) {\n      break;\n    }\n  }\n  return shape;\n}","map":{"version":3,"names":["isAllowCapture","multiplyVec2","invert","invertFromMatrix","v","matrix","invertMatrix","getRefXY","element","x","y","totalMatrix","getTotalMatrix","_a","refX","refY","preTest","isCanvas","cfg","isInView","clipShape","isClipped","bbox","cacheCanvasBBox","getCanvasBBox","minX","maxX","minY","maxY","getShape","container","shape","children","getChildren","count","length","i","child","isGroup","curShape","isInShape"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g-canvas/esm/util/hit.js"],"sourcesContent":["import { isAllowCapture, multiplyVec2, invert } from '@antv/g-base';\nfunction invertFromMatrix(v, matrix) {\n    if (matrix) {\n        var invertMatrix = invert(matrix);\n        return multiplyVec2(invertMatrix, v);\n    }\n    return v;\n}\nfunction getRefXY(element, x, y) {\n    // @ts-ignore\n    var totalMatrix = element.getTotalMatrix();\n    if (totalMatrix) {\n        var _a = invertFromMatrix([x, y, 1], totalMatrix), refX = _a[0], refY = _a[1];\n        return [refX, refY];\n    }\n    return [x, y];\n}\n// 拾取前的检测，只有通过检测才能继续拾取\nfunction preTest(element, x, y) {\n    // @ts-ignore\n    if (element.isCanvas && element.isCanvas()) {\n        return true;\n    }\n    // 不允许被拾取，则返回 null\n    // @ts-ignore\n    if (!isAllowCapture(element) || element.cfg.isInView === false) {\n        return false;\n    }\n    if (element.cfg.clipShape) {\n        // 如果存在 clip\n        var _a = getRefXY(element, x, y), refX = _a[0], refY = _a[1];\n        if (element.isClipped(refX, refY)) {\n            return false;\n        }\n    }\n    // @ts-ignore ，这个地方调用过于频繁\n    var bbox = element.cfg.cacheCanvasBBox || element.getCanvasBBox();\n    // 如果没有缓存 bbox，则说明不可见\n    // 注释掉的这段可能会加速拾取，上面的语句改写成 const bbox = element.cfg.cacheCanvasBBox;\n    // 这时候的拾取假设图形/分组在上一次绘制都在视窗内，但是上面已经判定了 isInView 所以意义不大\n    // 现在还调用 element.getCanvasBBox(); 一个很大的原因是便于单元测试\n    // if (!bbox) {\n    //   return false;\n    // }\n    if (!(x >= bbox.minX && x <= bbox.maxX && y >= bbox.minY && y <= bbox.maxY)) {\n        return false;\n    }\n    return true;\n}\n// 这个方法复写了 g-base 的 getShape\nexport function getShape(container, x, y) {\n    // 没有通过检测，则返回 null\n    if (!preTest(container, x, y)) {\n        return null;\n    }\n    var shape = null;\n    var children = container.getChildren();\n    var count = children.length;\n    for (var i = count - 1; i >= 0; i--) {\n        var child = children[i];\n        if (child.isGroup()) {\n            shape = getShape(child, x, y);\n        }\n        else if (preTest(child, x, y)) {\n            var curShape = child;\n            var _a = getRefXY(child, x, y), refX = _a[0], refY = _a[1];\n            // @ts-ignore\n            if (curShape.isInShape(refX, refY)) {\n                shape = child;\n            }\n        }\n        if (shape) {\n            break;\n        }\n    }\n    return shape;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}