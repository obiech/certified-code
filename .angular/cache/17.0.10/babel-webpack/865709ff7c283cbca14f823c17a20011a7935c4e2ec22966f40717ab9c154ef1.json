{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\nimport { each, groupBy, uniq, map, size } from '@antv/util';\nimport { checkShapeOverlap } from '../../util';\nfunction filterLabel(labels) {\n  var MAX_CNT = 500; // 最多显示 500 个数据标签\n  var filteredLabels = [];\n  var pages = Math.max(Math.floor(labels.length / MAX_CNT), 1);\n  each(labels, function (label, idx) {\n    if (idx % pages === 0) {\n      filteredLabels.push(label);\n    } else {\n      label.set('visible', false);\n    }\n  });\n  return filteredLabels;\n}\n/**\n * 为 interval geometry 定制的数据标签重叠自动隐藏布局方法\n * @param items\n * @param labels\n * @param shapes\n */\nexport function intervalHideOverlap(items, labels, shapes) {\n  var _a;\n  if (shapes.length === 0) {\n    return;\n  }\n  var element = (_a = shapes[0]) === null || _a === void 0 ? void 0 : _a.get('element');\n  var geometry = element === null || element === void 0 ? void 0 : element.geometry;\n  if (!geometry || geometry.type !== 'interval') {\n    return;\n  }\n  var filteredLabels = filterLabel(labels);\n  var _b = __read(geometry.getXYFields(), 1),\n    xField = _b[0];\n  var dones = [];\n  var todo = [];\n  var groupedLabels = groupBy(filteredLabels, function (label) {\n    return label.get('data')[xField];\n  });\n  var xValues = uniq(map(filteredLabels, function (label) {\n    return label.get('data')[xField];\n  }));\n  var xValue;\n  filteredLabels.forEach(function (label) {\n    label.set('visible', true);\n  });\n  var addCurrentGroup = function (curItems) {\n    if (curItems) {\n      if (curItems.length) {\n        // 最后一个\n        todo.push(curItems.pop());\n      }\n      todo.push.apply(todo, __spreadArray([], __read(curItems), false));\n    }\n  };\n  if (size(xValues) > 0) {\n    // 第一组\n    xValue = xValues.shift();\n    addCurrentGroup(groupedLabels[xValue]);\n  }\n  if (size(xValues) > 0) {\n    // 最后一组\n    xValue = xValues.pop();\n    addCurrentGroup(groupedLabels[xValue]);\n  }\n  each(xValues.reverse(), function (val) {\n    // 其他组\n    addCurrentGroup(groupedLabels[val]);\n  });\n  while (todo.length > 0) {\n    var cur = todo.shift();\n    if (cur.get('visible')) {\n      if (checkShapeOverlap(cur, dones)) {\n        cur.set('visible', false);\n      } else {\n        dones.push(cur);\n      }\n    }\n  }\n}","map":{"version":3,"names":["__read","__spreadArray","each","groupBy","uniq","map","size","checkShapeOverlap","filterLabel","labels","MAX_CNT","filteredLabels","pages","Math","max","floor","length","label","idx","push","set","intervalHideOverlap","items","shapes","_a","element","get","geometry","type","_b","getXYFields","xField","dones","todo","groupedLabels","xValues","xValue","forEach","addCurrentGroup","curItems","pop","apply","shift","reverse","val","cur"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g2/esm/geometry/label/layout/interval/hide-overlap.js"],"sourcesContent":["import { __read, __spreadArray } from \"tslib\";\nimport { each, groupBy, uniq, map, size } from '@antv/util';\nimport { checkShapeOverlap } from '../../util';\nfunction filterLabel(labels) {\n    var MAX_CNT = 500; // 最多显示 500 个数据标签\n    var filteredLabels = [];\n    var pages = Math.max(Math.floor(labels.length / MAX_CNT), 1);\n    each(labels, function (label, idx) {\n        if (idx % pages === 0) {\n            filteredLabels.push(label);\n        }\n        else {\n            label.set('visible', false);\n        }\n    });\n    return filteredLabels;\n}\n/**\n * 为 interval geometry 定制的数据标签重叠自动隐藏布局方法\n * @param items\n * @param labels\n * @param shapes\n */\nexport function intervalHideOverlap(items, labels, shapes) {\n    var _a;\n    if (shapes.length === 0) {\n        return;\n    }\n    var element = (_a = shapes[0]) === null || _a === void 0 ? void 0 : _a.get('element');\n    var geometry = element === null || element === void 0 ? void 0 : element.geometry;\n    if (!geometry || geometry.type !== 'interval') {\n        return;\n    }\n    var filteredLabels = filterLabel(labels);\n    var _b = __read(geometry.getXYFields(), 1), xField = _b[0];\n    var dones = [];\n    var todo = [];\n    var groupedLabels = groupBy(filteredLabels, function (label) { return label.get('data')[xField]; });\n    var xValues = uniq(map(filteredLabels, function (label) { return label.get('data')[xField]; }));\n    var xValue;\n    filteredLabels.forEach(function (label) {\n        label.set('visible', true);\n    });\n    var addCurrentGroup = function (curItems) {\n        if (curItems) {\n            if (curItems.length) {\n                // 最后一个\n                todo.push(curItems.pop());\n            }\n            todo.push.apply(todo, __spreadArray([], __read(curItems), false));\n        }\n    };\n    if (size(xValues) > 0) {\n        // 第一组\n        xValue = xValues.shift();\n        addCurrentGroup(groupedLabels[xValue]);\n    }\n    if (size(xValues) > 0) {\n        // 最后一组\n        xValue = xValues.pop();\n        addCurrentGroup(groupedLabels[xValue]);\n    }\n    each(xValues.reverse(), function (val) {\n        // 其他组\n        addCurrentGroup(groupedLabels[val]);\n    });\n    while (todo.length > 0) {\n        var cur = todo.shift();\n        if (cur.get('visible')) {\n            if (checkShapeOverlap(cur, dones)) {\n                cur.set('visible', false);\n            }\n            else {\n                dones.push(cur);\n            }\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}