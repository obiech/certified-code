{"ast":null,"code":"import { __decorate } from 'tslib';\nimport { NgStyle } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Optional, Host, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { zoomBadgeMotion } from 'ng-zorro-antd/core/animation';\nimport * as i1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport * as i4 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i3 from 'ng-zorro-antd/core/no-animation';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\nimport * as i2 from '@angular/cdk/bidi';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nfunction NzBadgeSupComponent_Conditional_0_For_1_Conditional_1_For_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 1);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const p_r10 = ctx.$implicit;\n    const i_r4 = i0.ɵɵnextContext(2).$index;\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"current\", p_r10 === ctx_r9.countArray[i_r4]);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", p_r10, \" \");\n  }\n}\nfunction NzBadgeSupComponent_Conditional_0_For_1_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵrepeaterCreate(0, NzBadgeSupComponent_Conditional_0_For_1_Conditional_1_For_1_Template, 2, 3, \"p\", 2, i0.ɵɵrepeaterTrackByIdentity);\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(3);\n    i0.ɵɵrepeater(ctx_r8.countSingleArray);\n  }\n}\nfunction NzBadgeSupComponent_Conditional_0_For_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 0);\n    i0.ɵɵtemplate(1, NzBadgeSupComponent_Conditional_0_For_1_Conditional_1_Template, 2, 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r4 = ctx.$index;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"transform\", \"translateY(\" + -ctx_r2.countArray[i_r4] * 100 + \"%)\");\n    i0.ɵɵproperty(\"nzNoAnimation\", ctx_r2.noAnimation);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(1, !ctx_r2.nzDot && ctx_r2.countArray[i_r4] !== undefined ? 1 : -1);\n  }\n}\nfunction NzBadgeSupComponent_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵrepeaterCreate(0, NzBadgeSupComponent_Conditional_0_For_1_Template, 2, 4, \"span\", 3, i0.ɵɵrepeaterTrackByIdentity);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵrepeater(ctx_r0.maxNumberArray);\n  }\n}\nfunction NzBadgeSupComponent_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.nzOverflowCount, \"+ \");\n  }\n}\nfunction NzBadgeComponent_Conditional_0_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r2.nzText);\n  }\n}\nfunction NzBadgeComponent_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 1);\n    i0.ɵɵelementStart(1, \"span\", 2);\n    i0.ɵɵtemplate(2, NzBadgeComponent_Conditional_0_ng_container_2_Template, 2, 1, \"ng-container\", 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMapInterpolate1(\"ant-badge-status-dot ant-badge-status-\", ctx_r0.nzStatus || ctx_r0.presetColor, \"\");\n    i0.ɵɵstyleProp(\"background\", !ctx_r0.presetColor && ctx_r0.nzColor);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r0.nzStyle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r0.nzText);\n  }\n}\nfunction NzBadgeComponent_ng_container_2_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-badge-sup\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"nzOffset\", ctx_r3.nzOffset)(\"nzSize\", ctx_r3.nzSize)(\"nzTitle\", ctx_r3.nzTitle)(\"nzStyle\", ctx_r3.nzStyle)(\"nzDot\", ctx_r3.nzDot)(\"nzOverflowCount\", ctx_r3.nzOverflowCount)(\"disableAnimation\", !!(ctx_r3.nzStandalone || ctx_r3.nzStatus || ctx_r3.nzColor || (ctx_r3.noAnimation == null ? null : ctx_r3.noAnimation.nzNoAnimation)))(\"nzCount\", ctx_r3.nzCount)(\"noAnimation\", !!(ctx_r3.noAnimation == null ? null : ctx_r3.noAnimation.nzNoAnimation));\n  }\n}\nfunction NzBadgeComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzBadgeComponent_ng_container_2_Conditional_1_Template, 1, 9, \"nz-badge-sup\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(1, ctx_r1.showSup ? 1 : -1);\n  }\n}\nconst _c0 = [\"*\"];\nfunction NzRibbonComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.nzText);\n  }\n}\nclass NzBadgeSupComponent {\n  constructor() {\n    this.nzStyle = null;\n    this.nzDot = false;\n    this.nzOverflowCount = 99;\n    this.disableAnimation = false;\n    this.noAnimation = false;\n    this.nzSize = 'default';\n    this.maxNumberArray = [];\n    this.countArray = [];\n    this.count = 0;\n    this.countSingleArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n  }\n  generateMaxNumberArray() {\n    this.maxNumberArray = this.nzOverflowCount.toString().split('');\n  }\n  ngOnInit() {\n    this.generateMaxNumberArray();\n  }\n  ngOnChanges(changes) {\n    const {\n      nzOverflowCount,\n      nzCount\n    } = changes;\n    if (nzCount && typeof nzCount.currentValue === 'number') {\n      this.count = Math.max(0, nzCount.currentValue);\n      this.countArray = this.count.toString().split('').map(item => +item);\n    }\n    if (nzOverflowCount) {\n      this.generateMaxNumberArray();\n    }\n  }\n  static {\n    this.ɵfac = function NzBadgeSupComponent_Factory(t) {\n      return new (t || NzBadgeSupComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzBadgeSupComponent,\n      selectors: [[\"nz-badge-sup\"]],\n      hostAttrs: [1, \"ant-scroll-number\"],\n      hostVars: 17,\n      hostBindings: function NzBadgeSupComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"title\", ctx.nzTitle === null ? \"\" : ctx.nzTitle || ctx.nzCount);\n          i0.ɵɵsyntheticHostProperty(\"@.disabled\", ctx.disableAnimation)(\"@zoomBadgeMotion\", undefined);\n          i0.ɵɵstyleMap(ctx.nzStyle);\n          i0.ɵɵstyleProp(\"right\", ctx.nzOffset && ctx.nzOffset[0] ? -ctx.nzOffset[0] : null, \"px\")(\"margin-top\", ctx.nzOffset && ctx.nzOffset[1] ? ctx.nzOffset[1] : null, \"px\");\n          i0.ɵɵclassProp(\"ant-badge-count\", !ctx.nzDot)(\"ant-badge-count-sm\", ctx.nzSize === \"small\")(\"ant-badge-dot\", ctx.nzDot)(\"ant-badge-multiple-words\", ctx.countArray.length >= 2);\n        }\n      },\n      inputs: {\n        nzOffset: \"nzOffset\",\n        nzTitle: \"nzTitle\",\n        nzStyle: \"nzStyle\",\n        nzDot: \"nzDot\",\n        nzOverflowCount: \"nzOverflowCount\",\n        disableAnimation: \"disableAnimation\",\n        nzCount: \"nzCount\",\n        noAnimation: \"noAnimation\",\n        nzSize: \"nzSize\"\n      },\n      exportAs: [\"nzBadgeSup\"],\n      standalone: true,\n      features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      decls: 2,\n      vars: 1,\n      consts: [[1, \"ant-scroll-number-only\", 3, \"nzNoAnimation\"], [1, \"ant-scroll-number-only-unit\"], [\"class\", \"ant-scroll-number-only-unit\", 3, \"current\"], [\"class\", \"ant-scroll-number-only\", 3, \"nzNoAnimation\", \"transform\"]],\n      template: function NzBadgeSupComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, NzBadgeSupComponent_Conditional_0_Template, 2, 0)(1, NzBadgeSupComponent_Conditional_1_Template, 1, 1);\n        }\n        if (rf & 2) {\n          i0.ɵɵconditional(0, ctx.count <= ctx.nzOverflowCount ? 0 : 1);\n        }\n      },\n      dependencies: [NzNoAnimationDirective],\n      encapsulation: 2,\n      data: {\n        animation: [zoomBadgeMotion]\n      },\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzBadgeSupComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-badge-sup',\n      exportAs: 'nzBadgeSup',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [zoomBadgeMotion],\n      standalone: true,\n      imports: [NzNoAnimationDirective],\n      template: `\n    @if (count <= nzOverflowCount) {\n      @for (n of maxNumberArray; track n; let i = $index) {\n        <span\n          [nzNoAnimation]=\"noAnimation\"\n          class=\"ant-scroll-number-only\"\n          [style.transform]=\"'translateY(' + -countArray[i] * 100 + '%)'\"\n        >\n          @if (!nzDot && countArray[i] !== undefined) {\n            @for (p of countSingleArray; track p) {\n              <p class=\"ant-scroll-number-only-unit\" [class.current]=\"p === countArray[i]\">\n                {{ p }}\n              </p>\n            }\n          }\n        </span>\n      }\n    } @else {\n      {{ nzOverflowCount }}+\n    }\n  `,\n      host: {\n        class: 'ant-scroll-number',\n        '[@.disabled]': `disableAnimation`,\n        '[@zoomBadgeMotion]': '',\n        '[attr.title]': `nzTitle === null ? '' : nzTitle || nzCount`,\n        '[style]': `nzStyle`,\n        '[style.right.px]': `nzOffset && nzOffset[0] ? -nzOffset[0] : null`,\n        '[style.margin-top.px]': `nzOffset && nzOffset[1] ? nzOffset[1] : null`,\n        '[class.ant-badge-count]': `!nzDot`,\n        '[class.ant-badge-count-sm]': `nzSize === 'small'`,\n        '[class.ant-badge-dot]': `nzDot`,\n        '[class.ant-badge-multiple-words]': `countArray.length >= 2`\n      }\n    }]\n  }], () => [], {\n    nzOffset: [{\n      type: Input\n    }],\n    nzTitle: [{\n      type: Input\n    }],\n    nzStyle: [{\n      type: Input\n    }],\n    nzDot: [{\n      type: Input\n    }],\n    nzOverflowCount: [{\n      type: Input\n    }],\n    disableAnimation: [{\n      type: Input\n    }],\n    nzCount: [{\n      type: Input\n    }],\n    noAnimation: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst badgePresetColors = ['pink', 'red', 'yellow', 'orange', 'cyan', 'green', 'blue', 'purple', 'geekblue', 'magenta', 'volcano', 'gold', 'lime'];\nconst NZ_CONFIG_MODULE_NAME = 'badge';\nclass NzBadgeComponent {\n  constructor(nzConfigService, renderer, cdr, elementRef, directionality, noAnimation) {\n    this.nzConfigService = nzConfigService;\n    this.renderer = renderer;\n    this.cdr = cdr;\n    this.elementRef = elementRef;\n    this.directionality = directionality;\n    this.noAnimation = noAnimation;\n    this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n    this.showSup = false;\n    this.presetColor = null;\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n    this.nzShowZero = false;\n    this.nzShowDot = true;\n    this.nzStandalone = false;\n    this.nzDot = false;\n    this.nzOverflowCount = 99;\n    this.nzColor = undefined;\n    this.nzStyle = null;\n    this.nzText = null;\n    this.nzSize = 'default';\n  }\n  ngOnInit() {\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n      this.prepareBadgeForRtl();\n      this.cdr.detectChanges();\n    });\n    this.dir = this.directionality.value;\n    this.prepareBadgeForRtl();\n  }\n  ngOnChanges(changes) {\n    const {\n      nzColor,\n      nzShowDot,\n      nzDot,\n      nzCount,\n      nzShowZero\n    } = changes;\n    if (nzColor) {\n      this.presetColor = this.nzColor && badgePresetColors.indexOf(this.nzColor) !== -1 ? this.nzColor : null;\n    }\n    if (nzShowDot || nzDot || nzCount || nzShowZero) {\n      this.showSup = this.nzShowDot && this.nzDot || typeof this.nzCount === 'number' && this.nzCount > 0 || typeof this.nzCount === 'number' && this.nzCount <= 0 && this.nzShowZero;\n    }\n  }\n  prepareBadgeForRtl() {\n    if (this.isRtlLayout) {\n      this.renderer.addClass(this.elementRef.nativeElement, 'ant-badge-rtl');\n    } else {\n      this.renderer.removeClass(this.elementRef.nativeElement, 'ant-badge-rtl');\n    }\n  }\n  get isRtlLayout() {\n    return this.dir === 'rtl';\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  static {\n    this.ɵfac = function NzBadgeComponent_Factory(t) {\n      return new (t || NzBadgeComponent)(i0.ɵɵdirectiveInject(i1.NzConfigService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵdirectiveInject(i3.NzNoAnimationDirective, 9));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzBadgeComponent,\n      selectors: [[\"nz-badge\"]],\n      hostAttrs: [1, \"ant-badge\"],\n      hostVars: 4,\n      hostBindings: function NzBadgeComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ant-badge-status\", ctx.nzStatus)(\"ant-badge-not-a-wrapper\", !!(ctx.nzStandalone || ctx.nzStatus || ctx.nzColor));\n        }\n      },\n      inputs: {\n        nzShowZero: \"nzShowZero\",\n        nzShowDot: \"nzShowDot\",\n        nzStandalone: \"nzStandalone\",\n        nzDot: \"nzDot\",\n        nzOverflowCount: \"nzOverflowCount\",\n        nzColor: \"nzColor\",\n        nzStyle: \"nzStyle\",\n        nzText: \"nzText\",\n        nzTitle: \"nzTitle\",\n        nzStatus: \"nzStatus\",\n        nzCount: \"nzCount\",\n        nzOffset: \"nzOffset\",\n        nzSize: \"nzSize\"\n      },\n      exportAs: [\"nzBadge\"],\n      standalone: true,\n      features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c0,\n      decls: 3,\n      vars: 2,\n      consts: [[4, \"nzStringTemplateOutlet\"], [3, \"ngStyle\"], [1, \"ant-badge-status-text\"], [3, \"nzOffset\", \"nzSize\", \"nzTitle\", \"nzStyle\", \"nzDot\", \"nzOverflowCount\", \"disableAnimation\", \"nzCount\", \"noAnimation\"]],\n      template: function NzBadgeComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵtemplate(0, NzBadgeComponent_Conditional_0_Template, 3, 7);\n          i0.ɵɵprojection(1);\n          i0.ɵɵtemplate(2, NzBadgeComponent_ng_container_2_Template, 2, 1, \"ng-container\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵconditional(0, ctx.nzStatus || ctx.nzColor ? 0 : -1);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.nzCount);\n        }\n      },\n      dependencies: [NgStyle, NzBadgeSupComponent, NzOutletModule, i4.NzStringTemplateOutletDirective],\n      encapsulation: 2,\n      data: {\n        animation: [zoomBadgeMotion]\n      },\n      changeDetection: 0\n    });\n  }\n}\n__decorate([InputBoolean()], NzBadgeComponent.prototype, \"nzShowZero\", void 0);\n__decorate([InputBoolean()], NzBadgeComponent.prototype, \"nzShowDot\", void 0);\n__decorate([InputBoolean()], NzBadgeComponent.prototype, \"nzStandalone\", void 0);\n__decorate([InputBoolean()], NzBadgeComponent.prototype, \"nzDot\", void 0);\n__decorate([WithConfig()], NzBadgeComponent.prototype, \"nzOverflowCount\", void 0);\n__decorate([WithConfig()], NzBadgeComponent.prototype, \"nzColor\", void 0);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzBadgeComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-badge',\n      exportAs: 'nzBadge',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [zoomBadgeMotion],\n      standalone: true,\n      imports: [NgStyle, NzBadgeSupComponent, NzOutletModule],\n      template: `\n    @if (nzStatus || nzColor) {\n      <span\n        class=\"ant-badge-status-dot ant-badge-status-{{ nzStatus || presetColor }}\"\n        [style.background]=\"!presetColor && nzColor\"\n        [ngStyle]=\"nzStyle\"\n      ></span>\n      <span class=\"ant-badge-status-text\">\n        <ng-container *nzStringTemplateOutlet=\"nzText\">{{ nzText }}</ng-container>\n      </span>\n    }\n    <ng-content />\n    <ng-container *nzStringTemplateOutlet=\"nzCount\">\n      @if (showSup) {\n        <nz-badge-sup\n          [nzOffset]=\"nzOffset\"\n          [nzSize]=\"nzSize\"\n          [nzTitle]=\"nzTitle\"\n          [nzStyle]=\"nzStyle\"\n          [nzDot]=\"nzDot\"\n          [nzOverflowCount]=\"nzOverflowCount\"\n          [disableAnimation]=\"!!(nzStandalone || nzStatus || nzColor || noAnimation?.nzNoAnimation)\"\n          [nzCount]=\"nzCount\"\n          [noAnimation]=\"!!noAnimation?.nzNoAnimation\"\n        />\n      }\n    </ng-container>\n  `,\n      host: {\n        class: 'ant-badge',\n        '[class.ant-badge-status]': 'nzStatus',\n        '[class.ant-badge-not-a-wrapper]': '!!(nzStandalone || nzStatus || nzColor)'\n      }\n    }]\n  }], () => [{\n    type: i1.NzConfigService\n  }, {\n    type: i0.Renderer2\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i2.Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i3.NzNoAnimationDirective,\n    decorators: [{\n      type: Host\n    }, {\n      type: Optional\n    }]\n  }], {\n    nzShowZero: [{\n      type: Input\n    }],\n    nzShowDot: [{\n      type: Input\n    }],\n    nzStandalone: [{\n      type: Input\n    }],\n    nzDot: [{\n      type: Input\n    }],\n    nzOverflowCount: [{\n      type: Input\n    }],\n    nzColor: [{\n      type: Input\n    }],\n    nzStyle: [{\n      type: Input\n    }],\n    nzText: [{\n      type: Input\n    }],\n    nzTitle: [{\n      type: Input\n    }],\n    nzStatus: [{\n      type: Input\n    }],\n    nzCount: [{\n      type: Input\n    }],\n    nzOffset: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzRibbonComponent {\n  constructor() {\n    this.nzPlacement = 'end';\n    this.nzText = null;\n    this.presetColor = null;\n  }\n  ngOnChanges(changes) {\n    const {\n      nzColor\n    } = changes;\n    if (nzColor) {\n      this.presetColor = this.nzColor && badgePresetColors.indexOf(this.nzColor) !== -1 ? this.nzColor : null;\n    }\n  }\n  static {\n    this.ɵfac = function NzRibbonComponent_Factory(t) {\n      return new (t || NzRibbonComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzRibbonComponent,\n      selectors: [[\"nz-ribbon\"]],\n      hostAttrs: [1, \"ant-ribbon-wrapper\"],\n      inputs: {\n        nzColor: \"nzColor\",\n        nzPlacement: \"nzPlacement\",\n        nzText: \"nzText\"\n      },\n      exportAs: [\"nzRibbon\"],\n      standalone: true,\n      features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c0,\n      decls: 4,\n      vars: 11,\n      consts: [[1, \"ant-ribbon\"], [4, \"nzStringTemplateOutlet\"], [1, \"ant-ribbon-corner\"], [1, \"ant-ribbon-text\"]],\n      template: function NzRibbonComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n          i0.ɵɵelementStart(1, \"div\", 0);\n          i0.ɵɵtemplate(2, NzRibbonComponent_ng_container_2_Template, 3, 1, \"ng-container\", 1);\n          i0.ɵɵelement(3, \"div\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵclassMap(ctx.presetColor && \"ant-ribbon-color-\" + ctx.presetColor);\n          i0.ɵɵstyleProp(\"background-color\", !ctx.presetColor && ctx.nzColor);\n          i0.ɵɵclassProp(\"ant-ribbon-placement-end\", ctx.nzPlacement === \"end\")(\"ant-ribbon-placement-start\", ctx.nzPlacement === \"start\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.nzText);\n          i0.ɵɵadvance();\n          i0.ɵɵstyleProp(\"color\", !ctx.presetColor && ctx.nzColor);\n        }\n      },\n      dependencies: [NzOutletModule, i4.NzStringTemplateOutletDirective],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzRibbonComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-ribbon',\n      exportAs: 'nzRibbon',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true,\n      imports: [NzOutletModule],\n      template: `\n    <ng-content></ng-content>\n    <div\n      class=\"ant-ribbon\"\n      [class]=\"presetColor && 'ant-ribbon-color-' + presetColor\"\n      [class.ant-ribbon-placement-end]=\"nzPlacement === 'end'\"\n      [class.ant-ribbon-placement-start]=\"nzPlacement === 'start'\"\n      [style.background-color]=\"!presetColor && nzColor\"\n    >\n      <ng-container *nzStringTemplateOutlet=\"nzText\">\n        <span class=\"ant-ribbon-text\">{{ nzText }}</span>\n      </ng-container>\n      <div class=\"ant-ribbon-corner\" [style.color]=\"!presetColor && nzColor\"></div>\n    </div>\n  `,\n      host: {\n        class: 'ant-ribbon-wrapper'\n      }\n    }]\n  }], () => [], {\n    nzColor: [{\n      type: Input\n    }],\n    nzPlacement: [{\n      type: Input\n    }],\n    nzText: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzBadgeModule {\n  static {\n    this.ɵfac = function NzBadgeModule_Factory(t) {\n      return new (t || NzBadgeModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NzBadgeModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [NzBadgeComponent, NzRibbonComponent]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzBadgeModule, [{\n    type: NgModule,\n    args: [{\n      exports: [NzBadgeComponent, NzRibbonComponent],\n      imports: [NzBadgeComponent, NzRibbonComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzBadgeComponent, NzBadgeModule, NzRibbonComponent };","map":{"version":3,"names":["__decorate","NgStyle","i0","Component","ViewEncapsulation","ChangeDetectionStrategy","Input","Optional","Host","NgModule","Subject","takeUntil","zoomBadgeMotion","i1","WithConfig","i4","NzOutletModule","InputBoolean","i3","NzNoAnimationDirective","i2","NzBadgeSupComponent_Conditional_0_For_1_Conditional_1_For_1_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","p_r10","$implicit","i_r4","ɵɵnextContext","$index","ctx_r9","ɵɵclassProp","countArray","ɵɵadvance","ɵɵtextInterpolate1","NzBadgeSupComponent_Conditional_0_For_1_Conditional_1_Template","ɵɵrepeaterCreate","ɵɵrepeaterTrackByIdentity","ctx_r8","ɵɵrepeater","countSingleArray","NzBadgeSupComponent_Conditional_0_For_1_Template","ɵɵtemplate","ctx_r2","ɵɵstyleProp","ɵɵproperty","noAnimation","ɵɵconditional","nzDot","undefined","NzBadgeSupComponent_Conditional_0_Template","ctx_r0","maxNumberArray","NzBadgeSupComponent_Conditional_1_Template","ctx_r1","nzOverflowCount","NzBadgeComponent_Conditional_0_ng_container_2_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵtextInterpolate","nzText","NzBadgeComponent_Conditional_0_Template","ɵɵelement","ɵɵclassMapInterpolate1","nzStatus","presetColor","nzColor","nzStyle","NzBadgeComponent_ng_container_2_Conditional_1_Template","ctx_r3","nzOffset","nzSize","nzTitle","nzStandalone","nzNoAnimation","nzCount","NzBadgeComponent_ng_container_2_Template","showSup","_c0","NzRibbonComponent_ng_container_2_Template","NzBadgeSupComponent","constructor","disableAnimation","count","generateMaxNumberArray","toString","split","ngOnInit","ngOnChanges","changes","currentValue","Math","max","map","item","ɵfac","NzBadgeSupComponent_Factory","t","ɵcmp","ɵɵdefineComponent","type","selectors","hostAttrs","hostVars","hostBindings","NzBadgeSupComponent_HostBindings","ɵɵattribute","ɵɵsyntheticHostProperty","ɵɵstyleMap","length","inputs","exportAs","standalone","features","ɵɵNgOnChangesFeature","ɵɵStandaloneFeature","decls","vars","consts","template","NzBadgeSupComponent_Template","dependencies","encapsulation","data","animation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","preserveWhitespaces","None","OnPush","animations","imports","host","class","badgePresetColors","NZ_CONFIG_MODULE_NAME","NzBadgeComponent","nzConfigService","renderer","cdr","elementRef","directionality","_nzModuleName","dir","destroy$","nzShowZero","nzShowDot","change","pipe","subscribe","direction","prepareBadgeForRtl","detectChanges","value","indexOf","isRtlLayout","addClass","nativeElement","removeClass","ngOnDestroy","next","complete","NzBadgeComponent_Factory","ɵɵdirectiveInject","NzConfigService","Renderer2","ChangeDetectorRef","ElementRef","Directionality","NzBadgeComponent_HostBindings","ngContentSelectors","NzBadgeComponent_Template","ɵɵprojectionDef","ɵɵprojection","NzStringTemplateOutletDirective","prototype","decorators","NzRibbonComponent","nzPlacement","NzRibbonComponent_Factory","NzRibbonComponent_Template","ɵɵclassMap","NzBadgeModule","NzBadgeModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","exports"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-badge.mjs"],"sourcesContent":["import { __decorate } from 'tslib';\nimport { NgStyle } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Optional, Host, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { zoomBadgeMotion } from 'ng-zorro-antd/core/animation';\nimport * as i1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport * as i4 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i3 from 'ng-zorro-antd/core/no-animation';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\nimport * as i2 from '@angular/cdk/bidi';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzBadgeSupComponent {\n    constructor() {\n        this.nzStyle = null;\n        this.nzDot = false;\n        this.nzOverflowCount = 99;\n        this.disableAnimation = false;\n        this.noAnimation = false;\n        this.nzSize = 'default';\n        this.maxNumberArray = [];\n        this.countArray = [];\n        this.count = 0;\n        this.countSingleArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n    }\n    generateMaxNumberArray() {\n        this.maxNumberArray = this.nzOverflowCount.toString().split('');\n    }\n    ngOnInit() {\n        this.generateMaxNumberArray();\n    }\n    ngOnChanges(changes) {\n        const { nzOverflowCount, nzCount } = changes;\n        if (nzCount && typeof nzCount.currentValue === 'number') {\n            this.count = Math.max(0, nzCount.currentValue);\n            this.countArray = this.count\n                .toString()\n                .split('')\n                .map(item => +item);\n        }\n        if (nzOverflowCount) {\n            this.generateMaxNumberArray();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzBadgeSupComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"17.3.8\", type: NzBadgeSupComponent, isStandalone: true, selector: \"nz-badge-sup\", inputs: { nzOffset: \"nzOffset\", nzTitle: \"nzTitle\", nzStyle: \"nzStyle\", nzDot: \"nzDot\", nzOverflowCount: \"nzOverflowCount\", disableAnimation: \"disableAnimation\", nzCount: \"nzCount\", noAnimation: \"noAnimation\", nzSize: \"nzSize\" }, host: { properties: { \"@.disabled\": \"disableAnimation\", \"@zoomBadgeMotion\": \"\", \"attr.title\": \"nzTitle === null ? '' : nzTitle || nzCount\", \"style\": \"nzStyle\", \"style.right.px\": \"nzOffset && nzOffset[0] ? -nzOffset[0] : null\", \"style.margin-top.px\": \"nzOffset && nzOffset[1] ? nzOffset[1] : null\", \"class.ant-badge-count\": \"!nzDot\", \"class.ant-badge-count-sm\": \"nzSize === 'small'\", \"class.ant-badge-dot\": \"nzDot\", \"class.ant-badge-multiple-words\": \"countArray.length >= 2\" }, classAttribute: \"ant-scroll-number\" }, exportAs: [\"nzBadgeSup\"], usesOnChanges: true, ngImport: i0, template: `\n    @if (count <= nzOverflowCount) {\n      @for (n of maxNumberArray; track n; let i = $index) {\n        <span\n          [nzNoAnimation]=\"noAnimation\"\n          class=\"ant-scroll-number-only\"\n          [style.transform]=\"'translateY(' + -countArray[i] * 100 + '%)'\"\n        >\n          @if (!nzDot && countArray[i] !== undefined) {\n            @for (p of countSingleArray; track p) {\n              <p class=\"ant-scroll-number-only-unit\" [class.current]=\"p === countArray[i]\">\n                {{ p }}\n              </p>\n            }\n          }\n        </span>\n      }\n    } @else {\n      {{ nzOverflowCount }}+\n    }\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: NzNoAnimationDirective, selector: \"[nzNoAnimation]\", inputs: [\"nzNoAnimation\"], exportAs: [\"nzNoAnimation\"] }], animations: [zoomBadgeMotion], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzBadgeSupComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-badge-sup',\n                    exportAs: 'nzBadgeSup',\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [zoomBadgeMotion],\n                    standalone: true,\n                    imports: [NzNoAnimationDirective],\n                    template: `\n    @if (count <= nzOverflowCount) {\n      @for (n of maxNumberArray; track n; let i = $index) {\n        <span\n          [nzNoAnimation]=\"noAnimation\"\n          class=\"ant-scroll-number-only\"\n          [style.transform]=\"'translateY(' + -countArray[i] * 100 + '%)'\"\n        >\n          @if (!nzDot && countArray[i] !== undefined) {\n            @for (p of countSingleArray; track p) {\n              <p class=\"ant-scroll-number-only-unit\" [class.current]=\"p === countArray[i]\">\n                {{ p }}\n              </p>\n            }\n          }\n        </span>\n      }\n    } @else {\n      {{ nzOverflowCount }}+\n    }\n  `,\n                    host: {\n                        class: 'ant-scroll-number',\n                        '[@.disabled]': `disableAnimation`,\n                        '[@zoomBadgeMotion]': '',\n                        '[attr.title]': `nzTitle === null ? '' : nzTitle || nzCount`,\n                        '[style]': `nzStyle`,\n                        '[style.right.px]': `nzOffset && nzOffset[0] ? -nzOffset[0] : null`,\n                        '[style.margin-top.px]': `nzOffset && nzOffset[1] ? nzOffset[1] : null`,\n                        '[class.ant-badge-count]': `!nzDot`,\n                        '[class.ant-badge-count-sm]': `nzSize === 'small'`,\n                        '[class.ant-badge-dot]': `nzDot`,\n                        '[class.ant-badge-multiple-words]': `countArray.length >= 2`\n                    }\n                }]\n        }], ctorParameters: () => [], propDecorators: { nzOffset: [{\n                type: Input\n            }], nzTitle: [{\n                type: Input\n            }], nzStyle: [{\n                type: Input\n            }], nzDot: [{\n                type: Input\n            }], nzOverflowCount: [{\n                type: Input\n            }], disableAnimation: [{\n                type: Input\n            }], nzCount: [{\n                type: Input\n            }], noAnimation: [{\n                type: Input\n            }], nzSize: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst badgePresetColors = [\n    'pink',\n    'red',\n    'yellow',\n    'orange',\n    'cyan',\n    'green',\n    'blue',\n    'purple',\n    'geekblue',\n    'magenta',\n    'volcano',\n    'gold',\n    'lime'\n];\n\nconst NZ_CONFIG_MODULE_NAME = 'badge';\nclass NzBadgeComponent {\n    constructor(nzConfigService, renderer, cdr, elementRef, directionality, noAnimation) {\n        this.nzConfigService = nzConfigService;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.elementRef = elementRef;\n        this.directionality = directionality;\n        this.noAnimation = noAnimation;\n        this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n        this.showSup = false;\n        this.presetColor = null;\n        this.dir = 'ltr';\n        this.destroy$ = new Subject();\n        this.nzShowZero = false;\n        this.nzShowDot = true;\n        this.nzStandalone = false;\n        this.nzDot = false;\n        this.nzOverflowCount = 99;\n        this.nzColor = undefined;\n        this.nzStyle = null;\n        this.nzText = null;\n        this.nzSize = 'default';\n    }\n    ngOnInit() {\n        this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.prepareBadgeForRtl();\n            this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n        this.prepareBadgeForRtl();\n    }\n    ngOnChanges(changes) {\n        const { nzColor, nzShowDot, nzDot, nzCount, nzShowZero } = changes;\n        if (nzColor) {\n            this.presetColor = this.nzColor && badgePresetColors.indexOf(this.nzColor) !== -1 ? this.nzColor : null;\n        }\n        if (nzShowDot || nzDot || nzCount || nzShowZero) {\n            this.showSup =\n                (this.nzShowDot && this.nzDot) ||\n                    (typeof this.nzCount === 'number' && this.nzCount > 0) ||\n                    (typeof this.nzCount === 'number' && this.nzCount <= 0 && this.nzShowZero);\n        }\n    }\n    prepareBadgeForRtl() {\n        if (this.isRtlLayout) {\n            this.renderer.addClass(this.elementRef.nativeElement, 'ant-badge-rtl');\n        }\n        else {\n            this.renderer.removeClass(this.elementRef.nativeElement, 'ant-badge-rtl');\n        }\n    }\n    get isRtlLayout() {\n        return this.dir === 'rtl';\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzBadgeComponent, deps: [{ token: i1.NzConfigService }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i2.Directionality, optional: true }, { token: i3.NzNoAnimationDirective, host: true, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"17.3.8\", type: NzBadgeComponent, isStandalone: true, selector: \"nz-badge\", inputs: { nzShowZero: \"nzShowZero\", nzShowDot: \"nzShowDot\", nzStandalone: \"nzStandalone\", nzDot: \"nzDot\", nzOverflowCount: \"nzOverflowCount\", nzColor: \"nzColor\", nzStyle: \"nzStyle\", nzText: \"nzText\", nzTitle: \"nzTitle\", nzStatus: \"nzStatus\", nzCount: \"nzCount\", nzOffset: \"nzOffset\", nzSize: \"nzSize\" }, host: { properties: { \"class.ant-badge-status\": \"nzStatus\", \"class.ant-badge-not-a-wrapper\": \"!!(nzStandalone || nzStatus || nzColor)\" }, classAttribute: \"ant-badge\" }, exportAs: [\"nzBadge\"], usesOnChanges: true, ngImport: i0, template: `\n    @if (nzStatus || nzColor) {\n      <span\n        class=\"ant-badge-status-dot ant-badge-status-{{ nzStatus || presetColor }}\"\n        [style.background]=\"!presetColor && nzColor\"\n        [ngStyle]=\"nzStyle\"\n      ></span>\n      <span class=\"ant-badge-status-text\">\n        <ng-container *nzStringTemplateOutlet=\"nzText\">{{ nzText }}</ng-container>\n      </span>\n    }\n    <ng-content />\n    <ng-container *nzStringTemplateOutlet=\"nzCount\">\n      @if (showSup) {\n        <nz-badge-sup\n          [nzOffset]=\"nzOffset\"\n          [nzSize]=\"nzSize\"\n          [nzTitle]=\"nzTitle\"\n          [nzStyle]=\"nzStyle\"\n          [nzDot]=\"nzDot\"\n          [nzOverflowCount]=\"nzOverflowCount\"\n          [disableAnimation]=\"!!(nzStandalone || nzStatus || nzColor || noAnimation?.nzNoAnimation)\"\n          [nzCount]=\"nzCount\"\n          [noAnimation]=\"!!noAnimation?.nzNoAnimation\"\n        />\n      }\n    </ng-container>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"component\", type: NzBadgeSupComponent, selector: \"nz-badge-sup\", inputs: [\"nzOffset\", \"nzTitle\", \"nzStyle\", \"nzDot\", \"nzOverflowCount\", \"disableAnimation\", \"nzCount\", \"noAnimation\", \"nzSize\"], exportAs: [\"nzBadgeSup\"] }, { kind: \"ngmodule\", type: NzOutletModule }, { kind: \"directive\", type: i4.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }], animations: [zoomBadgeMotion], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\n__decorate([\n    InputBoolean()\n], NzBadgeComponent.prototype, \"nzShowZero\", void 0);\n__decorate([\n    InputBoolean()\n], NzBadgeComponent.prototype, \"nzShowDot\", void 0);\n__decorate([\n    InputBoolean()\n], NzBadgeComponent.prototype, \"nzStandalone\", void 0);\n__decorate([\n    InputBoolean()\n], NzBadgeComponent.prototype, \"nzDot\", void 0);\n__decorate([\n    WithConfig()\n], NzBadgeComponent.prototype, \"nzOverflowCount\", void 0);\n__decorate([\n    WithConfig()\n], NzBadgeComponent.prototype, \"nzColor\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzBadgeComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-badge',\n                    exportAs: 'nzBadge',\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [zoomBadgeMotion],\n                    standalone: true,\n                    imports: [NgStyle, NzBadgeSupComponent, NzOutletModule],\n                    template: `\n    @if (nzStatus || nzColor) {\n      <span\n        class=\"ant-badge-status-dot ant-badge-status-{{ nzStatus || presetColor }}\"\n        [style.background]=\"!presetColor && nzColor\"\n        [ngStyle]=\"nzStyle\"\n      ></span>\n      <span class=\"ant-badge-status-text\">\n        <ng-container *nzStringTemplateOutlet=\"nzText\">{{ nzText }}</ng-container>\n      </span>\n    }\n    <ng-content />\n    <ng-container *nzStringTemplateOutlet=\"nzCount\">\n      @if (showSup) {\n        <nz-badge-sup\n          [nzOffset]=\"nzOffset\"\n          [nzSize]=\"nzSize\"\n          [nzTitle]=\"nzTitle\"\n          [nzStyle]=\"nzStyle\"\n          [nzDot]=\"nzDot\"\n          [nzOverflowCount]=\"nzOverflowCount\"\n          [disableAnimation]=\"!!(nzStandalone || nzStatus || nzColor || noAnimation?.nzNoAnimation)\"\n          [nzCount]=\"nzCount\"\n          [noAnimation]=\"!!noAnimation?.nzNoAnimation\"\n        />\n      }\n    </ng-container>\n  `,\n                    host: {\n                        class: 'ant-badge',\n                        '[class.ant-badge-status]': 'nzStatus',\n                        '[class.ant-badge-not-a-wrapper]': '!!(nzStandalone || nzStatus || nzColor)'\n                    }\n                }]\n        }], ctorParameters: () => [{ type: i1.NzConfigService }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i3.NzNoAnimationDirective, decorators: [{\n                    type: Host\n                }, {\n                    type: Optional\n                }] }], propDecorators: { nzShowZero: [{\n                type: Input\n            }], nzShowDot: [{\n                type: Input\n            }], nzStandalone: [{\n                type: Input\n            }], nzDot: [{\n                type: Input\n            }], nzOverflowCount: [{\n                type: Input\n            }], nzColor: [{\n                type: Input\n            }], nzStyle: [{\n                type: Input\n            }], nzText: [{\n                type: Input\n            }], nzTitle: [{\n                type: Input\n            }], nzStatus: [{\n                type: Input\n            }], nzCount: [{\n                type: Input\n            }], nzOffset: [{\n                type: Input\n            }], nzSize: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzRibbonComponent {\n    constructor() {\n        this.nzPlacement = 'end';\n        this.nzText = null;\n        this.presetColor = null;\n    }\n    ngOnChanges(changes) {\n        const { nzColor } = changes;\n        if (nzColor) {\n            this.presetColor = this.nzColor && badgePresetColors.indexOf(this.nzColor) !== -1 ? this.nzColor : null;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzRibbonComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.8\", type: NzRibbonComponent, isStandalone: true, selector: \"nz-ribbon\", inputs: { nzColor: \"nzColor\", nzPlacement: \"nzPlacement\", nzText: \"nzText\" }, host: { classAttribute: \"ant-ribbon-wrapper\" }, exportAs: [\"nzRibbon\"], usesOnChanges: true, ngImport: i0, template: `\n    <ng-content></ng-content>\n    <div\n      class=\"ant-ribbon\"\n      [class]=\"presetColor && 'ant-ribbon-color-' + presetColor\"\n      [class.ant-ribbon-placement-end]=\"nzPlacement === 'end'\"\n      [class.ant-ribbon-placement-start]=\"nzPlacement === 'start'\"\n      [style.background-color]=\"!presetColor && nzColor\"\n    >\n      <ng-container *nzStringTemplateOutlet=\"nzText\">\n        <span class=\"ant-ribbon-text\">{{ nzText }}</span>\n      </ng-container>\n      <div class=\"ant-ribbon-corner\" [style.color]=\"!presetColor && nzColor\"></div>\n    </div>\n  `, isInline: true, dependencies: [{ kind: \"ngmodule\", type: NzOutletModule }, { kind: \"directive\", type: i4.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzRibbonComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-ribbon',\n                    exportAs: 'nzRibbon',\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    standalone: true,\n                    imports: [NzOutletModule],\n                    template: `\n    <ng-content></ng-content>\n    <div\n      class=\"ant-ribbon\"\n      [class]=\"presetColor && 'ant-ribbon-color-' + presetColor\"\n      [class.ant-ribbon-placement-end]=\"nzPlacement === 'end'\"\n      [class.ant-ribbon-placement-start]=\"nzPlacement === 'start'\"\n      [style.background-color]=\"!presetColor && nzColor\"\n    >\n      <ng-container *nzStringTemplateOutlet=\"nzText\">\n        <span class=\"ant-ribbon-text\">{{ nzText }}</span>\n      </ng-container>\n      <div class=\"ant-ribbon-corner\" [style.color]=\"!presetColor && nzColor\"></div>\n    </div>\n  `,\n                    host: { class: 'ant-ribbon-wrapper' }\n                }]\n        }], ctorParameters: () => [], propDecorators: { nzColor: [{\n                type: Input\n            }], nzPlacement: [{\n                type: Input\n            }], nzText: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzBadgeModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzBadgeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.3.8\", ngImport: i0, type: NzBadgeModule, imports: [NzBadgeComponent, NzRibbonComponent], exports: [NzBadgeComponent, NzRibbonComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzBadgeModule, imports: [NzBadgeComponent, NzRibbonComponent] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzBadgeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [NzBadgeComponent, NzRibbonComponent],\n                    imports: [NzBadgeComponent, NzRibbonComponent]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzBadgeComponent, NzBadgeModule, NzRibbonComponent };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}