{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Pipe, NgModule } from '@angular/core';\nimport { timeUnits } from 'ng-zorro-antd/core/time';\nimport { padStart } from 'ng-zorro-antd/core/util';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTimeRangePipe {\n  transform(value, format = 'HH:mm:ss') {\n    let duration = Number(value || 0);\n    return timeUnits.reduce((current, [name, unit]) => {\n      if (current.indexOf(name) !== -1) {\n        const v = Math.floor(duration / unit);\n        duration -= v * unit;\n        return current.replace(new RegExp(`${name}+`, 'g'), match => padStart(v.toString(), match.length, '0'));\n      }\n      return current;\n    }, format);\n  }\n  static {\n    this.ɵfac = function NzTimeRangePipe_Factory(t) {\n      return new (t || NzTimeRangePipe)();\n    };\n  }\n  static {\n    this.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n      name: \"nzTimeRange\",\n      type: NzTimeRangePipe,\n      pure: true,\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTimeRangePipe, [{\n    type: Pipe,\n    args: [{\n      name: 'nzTimeRange',\n      pure: true,\n      standalone: true\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzPipesModule {\n  static {\n    this.ɵfac = function NzPipesModule_Factory(t) {\n      return new (t || NzPipesModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NzPipesModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzPipesModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NzTimeRangePipe],\n      exports: [NzTimeRangePipe]\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzPipesModule, NzTimeRangePipe };","map":{"version":3,"names":["i0","Pipe","NgModule","timeUnits","padStart","NzTimeRangePipe","transform","value","format","duration","Number","reduce","current","name","unit","indexOf","v","Math","floor","replace","RegExp","match","toString","length","ɵfac","NzTimeRangePipe_Factory","t","ɵpipe","ɵɵdefinePipe","type","pure","standalone","ngDevMode","ɵsetClassMetadata","args","NzPipesModule","NzPipesModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-core-pipe.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Pipe, NgModule } from '@angular/core';\nimport { timeUnits } from 'ng-zorro-antd/core/time';\nimport { padStart } from 'ng-zorro-antd/core/util';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTimeRangePipe {\n    transform(value, format = 'HH:mm:ss') {\n        let duration = Number(value || 0);\n        return timeUnits.reduce((current, [name, unit]) => {\n            if (current.indexOf(name) !== -1) {\n                const v = Math.floor(duration / unit);\n                duration -= v * unit;\n                return current.replace(new RegExp(`${name}+`, 'g'), (match) => padStart(v.toString(), match.length, '0'));\n            }\n            return current;\n        }, format);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzTimeRangePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe }); }\n    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"17.3.8\", ngImport: i0, type: NzTimeRangePipe, isStandalone: true, name: \"nzTimeRange\" }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzTimeRangePipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'nzTimeRange',\n                    pure: true,\n                    standalone: true\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzPipesModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzPipesModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.3.8\", ngImport: i0, type: NzPipesModule, imports: [NzTimeRangePipe], exports: [NzTimeRangePipe] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzPipesModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzPipesModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NzTimeRangePipe],\n                    exports: [NzTimeRangePipe]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzPipesModule, NzTimeRangePipe };\n"],"mappings":"AAAA,OAAO,KAAKA,EAAE,MAAM,eAAe;AACnC,SAASC,IAAI,EAAEC,QAAQ,QAAQ,eAAe;AAC9C,SAASC,SAAS,QAAQ,yBAAyB;AACnD,SAASC,QAAQ,QAAQ,yBAAyB;;AAElD;AACA;AACA;AACA;AACA,MAAMC,eAAe,CAAC;EAClBC,SAASA,CAACC,KAAK,EAAEC,MAAM,GAAG,UAAU,EAAE;IAClC,IAAIC,QAAQ,GAAGC,MAAM,CAACH,KAAK,IAAI,CAAC,CAAC;IACjC,OAAOJ,SAAS,CAACQ,MAAM,CAAC,CAACC,OAAO,EAAE,CAACC,IAAI,EAAEC,IAAI,CAAC,KAAK;MAC/C,IAAIF,OAAO,CAACG,OAAO,CAACF,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;QAC9B,MAAMG,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACT,QAAQ,GAAGK,IAAI,CAAC;QACrCL,QAAQ,IAAIO,CAAC,GAAGF,IAAI;QACpB,OAAOF,OAAO,CAACO,OAAO,CAAC,IAAIC,MAAM,CAAE,GAAEP,IAAK,GAAE,EAAE,GAAG,CAAC,EAAGQ,KAAK,IAAKjB,QAAQ,CAACY,CAAC,CAACM,QAAQ,CAAC,CAAC,EAAED,KAAK,CAACE,MAAM,EAAE,GAAG,CAAC,CAAC;MAC7G;MACA,OAAOX,OAAO;IAClB,CAAC,EAAEJ,MAAM,CAAC;EACd;EACA;IAAS,IAAI,CAACgB,IAAI,YAAAC,wBAAAC,CAAA;MAAA,YAAAA,CAAA,IAAwFrB,eAAe;IAAA,CAA8C;EAAE;EACzK;IAAS,IAAI,CAACsB,KAAK,kBAD6E3B,EAAE,CAAA4B,YAAA;MAAAf,IAAA;MAAAgB,IAAA,EACMxB,eAAe;MAAAyB,IAAA;MAAAC,UAAA;IAAA,EAA4C;EAAE;AACzK;AACA;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KAHoGhC,EAAE,CAAAiC,iBAAA,CAGX5B,eAAe,EAAc,CAAC;IAC7GwB,IAAI,EAAE5B,IAAI;IACViC,IAAI,EAAE,CAAC;MACCrB,IAAI,EAAE,aAAa;MACnBiB,IAAI,EAAE,IAAI;MACVC,UAAU,EAAE;IAChB,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;AACA;AACA,MAAMI,aAAa,CAAC;EAChB;IAAS,IAAI,CAACX,IAAI,YAAAY,sBAAAV,CAAA;MAAA,YAAAA,CAAA,IAAwFS,aAAa;IAAA,CAAkD;EAAE;EAC3K;IAAS,IAAI,CAACE,IAAI,kBAlB8ErC,EAAE,CAAAsC,gBAAA;MAAAT,IAAA,EAkBSM;IAAa,EAA2D;EAAE;EACrL;IAAS,IAAI,CAACI,IAAI,kBAnB8EvC,EAAE,CAAAwC,gBAAA,IAmByB;EAAE;AACjI;AACA;EAAA,QAAAR,SAAA,oBAAAA,SAAA,KArBoGhC,EAAE,CAAAiC,iBAAA,CAqBXE,aAAa,EAAc,CAAC;IAC3GN,IAAI,EAAE3B,QAAQ;IACdgC,IAAI,EAAE,CAAC;MACCO,OAAO,EAAE,CAACpC,eAAe,CAAC;MAC1BqC,OAAO,EAAE,CAACrC,eAAe;IAC7B,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAAS8B,aAAa,EAAE9B,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}