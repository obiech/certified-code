{"ast":null,"code":"import { ActivatedRoute } from '@angular/router';\nimport { TableService } from '@ridy/admin-panel/src/app/@services/table-service';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@ridy/admin-panel/src/app/@services/table-service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"ng-zorro-antd/table\";\nimport * as i5 from \"@ngx-translate/core\";\nfunction RiderViewAddressesComponent_nz_table_0_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 3);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"a\", 5);\n    i0.ɵɵlistener(\"click\", function RiderViewAddressesComponent_nz_table_0_tr_14_Template_a_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const data_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.openMap(data_r4.location));\n    });\n    i0.ɵɵtext(7, \"Open In Google Maps\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const data_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r4.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r4.details);\n  }\n}\nfunction RiderViewAddressesComponent_nz_table_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"nz-table\", 1, 2);\n    i0.ɵɵlistener(\"nzQueryParams\", function RiderViewAddressesComponent_nz_table_0_Template_nz_table_nzQueryParams_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.tableService.onTableQueryParamsChange);\n    });\n    i0.ɵɵelementStart(2, \"thead\")(3, \"tr\")(4, \"th\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\", 3);\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\");\n    i0.ɵɵtext(11);\n    i0.ɵɵpipe(12, \"translate\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"tbody\");\n    i0.ɵɵtemplate(14, RiderViewAddressesComponent_nz_table_0_tr_14_Template, 8, 2, \"tr\", 4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const addresses_r1 = ctx.ngIf;\n    const _r2 = i0.ɵɵreference(1);\n    i0.ɵɵproperty(\"nzFrontPagination\", false)(\"nzData\", addresses_r1.nodes);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(6, 6, \"profile.title\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(9, 8, \"profile.address\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(12, 10, \"profile.location\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", _r2.data);\n  }\n}\nexport class RiderViewAddressesComponent {\n  constructor(route, tableService) {\n    this.route = route;\n    this.tableService = tableService;\n  }\n  ngOnInit() {\n    this.query = this.route.data.pipe(map(data => data.addresses));\n  }\n  openMap(location) {\n    var url = \"https://maps.google.com/?q=\" + location.lat + \",\" + location.lng;\n    window.open(url);\n  }\n  static {\n    this.ɵfac = function RiderViewAddressesComponent_Factory(t) {\n      return new (t || RiderViewAddressesComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.TableService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RiderViewAddressesComponent,\n      selectors: [[\"app-rider-view-addresses\"]],\n      decls: 2,\n      vars: 3,\n      consts: [[\"nzShowSizeChanger\", \"\", \"nzBordered\", \"\", 3, \"nzFrontPagination\", \"nzData\", \"nzQueryParams\", 4, \"ngIf\"], [\"nzShowSizeChanger\", \"\", \"nzBordered\", \"\", 3, \"nzFrontPagination\", \"nzData\", \"nzQueryParams\"], [\"table\", \"\"], [1, \"hidden\", \"md:table-cell\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\"]],\n      template: function RiderViewAddressesComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, RiderViewAddressesComponent_nz_table_0_Template, 15, 12, \"nz-table\", 0);\n          i0.ɵɵpipe(1, \"async\");\n        }\n        if (rf & 2) {\n          let tmp_0_0;\n          i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = i0.ɵɵpipeBind1(1, 1, ctx.query)) == null ? null : tmp_0_0.data == null ? null : tmp_0_0.data.riderAddresses);\n        }\n      },\n      dependencies: [i3.NgForOf, i3.NgIf, i4.NzTableComponent, i4.NzTableCellDirective, i4.NzThMeasureDirective, i4.NzTheadComponent, i4.NzTbodyComponent, i4.NzTrDirective, i3.AsyncPipe, i5.TranslatePipe],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["ActivatedRoute","TableService","map","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","RiderViewAddressesComponent_nz_table_0_tr_14_Template_a_click_6_listener","restoredCtx","ɵɵrestoreView","_r6","data_r4","$implicit","ctx_r5","ɵɵnextContext","ɵɵresetView","openMap","location","ɵɵadvance","ɵɵtextInterpolate","title","details","RiderViewAddressesComponent_nz_table_0_Template_nz_table_nzQueryParams_0_listener","_r8","ctx_r7","tableService","onTableQueryParamsChange","ɵɵtemplate","RiderViewAddressesComponent_nz_table_0_tr_14_Template","ɵɵproperty","addresses_r1","nodes","ɵɵtextInterpolate1","ɵɵpipeBind1","_r2","data","RiderViewAddressesComponent","constructor","route","ngOnInit","query","pipe","addresses","url","lat","lng","window","open","ɵɵdirectiveInject","i1","i2","selectors","decls","vars","consts","template","RiderViewAddressesComponent_Template","rf","ctx","RiderViewAddressesComponent_nz_table_0_Template","tmp_0_0","riderAddresses"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/apps/admin-panel/src/app/cms/riders/rider-view/rider-view-addresses/rider-view-addresses.component.ts","/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/apps/admin-panel/src/app/cms/riders/rider-view/rider-view-addresses/rider-view-addresses.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ApolloQueryResult } from '@apollo/client/core';\nimport { RiderAddressesQuery } from '@ridy/admin-panel/generated/graphql';\nimport { TableService } from '@ridy/admin-panel/src/app/@services/table-service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-rider-view-addresses',\n  templateUrl: './rider-view-addresses.component.html'\n})\nexport class RiderViewAddressesComponent implements OnInit {\n  query?: Observable<ApolloQueryResult<RiderAddressesQuery>>;\n\n  constructor(\n    private route: ActivatedRoute,\n    public tableService: TableService) { }\n\n  ngOnInit(): void {\n    this.query = this.route.data.pipe(map(data => data.addresses));\n  }\n\n  openMap(location: {lat: number, lng: number}) {\n    var url = \"https://maps.google.com/?q=\" + location.lat + \",\" + location.lng;\n   window.open(url);\n  }\n}\n","<nz-table #table nzShowSizeChanger [nzFrontPagination]=\"false\"\n  *ngIf=\"(query | async)?.data?.riderAddresses as addresses\" [nzData]=\"addresses.nodes\"\n  (nzQueryParams)=\"tableService.onTableQueryParamsChange\" nzBordered>\n  <thead>\n    <tr>\n      <th>\n        {{ 'profile.title' | translate }}\n      </th>\n      <th class=\"hidden md:table-cell\">\n        {{ 'profile.address' | translate }}\n      </th>\n      <th>\n        {{ 'profile.location' | translate }}\n      </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let data of table.data\">\n      <td>{{ data.title }}</td>\n      <td class=\"hidden md:table-cell\">{{ data.details }}</td>\n      <td><a (click)=\"openMap(data.location)\">Open In Google Maps</a></td>\n    </tr>\n  </tbody>\n</nz-table>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}