{"ast":null,"code":"import { NewServiceGQL, NewServiceQuery } from '@ridy/admin-panel/generated/graphql';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ridy/admin-panel/generated/graphql\";\nexport class ManagementServiceNewResolver {\n  constructor(gql) {\n    this.gql = gql;\n  }\n  resolve(route, state) {\n    return this.gql.fetch();\n  }\n  static {\n    this.ɵfac = function ManagementServiceNewResolver_Factory(t) {\n      return new (t || ManagementServiceNewResolver)(i0.ɵɵinject(i1.NewServiceGQL));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ManagementServiceNewResolver,\n      factory: ManagementServiceNewResolver.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["NewServiceGQL","NewServiceQuery","ManagementServiceNewResolver","constructor","gql","resolve","route","state","fetch","i0","ɵɵinject","i1","factory","ɵfac"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/apps/admin-panel/src/app/cms/management/management-services/management-services-view/management-service-new.resolver.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { ApolloQueryResult } from '@apollo/client/core';\nimport {\n  NewServiceGQL,\n  NewServiceQuery,\n  ViewRiderQuery,\n} from '@ridy/admin-panel/generated/graphql';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ManagementServiceNewResolver\n  \n{\n  constructor(private gql: NewServiceGQL) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot,\n  ): Observable<ApolloQueryResult<NewServiceQuery>> {\n    return this.gql.fetch();\n  }\n}\n"],"mappings":"AAGA,SACEA,aAAa,EACbC,eAAe,QAEV,qCAAqC;;;AAI5C,OAAM,MAAOC,4BAA4B;EAGvCC,YAAoBC,GAAkB;IAAlB,KAAAA,GAAG,GAAHA,GAAG;EAAkB;EAEzCC,OAAOA,CACLC,KAA6B,EAC7BC,KAA0B;IAE1B,OAAO,IAAI,CAACH,GAAG,CAACI,KAAK,EAAE;EACzB;;;uBAVWN,4BAA4B,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAX,aAAA;IAAA;EAAA;;;aAA5BE,4BAA4B;MAAAU,OAAA,EAA5BV,4BAA4B,CAAAW;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}