{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, forwardRef, ElementRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, ViewChildren, Input, Output, NgModule } from '@angular/core';\nimport { __decorate } from 'tslib';\nimport { NgClass } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { thumbMotion } from 'ng-zorro-antd/core/animation';\nimport * as i1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport * as i4 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i3 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i2 from '@angular/cdk/bidi';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst _c0 = [\"itemLabels\"];\nconst _c1 = () => ({\n  \"ant-segmented-thumb\": true,\n  \"ant-segmented-thumb-motion\": true\n});\nfunction NzSegmentedComponent_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵlistener(\"@thumbMotion.done\", function NzSegmentedComponent_Conditional_1_Template_div_animation_thumbMotion_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.handleThumbAnimationDone($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction0(2, _c1))(\"@thumbMotion\", ctx_r0.animationState);\n  }\n}\nfunction NzSegmentedComponent_For_3_Conditional_4_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const item_r4 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", item_r4.label, \" \");\n  }\n}\nconst _c2 = (a0, a1) => ({\n  $implicit: a0,\n  index: a1\n});\nfunction NzSegmentedComponent_For_3_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 5);\n    i0.ɵɵelement(1, \"span\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtemplate(3, NzSegmentedComponent_For_3_Conditional_4_ng_container_3_Template, 2, 1, \"ng-container\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext();\n    const item_r4 = ctx_r14.$implicit;\n    const i_r5 = ctx_r14.$index;\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"nzType\", item_r4.icon);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", item_r4.useTemplate && ctx_r10.nzLabelTemplate)(\"nzStringTemplateOutletContext\", i0.ɵɵpureFunction2(3, _c2, item_r4, i_r5));\n  }\n}\nfunction NzSegmentedComponent_For_3_Conditional_5_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const item_r4 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", item_r4.label, \" \");\n  }\n}\nfunction NzSegmentedComponent_For_3_Conditional_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzSegmentedComponent_For_3_Conditional_5_ng_container_0_Template, 2, 1, \"ng-container\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext();\n    const item_r4 = ctx_r17.$implicit;\n    const i_r5 = ctx_r17.$index;\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", item_r4.useTemplate && ctx_r11.nzLabelTemplate)(\"nzStringTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c2, item_r4, i_r5));\n  }\n}\nconst _c3 = (a1, a2) => ({\n  \"ant-segmented-item\": true,\n  \"ant-segmented-item-selected\": a1,\n  \"ant-segmented-item-disabled\": a2\n});\nfunction NzSegmentedComponent_For_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"label\", 1, 2);\n    i0.ɵɵelement(2, \"input\", 3);\n    i0.ɵɵelementStart(3, \"div\", 4);\n    i0.ɵɵlistener(\"click\", function NzSegmentedComponent_For_3_Template_div_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const item_r4 = restoredCtx.$implicit;\n      const i_r5 = restoredCtx.$index;\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(!item_r4.disabled && ctx_r18.handleOptionClick(i_r5));\n    });\n    i0.ɵɵtemplate(4, NzSegmentedComponent_For_3_Conditional_4_Template, 4, 6)(5, NzSegmentedComponent_For_3_Conditional_5_Template, 1, 5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    const i_r5 = ctx.$index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(3, _c3, i_r5 === ctx_r1.selectedIndex, !!ctx_r1.nzDisabled || item_r4.disabled));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"checked\", i_r5 === ctx_r1.selectedIndex);\n    i0.ɵɵadvance(2);\n    i0.ɵɵconditional(4, item_r4.icon ? 4 : 5);\n  }\n}\nfunction normalizeOptions(unnormalized) {\n  return unnormalized.map(item => {\n    if (typeof item === 'string' || typeof item === 'number') {\n      return {\n        label: `${item}`,\n        value: item\n      };\n    }\n    return item;\n  });\n}\nconst NZ_CONFIG_MODULE_NAME = 'segmented';\nclass NzSegmentedComponent {\n  constructor(nzConfigService, cdr, directionality) {\n    this.nzConfigService = nzConfigService;\n    this.cdr = cdr;\n    this.directionality = directionality;\n    this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n    this.nzBlock = false;\n    this.nzDisabled = false;\n    this.nzOptions = [];\n    this.nzSize = 'default';\n    this.nzLabelTemplate = null;\n    this.nzValueChange = new EventEmitter();\n    this.dir = 'ltr';\n    this.selectedIndex = 0;\n    this.transitionedToIndex = -1;\n    this.animationState = null;\n    this.normalizedOptions = [];\n    this.destroy$ = new Subject();\n    this.onChange = () => {};\n    this.onTouched = () => {};\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n  }\n  ngOnChanges(changes) {\n    const {\n      nzOptions\n    } = changes;\n    if (nzOptions) {\n      this.normalizedOptions = normalizeOptions(nzOptions.currentValue);\n    }\n  }\n  handleOptionClick(index) {\n    if (this.nzDisabled) {\n      return;\n    }\n    this.changeSelectedIndex(index);\n    this.onChange(index);\n    this.nzValueChange.emit(index);\n  }\n  handleThumbAnimationDone(e) {\n    if (e.fromState === 'from') {\n      this.selectedIndex = this.transitionedToIndex;\n      this.transitionedToIndex = -1;\n      this.animationState = null;\n      this.cdr.detectChanges();\n    }\n  }\n  writeValue(value) {\n    if (typeof value === 'number' && value > -1) {\n      this.changeSelectedIndex(value);\n      this.cdr.markForCheck();\n    }\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  changeSelectedIndex(index) {\n    if (!this.listOfOptions || this.selectedIndex === -1 || this.selectedIndex === index) {\n      return;\n    }\n    this.animationState = {\n      value: 'from',\n      params: getThumbAnimationProps(this.listOfOptions.get(this.selectedIndex).nativeElement)\n    };\n    this.selectedIndex = -1;\n    this.cdr.detectChanges();\n    this.animationState = {\n      value: 'to',\n      params: getThumbAnimationProps(this.listOfOptions.get(index).nativeElement)\n    };\n    this.transitionedToIndex = index;\n    this.cdr.detectChanges();\n  }\n  static {\n    this.ɵfac = function NzSegmentedComponent_Factory(t) {\n      return new (t || NzSegmentedComponent)(i0.ɵɵdirectiveInject(i1.NzConfigService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.Directionality, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzSegmentedComponent,\n      selectors: [[\"nz-segmented\"]],\n      viewQuery: function NzSegmentedComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5, ElementRef);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfOptions = _t);\n        }\n      },\n      hostAttrs: [1, \"ant-segmented\"],\n      hostVars: 10,\n      hostBindings: function NzSegmentedComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ant-segmented-disabled\", !!ctx.nzDisabled)(\"ant-segmented-rtl\", ctx.dir === \"rtl\")(\"ant-segmented-lg\", ctx.nzSize === \"large\")(\"ant-segmented-sm\", ctx.nzSize === \"small\")(\"ant-segmented-block\", !!ctx.nzBlock);\n        }\n      },\n      inputs: {\n        nzBlock: \"nzBlock\",\n        nzDisabled: \"nzDisabled\",\n        nzOptions: \"nzOptions\",\n        nzSize: \"nzSize\",\n        nzLabelTemplate: \"nzLabelTemplate\"\n      },\n      outputs: {\n        nzValueChange: \"nzValueChange\"\n      },\n      exportAs: [\"nzSegmented\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NzSegmentedComponent),\n        multi: true\n      }]), i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      decls: 4,\n      vars: 1,\n      consts: [[1, \"ant-segmented-group\"], [3, \"ngClass\"], [\"itemLabels\", \"\"], [\"type\", \"radio\", 1, \"ant-segmented-item-input\", 3, \"checked\"], [1, \"ant-segmented-item-label\", 3, \"click\"], [1, \"ant-segmented-item-icon\"], [\"nz-icon\", \"\", 3, \"nzType\"], [4, \"nzStringTemplateOutlet\", \"nzStringTemplateOutletContext\"]],\n      template: function NzSegmentedComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, NzSegmentedComponent_Conditional_1_Template, 1, 3, \"div\", 1);\n          i0.ɵɵrepeaterCreate(2, NzSegmentedComponent_For_3_Template, 6, 6, \"label\", 1, i0.ɵɵrepeaterTrackByIdentity);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(1, ctx.animationState ? 1 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵrepeater(ctx.normalizedOptions);\n        }\n      },\n      dependencies: [NgClass, NzIconModule, i3.NzIconDirective, NzOutletModule, i4.NzStringTemplateOutletDirective],\n      encapsulation: 2,\n      data: {\n        animation: [thumbMotion]\n      },\n      changeDetection: 0\n    });\n  }\n}\n__decorate([InputBoolean()], NzSegmentedComponent.prototype, \"nzBlock\", void 0);\n__decorate([InputBoolean()], NzSegmentedComponent.prototype, \"nzDisabled\", void 0);\n__decorate([WithConfig()], NzSegmentedComponent.prototype, \"nzSize\", void 0);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSegmentedComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-segmented',\n      exportAs: 'nzSegmented',\n      template: `\n    <!-- thumb motion div -->\n    <div class=\"ant-segmented-group\">\n      @if (animationState) {\n        <div\n          [ngClass]=\"{ 'ant-segmented-thumb': true, 'ant-segmented-thumb-motion': true }\"\n          [@thumbMotion]=\"animationState\"\n          (@thumbMotion.done)=\"handleThumbAnimationDone($event)\"\n        ></div>\n      }\n\n      @for (item of normalizedOptions; track item; let i = $index) {\n        <label\n          #itemLabels\n          [ngClass]=\"{\n            'ant-segmented-item': true,\n            'ant-segmented-item-selected': i === selectedIndex,\n            'ant-segmented-item-disabled': !!nzDisabled || item.disabled\n          }\"\n        >\n          <input class=\"ant-segmented-item-input\" type=\"radio\" [checked]=\"i === selectedIndex\" />\n          <div class=\"ant-segmented-item-label\" (click)=\"!item.disabled && handleOptionClick(i)\">\n            @if (item.icon) {\n              <span class=\"ant-segmented-item-icon\"><span nz-icon [nzType]=\"item.icon\"></span></span>\n              <span>\n                <ng-container\n                  *nzStringTemplateOutlet=\"item.useTemplate && nzLabelTemplate; context: { $implicit: item, index: i }\"\n                >\n                  {{ item.label }}\n                </ng-container>\n              </span>\n            } @else {\n              <ng-container\n                *nzStringTemplateOutlet=\"item.useTemplate && nzLabelTemplate; context: { $implicit: item, index: i }\"\n              >\n                {{ item.label }}\n              </ng-container>\n            }\n          </div>\n        </label>\n      }\n    </div>\n  `,\n      host: {\n        class: 'ant-segmented',\n        '[class.ant-segmented-disabled]': '!!nzDisabled',\n        '[class.ant-segmented-rtl]': `dir === 'rtl'`,\n        '[class.ant-segmented-lg]': `nzSize === 'large'`,\n        '[class.ant-segmented-sm]': `nzSize === 'small'`,\n        '[class.ant-segmented-block]': `!!nzBlock`\n      },\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NzSegmentedComponent),\n        multi: true\n      }],\n      animations: [thumbMotion],\n      imports: [NgClass, NzIconModule, NzOutletModule],\n      standalone: true\n    }]\n  }], () => [{\n    type: i1.NzConfigService\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i2.Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    listOfOptions: [{\n      type: ViewChildren,\n      args: ['itemLabels', {\n        read: ElementRef\n      }]\n    }],\n    nzBlock: [{\n      type: Input\n    }],\n    nzDisabled: [{\n      type: Input\n    }],\n    nzOptions: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }],\n    nzLabelTemplate: [{\n      type: Input\n    }],\n    nzValueChange: [{\n      type: Output\n    }]\n  });\n})();\nfunction getThumbAnimationProps(element) {\n  return {\n    transform: element.offsetLeft,\n    width: element.clientWidth\n  };\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzSegmentedModule {\n  static {\n    this.ɵfac = function NzSegmentedModule_Factory(t) {\n      return new (t || NzSegmentedModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NzSegmentedModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [NzSegmentedComponent]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSegmentedModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NzSegmentedComponent],\n      exports: [NzSegmentedComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzSegmentedComponent, NzSegmentedModule, normalizeOptions };","map":{"version":3,"names":["i0","EventEmitter","forwardRef","ElementRef","Component","ChangeDetectionStrategy","ViewEncapsulation","Optional","ViewChildren","Input","Output","NgModule","__decorate","NgClass","NG_VALUE_ACCESSOR","Subject","takeUntil","thumbMotion","i1","WithConfig","i4","NzOutletModule","InputBoolean","i3","NzIconModule","i2","_c0","_c1","NzSegmentedComponent_Conditional_1_Template","rf","ctx","_r3","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","NzSegmentedComponent_Conditional_1_Template_div_animation_thumbMotion_done_0_listener","$event","ɵɵrestoreView","ctx_r2","ɵɵnextContext","ɵɵresetView","handleThumbAnimationDone","ɵɵelementEnd","ctx_r0","ɵɵproperty","ɵɵpureFunction0","animationState","NzSegmentedComponent_For_3_Conditional_4_ng_container_3_Template","ɵɵelementContainerStart","ɵɵtext","ɵɵelementContainerEnd","item_r4","$implicit","ɵɵadvance","ɵɵtextInterpolate1","label","_c2","a0","a1","index","NzSegmentedComponent_For_3_Conditional_4_Template","ɵɵelement","ɵɵtemplate","ctx_r14","i_r5","$index","ctx_r10","icon","useTemplate","nzLabelTemplate","ɵɵpureFunction2","NzSegmentedComponent_For_3_Conditional_5_ng_container_0_Template","NzSegmentedComponent_For_3_Conditional_5_Template","ctx_r17","ctx_r11","_c3","a2","NzSegmentedComponent_For_3_Template","_r19","NzSegmentedComponent_For_3_Template_div_click_3_listener","restoredCtx","ctx_r18","disabled","handleOptionClick","ctx_r1","selectedIndex","nzDisabled","ɵɵconditional","normalizeOptions","unnormalized","map","item","value","NZ_CONFIG_MODULE_NAME","NzSegmentedComponent","constructor","nzConfigService","cdr","directionality","_nzModuleName","nzBlock","nzOptions","nzSize","nzValueChange","dir","transitionedToIndex","normalizedOptions","destroy$","onChange","onTouched","change","pipe","subscribe","direction","detectChanges","ngOnChanges","changes","currentValue","changeSelectedIndex","emit","e","fromState","writeValue","markForCheck","registerOnChange","fn","registerOnTouched","listOfOptions","params","getThumbAnimationProps","get","nativeElement","ɵfac","NzSegmentedComponent_Factory","t","ɵɵdirectiveInject","NzConfigService","ChangeDetectorRef","Directionality","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","NzSegmentedComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","hostAttrs","hostVars","hostBindings","NzSegmentedComponent_HostBindings","ɵɵclassProp","inputs","outputs","exportAs","standalone","features","ɵɵProvidersFeature","provide","useExisting","multi","ɵɵNgOnChangesFeature","ɵɵStandaloneFeature","decls","vars","consts","template","NzSegmentedComponent_Template","ɵɵrepeaterCreate","ɵɵrepeaterTrackByIdentity","ɵɵrepeater","dependencies","NzIconDirective","NzStringTemplateOutletDirective","encapsulation","data","animation","changeDetection","prototype","ngDevMode","ɵsetClassMetadata","args","OnPush","None","selector","host","class","providers","animations","imports","decorators","read","element","transform","offsetLeft","width","clientWidth","NzSegmentedModule","NzSegmentedModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","exports"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-segmented.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, forwardRef, ElementRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, ViewChildren, Input, Output, NgModule } from '@angular/core';\nimport { __decorate } from 'tslib';\nimport { NgClass } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { thumbMotion } from 'ng-zorro-antd/core/animation';\nimport * as i1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport * as i4 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i3 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i2 from '@angular/cdk/bidi';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nfunction normalizeOptions(unnormalized) {\n    return unnormalized.map(item => {\n        if (typeof item === 'string' || typeof item === 'number') {\n            return {\n                label: `${item}`,\n                value: item\n            };\n        }\n        return item;\n    });\n}\n\nconst NZ_CONFIG_MODULE_NAME = 'segmented';\nclass NzSegmentedComponent {\n    constructor(nzConfigService, cdr, directionality) {\n        this.nzConfigService = nzConfigService;\n        this.cdr = cdr;\n        this.directionality = directionality;\n        this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n        this.nzBlock = false;\n        this.nzDisabled = false;\n        this.nzOptions = [];\n        this.nzSize = 'default';\n        this.nzLabelTemplate = null;\n        this.nzValueChange = new EventEmitter();\n        this.dir = 'ltr';\n        this.selectedIndex = 0;\n        this.transitionedToIndex = -1;\n        this.animationState = null;\n        this.normalizedOptions = [];\n        this.destroy$ = new Subject();\n        this.onChange = () => { };\n        this.onTouched = () => { };\n        this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n            this.dir = direction;\n            this.cdr.detectChanges();\n        });\n    }\n    ngOnChanges(changes) {\n        const { nzOptions } = changes;\n        if (nzOptions) {\n            this.normalizedOptions = normalizeOptions(nzOptions.currentValue);\n        }\n    }\n    handleOptionClick(index) {\n        if (this.nzDisabled) {\n            return;\n        }\n        this.changeSelectedIndex(index);\n        this.onChange(index);\n        this.nzValueChange.emit(index);\n    }\n    handleThumbAnimationDone(e) {\n        if (e.fromState === 'from') {\n            this.selectedIndex = this.transitionedToIndex;\n            this.transitionedToIndex = -1;\n            this.animationState = null;\n            this.cdr.detectChanges();\n        }\n    }\n    writeValue(value) {\n        if (typeof value === 'number' && value > -1) {\n            this.changeSelectedIndex(value);\n            this.cdr.markForCheck();\n        }\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    changeSelectedIndex(index) {\n        if (!this.listOfOptions || this.selectedIndex === -1 || this.selectedIndex === index) {\n            return;\n        }\n        this.animationState = {\n            value: 'from',\n            params: getThumbAnimationProps(this.listOfOptions.get(this.selectedIndex).nativeElement)\n        };\n        this.selectedIndex = -1;\n        this.cdr.detectChanges();\n        this.animationState = {\n            value: 'to',\n            params: getThumbAnimationProps(this.listOfOptions.get(index).nativeElement)\n        };\n        this.transitionedToIndex = index;\n        this.cdr.detectChanges();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzSegmentedComponent, deps: [{ token: i1.NzConfigService }, { token: i0.ChangeDetectorRef }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"17.3.8\", type: NzSegmentedComponent, isStandalone: true, selector: \"nz-segmented\", inputs: { nzBlock: \"nzBlock\", nzDisabled: \"nzDisabled\", nzOptions: \"nzOptions\", nzSize: \"nzSize\", nzLabelTemplate: \"nzLabelTemplate\" }, outputs: { nzValueChange: \"nzValueChange\" }, host: { properties: { \"class.ant-segmented-disabled\": \"!!nzDisabled\", \"class.ant-segmented-rtl\": \"dir === 'rtl'\", \"class.ant-segmented-lg\": \"nzSize === 'large'\", \"class.ant-segmented-sm\": \"nzSize === 'small'\", \"class.ant-segmented-block\": \"!!nzBlock\" }, classAttribute: \"ant-segmented\" }, providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NzSegmentedComponent), multi: true }], viewQueries: [{ propertyName: \"listOfOptions\", predicate: [\"itemLabels\"], descendants: true, read: ElementRef }], exportAs: [\"nzSegmented\"], usesOnChanges: true, ngImport: i0, template: `\n    <!-- thumb motion div -->\n    <div class=\"ant-segmented-group\">\n      @if (animationState) {\n        <div\n          [ngClass]=\"{ 'ant-segmented-thumb': true, 'ant-segmented-thumb-motion': true }\"\n          [@thumbMotion]=\"animationState\"\n          (@thumbMotion.done)=\"handleThumbAnimationDone($event)\"\n        ></div>\n      }\n\n      @for (item of normalizedOptions; track item; let i = $index) {\n        <label\n          #itemLabels\n          [ngClass]=\"{\n            'ant-segmented-item': true,\n            'ant-segmented-item-selected': i === selectedIndex,\n            'ant-segmented-item-disabled': !!nzDisabled || item.disabled\n          }\"\n        >\n          <input class=\"ant-segmented-item-input\" type=\"radio\" [checked]=\"i === selectedIndex\" />\n          <div class=\"ant-segmented-item-label\" (click)=\"!item.disabled && handleOptionClick(i)\">\n            @if (item.icon) {\n              <span class=\"ant-segmented-item-icon\"><span nz-icon [nzType]=\"item.icon\"></span></span>\n              <span>\n                <ng-container\n                  *nzStringTemplateOutlet=\"item.useTemplate && nzLabelTemplate; context: { $implicit: item, index: i }\"\n                >\n                  {{ item.label }}\n                </ng-container>\n              </span>\n            } @else {\n              <ng-container\n                *nzStringTemplateOutlet=\"item.useTemplate && nzLabelTemplate; context: { $implicit: item, index: i }\"\n              >\n                {{ item.label }}\n              </ng-container>\n            }\n          </div>\n        </label>\n      }\n    </div>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"ngmodule\", type: NzIconModule }, { kind: \"directive\", type: i3.NzIconDirective, selector: \"[nz-icon]\", inputs: [\"nzSpin\", \"nzRotate\", \"nzType\", \"nzTheme\", \"nzTwotoneColor\", \"nzIconfont\"], exportAs: [\"nzIcon\"] }, { kind: \"ngmodule\", type: NzOutletModule }, { kind: \"directive\", type: i4.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }], animations: [thumbMotion], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\n__decorate([\n    InputBoolean()\n], NzSegmentedComponent.prototype, \"nzBlock\", void 0);\n__decorate([\n    InputBoolean()\n], NzSegmentedComponent.prototype, \"nzDisabled\", void 0);\n__decorate([\n    WithConfig()\n], NzSegmentedComponent.prototype, \"nzSize\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzSegmentedComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'nz-segmented',\n                    exportAs: 'nzSegmented',\n                    template: `\n    <!-- thumb motion div -->\n    <div class=\"ant-segmented-group\">\n      @if (animationState) {\n        <div\n          [ngClass]=\"{ 'ant-segmented-thumb': true, 'ant-segmented-thumb-motion': true }\"\n          [@thumbMotion]=\"animationState\"\n          (@thumbMotion.done)=\"handleThumbAnimationDone($event)\"\n        ></div>\n      }\n\n      @for (item of normalizedOptions; track item; let i = $index) {\n        <label\n          #itemLabels\n          [ngClass]=\"{\n            'ant-segmented-item': true,\n            'ant-segmented-item-selected': i === selectedIndex,\n            'ant-segmented-item-disabled': !!nzDisabled || item.disabled\n          }\"\n        >\n          <input class=\"ant-segmented-item-input\" type=\"radio\" [checked]=\"i === selectedIndex\" />\n          <div class=\"ant-segmented-item-label\" (click)=\"!item.disabled && handleOptionClick(i)\">\n            @if (item.icon) {\n              <span class=\"ant-segmented-item-icon\"><span nz-icon [nzType]=\"item.icon\"></span></span>\n              <span>\n                <ng-container\n                  *nzStringTemplateOutlet=\"item.useTemplate && nzLabelTemplate; context: { $implicit: item, index: i }\"\n                >\n                  {{ item.label }}\n                </ng-container>\n              </span>\n            } @else {\n              <ng-container\n                *nzStringTemplateOutlet=\"item.useTemplate && nzLabelTemplate; context: { $implicit: item, index: i }\"\n              >\n                {{ item.label }}\n              </ng-container>\n            }\n          </div>\n        </label>\n      }\n    </div>\n  `,\n                    host: {\n                        class: 'ant-segmented',\n                        '[class.ant-segmented-disabled]': '!!nzDisabled',\n                        '[class.ant-segmented-rtl]': `dir === 'rtl'`,\n                        '[class.ant-segmented-lg]': `nzSize === 'large'`,\n                        '[class.ant-segmented-sm]': `nzSize === 'small'`,\n                        '[class.ant-segmented-block]': `!!nzBlock`\n                    },\n                    providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NzSegmentedComponent), multi: true }],\n                    animations: [thumbMotion],\n                    imports: [NgClass, NzIconModule, NzOutletModule],\n                    standalone: true\n                }]\n        }], ctorParameters: () => [{ type: i1.NzConfigService }, { type: i0.ChangeDetectorRef }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }], propDecorators: { listOfOptions: [{\n                type: ViewChildren,\n                args: ['itemLabels', { read: ElementRef }]\n            }], nzBlock: [{\n                type: Input\n            }], nzDisabled: [{\n                type: Input\n            }], nzOptions: [{\n                type: Input\n            }], nzSize: [{\n                type: Input\n            }], nzLabelTemplate: [{\n                type: Input\n            }], nzValueChange: [{\n                type: Output\n            }] } });\nfunction getThumbAnimationProps(element) {\n    return {\n        transform: element.offsetLeft,\n        width: element.clientWidth\n    };\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzSegmentedModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzSegmentedModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.3.8\", ngImport: i0, type: NzSegmentedModule, imports: [NzSegmentedComponent], exports: [NzSegmentedComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzSegmentedModule, imports: [NzSegmentedComponent] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzSegmentedModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NzSegmentedComponent],\n                    exports: [NzSegmentedComponent]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzSegmentedComponent, NzSegmentedModule, normalizeOptions };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}