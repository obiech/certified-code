{"ast":null,"code":"import { deepMix, get, isBoolean } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { getName } from './scale';\nimport { vec2 } from '@antv/matrix-util';\n/**\n * @ignore\n * get axis relative region ( 0 ~ 1) by direction when coordinate is rect\n * @param direction\n * @returns axis coordinate region\n */\nexport function getLineAxisRelativeRegion(direction) {\n  var start;\n  var end;\n  switch (direction) {\n    case DIRECTION.TOP:\n      start = {\n        x: 0,\n        y: 1\n      };\n      end = {\n        x: 1,\n        y: 1\n      };\n      break;\n    case DIRECTION.RIGHT:\n      start = {\n        x: 1,\n        y: 0\n      };\n      end = {\n        x: 1,\n        y: 1\n      };\n      break;\n    case DIRECTION.BOTTOM:\n      start = {\n        x: 0,\n        y: 0\n      };\n      end = {\n        x: 1,\n        y: 0\n      };\n      break;\n    case DIRECTION.LEFT:\n      start = {\n        x: 0,\n        y: 0\n      };\n      end = {\n        x: 0,\n        y: 1\n      };\n      break;\n    default:\n      start = end = {\n        x: 0,\n        y: 0\n      };\n  }\n  return {\n    start: start,\n    end: end\n  };\n}\n/**\n * @ignore\n * get axis relative region ( 0 ~ 1) by direction when coordinate is polar\n * @param coordinate\n * @returns axis coordinate region\n */\nexport function getCircleAxisRelativeRegion(coordinate) {\n  var start;\n  var end;\n  if (coordinate.isTransposed) {\n    start = {\n      x: 0,\n      y: 0\n    };\n    end = {\n      x: 1,\n      y: 0\n    };\n  } else {\n    start = {\n      x: 0,\n      y: 0\n    };\n    end = {\n      x: 0,\n      y: 1\n    };\n  }\n  return {\n    start: start,\n    end: end\n  };\n}\n/**\n * @ignore\n * get the axis region from coordinate\n * @param coordinate\n * @param direction\n * @returns the axis region (start point, end point)\n */\nexport function getAxisRegion(coordinate, direction) {\n  var region = {\n    start: {\n      x: 0,\n      y: 0\n    },\n    end: {\n      x: 0,\n      y: 0\n    }\n  };\n  if (coordinate.isRect) {\n    region = getLineAxisRelativeRegion(direction);\n  } else if (coordinate.isPolar) {\n    region = getCircleAxisRelativeRegion(coordinate);\n  }\n  var start = region.start,\n    end = region.end;\n  return {\n    start: coordinate.convert(start),\n    end: coordinate.convert(end)\n  };\n}\n/**\n * @ignore\n * get axis factor\n * @param coordinate\n * @param direction\n * @returns factor\n */\nexport function getAxisFactor(coordinate, direction) {\n  // rect coordinate, by direction\n  if (coordinate.isRect) {\n    return coordinate.isTransposed ? [DIRECTION.RIGHT, DIRECTION.BOTTOM].includes(direction) ? 1 : -1 : [DIRECTION.BOTTOM, DIRECTION.RIGHT].includes(direction) ? -1 : 1;\n  }\n  // polar y axis, by angle\n  if (coordinate.isPolar) {\n    var startAngle = coordinate.x.start;\n    return startAngle < 0 ? -1 : 1;\n  }\n  return 1;\n}\n/**\n * @ignore\n * whether the axis isVertical\n * @param region\n * @returns isVertical\n */\nexport function isVertical(region) {\n  var start = region.start,\n    end = region.end;\n  return start.x === end.x;\n}\n/**\n * @ignore\n * get factor by region (real position)\n * @param region\n * @param center\n * @returns factor\n */\nexport function getAxisFactorByRegion(region, center) {\n  var start = region.start,\n    end = region.end;\n  var isAxisVertical = isVertical(region);\n  // 垂直\n  if (isAxisVertical) {\n    // 左方,从下到上、右方,从上到下\n    if ((start.y - end.y) * (center.x - start.x) > 0) {\n      return 1;\n    } else {\n      return -1;\n    }\n  } else {\n    // 下方,从左到右、上方,从右到做\n    if ((end.x - start.x) * (start.y - center.y) > 0) {\n      return -1;\n    } else {\n      return 1;\n    }\n  }\n}\n/**\n * @ignore\n * get the axis cfg from theme, will mix the common cfg of legend theme\n *\n * @param theme view theme object\n * @param direction axis direction\n * @returns axis theme cfg\n */\nexport function getAxisThemeCfg(theme, direction) {\n  var axisTheme = get(theme, ['components', 'axis'], {});\n  return deepMix({}, get(axisTheme, ['common'], {}), deepMix({}, get(axisTheme, [direction], {})));\n}\n/**\n * get the options of axis title，mix the cfg from theme, avoid common themeCfg not work\n * @param theme\n * @param direction\n * @param axisOptions\n * @returns axis title options\n */\nexport function getAxisTitleOptions(theme, direction, axisOptions) {\n  var axisTheme = get(theme, ['components', 'axis'], {});\n  return deepMix({}, get(axisTheme, ['common', 'title'], {}), deepMix({}, get(axisTheme, [direction, 'title'], {})), axisOptions);\n}\n/**\n * @ignore\n * get circle axis center and radius\n * @param coordinate\n */\nexport function getCircleAxisCenterRadius(coordinate) {\n  // @ts-ignore\n  var x = coordinate.x,\n    y = coordinate.y,\n    center = coordinate.circleCenter;\n  var isReflectY = y.start > y.end;\n  var start = coordinate.isTransposed ? coordinate.convert({\n    x: isReflectY ? 0 : 1,\n    y: 0\n  }) : coordinate.convert({\n    x: 0,\n    y: isReflectY ? 0 : 1\n  });\n  var startVector = [start.x - center.x, start.y - center.y];\n  var normalVector = [1, 0];\n  var startAngle = start.y > center.y ? vec2.angle(startVector, normalVector) : vec2.angle(startVector, normalVector) * -1;\n  var endAngle = startAngle + (x.end - x.start);\n  var radius = Math.sqrt(Math.pow(start.x - center.x, 2) + Math.pow(start.y - center.y, 2));\n  return {\n    center: center,\n    radius: radius,\n    startAngle: startAngle,\n    endAngle: endAngle\n  };\n}\n/**\n * @ignore\n * 从配置中获取单个字段的 axis 配置\n * @param axes\n * @param field\n * @returns the axis option of field\n */\nexport function getAxisOption(axes, field) {\n  if (isBoolean(axes)) {\n    return axes === false ? false : {};\n  }\n  return get(axes, [field]);\n}\n/**\n * @ignore\n * 如果配置了 position，则使用配置\n * @param axisOption\n * @param def\n */\nexport function getAxisDirection(axisOption, def) {\n  return get(axisOption, 'position', def);\n}\n/**\n * 获取 axis 的 title 文本\n * @param scale\n * @param axisOption\n */\nexport function getAxisTitleText(scale, axisOption) {\n  return get(axisOption, ['title', 'text'], getName(scale));\n}","map":{"version":3,"names":["deepMix","get","isBoolean","DIRECTION","getName","vec2","getLineAxisRelativeRegion","direction","start","end","TOP","x","y","RIGHT","BOTTOM","LEFT","getCircleAxisRelativeRegion","coordinate","isTransposed","getAxisRegion","region","isRect","isPolar","convert","getAxisFactor","includes","startAngle","isVertical","getAxisFactorByRegion","center","isAxisVertical","getAxisThemeCfg","theme","axisTheme","getAxisTitleOptions","axisOptions","getCircleAxisCenterRadius","circleCenter","isReflectY","startVector","normalVector","angle","endAngle","radius","Math","sqrt","pow","getAxisOption","axes","field","getAxisDirection","axisOption","def","getAxisTitleText","scale"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g2/esm/util/axis.js"],"sourcesContent":["import { deepMix, get, isBoolean } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { getName } from './scale';\nimport { vec2 } from '@antv/matrix-util';\n/**\n * @ignore\n * get axis relative region ( 0 ~ 1) by direction when coordinate is rect\n * @param direction\n * @returns axis coordinate region\n */\nexport function getLineAxisRelativeRegion(direction) {\n    var start;\n    var end;\n    switch (direction) {\n        case DIRECTION.TOP:\n            start = { x: 0, y: 1 };\n            end = { x: 1, y: 1 };\n            break;\n        case DIRECTION.RIGHT:\n            start = { x: 1, y: 0 };\n            end = { x: 1, y: 1 };\n            break;\n        case DIRECTION.BOTTOM:\n            start = { x: 0, y: 0 };\n            end = { x: 1, y: 0 };\n            break;\n        case DIRECTION.LEFT:\n            start = { x: 0, y: 0 };\n            end = { x: 0, y: 1 };\n            break;\n        default:\n            start = end = { x: 0, y: 0 };\n    }\n    return { start: start, end: end };\n}\n/**\n * @ignore\n * get axis relative region ( 0 ~ 1) by direction when coordinate is polar\n * @param coordinate\n * @returns axis coordinate region\n */\nexport function getCircleAxisRelativeRegion(coordinate) {\n    var start;\n    var end;\n    if (coordinate.isTransposed) {\n        start = {\n            x: 0,\n            y: 0,\n        };\n        end = {\n            x: 1,\n            y: 0,\n        };\n    }\n    else {\n        start = {\n            x: 0,\n            y: 0,\n        };\n        end = {\n            x: 0,\n            y: 1,\n        };\n    }\n    return { start: start, end: end };\n}\n/**\n * @ignore\n * get the axis region from coordinate\n * @param coordinate\n * @param direction\n * @returns the axis region (start point, end point)\n */\nexport function getAxisRegion(coordinate, direction) {\n    var region = { start: { x: 0, y: 0 }, end: { x: 0, y: 0 } };\n    if (coordinate.isRect) {\n        region = getLineAxisRelativeRegion(direction);\n    }\n    else if (coordinate.isPolar) {\n        region = getCircleAxisRelativeRegion(coordinate);\n    }\n    var start = region.start, end = region.end;\n    return {\n        start: coordinate.convert(start),\n        end: coordinate.convert(end),\n    };\n}\n/**\n * @ignore\n * get axis factor\n * @param coordinate\n * @param direction\n * @returns factor\n */\nexport function getAxisFactor(coordinate, direction) {\n    // rect coordinate, by direction\n    if (coordinate.isRect) {\n        return coordinate.isTransposed\n            ? [DIRECTION.RIGHT, DIRECTION.BOTTOM].includes(direction)\n                ? 1\n                : -1\n            : [DIRECTION.BOTTOM, DIRECTION.RIGHT].includes(direction)\n                ? -1\n                : 1;\n    }\n    // polar y axis, by angle\n    if (coordinate.isPolar) {\n        var startAngle = coordinate.x.start;\n        return startAngle < 0 ? -1 : 1;\n    }\n    return 1;\n}\n/**\n * @ignore\n * whether the axis isVertical\n * @param region\n * @returns isVertical\n */\nexport function isVertical(region) {\n    var start = region.start, end = region.end;\n    return start.x === end.x;\n}\n/**\n * @ignore\n * get factor by region (real position)\n * @param region\n * @param center\n * @returns factor\n */\nexport function getAxisFactorByRegion(region, center) {\n    var start = region.start, end = region.end;\n    var isAxisVertical = isVertical(region);\n    // 垂直\n    if (isAxisVertical) {\n        // 左方,从下到上、右方,从上到下\n        if ((start.y - end.y) * (center.x - start.x) > 0) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    }\n    else {\n        // 下方,从左到右、上方,从右到做\n        if ((end.x - start.x) * (start.y - center.y) > 0) {\n            return -1;\n        }\n        else {\n            return 1;\n        }\n    }\n}\n/**\n * @ignore\n * get the axis cfg from theme, will mix the common cfg of legend theme\n *\n * @param theme view theme object\n * @param direction axis direction\n * @returns axis theme cfg\n */\nexport function getAxisThemeCfg(theme, direction) {\n    var axisTheme = get(theme, ['components', 'axis'], {});\n    return deepMix({}, get(axisTheme, ['common'], {}), deepMix({}, get(axisTheme, [direction], {})));\n}\n/**\n * get the options of axis title，mix the cfg from theme, avoid common themeCfg not work\n * @param theme\n * @param direction\n * @param axisOptions\n * @returns axis title options\n */\nexport function getAxisTitleOptions(theme, direction, axisOptions) {\n    var axisTheme = get(theme, ['components', 'axis'], {});\n    return deepMix({}, get(axisTheme, ['common', 'title'], {}), deepMix({}, get(axisTheme, [direction, 'title'], {})), axisOptions);\n}\n/**\n * @ignore\n * get circle axis center and radius\n * @param coordinate\n */\nexport function getCircleAxisCenterRadius(coordinate) {\n    // @ts-ignore\n    var x = coordinate.x, y = coordinate.y, center = coordinate.circleCenter;\n    var isReflectY = y.start > y.end;\n    var start = coordinate.isTransposed\n        ? coordinate.convert({\n            x: isReflectY ? 0 : 1,\n            y: 0,\n        })\n        : coordinate.convert({\n            x: 0,\n            y: isReflectY ? 0 : 1,\n        });\n    var startVector = [start.x - center.x, start.y - center.y];\n    var normalVector = [1, 0];\n    var startAngle = start.y > center.y ? vec2.angle(startVector, normalVector) : vec2.angle(startVector, normalVector) * -1;\n    var endAngle = startAngle + (x.end - x.start);\n    var radius = Math.sqrt(Math.pow((start.x - center.x), 2) + Math.pow((start.y - center.y), 2));\n    return {\n        center: center,\n        radius: radius,\n        startAngle: startAngle,\n        endAngle: endAngle,\n    };\n}\n/**\n * @ignore\n * 从配置中获取单个字段的 axis 配置\n * @param axes\n * @param field\n * @returns the axis option of field\n */\nexport function getAxisOption(axes, field) {\n    if (isBoolean(axes)) {\n        return axes === false ? false : {};\n    }\n    return get(axes, [field]);\n}\n/**\n * @ignore\n * 如果配置了 position，则使用配置\n * @param axisOption\n * @param def\n */\nexport function getAxisDirection(axisOption, def) {\n    return get(axisOption, 'position', def);\n}\n/**\n * 获取 axis 的 title 文本\n * @param scale\n * @param axisOption\n */\nexport function getAxisTitleText(scale, axisOption) {\n    return get(axisOption, ['title', 'text'], getName(scale));\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}