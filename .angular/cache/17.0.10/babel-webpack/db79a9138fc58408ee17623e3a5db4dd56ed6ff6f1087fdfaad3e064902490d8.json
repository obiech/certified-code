{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { each, head, last } from '@antv/util';\nimport Continuous from './base';\n/**\n * 分段度量\n */\nvar Quantize = /** @class */function (_super) {\n  __extends(Quantize, _super);\n  function Quantize() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = 'quantize';\n    return _this;\n  }\n  Quantize.prototype.invert = function (value) {\n    var ticks = this.ticks;\n    var length = ticks.length;\n    var percent = this.getInvertPercent(value);\n    var minIndex = Math.floor(percent * (length - 1));\n    // 最后一个\n    if (minIndex >= length - 1) {\n      return last(ticks);\n    }\n    // 超出左边界， 则取第一个\n    if (minIndex < 0) {\n      return head(ticks);\n    }\n    var minTick = ticks[minIndex];\n    var nextTick = ticks[minIndex + 1];\n    // 比当前值小的 tick 在度量上的占比\n    var minIndexPercent = minIndex / (length - 1);\n    var maxIndexPercent = (minIndex + 1) / (length - 1);\n    return minTick + (percent - minIndexPercent) / (maxIndexPercent - minIndexPercent) * (nextTick - minTick);\n  };\n  Quantize.prototype.initCfg = function () {\n    this.tickMethod = 'r-pretty';\n    this.tickCount = 5;\n    this.nice = true;\n  };\n  Quantize.prototype.calculateTicks = function () {\n    var ticks = _super.prototype.calculateTicks.call(this);\n    if (!this.nice) {\n      // 如果 nice = false ,补充 min, max\n      if (last(ticks) !== this.max) {\n        ticks.push(this.max);\n      }\n      if (head(ticks) !== this.min) {\n        ticks.unshift(this.min);\n      }\n    }\n    return ticks;\n  };\n  // 计算当前值在刻度中的占比\n  Quantize.prototype.getScalePercent = function (value) {\n    var ticks = this.ticks;\n    // 超出左边界\n    if (value < head(ticks)) {\n      return 0;\n    }\n    // 超出右边界\n    if (value > last(ticks)) {\n      return 1;\n    }\n    var minIndex = 0;\n    each(ticks, function (tick, index) {\n      if (value >= tick) {\n        minIndex = index;\n      } else {\n        return false;\n      }\n    });\n    return minIndex / (ticks.length - 1);\n  };\n  return Quantize;\n}(Continuous);\nexport default Quantize;","map":{"version":3,"names":["__extends","each","head","last","Continuous","Quantize","_super","_this","apply","arguments","type","prototype","invert","value","ticks","length","percent","getInvertPercent","minIndex","Math","floor","minTick","nextTick","minIndexPercent","maxIndexPercent","initCfg","tickMethod","tickCount","nice","calculateTicks","call","max","push","min","unshift","getScalePercent","tick","index"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/scale/esm/continuous/quantize.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { each, head, last } from '@antv/util';\nimport Continuous from './base';\n/**\n * 分段度量\n */\nvar Quantize = /** @class */ (function (_super) {\n    __extends(Quantize, _super);\n    function Quantize() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'quantize';\n        return _this;\n    }\n    Quantize.prototype.invert = function (value) {\n        var ticks = this.ticks;\n        var length = ticks.length;\n        var percent = this.getInvertPercent(value);\n        var minIndex = Math.floor(percent * (length - 1));\n        // 最后一个\n        if (minIndex >= length - 1) {\n            return last(ticks);\n        }\n        // 超出左边界， 则取第一个\n        if (minIndex < 0) {\n            return head(ticks);\n        }\n        var minTick = ticks[minIndex];\n        var nextTick = ticks[minIndex + 1];\n        // 比当前值小的 tick 在度量上的占比\n        var minIndexPercent = minIndex / (length - 1);\n        var maxIndexPercent = (minIndex + 1) / (length - 1);\n        return minTick + (percent - minIndexPercent) / (maxIndexPercent - minIndexPercent) * (nextTick - minTick);\n    };\n    Quantize.prototype.initCfg = function () {\n        this.tickMethod = 'r-pretty';\n        this.tickCount = 5;\n        this.nice = true;\n    };\n    Quantize.prototype.calculateTicks = function () {\n        var ticks = _super.prototype.calculateTicks.call(this);\n        if (!this.nice) { // 如果 nice = false ,补充 min, max\n            if (last(ticks) !== this.max) {\n                ticks.push(this.max);\n            }\n            if (head(ticks) !== this.min) {\n                ticks.unshift(this.min);\n            }\n        }\n        return ticks;\n    };\n    // 计算当前值在刻度中的占比\n    Quantize.prototype.getScalePercent = function (value) {\n        var ticks = this.ticks;\n        // 超出左边界\n        if (value < head(ticks)) {\n            return 0;\n        }\n        // 超出右边界\n        if (value > last(ticks)) {\n            return 1;\n        }\n        var minIndex = 0;\n        each(ticks, function (tick, index) {\n            if (value >= tick) {\n                minIndex = index;\n            }\n            else {\n                return false;\n            }\n        });\n        return minIndex / (ticks.length - 1);\n    };\n    return Quantize;\n}(Continuous));\nexport default Quantize;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}