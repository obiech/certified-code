{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { each, isNil, isFunction, isObject } from '@antv/util';\nimport { vec2 } from '@antv/matrix-util';\nimport AxisBase from './base';\nimport * as OverlapUtil from './overlap';\nvar Circle = /** @class */function (_super) {\n  __extends(Circle, _super);\n  function Circle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Circle.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n    return __assign(__assign({}, cfg), {\n      type: 'circle',\n      locationType: 'circle',\n      center: null,\n      radius: null,\n      startAngle: -Math.PI / 2,\n      endAngle: Math.PI * 3 / 2\n    });\n  };\n  Circle.prototype.getLinePath = function () {\n    var center = this.get('center');\n    var x = center.x;\n    var y = center.y;\n    var rx = this.get('radius');\n    var ry = rx;\n    var startAngle = this.get('startAngle');\n    var endAngle = this.get('endAngle');\n    var path = [];\n    if (Math.abs(endAngle - startAngle) === Math.PI * 2) {\n      path = [['M', x, y - ry], ['A', rx, ry, 0, 1, 1, x, y + ry], ['A', rx, ry, 0, 1, 1, x, y - ry], ['Z']];\n    } else {\n      var startPoint = this.getCirclePoint(startAngle);\n      var endPoint = this.getCirclePoint(endAngle);\n      var large = Math.abs(endAngle - startAngle) > Math.PI ? 1 : 0;\n      var sweep = startAngle > endAngle ? 0 : 1;\n      path = [['M', x, y], ['L', startPoint.x, startPoint.y], ['A', rx, ry, 0, large, sweep, endPoint.x, endPoint.y], ['L', x, y]];\n    }\n    return path;\n  };\n  Circle.prototype.getTickPoint = function (tickValue) {\n    var startAngle = this.get('startAngle');\n    var endAngle = this.get('endAngle');\n    var angle = startAngle + (endAngle - startAngle) * tickValue;\n    return this.getCirclePoint(angle);\n  };\n  // 获取垂直于坐标轴的向量\n  Circle.prototype.getSideVector = function (offset, point) {\n    var center = this.get('center');\n    var vector = [point.x - center.x, point.y - center.y];\n    var factor = this.get('verticalFactor');\n    var vecLen = vec2.length(vector);\n    vec2.scale(vector, vector, factor * offset / vecLen);\n    return vector;\n  };\n  // 获取沿坐标轴方向的向量\n  Circle.prototype.getAxisVector = function (point) {\n    var center = this.get('center');\n    var vector = [point.x - center.x, point.y - center.y];\n    return [vector[1], -1 * vector[0]]; // 获取顺时针方向的向量\n  };\n  // 根据圆心和半径获取点\n  Circle.prototype.getCirclePoint = function (angle, radius) {\n    var center = this.get('center');\n    radius = radius || this.get('radius');\n    return {\n      x: center.x + Math.cos(angle) * radius,\n      y: center.y + Math.sin(angle) * radius\n    };\n  };\n  /**\n   * 是否可以执行某一 overlap\n   * @param name\n   */\n  Circle.prototype.canProcessOverlap = function (name) {\n    var labelCfg = this.get('label');\n    // 对 autoRotate，如果配置了旋转角度，直接进行固定角度旋转\n    if (name === 'autoRotate') {\n      return isNil(labelCfg.rotate);\n    }\n    // 默认所有 overlap 都可执行\n    return true;\n  };\n  Circle.prototype.processOverlap = function (labelGroup) {\n    var _this = this;\n    var labelCfg = this.get('label');\n    var titleCfg = this.get('title');\n    var verticalLimitLength = this.get('verticalLimitLength');\n    var labelOffset = labelCfg.offset;\n    var limitLength = verticalLimitLength;\n    var titleHeight = 0;\n    var titleSpacing = 0;\n    if (titleCfg) {\n      titleHeight = titleCfg.style.fontSize;\n      titleSpacing = titleCfg.spacing;\n    }\n    if (limitLength) {\n      limitLength = limitLength - labelOffset - titleSpacing - titleHeight;\n    }\n    var overlapOrder = this.get('overlapOrder');\n    each(overlapOrder, function (name) {\n      if (labelCfg[name] && _this.canProcessOverlap(name)) {\n        _this.autoProcessOverlap(name, labelCfg[name], labelGroup, limitLength);\n      }\n    });\n    if (titleCfg) {\n      if (isNil(titleCfg.offset)) {\n        // 调整 title 的 offset\n        var length_1 = labelGroup.getCanvasBBox().height;\n        // 如果用户没有设置 offset，则自动计算\n        titleCfg.offset = labelOffset + length_1 + titleSpacing + titleHeight / 2;\n      }\n    }\n  };\n  Circle.prototype.autoProcessOverlap = function (name, value, labelGroup, limitLength) {\n    var _this = this;\n    var hasAdjusted = false;\n    var util = OverlapUtil[name];\n    if (limitLength > 0) {\n      if (value === true) {\n        // true 形式的配置：使用 overlap 默认的的处理方法进行处理\n        hasAdjusted = util.getDefault()(false, labelGroup, limitLength);\n      } else if (isFunction(value)) {\n        // 回调函数形式的配置： 用户可以传入回调函数\n        hasAdjusted = value(false, labelGroup, limitLength);\n      } else if (isObject(value)) {\n        // object 形式的配置方式：包括 处理方法 type， 和可选参数配置 cfg\n        var overlapCfg = value;\n        if (util[overlapCfg.type]) {\n          hasAdjusted = util[overlapCfg.type](false, labelGroup, limitLength, overlapCfg.cfg);\n        }\n      } else if (util[value]) {\n        // 字符串类型的配置：按照名称执行 overlap 处理方法\n        hasAdjusted = util[value](false, labelGroup, limitLength);\n      }\n    }\n    if (name === 'autoRotate') {\n      // 文本旋转后，文本的对齐方式可能就不合适了\n      if (hasAdjusted) {\n        var labels = labelGroup.getChildren();\n        var verticalFactor_1 = this.get('verticalFactor');\n        each(labels, function (label) {\n          var textAlign = label.attr('textAlign');\n          if (textAlign === 'center') {\n            // 居中的文本需要调整旋转度\n            var newAlign = verticalFactor_1 > 0 ? 'end' : 'start';\n            label.attr('textAlign', newAlign);\n          }\n        });\n      }\n    } else if (name === 'autoHide') {\n      var children = labelGroup.getChildren().slice(0); // 复制数组，删除时不会出错\n      each(children, function (label) {\n        if (!label.get('visible')) {\n          if (_this.get('isRegister')) {\n            // 已经注册过了，则删除\n            _this.unregisterElement(label);\n          }\n          label.remove(); // 防止 label 数量太多，所以统一删除\n        }\n      });\n    }\n  };\n\n  return Circle;\n}(AxisBase);\nexport default Circle;","map":{"version":3,"names":["__assign","__extends","each","isNil","isFunction","isObject","vec2","AxisBase","OverlapUtil","Circle","_super","apply","arguments","prototype","getDefaultCfg","cfg","call","type","locationType","center","radius","startAngle","Math","PI","endAngle","getLinePath","get","x","y","rx","ry","path","abs","startPoint","getCirclePoint","endPoint","large","sweep","getTickPoint","tickValue","angle","getSideVector","offset","point","vector","factor","vecLen","length","scale","getAxisVector","cos","sin","canProcessOverlap","name","labelCfg","rotate","processOverlap","labelGroup","_this","titleCfg","verticalLimitLength","labelOffset","limitLength","titleHeight","titleSpacing","style","fontSize","spacing","overlapOrder","autoProcessOverlap","length_1","getCanvasBBox","height","value","hasAdjusted","util","getDefault","overlapCfg","labels","getChildren","verticalFactor_1","label","textAlign","attr","newAlign","children","slice","unregisterElement","remove"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/component/esm/axis/circle.js"],"sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { each, isNil, isFunction, isObject } from '@antv/util';\nimport { vec2 } from '@antv/matrix-util';\nimport AxisBase from './base';\nimport * as OverlapUtil from './overlap';\nvar Circle = /** @class */ (function (_super) {\n    __extends(Circle, _super);\n    function Circle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Circle.prototype.getDefaultCfg = function () {\n        var cfg = _super.prototype.getDefaultCfg.call(this);\n        return __assign(__assign({}, cfg), { type: 'circle', locationType: 'circle', center: null, radius: null, startAngle: -Math.PI / 2, endAngle: (Math.PI * 3) / 2 });\n    };\n    Circle.prototype.getLinePath = function () {\n        var center = this.get('center');\n        var x = center.x;\n        var y = center.y;\n        var rx = this.get('radius');\n        var ry = rx;\n        var startAngle = this.get('startAngle');\n        var endAngle = this.get('endAngle');\n        var path = [];\n        if (Math.abs(endAngle - startAngle) === Math.PI * 2) {\n            path = [['M', x, y - ry], ['A', rx, ry, 0, 1, 1, x, y + ry], ['A', rx, ry, 0, 1, 1, x, y - ry], ['Z']];\n        }\n        else {\n            var startPoint = this.getCirclePoint(startAngle);\n            var endPoint = this.getCirclePoint(endAngle);\n            var large = Math.abs(endAngle - startAngle) > Math.PI ? 1 : 0;\n            var sweep = startAngle > endAngle ? 0 : 1;\n            path = [\n                ['M', x, y],\n                ['L', startPoint.x, startPoint.y],\n                ['A', rx, ry, 0, large, sweep, endPoint.x, endPoint.y],\n                ['L', x, y],\n            ];\n        }\n        return path;\n    };\n    Circle.prototype.getTickPoint = function (tickValue) {\n        var startAngle = this.get('startAngle');\n        var endAngle = this.get('endAngle');\n        var angle = startAngle + (endAngle - startAngle) * tickValue;\n        return this.getCirclePoint(angle);\n    };\n    // 获取垂直于坐标轴的向量\n    Circle.prototype.getSideVector = function (offset, point) {\n        var center = this.get('center');\n        var vector = [point.x - center.x, point.y - center.y];\n        var factor = this.get('verticalFactor');\n        var vecLen = vec2.length(vector);\n        vec2.scale(vector, vector, (factor * offset) / vecLen);\n        return vector;\n    };\n    // 获取沿坐标轴方向的向量\n    Circle.prototype.getAxisVector = function (point) {\n        var center = this.get('center');\n        var vector = [point.x - center.x, point.y - center.y];\n        return [vector[1], -1 * vector[0]]; // 获取顺时针方向的向量\n    };\n    // 根据圆心和半径获取点\n    Circle.prototype.getCirclePoint = function (angle, radius) {\n        var center = this.get('center');\n        radius = radius || this.get('radius');\n        return {\n            x: center.x + Math.cos(angle) * radius,\n            y: center.y + Math.sin(angle) * radius,\n        };\n    };\n    /**\n     * 是否可以执行某一 overlap\n     * @param name\n     */\n    Circle.prototype.canProcessOverlap = function (name) {\n        var labelCfg = this.get('label');\n        // 对 autoRotate，如果配置了旋转角度，直接进行固定角度旋转\n        if (name === 'autoRotate') {\n            return isNil(labelCfg.rotate);\n        }\n        // 默认所有 overlap 都可执行\n        return true;\n    };\n    Circle.prototype.processOverlap = function (labelGroup) {\n        var _this = this;\n        var labelCfg = this.get('label');\n        var titleCfg = this.get('title');\n        var verticalLimitLength = this.get('verticalLimitLength');\n        var labelOffset = labelCfg.offset;\n        var limitLength = verticalLimitLength;\n        var titleHeight = 0;\n        var titleSpacing = 0;\n        if (titleCfg) {\n            titleHeight = titleCfg.style.fontSize;\n            titleSpacing = titleCfg.spacing;\n        }\n        if (limitLength) {\n            limitLength = limitLength - labelOffset - titleSpacing - titleHeight;\n        }\n        var overlapOrder = this.get('overlapOrder');\n        each(overlapOrder, function (name) {\n            if (labelCfg[name] && _this.canProcessOverlap(name)) {\n                _this.autoProcessOverlap(name, labelCfg[name], labelGroup, limitLength);\n            }\n        });\n        if (titleCfg) {\n            if (isNil(titleCfg.offset)) {\n                // 调整 title 的 offset\n                var length_1 = labelGroup.getCanvasBBox().height;\n                // 如果用户没有设置 offset，则自动计算\n                titleCfg.offset = labelOffset + length_1 + titleSpacing + titleHeight / 2;\n            }\n        }\n    };\n    Circle.prototype.autoProcessOverlap = function (name, value, labelGroup, limitLength) {\n        var _this = this;\n        var hasAdjusted = false;\n        var util = OverlapUtil[name];\n        if (limitLength > 0) {\n            if (value === true) {\n                // true 形式的配置：使用 overlap 默认的的处理方法进行处理\n                hasAdjusted = util.getDefault()(false, labelGroup, limitLength);\n            }\n            else if (isFunction(value)) {\n                // 回调函数形式的配置： 用户可以传入回调函数\n                hasAdjusted = value(false, labelGroup, limitLength);\n            }\n            else if (isObject(value)) {\n                // object 形式的配置方式：包括 处理方法 type， 和可选参数配置 cfg\n                var overlapCfg = value;\n                if (util[overlapCfg.type]) {\n                    hasAdjusted = util[overlapCfg.type](false, labelGroup, limitLength, overlapCfg.cfg);\n                }\n            }\n            else if (util[value]) {\n                // 字符串类型的配置：按照名称执行 overlap 处理方法\n                hasAdjusted = util[value](false, labelGroup, limitLength);\n            }\n        }\n        if (name === 'autoRotate') {\n            // 文本旋转后，文本的对齐方式可能就不合适了\n            if (hasAdjusted) {\n                var labels = labelGroup.getChildren();\n                var verticalFactor_1 = this.get('verticalFactor');\n                each(labels, function (label) {\n                    var textAlign = label.attr('textAlign');\n                    if (textAlign === 'center') {\n                        // 居中的文本需要调整旋转度\n                        var newAlign = verticalFactor_1 > 0 ? 'end' : 'start';\n                        label.attr('textAlign', newAlign);\n                    }\n                });\n            }\n        }\n        else if (name === 'autoHide') {\n            var children = labelGroup.getChildren().slice(0); // 复制数组，删除时不会出错\n            each(children, function (label) {\n                if (!label.get('visible')) {\n                    if (_this.get('isRegister')) {\n                        // 已经注册过了，则删除\n                        _this.unregisterElement(label);\n                    }\n                    label.remove(); // 防止 label 数量太多，所以统一删除\n                }\n            });\n        }\n    };\n    return Circle;\n}(AxisBase));\nexport default Circle;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}