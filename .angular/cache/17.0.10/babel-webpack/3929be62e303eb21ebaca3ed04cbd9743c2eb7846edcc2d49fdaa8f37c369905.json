{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport GroupComponent from '../abstract/group-component';\nimport { getCirclePoint } from '../util/util';\nvar ArcAnnotation = /** @class */function (_super) {\n  __extends(ArcAnnotation, _super);\n  function ArcAnnotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @protected\n   * 默认的配置项\n   * @returns {object} 默认的配置项\n   */\n  ArcAnnotation.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n    return __assign(__assign({}, cfg), {\n      name: 'annotation',\n      type: 'arc',\n      locationType: 'circle',\n      center: null,\n      radius: 100,\n      startAngle: -Math.PI / 2,\n      endAngle: Math.PI * 3 / 2,\n      style: {\n        stroke: '#999',\n        lineWidth: 1\n      }\n    });\n  };\n  ArcAnnotation.prototype.renderInner = function (group) {\n    this.renderArc(group);\n  };\n  ArcAnnotation.prototype.getArcPath = function () {\n    var _a = this.getLocation(),\n      center = _a.center,\n      radius = _a.radius,\n      startAngle = _a.startAngle,\n      endAngle = _a.endAngle;\n    var startPoint = getCirclePoint(center, radius, startAngle);\n    var endPoint = getCirclePoint(center, radius, endAngle);\n    var largeFlag = endAngle - startAngle > Math.PI ? 1 : 0;\n    var path = [['M', startPoint.x, startPoint.y]];\n    if (endAngle - startAngle === Math.PI * 2) {\n      // 整个圆是分割成两个圆\n      var middlePoint = getCirclePoint(center, radius, startAngle + Math.PI);\n      path.push(['A', radius, radius, 0, largeFlag, 1, middlePoint.x, middlePoint.y]);\n      path.push(['A', radius, radius, 0, largeFlag, 1, endPoint.x, endPoint.y]);\n    } else {\n      path.push(['A', radius, radius, 0, largeFlag, 1, endPoint.x, endPoint.y]);\n    }\n    return path;\n  };\n  // 绘制 arc\n  ArcAnnotation.prototype.renderArc = function (group) {\n    // 也可以 通过 get('center') 类似的方式逐个获取\n    var path = this.getArcPath();\n    var style = this.get('style');\n    this.addShape(group, {\n      type: 'path',\n      id: this.getElementId('arc'),\n      name: 'annotation-arc',\n      attrs: __assign({\n        path: path\n      }, style)\n    });\n  };\n  return ArcAnnotation;\n}(GroupComponent);\nexport default ArcAnnotation;","map":{"version":3,"names":["__assign","__extends","GroupComponent","getCirclePoint","ArcAnnotation","_super","apply","arguments","prototype","getDefaultCfg","cfg","call","name","type","locationType","center","radius","startAngle","Math","PI","endAngle","style","stroke","lineWidth","renderInner","group","renderArc","getArcPath","_a","getLocation","startPoint","endPoint","largeFlag","path","x","y","middlePoint","push","get","addShape","id","getElementId","attrs"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/component/esm/annotation/arc.js"],"sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport GroupComponent from '../abstract/group-component';\nimport { getCirclePoint } from '../util/util';\nvar ArcAnnotation = /** @class */ (function (_super) {\n    __extends(ArcAnnotation, _super);\n    function ArcAnnotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @protected\n     * 默认的配置项\n     * @returns {object} 默认的配置项\n     */\n    ArcAnnotation.prototype.getDefaultCfg = function () {\n        var cfg = _super.prototype.getDefaultCfg.call(this);\n        return __assign(__assign({}, cfg), { name: 'annotation', type: 'arc', locationType: 'circle', center: null, radius: 100, startAngle: -Math.PI / 2, endAngle: (Math.PI * 3) / 2, style: {\n                stroke: '#999',\n                lineWidth: 1,\n            } });\n    };\n    ArcAnnotation.prototype.renderInner = function (group) {\n        this.renderArc(group);\n    };\n    ArcAnnotation.prototype.getArcPath = function () {\n        var _a = this.getLocation(), center = _a.center, radius = _a.radius, startAngle = _a.startAngle, endAngle = _a.endAngle;\n        var startPoint = getCirclePoint(center, radius, startAngle);\n        var endPoint = getCirclePoint(center, radius, endAngle);\n        var largeFlag = endAngle - startAngle > Math.PI ? 1 : 0;\n        var path = [['M', startPoint.x, startPoint.y]];\n        if (endAngle - startAngle === Math.PI * 2) {\n            // 整个圆是分割成两个圆\n            var middlePoint = getCirclePoint(center, radius, startAngle + Math.PI);\n            path.push(['A', radius, radius, 0, largeFlag, 1, middlePoint.x, middlePoint.y]);\n            path.push(['A', radius, radius, 0, largeFlag, 1, endPoint.x, endPoint.y]);\n        }\n        else {\n            path.push(['A', radius, radius, 0, largeFlag, 1, endPoint.x, endPoint.y]);\n        }\n        return path;\n    };\n    // 绘制 arc\n    ArcAnnotation.prototype.renderArc = function (group) {\n        // 也可以 通过 get('center') 类似的方式逐个获取\n        var path = this.getArcPath();\n        var style = this.get('style');\n        this.addShape(group, {\n            type: 'path',\n            id: this.getElementId('arc'),\n            name: 'annotation-arc',\n            attrs: __assign({ path: path }, style),\n        });\n    };\n    return ArcAnnotation;\n}(GroupComponent));\nexport default ArcAnnotation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}