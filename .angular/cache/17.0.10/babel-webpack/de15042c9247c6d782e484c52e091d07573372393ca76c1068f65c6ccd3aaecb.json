{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { ext } from '@antv/matrix-util';\nimport { each, filter, get, isFunction, isNil, isNumberEqual, mix, size } from '@antv/util';\nimport GroupComponent from '../abstract/group-component';\nimport { getMatrixByAngle } from '../util/matrix';\nimport { getStatesStyle } from '../util/state';\nimport Theme from '../util/theme';\nvar AxisBase = /** @class */function (_super) {\n  __extends(AxisBase, _super);\n  function AxisBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  AxisBase.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n    return __assign(__assign({}, cfg), {\n      name: 'axis',\n      ticks: [],\n      line: {},\n      tickLine: {},\n      subTickLine: null,\n      title: null,\n      /**\n       * 文本标签的配置项\n       */\n      label: {},\n      /**\n       * 垂直于坐标轴方向的因子，决定文本、title、tickLine 在坐标轴的哪一侧\n       */\n      verticalFactor: 1,\n      // 垂直方向限制的长度，对文本自适应有很大影响\n      verticalLimitLength: null,\n      overlapOrder: ['autoRotate', 'autoEllipsis', 'autoHide'],\n      tickStates: {},\n      optimize: {},\n      defaultCfg: {\n        line: {\n          // @type {Attrs} 坐标轴线的图形属性,如果设置成null，则不显示轴线\n          style: {\n            lineWidth: 1,\n            stroke: Theme.lineColor\n          }\n        },\n        tickLine: {\n          // @type {Attrs} 标注坐标线的图形属性\n          style: {\n            lineWidth: 1,\n            stroke: Theme.lineColor\n          },\n          alignTick: true,\n          length: 5,\n          displayWithLabel: true\n        },\n        subTickLine: {\n          // @type {Attrs} 标注坐标线的图形属性\n          style: {\n            lineWidth: 1,\n            stroke: Theme.lineColor\n          },\n          count: 4,\n          length: 2\n        },\n        label: {\n          autoRotate: true,\n          autoHide: false,\n          autoEllipsis: false,\n          style: {\n            fontSize: 12,\n            fill: Theme.textColor,\n            fontFamily: Theme.fontFamily,\n            fontWeight: 'normal'\n          },\n          offset: 10,\n          offsetX: 0,\n          offsetY: 0\n        },\n        title: {\n          autoRotate: true,\n          spacing: 5,\n          position: 'center',\n          style: {\n            fontSize: 12,\n            fill: Theme.textColor,\n            textBaseline: 'middle',\n            fontFamily: Theme.fontFamily,\n            textAlign: 'center'\n          },\n          iconStyle: {\n            fill: Theme.descriptionIconFill,\n            stroke: Theme.descriptionIconStroke\n          },\n          description: ''\n        },\n        tickStates: {\n          active: {\n            labelStyle: {\n              fontWeight: 500\n            },\n            tickLineStyle: {\n              lineWidth: 2\n            }\n          },\n          inactive: {\n            labelStyle: {\n              fill: Theme.uncheckedColor\n            }\n          }\n        },\n        // 针对大数据量进行优化配置\n        optimize: {\n          enable: true,\n          threshold: 400\n        }\n      },\n      theme: {}\n    });\n  };\n  /**\n   * 绘制组件\n   */\n  AxisBase.prototype.renderInner = function (group) {\n    if (this.get('line')) {\n      this.drawLine(group);\n    }\n    // drawTicks 包括 drawLabels 和 drawTickLines\n    this.drawTicks(group);\n    if (this.get('title')) {\n      this.drawTitle(group);\n    }\n  };\n  // 实现 IList 接口\n  AxisBase.prototype.isList = function () {\n    return true;\n  };\n  /**\n   * 获取图例项\n   * @return {ListItem[]} 列表项集合\n   */\n  AxisBase.prototype.getItems = function () {\n    return this.get('ticks');\n  };\n  /**\n   * 设置列表项\n   * @param {ListItem[]} items 列表项集合\n   */\n  AxisBase.prototype.setItems = function (items) {\n    this.update({\n      ticks: items\n    });\n  };\n  /**\n   * 更新列表项\n   * @param {ListItem} item 列表项\n   * @param {object}   cfg  列表项\n   */\n  AxisBase.prototype.updateItem = function (item, cfg) {\n    mix(item, cfg);\n    this.clear(); // 由于单个图例项变化，会引起全局变化，所以全部更新\n    this.render();\n  };\n  /**\n   * 清空列表\n   */\n  AxisBase.prototype.clearItems = function () {\n    var itemGroup = this.getElementByLocalId('label-group');\n    itemGroup && itemGroup.clear();\n  };\n  /**\n   * 设置列表项的状态\n   * @param {ListItem} item  列表项\n   * @param {string}   state 状态名\n   * @param {boolean}  value 状态值, true, false\n   */\n  AxisBase.prototype.setItemState = function (item, state, value) {\n    item[state] = value;\n    this.updateTickStates(item); // 应用状态样式\n  };\n  /**\n   * 是否存在指定的状态\n   * @param {ListItem} item  列表项\n   * @param {boolean} state 状态名\n   */\n  AxisBase.prototype.hasState = function (item, state) {\n    return !!item[state];\n  };\n  AxisBase.prototype.getItemStates = function (item) {\n    var tickStates = this.get('tickStates');\n    var rst = [];\n    each(tickStates, function (v, k) {\n      if (item[k]) {\n        // item.selected\n        rst.push(k);\n      }\n    });\n    return rst;\n  };\n  /**\n   * 清楚所有列表项的状态\n   * @param {string} state 状态值\n   */\n  AxisBase.prototype.clearItemsState = function (state) {\n    var _this = this;\n    var items = this.getItemsByState(state);\n    each(items, function (item) {\n      _this.setItemState(item, state, false);\n    });\n  };\n  /**\n   * 根据状态获取图例项\n   * @param  {string}     state [description]\n   * @return {ListItem[]}       [description]\n   */\n  AxisBase.prototype.getItemsByState = function (state) {\n    var _this = this;\n    var items = this.getItems();\n    return filter(items, function (item) {\n      return _this.hasState(item, state);\n    });\n  };\n  AxisBase.prototype.getSidePoint = function (point, offset) {\n    var self = this;\n    var vector = self.getSideVector(offset, point);\n    return {\n      x: point.x + vector[0],\n      y: point.y + vector[1]\n    };\n  };\n  AxisBase.prototype.getTextAnchor = function (vector) {\n    var align;\n    if (isNumberEqual(vector[0], 0)) {\n      align = 'center';\n    } else if (vector[0] > 0) {\n      align = 'start';\n    } else if (vector[0] < 0) {\n      align = 'end';\n    }\n    return align;\n  };\n  AxisBase.prototype.getTextBaseline = function (vector) {\n    var base;\n    if (isNumberEqual(vector[1], 0)) {\n      base = 'middle';\n    } else if (vector[1] > 0) {\n      base = 'top';\n    } else if (vector[1] < 0) {\n      base = 'bottom';\n    }\n    return base;\n  };\n  AxisBase.prototype.processOverlap = function (labelGroup) {};\n  // 绘制坐标轴线\n  AxisBase.prototype.drawLine = function (group) {\n    var path = this.getLinePath();\n    var line = this.get('line'); // line 的判空在调用 drawLine 之前，不在这里判定\n    this.addShape(group, {\n      type: 'path',\n      id: this.getElementId('line'),\n      name: 'axis-line',\n      attrs: mix({\n        path: path\n      }, line.style)\n    });\n  };\n  AxisBase.prototype.getTickLineItems = function (ticks) {\n    var _this = this;\n    var tickLineItems = [];\n    var tickLine = this.get('tickLine');\n    var alignTick = tickLine.alignTick;\n    var tickLineLength = tickLine.length;\n    var tickSegment = 1;\n    var tickCount = ticks.length;\n    if (tickCount >= 2) {\n      tickSegment = ticks[1].value - ticks[0].value;\n    }\n    each(ticks, function (tick) {\n      var point = tick.point;\n      if (!alignTick) {\n        // tickLine 不同 tick 对齐时需要调整 point\n        point = _this.getTickPoint(tick.value - tickSegment / 2);\n      }\n      var endPoint = _this.getSidePoint(point, tickLineLength);\n      tickLineItems.push({\n        startPoint: point,\n        tickValue: tick.value,\n        endPoint: endPoint,\n        tickId: tick.id,\n        id: \"tickline-\" + tick.id\n      });\n    });\n    // 如果 tickLine 不居中对齐，则需要在最后面补充一个 tickLine\n    // if (!alignTick && tickCount > 0) {\n    //   const tick = ticks[tickCount - 1];\n    //   const point = this.getTickPoint(tick.value + tickSegment / 2);\n    // }\n    return tickLineItems;\n  };\n  AxisBase.prototype.getSubTickLineItems = function (tickLineItems) {\n    var subTickLineItems = [];\n    var subTickLine = this.get('subTickLine');\n    var subCount = subTickLine.count;\n    var tickLineCount = tickLineItems.length;\n    // 刻度线的数量大于 2 时，才绘制子刻度\n    if (tickLineCount >= 2) {\n      for (var i = 0; i < tickLineCount - 1; i++) {\n        var pre = tickLineItems[i];\n        var next = tickLineItems[i + 1];\n        for (var j = 0; j < subCount; j++) {\n          var percent = (j + 1) / (subCount + 1);\n          var tickValue = (1 - percent) * pre.tickValue + percent * next.tickValue;\n          var point = this.getTickPoint(tickValue);\n          var endPoint = this.getSidePoint(point, subTickLine.length);\n          subTickLineItems.push({\n            startPoint: point,\n            endPoint: endPoint,\n            tickValue: tickValue,\n            id: \"sub-\" + pre.id + \"-\" + j\n          });\n        }\n      }\n    }\n    return subTickLineItems;\n  };\n  AxisBase.prototype.getTickLineAttrs = function (tickItem, type, index, tickItems) {\n    var style = this.get(type).style;\n    // 保持和 grid 相同的数据结构\n    var item = {\n      points: [tickItem.startPoint, tickItem.endPoint]\n    };\n    var defaultTickLineStyle = get(this.get('theme'), ['tickLine', 'style'], {});\n    style = isFunction(style) ? mix({}, defaultTickLineStyle, style(item, index, tickItems)) : style;\n    var startPoint = tickItem.startPoint,\n      endPoint = tickItem.endPoint;\n    return __assign({\n      x1: startPoint.x,\n      y1: startPoint.y,\n      x2: endPoint.x,\n      y2: endPoint.y\n    }, style);\n  };\n  // 绘制坐标轴刻度线\n  AxisBase.prototype.drawTick = function (tickItem, tickLineGroup, type, index, tickItems) {\n    this.addShape(tickLineGroup, {\n      type: 'line',\n      id: this.getElementId(tickItem.id),\n      name: \"axis-\" + type,\n      attrs: this.getTickLineAttrs(tickItem, type, index, tickItems)\n    });\n  };\n  // 绘制坐标轴刻度线，包括子刻度线\n  AxisBase.prototype.drawTickLines = function (group) {\n    var _this = this;\n    var ticks = this.get('ticks');\n    var subTickLine = this.get('subTickLine');\n    var tickLineItems = this.getTickLineItems(ticks);\n    var tickLineGroup = this.addGroup(group, {\n      name: 'axis-tickline-group',\n      id: this.getElementId('tickline-group')\n    });\n    var tickCfg = this.get('tickLine');\n    each(tickLineItems, function (item, index) {\n      if (tickCfg.displayWithLabel) {\n        // 如果跟随 label 显示，则检测是否存在对应的 label\n        var labelId = _this.getElementId(\"label-\" + item.tickId);\n        if (group.findById(labelId)) {\n          _this.drawTick(item, tickLineGroup, 'tickLine', index, tickLineItems);\n        }\n      } else {\n        _this.drawTick(item, tickLineGroup, 'tickLine', index, tickLineItems);\n      }\n    });\n    if (subTickLine) {\n      var subTickLineItems_1 = this.getSubTickLineItems(tickLineItems);\n      each(subTickLineItems_1, function (item, index) {\n        _this.drawTick(item, tickLineGroup, 'subTickLine', index, subTickLineItems_1);\n      });\n    }\n  };\n  // 预处理 ticks 确定位置和补充 id\n  AxisBase.prototype.processTicks = function () {\n    var _this = this;\n    var ticks = this.get('ticks');\n    each(ticks, function (tick) {\n      tick.point = _this.getTickPoint(tick.value);\n      // 补充 tick 的 id，为动画和更新做准备\n      if (isNil(tick.id)) {\n        // 默认使用 tick.name 作为id\n        tick.id = tick.name;\n      }\n    });\n  };\n  // 绘制 ticks 包括文本和 tickLine\n  AxisBase.prototype.drawTicks = function (group) {\n    var _this = this;\n    this.optimizeTicks();\n    this.processTicks();\n    if (this.get('label')) {\n      this.drawLabels(group);\n    }\n    if (this.get('tickLine')) {\n      this.drawTickLines(group);\n    }\n    var ticks = this.get('ticks');\n    each(ticks, function (tick) {\n      _this.applyTickStates(tick, group);\n    });\n  };\n  /**\n   * 根据 optimize 配置对 ticks 进行抽样，对抽样过后的 ticks 才进行真实的渲染\n   */\n  AxisBase.prototype.optimizeTicks = function () {\n    var optimize = this.get('optimize');\n    var ticks = this.get('ticks');\n    if (optimize && optimize.enable && optimize.threshold > 0) {\n      var len = size(ticks);\n      if (len > optimize.threshold) {\n        var page_1 = Math.ceil(len / optimize.threshold);\n        var optimizedTicks = ticks.filter(function (tick, idx) {\n          return idx % page_1 === 0;\n        });\n        this.set('ticks', optimizedTicks);\n        this.set('originalTicks', ticks);\n      }\n    }\n  };\n  // 获取 label 的配置项\n  AxisBase.prototype.getLabelAttrs = function (tick, index, ticks) {\n    var labelCfg = this.get('label');\n    var offset = labelCfg.offset,\n      offsetX = labelCfg.offsetX,\n      offsetY = labelCfg.offsetY,\n      rotate = labelCfg.rotate,\n      formatter = labelCfg.formatter;\n    var point = this.getSidePoint(tick.point, offset);\n    var vector = this.getSideVector(offset, point);\n    var text = formatter ? formatter(tick.name, tick, index) : tick.name;\n    var style = labelCfg.style;\n    style = isFunction(style) ? get(this.get('theme'), ['label', 'style'], {}) : style;\n    var attrs = mix({\n      x: point.x + offsetX,\n      y: point.y + offsetY,\n      text: text,\n      textAlign: this.getTextAnchor(vector),\n      textBaseline: this.getTextBaseline(vector)\n    }, style);\n    if (rotate) {\n      attrs.matrix = getMatrixByAngle(point, rotate);\n    }\n    return attrs;\n  };\n  // 绘制文本\n  AxisBase.prototype.drawLabels = function (group) {\n    var _this = this;\n    var ticks = this.get('ticks');\n    var labelGroup = this.addGroup(group, {\n      name: 'axis-label-group',\n      id: this.getElementId('label-group')\n    });\n    each(ticks, function (tick, index) {\n      _this.addShape(labelGroup, {\n        type: 'text',\n        name: 'axis-label',\n        id: _this.getElementId(\"label-\" + tick.id),\n        attrs: _this.getLabelAttrs(tick, index, ticks),\n        delegateObject: {\n          tick: tick,\n          item: tick,\n          index: index\n        }\n      });\n    });\n    this.processOverlap(labelGroup);\n    // 处理完后再进行 style 回调处理\n    var labels = labelGroup.getChildren();\n    var defaultLabelStyle = get(this.get('theme'), ['label', 'style'], {});\n    var _a = this.get('label'),\n      style = _a.style,\n      formatter = _a.formatter;\n    if (isFunction(style)) {\n      var afterProcessTicks_1 = labels.map(function (label) {\n        return get(label.get('delegateObject'), 'tick');\n      });\n      each(labels, function (label, index) {\n        var tick = label.get('delegateObject').tick;\n        var text = formatter ? formatter(tick.name, tick, index) : tick.name;\n        var newStyle = mix({}, defaultLabelStyle, style(text, index, afterProcessTicks_1));\n        label.attr(newStyle);\n      });\n    }\n  };\n  // 标题的属性\n  AxisBase.prototype.getTitleAttrs = function () {\n    var titleCfg = this.get('title');\n    var style = titleCfg.style,\n      position = titleCfg.position,\n      offset = titleCfg.offset,\n      _a = titleCfg.spacing,\n      spacing = _a === void 0 ? 0 : _a,\n      autoRotate = titleCfg.autoRotate;\n    var titleHeight = style.fontSize;\n    var percent = 0.5;\n    if (position === 'start') {\n      percent = 0;\n    } else if (position === 'end') {\n      percent = 1;\n    }\n    var point = this.getTickPoint(percent); // 标题对应的坐标轴上的点\n    // 如果没有指定 titleOffset 也没有渲染 label，这里需要自动计算 offset\n    var titlePoint = this.getSidePoint(point, offset || spacing + titleHeight / 2); // 标题的点\n    var attrs = mix({\n      x: titlePoint.x,\n      y: titlePoint.y,\n      text: titleCfg.text\n    }, style);\n    var rotate = titleCfg.rotate; // rotate 是角度值\n    var angle = rotate;\n    if (isNil(rotate) && autoRotate) {\n      // 用户没有设定旋转角度，同时设置自动旋转\n      var vector = this.getAxisVector(point);\n      var v1 = [1, 0]; // 水平方向的向量\n      angle = ext.angleTo(vector, v1, true);\n    }\n    if (angle) {\n      var matrix = getMatrixByAngle(titlePoint, angle);\n      attrs.matrix = matrix;\n    }\n    return attrs;\n  };\n  // 绘制标题\n  AxisBase.prototype.drawTitle = function (group) {\n    var _a;\n    var titleAttrs = this.getTitleAttrs();\n    var titleShape = this.addShape(group, {\n      type: 'text',\n      id: this.getElementId('title'),\n      name: 'axis-title',\n      attrs: titleAttrs\n    });\n    // description字段存在时，显示icon\n    if ((_a = this.get('title')) === null || _a === void 0 ? void 0 : _a.description) {\n      this.drawDescriptionIcon(group, titleShape, titleAttrs.matrix);\n    }\n  };\n  AxisBase.prototype.drawDescriptionIcon = function (group, titleShape, matrix) {\n    var descriptionShape = this.addGroup(group, {\n      name: 'axis-description',\n      id: this.getElementById('description')\n    });\n    var _a = titleShape.getBBox(),\n      maxX = _a.maxX,\n      maxY = _a.maxY,\n      height = _a.height;\n    var iconStyle = this.get('title').iconStyle;\n    var spacing = 4; // 设置icon与文本之间距离\n    var r = height / 2;\n    var lineWidth = r / 6;\n    var startX = maxX + spacing;\n    var startY = maxY - height / 2;\n    // 绘制 information icon 路径\n    // 外圆环path\n    var _b = [startX + r, startY - r],\n      x0 = _b[0],\n      y0 = _b[1];\n    var _c = [x0 + r, y0 + r],\n      x1 = _c[0],\n      y1 = _c[1];\n    var _d = [x0, y1 + r],\n      x2 = _d[0],\n      y2 = _d[1];\n    var _e = [startX, y0 + r],\n      x3 = _e[0],\n      y3 = _e[1];\n    // i path\n    var _f = [startX + r, startY - height / 4],\n      x4 = _f[0],\n      y4 = _f[1];\n    var _g = [x4, y4 + lineWidth],\n      x5 = _g[0],\n      y5 = _g[1];\n    var _h = [x5, y5 + lineWidth],\n      x6 = _h[0],\n      y6 = _h[1];\n    var _j = [x6, y6 + r * 3 / 4],\n      x7 = _j[0],\n      y7 = _j[1];\n    this.addShape(descriptionShape, {\n      type: 'path',\n      id: this.getElementId('title-description-icon'),\n      name: 'axis-title-description-icon',\n      attrs: __assign({\n        path: [['M', x0, y0], ['A', r, r, 0, 0, 1, x1, y1], ['A', r, r, 0, 0, 1, x2, y2], ['A', r, r, 0, 0, 1, x3, y3], ['A', r, r, 0, 0, 1, x0, y0], ['M', x4, y4], ['L', x5, y5], ['M', x6, y6], ['L', x7, y7]],\n        lineWidth: lineWidth,\n        matrix: matrix\n      }, iconStyle)\n    });\n    // 点击热区，设置透明矩形\n    this.addShape(descriptionShape, {\n      type: 'rect',\n      id: this.getElementId('title-description-rect'),\n      name: 'axis-title-description-rect',\n      attrs: {\n        x: startX,\n        y: startY - height / 2,\n        width: height,\n        height: height,\n        stroke: '#000',\n        fill: '#000',\n        opacity: 0,\n        matrix: matrix,\n        cursor: 'pointer'\n      }\n    });\n  };\n  AxisBase.prototype.applyTickStates = function (tick, group) {\n    var states = this.getItemStates(tick);\n    if (states.length) {\n      var tickStates = this.get('tickStates');\n      // 分别更新 label 和 tickLine\n      var labelId = this.getElementId(\"label-\" + tick.id);\n      var labelShape = group.findById(labelId);\n      if (labelShape) {\n        var labelStateStyle = getStatesStyle(tick, 'label', tickStates);\n        labelStateStyle && labelShape.attr(labelStateStyle);\n      }\n      var tickLineId = this.getElementId(\"tickline-\" + tick.id);\n      var tickLineShape = group.findById(tickLineId);\n      if (tickLineShape) {\n        var tickLineStateStyle = getStatesStyle(tick, 'tickLine', tickStates);\n        tickLineStateStyle && tickLineShape.attr(tickLineStateStyle);\n      }\n    }\n  };\n  AxisBase.prototype.updateTickStates = function (tick) {\n    var states = this.getItemStates(tick);\n    var tickStates = this.get('tickStates');\n    var labelCfg = this.get('label');\n    var labelShape = this.getElementByLocalId(\"label-\" + tick.id);\n    var tickLineCfg = this.get('tickLine');\n    var tickLineShape = this.getElementByLocalId(\"tickline-\" + tick.id);\n    if (states.length) {\n      if (labelShape) {\n        var labelStateStyle = getStatesStyle(tick, 'label', tickStates);\n        labelStateStyle && labelShape.attr(labelStateStyle);\n      }\n      if (tickLineShape) {\n        var tickLineStateStyle = getStatesStyle(tick, 'tickLine', tickStates);\n        tickLineStateStyle && tickLineShape.attr(tickLineStateStyle);\n      }\n    } else {\n      if (labelShape) {\n        labelShape.attr(labelCfg.style);\n      }\n      if (tickLineShape) {\n        tickLineShape.attr(tickLineCfg.style);\n      }\n    }\n  };\n  return AxisBase;\n}(GroupComponent);\nexport default AxisBase;","map":{"version":3,"names":["__assign","__extends","ext","each","filter","get","isFunction","isNil","isNumberEqual","mix","size","GroupComponent","getMatrixByAngle","getStatesStyle","Theme","AxisBase","_super","apply","arguments","prototype","getDefaultCfg","cfg","call","name","ticks","line","tickLine","subTickLine","title","label","verticalFactor","verticalLimitLength","overlapOrder","tickStates","optimize","defaultCfg","style","lineWidth","stroke","lineColor","alignTick","length","displayWithLabel","count","autoRotate","autoHide","autoEllipsis","fontSize","fill","textColor","fontFamily","fontWeight","offset","offsetX","offsetY","spacing","position","textBaseline","textAlign","iconStyle","descriptionIconFill","descriptionIconStroke","description","active","labelStyle","tickLineStyle","inactive","uncheckedColor","enable","threshold","theme","renderInner","group","drawLine","drawTicks","drawTitle","isList","getItems","setItems","items","update","updateItem","item","clear","render","clearItems","itemGroup","getElementByLocalId","setItemState","state","value","updateTickStates","hasState","getItemStates","rst","v","k","push","clearItemsState","_this","getItemsByState","getSidePoint","point","self","vector","getSideVector","x","y","getTextAnchor","align","getTextBaseline","base","processOverlap","labelGroup","path","getLinePath","addShape","type","id","getElementId","attrs","getTickLineItems","tickLineItems","tickLineLength","tickSegment","tickCount","tick","getTickPoint","endPoint","startPoint","tickValue","tickId","getSubTickLineItems","subTickLineItems","subCount","tickLineCount","i","pre","next","j","percent","getTickLineAttrs","tickItem","index","tickItems","points","defaultTickLineStyle","x1","y1","x2","y2","drawTick","tickLineGroup","drawTickLines","addGroup","tickCfg","labelId","findById","subTickLineItems_1","processTicks","optimizeTicks","drawLabels","applyTickStates","len","page_1","Math","ceil","optimizedTicks","idx","set","getLabelAttrs","labelCfg","rotate","formatter","text","matrix","delegateObject","labels","getChildren","defaultLabelStyle","_a","afterProcessTicks_1","map","newStyle","attr","getTitleAttrs","titleCfg","titleHeight","titlePoint","angle","getAxisVector","v1","angleTo","titleAttrs","titleShape","drawDescriptionIcon","descriptionShape","getElementById","getBBox","maxX","maxY","height","r","startX","startY","_b","x0","y0","_c","_d","_e","x3","y3","_f","x4","y4","_g","x5","y5","_h","x6","y6","_j","x7","y7","width","opacity","cursor","states","labelShape","labelStateStyle","tickLineId","tickLineShape","tickLineStateStyle","tickLineCfg"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/component/esm/axis/base.js"],"sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { ext } from '@antv/matrix-util';\nimport { each, filter, get, isFunction, isNil, isNumberEqual, mix, size } from '@antv/util';\nimport GroupComponent from '../abstract/group-component';\nimport { getMatrixByAngle } from '../util/matrix';\nimport { getStatesStyle } from '../util/state';\nimport Theme from '../util/theme';\nvar AxisBase = /** @class */ (function (_super) {\n    __extends(AxisBase, _super);\n    function AxisBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AxisBase.prototype.getDefaultCfg = function () {\n        var cfg = _super.prototype.getDefaultCfg.call(this);\n        return __assign(__assign({}, cfg), { name: 'axis', ticks: [], line: {}, tickLine: {}, subTickLine: null, title: null, \n            /**\n             * 文本标签的配置项\n             */\n            label: {}, \n            /**\n             * 垂直于坐标轴方向的因子，决定文本、title、tickLine 在坐标轴的哪一侧\n             */\n            verticalFactor: 1, \n            // 垂直方向限制的长度，对文本自适应有很大影响\n            verticalLimitLength: null, overlapOrder: ['autoRotate', 'autoEllipsis', 'autoHide'], tickStates: {}, optimize: {}, defaultCfg: {\n                line: {\n                    // @type {Attrs} 坐标轴线的图形属性,如果设置成null，则不显示轴线\n                    style: {\n                        lineWidth: 1,\n                        stroke: Theme.lineColor,\n                    },\n                },\n                tickLine: {\n                    // @type {Attrs} 标注坐标线的图形属性\n                    style: {\n                        lineWidth: 1,\n                        stroke: Theme.lineColor,\n                    },\n                    alignTick: true,\n                    length: 5,\n                    displayWithLabel: true,\n                },\n                subTickLine: {\n                    // @type {Attrs} 标注坐标线的图形属性\n                    style: {\n                        lineWidth: 1,\n                        stroke: Theme.lineColor,\n                    },\n                    count: 4,\n                    length: 2,\n                },\n                label: {\n                    autoRotate: true,\n                    autoHide: false,\n                    autoEllipsis: false,\n                    style: {\n                        fontSize: 12,\n                        fill: Theme.textColor,\n                        fontFamily: Theme.fontFamily,\n                        fontWeight: 'normal',\n                    },\n                    offset: 10,\n                    offsetX: 0,\n                    offsetY: 0,\n                },\n                title: {\n                    autoRotate: true,\n                    spacing: 5,\n                    position: 'center',\n                    style: {\n                        fontSize: 12,\n                        fill: Theme.textColor,\n                        textBaseline: 'middle',\n                        fontFamily: Theme.fontFamily,\n                        textAlign: 'center',\n                    },\n                    iconStyle: {\n                        fill: Theme.descriptionIconFill,\n                        stroke: Theme.descriptionIconStroke,\n                    },\n                    description: ''\n                },\n                tickStates: {\n                    active: {\n                        labelStyle: {\n                            fontWeight: 500,\n                        },\n                        tickLineStyle: {\n                            lineWidth: 2,\n                        },\n                    },\n                    inactive: {\n                        labelStyle: {\n                            fill: Theme.uncheckedColor,\n                        },\n                    },\n                },\n                // 针对大数据量进行优化配置\n                optimize: {\n                    enable: true,\n                    threshold: 400,\n                },\n            }, theme: {} });\n    };\n    /**\n     * 绘制组件\n     */\n    AxisBase.prototype.renderInner = function (group) {\n        if (this.get('line')) {\n            this.drawLine(group);\n        }\n        // drawTicks 包括 drawLabels 和 drawTickLines\n        this.drawTicks(group);\n        if (this.get('title')) {\n            this.drawTitle(group);\n        }\n    };\n    // 实现 IList 接口\n    AxisBase.prototype.isList = function () {\n        return true;\n    };\n    /**\n     * 获取图例项\n     * @return {ListItem[]} 列表项集合\n     */\n    AxisBase.prototype.getItems = function () {\n        return this.get('ticks');\n    };\n    /**\n     * 设置列表项\n     * @param {ListItem[]} items 列表项集合\n     */\n    AxisBase.prototype.setItems = function (items) {\n        this.update({\n            ticks: items,\n        });\n    };\n    /**\n     * 更新列表项\n     * @param {ListItem} item 列表项\n     * @param {object}   cfg  列表项\n     */\n    AxisBase.prototype.updateItem = function (item, cfg) {\n        mix(item, cfg);\n        this.clear(); // 由于单个图例项变化，会引起全局变化，所以全部更新\n        this.render();\n    };\n    /**\n     * 清空列表\n     */\n    AxisBase.prototype.clearItems = function () {\n        var itemGroup = this.getElementByLocalId('label-group');\n        itemGroup && itemGroup.clear();\n    };\n    /**\n     * 设置列表项的状态\n     * @param {ListItem} item  列表项\n     * @param {string}   state 状态名\n     * @param {boolean}  value 状态值, true, false\n     */\n    AxisBase.prototype.setItemState = function (item, state, value) {\n        item[state] = value;\n        this.updateTickStates(item); // 应用状态样式\n    };\n    /**\n     * 是否存在指定的状态\n     * @param {ListItem} item  列表项\n     * @param {boolean} state 状态名\n     */\n    AxisBase.prototype.hasState = function (item, state) {\n        return !!item[state];\n    };\n    AxisBase.prototype.getItemStates = function (item) {\n        var tickStates = this.get('tickStates');\n        var rst = [];\n        each(tickStates, function (v, k) {\n            if (item[k]) {\n                // item.selected\n                rst.push(k);\n            }\n        });\n        return rst;\n    };\n    /**\n     * 清楚所有列表项的状态\n     * @param {string} state 状态值\n     */\n    AxisBase.prototype.clearItemsState = function (state) {\n        var _this = this;\n        var items = this.getItemsByState(state);\n        each(items, function (item) {\n            _this.setItemState(item, state, false);\n        });\n    };\n    /**\n     * 根据状态获取图例项\n     * @param  {string}     state [description]\n     * @return {ListItem[]}       [description]\n     */\n    AxisBase.prototype.getItemsByState = function (state) {\n        var _this = this;\n        var items = this.getItems();\n        return filter(items, function (item) {\n            return _this.hasState(item, state);\n        });\n    };\n    AxisBase.prototype.getSidePoint = function (point, offset) {\n        var self = this;\n        var vector = self.getSideVector(offset, point);\n        return {\n            x: point.x + vector[0],\n            y: point.y + vector[1],\n        };\n    };\n    AxisBase.prototype.getTextAnchor = function (vector) {\n        var align;\n        if (isNumberEqual(vector[0], 0)) {\n            align = 'center';\n        }\n        else if (vector[0] > 0) {\n            align = 'start';\n        }\n        else if (vector[0] < 0) {\n            align = 'end';\n        }\n        return align;\n    };\n    AxisBase.prototype.getTextBaseline = function (vector) {\n        var base;\n        if (isNumberEqual(vector[1], 0)) {\n            base = 'middle';\n        }\n        else if (vector[1] > 0) {\n            base = 'top';\n        }\n        else if (vector[1] < 0) {\n            base = 'bottom';\n        }\n        return base;\n    };\n    AxisBase.prototype.processOverlap = function (labelGroup) { };\n    // 绘制坐标轴线\n    AxisBase.prototype.drawLine = function (group) {\n        var path = this.getLinePath();\n        var line = this.get('line'); // line 的判空在调用 drawLine 之前，不在这里判定\n        this.addShape(group, {\n            type: 'path',\n            id: this.getElementId('line'),\n            name: 'axis-line',\n            attrs: mix({\n                path: path,\n            }, line.style),\n        });\n    };\n    AxisBase.prototype.getTickLineItems = function (ticks) {\n        var _this = this;\n        var tickLineItems = [];\n        var tickLine = this.get('tickLine');\n        var alignTick = tickLine.alignTick;\n        var tickLineLength = tickLine.length;\n        var tickSegment = 1;\n        var tickCount = ticks.length;\n        if (tickCount >= 2) {\n            tickSegment = ticks[1].value - ticks[0].value;\n        }\n        each(ticks, function (tick) {\n            var point = tick.point;\n            if (!alignTick) {\n                // tickLine 不同 tick 对齐时需要调整 point\n                point = _this.getTickPoint(tick.value - tickSegment / 2);\n            }\n            var endPoint = _this.getSidePoint(point, tickLineLength);\n            tickLineItems.push({\n                startPoint: point,\n                tickValue: tick.value,\n                endPoint: endPoint,\n                tickId: tick.id,\n                id: \"tickline-\" + tick.id,\n            });\n        });\n        // 如果 tickLine 不居中对齐，则需要在最后面补充一个 tickLine\n        // if (!alignTick && tickCount > 0) {\n        //   const tick = ticks[tickCount - 1];\n        //   const point = this.getTickPoint(tick.value + tickSegment / 2);\n        // }\n        return tickLineItems;\n    };\n    AxisBase.prototype.getSubTickLineItems = function (tickLineItems) {\n        var subTickLineItems = [];\n        var subTickLine = this.get('subTickLine');\n        var subCount = subTickLine.count;\n        var tickLineCount = tickLineItems.length;\n        // 刻度线的数量大于 2 时，才绘制子刻度\n        if (tickLineCount >= 2) {\n            for (var i = 0; i < tickLineCount - 1; i++) {\n                var pre = tickLineItems[i];\n                var next = tickLineItems[i + 1];\n                for (var j = 0; j < subCount; j++) {\n                    var percent = (j + 1) / (subCount + 1);\n                    var tickValue = (1 - percent) * pre.tickValue + percent * next.tickValue;\n                    var point = this.getTickPoint(tickValue);\n                    var endPoint = this.getSidePoint(point, subTickLine.length);\n                    subTickLineItems.push({\n                        startPoint: point,\n                        endPoint: endPoint,\n                        tickValue: tickValue,\n                        id: \"sub-\" + pre.id + \"-\" + j,\n                    });\n                }\n            }\n        }\n        return subTickLineItems;\n    };\n    AxisBase.prototype.getTickLineAttrs = function (tickItem, type, index, tickItems) {\n        var style = this.get(type).style;\n        // 保持和 grid 相同的数据结构\n        var item = {\n            points: [tickItem.startPoint, tickItem.endPoint],\n        };\n        var defaultTickLineStyle = get(this.get('theme'), ['tickLine', 'style'], {});\n        style = isFunction(style) ? mix({}, defaultTickLineStyle, style(item, index, tickItems)) : style;\n        var startPoint = tickItem.startPoint, endPoint = tickItem.endPoint;\n        return __assign({ x1: startPoint.x, y1: startPoint.y, x2: endPoint.x, y2: endPoint.y }, style);\n    };\n    // 绘制坐标轴刻度线\n    AxisBase.prototype.drawTick = function (tickItem, tickLineGroup, type, index, tickItems) {\n        this.addShape(tickLineGroup, {\n            type: 'line',\n            id: this.getElementId(tickItem.id),\n            name: \"axis-\" + type,\n            attrs: this.getTickLineAttrs(tickItem, type, index, tickItems),\n        });\n    };\n    // 绘制坐标轴刻度线，包括子刻度线\n    AxisBase.prototype.drawTickLines = function (group) {\n        var _this = this;\n        var ticks = this.get('ticks');\n        var subTickLine = this.get('subTickLine');\n        var tickLineItems = this.getTickLineItems(ticks);\n        var tickLineGroup = this.addGroup(group, {\n            name: 'axis-tickline-group',\n            id: this.getElementId('tickline-group'),\n        });\n        var tickCfg = this.get('tickLine');\n        each(tickLineItems, function (item, index) {\n            if (tickCfg.displayWithLabel) {\n                // 如果跟随 label 显示，则检测是否存在对应的 label\n                var labelId = _this.getElementId(\"label-\" + item.tickId);\n                if (group.findById(labelId)) {\n                    _this.drawTick(item, tickLineGroup, 'tickLine', index, tickLineItems);\n                }\n            }\n            else {\n                _this.drawTick(item, tickLineGroup, 'tickLine', index, tickLineItems);\n            }\n        });\n        if (subTickLine) {\n            var subTickLineItems_1 = this.getSubTickLineItems(tickLineItems);\n            each(subTickLineItems_1, function (item, index) {\n                _this.drawTick(item, tickLineGroup, 'subTickLine', index, subTickLineItems_1);\n            });\n        }\n    };\n    // 预处理 ticks 确定位置和补充 id\n    AxisBase.prototype.processTicks = function () {\n        var _this = this;\n        var ticks = this.get('ticks');\n        each(ticks, function (tick) {\n            tick.point = _this.getTickPoint(tick.value);\n            // 补充 tick 的 id，为动画和更新做准备\n            if (isNil(tick.id)) {\n                // 默认使用 tick.name 作为id\n                tick.id = tick.name;\n            }\n        });\n    };\n    // 绘制 ticks 包括文本和 tickLine\n    AxisBase.prototype.drawTicks = function (group) {\n        var _this = this;\n        this.optimizeTicks();\n        this.processTicks();\n        if (this.get('label')) {\n            this.drawLabels(group);\n        }\n        if (this.get('tickLine')) {\n            this.drawTickLines(group);\n        }\n        var ticks = this.get('ticks');\n        each(ticks, function (tick) {\n            _this.applyTickStates(tick, group);\n        });\n    };\n    /**\n     * 根据 optimize 配置对 ticks 进行抽样，对抽样过后的 ticks 才进行真实的渲染\n     */\n    AxisBase.prototype.optimizeTicks = function () {\n        var optimize = this.get('optimize');\n        var ticks = this.get('ticks');\n        if (optimize && optimize.enable && optimize.threshold > 0) {\n            var len = size(ticks);\n            if (len > optimize.threshold) {\n                var page_1 = Math.ceil(len / optimize.threshold);\n                var optimizedTicks = ticks.filter(function (tick, idx) { return idx % page_1 === 0; });\n                this.set('ticks', optimizedTicks);\n                this.set('originalTicks', ticks);\n            }\n        }\n    };\n    // 获取 label 的配置项\n    AxisBase.prototype.getLabelAttrs = function (tick, index, ticks) {\n        var labelCfg = this.get('label');\n        var offset = labelCfg.offset, offsetX = labelCfg.offsetX, offsetY = labelCfg.offsetY, rotate = labelCfg.rotate, formatter = labelCfg.formatter;\n        var point = this.getSidePoint(tick.point, offset);\n        var vector = this.getSideVector(offset, point);\n        var text = formatter ? formatter(tick.name, tick, index) : tick.name;\n        var style = labelCfg.style;\n        style = isFunction(style) ? get(this.get('theme'), ['label', 'style'], {}) : style;\n        var attrs = mix({\n            x: point.x + offsetX,\n            y: point.y + offsetY,\n            text: text,\n            textAlign: this.getTextAnchor(vector),\n            textBaseline: this.getTextBaseline(vector),\n        }, style);\n        if (rotate) {\n            attrs.matrix = getMatrixByAngle(point, rotate);\n        }\n        return attrs;\n    };\n    // 绘制文本\n    AxisBase.prototype.drawLabels = function (group) {\n        var _this = this;\n        var ticks = this.get('ticks');\n        var labelGroup = this.addGroup(group, {\n            name: 'axis-label-group',\n            id: this.getElementId('label-group'),\n        });\n        each(ticks, function (tick, index) {\n            _this.addShape(labelGroup, {\n                type: 'text',\n                name: 'axis-label',\n                id: _this.getElementId(\"label-\" + tick.id),\n                attrs: _this.getLabelAttrs(tick, index, ticks),\n                delegateObject: {\n                    tick: tick,\n                    item: tick,\n                    index: index,\n                },\n            });\n        });\n        this.processOverlap(labelGroup);\n        // 处理完后再进行 style 回调处理\n        var labels = labelGroup.getChildren();\n        var defaultLabelStyle = get(this.get('theme'), ['label', 'style'], {});\n        var _a = this.get('label'), style = _a.style, formatter = _a.formatter;\n        if (isFunction(style)) {\n            var afterProcessTicks_1 = labels.map(function (label) { return get(label.get('delegateObject'), 'tick'); });\n            each(labels, function (label, index) {\n                var tick = label.get('delegateObject').tick;\n                var text = formatter ? formatter(tick.name, tick, index) : tick.name;\n                var newStyle = mix({}, defaultLabelStyle, style(text, index, afterProcessTicks_1));\n                label.attr(newStyle);\n            });\n        }\n    };\n    // 标题的属性\n    AxisBase.prototype.getTitleAttrs = function () {\n        var titleCfg = this.get('title');\n        var style = titleCfg.style, position = titleCfg.position, offset = titleCfg.offset, _a = titleCfg.spacing, spacing = _a === void 0 ? 0 : _a, autoRotate = titleCfg.autoRotate;\n        var titleHeight = style.fontSize;\n        var percent = 0.5;\n        if (position === 'start') {\n            percent = 0;\n        }\n        else if (position === 'end') {\n            percent = 1;\n        }\n        var point = this.getTickPoint(percent); // 标题对应的坐标轴上的点\n        // 如果没有指定 titleOffset 也没有渲染 label，这里需要自动计算 offset\n        var titlePoint = this.getSidePoint(point, offset || spacing + titleHeight / 2); // 标题的点\n        var attrs = mix({\n            x: titlePoint.x,\n            y: titlePoint.y,\n            text: titleCfg.text,\n        }, style);\n        var rotate = titleCfg.rotate; // rotate 是角度值\n        var angle = rotate;\n        if (isNil(rotate) && autoRotate) {\n            // 用户没有设定旋转角度，同时设置自动旋转\n            var vector = this.getAxisVector(point);\n            var v1 = [1, 0]; // 水平方向的向量\n            angle = ext.angleTo(vector, v1, true);\n        }\n        if (angle) {\n            var matrix = getMatrixByAngle(titlePoint, angle);\n            attrs.matrix = matrix;\n        }\n        return attrs;\n    };\n    // 绘制标题\n    AxisBase.prototype.drawTitle = function (group) {\n        var _a;\n        var titleAttrs = this.getTitleAttrs();\n        var titleShape = this.addShape(group, {\n            type: 'text',\n            id: this.getElementId('title'),\n            name: 'axis-title',\n            attrs: titleAttrs\n        });\n        // description字段存在时，显示icon\n        if ((_a = this.get('title')) === null || _a === void 0 ? void 0 : _a.description) {\n            this.drawDescriptionIcon(group, titleShape, titleAttrs.matrix);\n        }\n    };\n    AxisBase.prototype.drawDescriptionIcon = function (group, titleShape, matrix) {\n        var descriptionShape = this.addGroup(group, {\n            name: 'axis-description',\n            id: this.getElementById('description')\n        });\n        var _a = titleShape.getBBox(), maxX = _a.maxX, maxY = _a.maxY, height = _a.height;\n        var iconStyle = this.get('title').iconStyle;\n        var spacing = 4; // 设置icon与文本之间距离\n        var r = height / 2;\n        var lineWidth = r / 6;\n        var startX = maxX + spacing;\n        var startY = maxY - height / 2;\n        // 绘制 information icon 路径\n        // 外圆环path\n        var _b = [startX + r, startY - r], x0 = _b[0], y0 = _b[1];\n        var _c = [x0 + r, y0 + r], x1 = _c[0], y1 = _c[1];\n        var _d = [x0, y1 + r], x2 = _d[0], y2 = _d[1];\n        var _e = [startX, y0 + r], x3 = _e[0], y3 = _e[1];\n        // i path\n        var _f = [startX + r, startY - height / 4], x4 = _f[0], y4 = _f[1];\n        var _g = [x4, y4 + lineWidth], x5 = _g[0], y5 = _g[1];\n        var _h = [x5, y5 + lineWidth], x6 = _h[0], y6 = _h[1];\n        var _j = [x6, y6 + r * 3 / 4], x7 = _j[0], y7 = _j[1];\n        this.addShape(descriptionShape, {\n            type: 'path',\n            id: this.getElementId('title-description-icon'),\n            name: 'axis-title-description-icon',\n            attrs: __assign({ path: [\n                    ['M', x0, y0],\n                    ['A', r, r, 0, 0, 1, x1, y1],\n                    ['A', r, r, 0, 0, 1, x2, y2],\n                    ['A', r, r, 0, 0, 1, x3, y3],\n                    ['A', r, r, 0, 0, 1, x0, y0],\n                    ['M', x4, y4],\n                    ['L', x5, y5],\n                    ['M', x6, y6],\n                    ['L', x7, y7]\n                ], lineWidth: lineWidth,\n                matrix: matrix }, iconStyle),\n        });\n        // 点击热区，设置透明矩形\n        this.addShape(descriptionShape, {\n            type: 'rect',\n            id: this.getElementId('title-description-rect'),\n            name: 'axis-title-description-rect',\n            attrs: {\n                x: startX,\n                y: startY - height / 2,\n                width: height,\n                height: height,\n                stroke: '#000',\n                fill: '#000',\n                opacity: 0,\n                matrix: matrix,\n                cursor: 'pointer'\n            }\n        });\n    };\n    AxisBase.prototype.applyTickStates = function (tick, group) {\n        var states = this.getItemStates(tick);\n        if (states.length) {\n            var tickStates = this.get('tickStates');\n            // 分别更新 label 和 tickLine\n            var labelId = this.getElementId(\"label-\" + tick.id);\n            var labelShape = group.findById(labelId);\n            if (labelShape) {\n                var labelStateStyle = getStatesStyle(tick, 'label', tickStates);\n                labelStateStyle && labelShape.attr(labelStateStyle);\n            }\n            var tickLineId = this.getElementId(\"tickline-\" + tick.id);\n            var tickLineShape = group.findById(tickLineId);\n            if (tickLineShape) {\n                var tickLineStateStyle = getStatesStyle(tick, 'tickLine', tickStates);\n                tickLineStateStyle && tickLineShape.attr(tickLineStateStyle);\n            }\n        }\n    };\n    AxisBase.prototype.updateTickStates = function (tick) {\n        var states = this.getItemStates(tick);\n        var tickStates = this.get('tickStates');\n        var labelCfg = this.get('label');\n        var labelShape = this.getElementByLocalId(\"label-\" + tick.id);\n        var tickLineCfg = this.get('tickLine');\n        var tickLineShape = this.getElementByLocalId(\"tickline-\" + tick.id);\n        if (states.length) {\n            if (labelShape) {\n                var labelStateStyle = getStatesStyle(tick, 'label', tickStates);\n                labelStateStyle && labelShape.attr(labelStateStyle);\n            }\n            if (tickLineShape) {\n                var tickLineStateStyle = getStatesStyle(tick, 'tickLine', tickStates);\n                tickLineStateStyle && tickLineShape.attr(tickLineStateStyle);\n            }\n        }\n        else {\n            if (labelShape) {\n                labelShape.attr(labelCfg.style);\n            }\n            if (tickLineShape) {\n                tickLineShape.attr(tickLineCfg.style);\n            }\n        }\n    };\n    return AxisBase;\n}(GroupComponent));\nexport default AxisBase;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}