{"ast":null,"code":"import { __extends, __read } from \"tslib\";\nimport { each } from '@antv/util';\nimport Action from '../base';\nimport { getDelegationObject, getElements, getElementValue, getScaleByField, isList, isSlider, isMask, getMaskedElements } from '../util';\n/**\n * 元素过滤的 Action，控制元素的显示隐藏\n * @ignore\n */\nvar ElementFilter = /** @class */function (_super) {\n  __extends(ElementFilter, _super);\n  function ElementFilter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * 过滤\n   */\n  ElementFilter.prototype.filter = function () {\n    var delegateObject = getDelegationObject(this.context);\n    var view = this.context.view;\n    var elements = getElements(view);\n    if (isMask(this.context)) {\n      var maskElements_1 = getMaskedElements(this.context, 10);\n      if (maskElements_1) {\n        each(elements, function (el) {\n          if (maskElements_1.includes(el)) {\n            el.show();\n          } else {\n            el.hide();\n          }\n        });\n      }\n    } else if (delegateObject) {\n      var component = delegateObject.component;\n      var field_1 = component.get('field');\n      // 列表类的组件能够触发\n      if (isList(delegateObject)) {\n        if (field_1) {\n          var unCheckedItems = component.getItemsByState('unchecked');\n          var scale_1 = getScaleByField(view, field_1);\n          var names_1 = unCheckedItems.map(function (item) {\n            return item.name;\n          });\n          // 直接控制显示、隐藏\n          each(elements, function (el) {\n            var value = getElementValue(el, field_1);\n            var text = scale_1.getText(value);\n            if (names_1.indexOf(text) >= 0) {\n              el.hide();\n            } else {\n              el.show();\n            }\n          });\n        }\n      } else if (isSlider(delegateObject)) {\n        var range = component.getValue();\n        var _a = __read(range, 2),\n          min_1 = _a[0],\n          max_1 = _a[1];\n        each(elements, function (el) {\n          var value = getElementValue(el, field_1);\n          if (value >= min_1 && value <= max_1) {\n            el.show();\n          } else {\n            el.hide();\n          }\n        });\n      }\n    }\n  };\n  /**\n   * 清除过滤\n   */\n  ElementFilter.prototype.clear = function () {\n    var elements = getElements(this.context.view);\n    each(elements, function (el) {\n      el.show();\n    });\n  };\n  /**\n   * 恢复发生的过滤，保持同 data-filter 命名的一致\n   */\n  ElementFilter.prototype.reset = function () {\n    this.clear();\n  };\n  return ElementFilter;\n}(Action);\nexport default ElementFilter;","map":{"version":3,"names":["__extends","__read","each","Action","getDelegationObject","getElements","getElementValue","getScaleByField","isList","isSlider","isMask","getMaskedElements","ElementFilter","_super","apply","arguments","prototype","filter","delegateObject","context","view","elements","maskElements_1","el","includes","show","hide","component","field_1","get","unCheckedItems","getItemsByState","scale_1","names_1","map","item","name","value","text","getText","indexOf","range","getValue","_a","min_1","max_1","clear","reset"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g2/esm/interaction/action/element/filter.js"],"sourcesContent":["import { __extends, __read } from \"tslib\";\nimport { each } from '@antv/util';\nimport Action from '../base';\nimport { getDelegationObject, getElements, getElementValue, getScaleByField, isList, isSlider, isMask, getMaskedElements, } from '../util';\n/**\n * 元素过滤的 Action，控制元素的显示隐藏\n * @ignore\n */\nvar ElementFilter = /** @class */ (function (_super) {\n    __extends(ElementFilter, _super);\n    function ElementFilter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * 过滤\n     */\n    ElementFilter.prototype.filter = function () {\n        var delegateObject = getDelegationObject(this.context);\n        var view = this.context.view;\n        var elements = getElements(view);\n        if (isMask(this.context)) {\n            var maskElements_1 = getMaskedElements(this.context, 10);\n            if (maskElements_1) {\n                each(elements, function (el) {\n                    if (maskElements_1.includes(el)) {\n                        el.show();\n                    }\n                    else {\n                        el.hide();\n                    }\n                });\n            }\n        }\n        else if (delegateObject) {\n            var component = delegateObject.component;\n            var field_1 = component.get('field');\n            // 列表类的组件能够触发\n            if (isList(delegateObject)) {\n                if (field_1) {\n                    var unCheckedItems = component.getItemsByState('unchecked');\n                    var scale_1 = getScaleByField(view, field_1);\n                    var names_1 = unCheckedItems.map(function (item) { return item.name; });\n                    // 直接控制显示、隐藏\n                    each(elements, function (el) {\n                        var value = getElementValue(el, field_1);\n                        var text = scale_1.getText(value);\n                        if (names_1.indexOf(text) >= 0) {\n                            el.hide();\n                        }\n                        else {\n                            el.show();\n                        }\n                    });\n                }\n            }\n            else if (isSlider(delegateObject)) {\n                var range = component.getValue();\n                var _a = __read(range, 2), min_1 = _a[0], max_1 = _a[1];\n                each(elements, function (el) {\n                    var value = getElementValue(el, field_1);\n                    if (value >= min_1 && value <= max_1) {\n                        el.show();\n                    }\n                    else {\n                        el.hide();\n                    }\n                });\n            }\n        }\n    };\n    /**\n     * 清除过滤\n     */\n    ElementFilter.prototype.clear = function () {\n        var elements = getElements(this.context.view);\n        each(elements, function (el) {\n            el.show();\n        });\n    };\n    /**\n     * 恢复发生的过滤，保持同 data-filter 命名的一致\n     */\n    ElementFilter.prototype.reset = function () {\n        this.clear();\n    };\n    return ElementFilter;\n}(Action));\nexport default ElementFilter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}