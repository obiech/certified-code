{"ast":null,"code":"import { __assign, __extends, __read, __rest, __values } from \"tslib\";\nimport { contains, deepMix, each, get, isArray, isFunction, isNil, isString, keys, upperFirst, find, includes } from '@antv/util';\nimport { Annotation as AnnotationComponent } from '../../dependents';\nimport { DEFAULT_ANIMATE_CFG } from '../../animate/';\nimport { COMPONENT_TYPE, DIRECTION, GEOMETRY_LIFE_CIRCLE, LAYER, VIEW_LIFE_CIRCLE } from '../../constant';\nimport { getAngleByPoint, getDistanceToCenter } from '../../util/coordinate';\nimport { omit } from '../../util/helper';\nimport { getNormalizedValue } from '../../util/annotation';\nimport { Controller } from './base';\n/** 需要在图形绘制完成后才渲染的辅助组件类型列表 */\nvar ANNOTATIONS_AFTER_RENDER = ['regionFilter', 'shape'];\n/**\n * Annotation controller, 主要作用:\n * 1. 创建 Annotation: line、text、arc ...\n * 2. 生命周期: init、layout、render、clear、destroy\n */\nvar Annotation = /** @class */function (_super) {\n  __extends(Annotation, _super);\n  function Annotation(view) {\n    var _this = _super.call(this, view) || this;\n    /* 组件更新的 cache，组件配置 object : 组件 */\n    _this.cache = new Map();\n    _this.foregroundContainer = _this.view.getLayer(LAYER.FORE).addGroup();\n    _this.backgroundContainer = _this.view.getLayer(LAYER.BG).addGroup();\n    _this.option = [];\n    return _this;\n  }\n  Object.defineProperty(Annotation.prototype, \"name\", {\n    get: function () {\n      return 'annotation';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Annotation.prototype.init = function () {};\n  /**\n   * 因为 annotation 需要依赖坐标系信息，所以 render 阶段为空方法，实际的创建逻辑都在 layout 中\n   */\n  Annotation.prototype.layout = function () {\n    this.update();\n  };\n  // 因为 Annotation 不参与布局，但是渲染的位置依赖于坐标系，所以可以将绘制阶段延迟到 layout() 进行\n  Annotation.prototype.render = function () {};\n  /**\n   * 更新\n   */\n  Annotation.prototype.update = function () {\n    var _this = this;\n    // 1. 先处理需要在图形渲染之后的辅助组件 需要在 Geometry 完成之后，拿到图形信息\n    this.onAfterRender(function () {\n      var updated = new Map();\n      // 先看是否有 regionFilter/shape 要更新\n      each(_this.option, function (option) {\n        if (includes(ANNOTATIONS_AFTER_RENDER, option.type)) {\n          var co = _this.updateOrCreate(option);\n          // 存储已经处理过的\n          if (co) {\n            updated.set(_this.getCacheKey(option), co);\n          }\n        }\n      });\n      // 处理完成之后，更新 cache\n      // 处理完成之后，销毁删除的\n      _this.cache = _this.syncCache(updated);\n    });\n    // 2. 处理非 regionFilter\n    var updateCache = new Map();\n    each(this.option, function (option) {\n      if (!includes(ANNOTATIONS_AFTER_RENDER, option.type)) {\n        var co = _this.updateOrCreate(option);\n        // 存储已经处理过的\n        if (co) {\n          updateCache.set(_this.getCacheKey(option), co);\n        }\n      }\n    });\n    this.cache = this.syncCache(updateCache);\n  };\n  /**\n   * 清空\n   * @param includeOption 是否清空 option 配置项\n   */\n  Annotation.prototype.clear = function (includeOption) {\n    if (includeOption === void 0) {\n      includeOption = false;\n    }\n    _super.prototype.clear.call(this);\n    this.clearComponents();\n    this.foregroundContainer.clear();\n    this.backgroundContainer.clear();\n    // clear all option\n    if (includeOption) {\n      this.option = [];\n    }\n  };\n  Annotation.prototype.destroy = function () {\n    this.clear(true);\n    this.foregroundContainer.remove(true);\n    this.backgroundContainer.remove(true);\n  };\n  /**\n   * 复写基类的方法\n   */\n  Annotation.prototype.getComponents = function () {\n    var co = [];\n    this.cache.forEach(function (value) {\n      co.push(value);\n    });\n    return co;\n  };\n  /**\n   * 清除当前的组件\n   */\n  Annotation.prototype.clearComponents = function () {\n    this.getComponents().forEach(function (co) {\n      co.component.destroy();\n    });\n    this.cache.clear();\n  };\n  /**\n   * region filter 比较特殊的渲染时机\n   * @param doWhat\n   */\n  Annotation.prototype.onAfterRender = function (doWhat) {\n    var done = false;\n    if (this.view.getOptions().animate) {\n      this.view.geometries.forEach(function (g) {\n        // 如果 geometry 开启，则监听\n        if (g.animateOption) {\n          g.once(GEOMETRY_LIFE_CIRCLE.AFTER_DRAW_ANIMATE, function () {\n            doWhat();\n          });\n          done = true;\n        }\n      });\n    }\n    if (!done) {\n      this.view.getRootView().once(VIEW_LIFE_CIRCLE.AFTER_RENDER, function () {\n        doWhat();\n      });\n    }\n  };\n  Annotation.prototype.createAnnotation = function (option) {\n    var type = option.type;\n    var Ctor = AnnotationComponent[upperFirst(type)];\n    if (Ctor) {\n      var theme = this.getAnnotationTheme(type);\n      var cfg = this.getAnnotationCfg(type, option, theme);\n      // 不创建\n      if (!cfg) {\n        return null;\n      }\n      var annotation = new Ctor(cfg);\n      return {\n        component: annotation,\n        layer: this.isTop(cfg) ? LAYER.FORE : LAYER.BG,\n        direction: DIRECTION.NONE,\n        type: COMPONENT_TYPE.ANNOTATION,\n        extra: option\n      };\n    }\n  };\n  // APIs for creating annotation component\n  Annotation.prototype.annotation = function (option) {\n    this.option.push(option);\n  };\n  /**\n   * 创建 Arc\n   * @param option\n   * @returns AnnotationController\n   */\n  Annotation.prototype.arc = function (option) {\n    this.annotation(__assign({\n      type: 'arc'\n    }, option));\n    return this;\n  };\n  /**\n   * 创建 image\n   * @param option\n   * @returns AnnotationController\n   */\n  Annotation.prototype.image = function (option) {\n    this.annotation(__assign({\n      type: 'image'\n    }, option));\n    return this;\n  };\n  /**\n   * 创建 Line\n   * @param option\n   * @returns AnnotationController\n   */\n  Annotation.prototype.line = function (option) {\n    this.annotation(__assign({\n      type: 'line'\n    }, option));\n    return this;\n  };\n  /**\n   * 创建 Region\n   * @param option\n   * @returns AnnotationController\n   */\n  Annotation.prototype.region = function (option) {\n    this.annotation(__assign({\n      type: 'region'\n    }, option));\n    return this;\n  };\n  /**\n   * 创建 Text\n   * @param option\n   * @returns AnnotationController\n   */\n  Annotation.prototype.text = function (option) {\n    this.annotation(__assign({\n      type: 'text'\n    }, option));\n    return this;\n  };\n  /**\n   * 创建 DataMarker\n   * @param option\n   * @returns AnnotationController\n   */\n  Annotation.prototype.dataMarker = function (option) {\n    this.annotation(__assign({\n      type: 'dataMarker'\n    }, option));\n    return this;\n  };\n  /**\n   * 创建 DataRegion\n   * @param option\n   * @returns AnnotationController\n   */\n  Annotation.prototype.dataRegion = function (option) {\n    this.annotation(__assign({\n      type: 'dataRegion'\n    }, option));\n  };\n  /**\n   * 创建 RegionFilter\n   * @param option\n   * @returns AnnotationController\n   */\n  Annotation.prototype.regionFilter = function (option) {\n    this.annotation(__assign({\n      type: 'regionFilter'\n    }, option));\n  };\n  /**\n   * 创建 ShapeAnnotation\n   * @param option\n   */\n  Annotation.prototype.shape = function (option) {\n    this.annotation(__assign({\n      type: 'shape'\n    }, option));\n  };\n  /**\n   * 创建 HtmlAnnotation\n   * @param option\n   */\n  Annotation.prototype.html = function (option) {\n    this.annotation(__assign({\n      type: 'html'\n    }, option));\n  };\n  // end API\n  /**\n   * parse the point position to [x, y]\n   * @param p Position\n   * @returns { x, y }\n   */\n  Annotation.prototype.parsePosition = function (p) {\n    var e_1, _a;\n    var xScale = this.view.getXScale();\n    // 转成 object\n    var yScales = this.view.getScalesByDim('y');\n    var position = isFunction(p) ? p.call(null, xScale, yScales) : p;\n    var x = 0;\n    var y = 0;\n    // 入参是 [24, 24] 这类时\n    if (isArray(position)) {\n      var _b = __read(position, 2),\n        xPos = _b[0],\n        yPos = _b[1];\n      // 如果数据格式是 ['50%', '50%'] 的格式\n      // fix: 原始数据中可能会包含 'xxx5%xxx' 这样的数据，需要判断下 https://github.com/antvis/f2/issues/590\n      // @ts-ignore\n      if (isString(xPos) && xPos.indexOf('%') !== -1 && !isNaN(xPos.slice(0, -1))) {\n        return this.parsePercentPosition(position);\n      }\n      x = getNormalizedValue(xPos, xScale);\n      y = getNormalizedValue(yPos, Object.values(yScales)[0]);\n    } else if (!isNil(position)) {\n      try {\n        // 入参是 object 结构，数据点\n        for (var _c = __values(keys(position)), _d = _c.next(); !_d.done; _d = _c.next()) {\n          var key = _d.value;\n          var value = position[key];\n          if (key === xScale.field) {\n            x = getNormalizedValue(value, xScale);\n          }\n          if (yScales[key]) {\n            y = getNormalizedValue(value, yScales[key]);\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n    if (isNaN(x) || isNaN(y)) {\n      return null;\n    }\n    return this.view.getCoordinate().convert({\n      x: x,\n      y: y\n    });\n  };\n  /**\n   * parse all the points between start and end\n   * @param start\n   * @param end\n   * @return Point[]\n   */\n  Annotation.prototype.getRegionPoints = function (start, end) {\n    var _this = this;\n    var xScale = this.view.getXScale();\n    var yScales = this.view.getScalesByDim('y');\n    var yScale = Object.values(yScales)[0];\n    var xField = xScale.field;\n    var viewData = this.view.getData();\n    var startXValue = isArray(start) ? start[0] : start[xField];\n    var endXValue = isArray(end) ? end[0] : end[xField];\n    var arr = [];\n    var startIndex;\n    each(viewData, function (item, idx) {\n      if (item[xField] === startXValue) {\n        startIndex = idx;\n      }\n      if (idx >= startIndex) {\n        var point = _this.parsePosition([item[xField], item[yScale.field]]);\n        if (point) {\n          arr.push(point);\n        }\n      }\n      if (item[xField] === endXValue) {\n        return false;\n      }\n    });\n    return arr;\n  };\n  /**\n   * parse percent position\n   * @param position\n   */\n  Annotation.prototype.parsePercentPosition = function (position) {\n    var xPercent = parseFloat(position[0]) / 100;\n    var yPercent = parseFloat(position[1]) / 100;\n    var coordinate = this.view.getCoordinate();\n    var start = coordinate.start,\n      end = coordinate.end;\n    var topLeft = {\n      x: Math.min(start.x, end.x),\n      y: Math.min(start.y, end.y)\n    };\n    var x = coordinate.getWidth() * xPercent + topLeft.x;\n    var y = coordinate.getHeight() * yPercent + topLeft.y;\n    return {\n      x: x,\n      y: y\n    };\n  };\n  /**\n   * get coordinate bbox\n   */\n  Annotation.prototype.getCoordinateBBox = function () {\n    var coordinate = this.view.getCoordinate();\n    var start = coordinate.start,\n      end = coordinate.end;\n    var width = coordinate.getWidth();\n    var height = coordinate.getHeight();\n    var topLeft = {\n      x: Math.min(start.x, end.x),\n      y: Math.min(start.y, end.y)\n    };\n    return {\n      x: topLeft.x,\n      y: topLeft.y,\n      minX: topLeft.x,\n      minY: topLeft.y,\n      maxX: topLeft.x + width,\n      maxY: topLeft.y + height,\n      width: width,\n      height: height\n    };\n  };\n  /**\n   * get annotation component config by different type\n   * @param type\n   * @param option 用户的配置\n   * @param theme\n   */\n  Annotation.prototype.getAnnotationCfg = function (type, option, theme) {\n    var _this = this;\n    var coordinate = this.view.getCoordinate();\n    var canvas = this.view.getCanvas();\n    var o = {};\n    if (isNil(option)) {\n      return null;\n    }\n    var start = option.start,\n      end = option.end,\n      position = option.position;\n    var sp = this.parsePosition(start);\n    var ep = this.parsePosition(end);\n    var textPoint = this.parsePosition(position);\n    if (['arc', 'image', 'line', 'region', 'regionFilter'].includes(type) && (!sp || !ep)) {\n      return null;\n    } else if (['text', 'dataMarker', 'html'].includes(type) && !textPoint) {\n      return null;\n    }\n    if (type === 'arc') {\n      var _a = option,\n        start_1 = _a.start,\n        end_1 = _a.end,\n        rest = __rest(_a, [\"start\", \"end\"]);\n      var startAngle = getAngleByPoint(coordinate, sp);\n      var endAngle = getAngleByPoint(coordinate, ep);\n      if (startAngle > endAngle) {\n        endAngle = Math.PI * 2 + endAngle;\n      }\n      o = __assign(__assign({}, rest), {\n        center: coordinate.getCenter(),\n        radius: getDistanceToCenter(coordinate, sp),\n        startAngle: startAngle,\n        endAngle: endAngle\n      });\n    } else if (type === 'image') {\n      var _b = option,\n        start_2 = _b.start,\n        end_2 = _b.end,\n        rest = __rest(_b, [\"start\", \"end\"]);\n      o = __assign(__assign({}, rest), {\n        start: sp,\n        end: ep,\n        src: option.src\n      });\n    } else if (type === 'line') {\n      var _c = option,\n        start_3 = _c.start,\n        end_3 = _c.end,\n        rest = __rest(_c, [\"start\", \"end\"]);\n      o = __assign(__assign({}, rest), {\n        start: sp,\n        end: ep,\n        text: get(option, 'text', null)\n      });\n    } else if (type === 'region') {\n      var _d = option,\n        start_4 = _d.start,\n        end_4 = _d.end,\n        rest = __rest(_d, [\"start\", \"end\"]);\n      o = __assign(__assign({}, rest), {\n        start: sp,\n        end: ep\n      });\n    } else if (type === 'text') {\n      var filteredData = this.view.getData();\n      var _e = option,\n        position_1 = _e.position,\n        content = _e.content,\n        rest = __rest(_e, [\"position\", \"content\"]);\n      var textContent = content;\n      if (isFunction(content)) {\n        textContent = content(filteredData);\n      }\n      o = __assign(__assign(__assign({}, textPoint), rest), {\n        content: textContent\n      });\n    } else if (type === 'dataMarker') {\n      var _f = option,\n        position_2 = _f.position,\n        point = _f.point,\n        line = _f.line,\n        text = _f.text,\n        autoAdjust = _f.autoAdjust,\n        direction = _f.direction,\n        rest = __rest(_f, [\"position\", \"point\", \"line\", \"text\", \"autoAdjust\", \"direction\"]);\n      o = __assign(__assign(__assign({}, rest), textPoint), {\n        coordinateBBox: this.getCoordinateBBox(),\n        point: point,\n        line: line,\n        text: text,\n        autoAdjust: autoAdjust,\n        direction: direction\n      });\n    } else if (type === 'dataRegion') {\n      var _g = option,\n        start_5 = _g.start,\n        end_5 = _g.end,\n        region = _g.region,\n        text = _g.text,\n        lineLength = _g.lineLength,\n        rest = __rest(_g, [\"start\", \"end\", \"region\", \"text\", \"lineLength\"]);\n      o = __assign(__assign({}, rest), {\n        points: this.getRegionPoints(start_5, end_5),\n        region: region,\n        text: text,\n        lineLength: lineLength\n      });\n    } else if (type === 'regionFilter') {\n      var _h = option,\n        start_6 = _h.start,\n        end_6 = _h.end,\n        apply_1 = _h.apply,\n        color = _h.color,\n        rest = __rest(_h, [\"start\", \"end\", \"apply\", \"color\"]);\n      var geometries = this.view.geometries;\n      var shapes_1 = [];\n      var addShapes_1 = function (item) {\n        if (!item) {\n          return;\n        }\n        if (item.isGroup()) {\n          item.getChildren().forEach(function (child) {\n            return addShapes_1(child);\n          });\n        } else {\n          shapes_1.push(item);\n        }\n      };\n      each(geometries, function (geom) {\n        if (apply_1) {\n          if (contains(apply_1, geom.type)) {\n            each(geom.elements, function (elem) {\n              addShapes_1(elem.shape);\n            });\n          }\n        } else {\n          each(geom.elements, function (elem) {\n            addShapes_1(elem.shape);\n          });\n        }\n      });\n      o = __assign(__assign({}, rest), {\n        color: color,\n        shapes: shapes_1,\n        start: sp,\n        end: ep\n      });\n    } else if (type === 'shape') {\n      var _j = option,\n        render_1 = _j.render,\n        restOptions = __rest(_j, [\"render\"]);\n      var wrappedRender = function (container) {\n        if (isFunction(option.render)) {\n          return render_1(container, _this.view, {\n            parsePosition: _this.parsePosition.bind(_this)\n          });\n        }\n      };\n      o = __assign(__assign({}, restOptions), {\n        render: wrappedRender\n      });\n    } else if (type === 'html') {\n      var _k = option,\n        html_1 = _k.html,\n        position_3 = _k.position,\n        restOptions = __rest(_k, [\"html\", \"position\"]);\n      var wrappedHtml = function (container) {\n        if (isFunction(html_1)) {\n          return html_1(container, _this.view);\n        }\n        return html_1;\n      };\n      o = __assign(__assign(__assign({}, restOptions), textPoint), {\n        // html 组件需要指定 parent\n        parent: canvas.get('el').parentNode,\n        html: wrappedHtml\n      });\n    }\n    // 合并主题，用户配置优先级高于默认主题\n    var cfg = deepMix({}, theme, __assign(__assign({}, o), {\n      top: option.top,\n      style: option.style,\n      offsetX: option.offsetX,\n      offsetY: option.offsetY\n    }));\n    if (type !== 'html') {\n      // html 类型不使用 G container\n      cfg.container = this.getComponentContainer(cfg);\n    }\n    cfg.animate = this.view.getOptions().animate && cfg.animate && get(option, 'animate', cfg.animate); // 如果 view 关闭动画，则不执行\n    cfg.animateOption = deepMix({}, DEFAULT_ANIMATE_CFG, cfg.animateOption, option.animateOption);\n    return cfg;\n  };\n  /**\n   * is annotation render on top\n   * @param option\n   * @return whethe on top\n   */\n  Annotation.prototype.isTop = function (option) {\n    return get(option, 'top', true);\n  };\n  /**\n   * get the container by option.top\n   * default is on top\n   * @param option\n   * @returns the container\n   */\n  Annotation.prototype.getComponentContainer = function (option) {\n    return this.isTop(option) ? this.foregroundContainer : this.backgroundContainer;\n  };\n  Annotation.prototype.getAnnotationTheme = function (type) {\n    return get(this.view.getTheme(), ['components', 'annotation', type], {});\n  };\n  /**\n   * 创建或者更新 annotation\n   * @param option\n   */\n  Annotation.prototype.updateOrCreate = function (option) {\n    // 拿到缓存的内容\n    var co = this.cache.get(this.getCacheKey(option));\n    // 存在则更新，不存在在创建\n    if (co) {\n      var type = option.type;\n      var theme = this.getAnnotationTheme(type);\n      var cfg = this.getAnnotationCfg(type, option, theme);\n      // 忽略掉一些配置\n      if (cfg) {\n        omit(cfg, ['container']);\n      }\n      co.component.update(__assign(__assign({}, cfg || {}), {\n        visible: !!cfg\n      }));\n      // 对于 regionFilter/shape，因为生命周期的原因，需要额外 render\n      if (includes(ANNOTATIONS_AFTER_RENDER, option.type)) {\n        co.component.render();\n      }\n    } else {\n      // 不存在，创建\n      co = this.createAnnotation(option);\n      if (co) {\n        co.component.init();\n        // Note：regionFilter/shape 特殊处理，regionFilter/shape 需要取到 Geometry 中的 Shape，需要在 view render 之后处理\n        // 其他组件使用外层的统一 render 逻辑\n        if (includes(ANNOTATIONS_AFTER_RENDER, option.type)) {\n          co.component.render();\n        }\n      }\n    }\n    return co;\n  };\n  /**\n   * 更新缓存，以及销毁组件\n   * @param updated 更新或者创建的组件\n   */\n  Annotation.prototype.syncCache = function (updated) {\n    var _this = this;\n    var newCache = new Map(this.cache); // clone 一份\n    // 将 update 更新到 cache\n    updated.forEach(function (co, key) {\n      newCache.set(key, co);\n    });\n    // 另外和 options 进行对比，删除\n    newCache.forEach(function (co, key) {\n      // option 中已经找不到，那么就是删除的\n      if (!find(_this.option, function (option) {\n        return key === _this.getCacheKey(option);\n      })) {\n        co.component.destroy();\n        newCache.delete(key);\n      }\n    });\n    return newCache;\n  };\n  /**\n   * 获得缓存组件的 key\n   * @param option\n   */\n  Annotation.prototype.getCacheKey = function (option) {\n    // 如果存在 id，则使用 id string，否则直接使用 option 引用作为 key\n    return option;\n    // 后续扩展 id 用\n    // const id = get(option, 'id');\n    // return id ? id : option;\n  };\n\n  return Annotation;\n}(Controller);\nexport default Annotation;","map":{"version":3,"names":["__assign","__extends","__read","__rest","__values","contains","deepMix","each","get","isArray","isFunction","isNil","isString","keys","upperFirst","find","includes","Annotation","AnnotationComponent","DEFAULT_ANIMATE_CFG","COMPONENT_TYPE","DIRECTION","GEOMETRY_LIFE_CIRCLE","LAYER","VIEW_LIFE_CIRCLE","getAngleByPoint","getDistanceToCenter","omit","getNormalizedValue","Controller","ANNOTATIONS_AFTER_RENDER","_super","view","_this","call","cache","Map","foregroundContainer","getLayer","FORE","addGroup","backgroundContainer","BG","option","Object","defineProperty","prototype","enumerable","configurable","init","layout","update","render","onAfterRender","updated","type","co","updateOrCreate","set","getCacheKey","syncCache","updateCache","clear","includeOption","clearComponents","destroy","remove","getComponents","forEach","value","push","component","doWhat","done","getOptions","animate","geometries","g","animateOption","once","AFTER_DRAW_ANIMATE","getRootView","AFTER_RENDER","createAnnotation","Ctor","theme","getAnnotationTheme","cfg","getAnnotationCfg","annotation","layer","isTop","direction","NONE","ANNOTATION","extra","arc","image","line","region","text","dataMarker","dataRegion","regionFilter","shape","html","parsePosition","p","e_1","_a","xScale","getXScale","yScales","getScalesByDim","position","x","y","_b","xPos","yPos","indexOf","isNaN","slice","parsePercentPosition","values","_c","_d","next","key","field","e_1_1","error","return","getCoordinate","convert","getRegionPoints","start","end","yScale","xField","viewData","getData","startXValue","endXValue","arr","startIndex","item","idx","point","xPercent","parseFloat","yPercent","coordinate","topLeft","Math","min","getWidth","getHeight","getCoordinateBBox","width","height","minX","minY","maxX","maxY","canvas","getCanvas","o","sp","ep","textPoint","start_1","end_1","rest","startAngle","endAngle","PI","center","getCenter","radius","start_2","end_2","src","start_3","end_3","start_4","end_4","filteredData","_e","position_1","content","textContent","_f","position_2","autoAdjust","coordinateBBox","_g","start_5","end_5","lineLength","points","_h","start_6","end_6","apply_1","apply","color","shapes_1","addShapes_1","isGroup","getChildren","child","geom","elements","elem","shapes","_j","render_1","restOptions","wrappedRender","container","bind","_k","html_1","position_3","wrappedHtml","parent","parentNode","top","style","offsetX","offsetY","getComponentContainer","getTheme","visible","newCache","delete"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g2/esm/chart/controller/annotation.js"],"sourcesContent":["import { __assign, __extends, __read, __rest, __values } from \"tslib\";\nimport { contains, deepMix, each, get, isArray, isFunction, isNil, isString, keys, upperFirst, find, includes, } from '@antv/util';\nimport { Annotation as AnnotationComponent } from '../../dependents';\nimport { DEFAULT_ANIMATE_CFG } from '../../animate/';\nimport { COMPONENT_TYPE, DIRECTION, GEOMETRY_LIFE_CIRCLE, LAYER, VIEW_LIFE_CIRCLE } from '../../constant';\nimport { getAngleByPoint, getDistanceToCenter } from '../../util/coordinate';\nimport { omit } from '../../util/helper';\nimport { getNormalizedValue } from '../../util/annotation';\nimport { Controller } from './base';\n/** 需要在图形绘制完成后才渲染的辅助组件类型列表 */\nvar ANNOTATIONS_AFTER_RENDER = ['regionFilter', 'shape'];\n/**\n * Annotation controller, 主要作用:\n * 1. 创建 Annotation: line、text、arc ...\n * 2. 生命周期: init、layout、render、clear、destroy\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation(view) {\n        var _this = _super.call(this, view) || this;\n        /* 组件更新的 cache，组件配置 object : 组件 */\n        _this.cache = new Map();\n        _this.foregroundContainer = _this.view.getLayer(LAYER.FORE).addGroup();\n        _this.backgroundContainer = _this.view.getLayer(LAYER.BG).addGroup();\n        _this.option = [];\n        return _this;\n    }\n    Object.defineProperty(Annotation.prototype, \"name\", {\n        get: function () {\n            return 'annotation';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Annotation.prototype.init = function () { };\n    /**\n     * 因为 annotation 需要依赖坐标系信息，所以 render 阶段为空方法，实际的创建逻辑都在 layout 中\n     */\n    Annotation.prototype.layout = function () {\n        this.update();\n    };\n    // 因为 Annotation 不参与布局，但是渲染的位置依赖于坐标系，所以可以将绘制阶段延迟到 layout() 进行\n    Annotation.prototype.render = function () { };\n    /**\n     * 更新\n     */\n    Annotation.prototype.update = function () {\n        var _this = this;\n        // 1. 先处理需要在图形渲染之后的辅助组件 需要在 Geometry 完成之后，拿到图形信息\n        this.onAfterRender(function () {\n            var updated = new Map();\n            // 先看是否有 regionFilter/shape 要更新\n            each(_this.option, function (option) {\n                if (includes(ANNOTATIONS_AFTER_RENDER, option.type)) {\n                    var co = _this.updateOrCreate(option);\n                    // 存储已经处理过的\n                    if (co) {\n                        updated.set(_this.getCacheKey(option), co);\n                    }\n                }\n            });\n            // 处理完成之后，更新 cache\n            // 处理完成之后，销毁删除的\n            _this.cache = _this.syncCache(updated);\n        });\n        // 2. 处理非 regionFilter\n        var updateCache = new Map();\n        each(this.option, function (option) {\n            if (!includes(ANNOTATIONS_AFTER_RENDER, option.type)) {\n                var co = _this.updateOrCreate(option);\n                // 存储已经处理过的\n                if (co) {\n                    updateCache.set(_this.getCacheKey(option), co);\n                }\n            }\n        });\n        this.cache = this.syncCache(updateCache);\n    };\n    /**\n     * 清空\n     * @param includeOption 是否清空 option 配置项\n     */\n    Annotation.prototype.clear = function (includeOption) {\n        if (includeOption === void 0) { includeOption = false; }\n        _super.prototype.clear.call(this);\n        this.clearComponents();\n        this.foregroundContainer.clear();\n        this.backgroundContainer.clear();\n        // clear all option\n        if (includeOption) {\n            this.option = [];\n        }\n    };\n    Annotation.prototype.destroy = function () {\n        this.clear(true);\n        this.foregroundContainer.remove(true);\n        this.backgroundContainer.remove(true);\n    };\n    /**\n     * 复写基类的方法\n     */\n    Annotation.prototype.getComponents = function () {\n        var co = [];\n        this.cache.forEach(function (value) {\n            co.push(value);\n        });\n        return co;\n    };\n    /**\n     * 清除当前的组件\n     */\n    Annotation.prototype.clearComponents = function () {\n        this.getComponents().forEach(function (co) {\n            co.component.destroy();\n        });\n        this.cache.clear();\n    };\n    /**\n     * region filter 比较特殊的渲染时机\n     * @param doWhat\n     */\n    Annotation.prototype.onAfterRender = function (doWhat) {\n        var done = false;\n        if (this.view.getOptions().animate) {\n            this.view.geometries.forEach(function (g) {\n                // 如果 geometry 开启，则监听\n                if (g.animateOption) {\n                    g.once(GEOMETRY_LIFE_CIRCLE.AFTER_DRAW_ANIMATE, function () {\n                        doWhat();\n                    });\n                    done = true;\n                }\n            });\n        }\n        if (!done) {\n            this.view.getRootView().once(VIEW_LIFE_CIRCLE.AFTER_RENDER, function () {\n                doWhat();\n            });\n        }\n    };\n    Annotation.prototype.createAnnotation = function (option) {\n        var type = option.type;\n        var Ctor = AnnotationComponent[upperFirst(type)];\n        if (Ctor) {\n            var theme = this.getAnnotationTheme(type);\n            var cfg = this.getAnnotationCfg(type, option, theme);\n            // 不创建\n            if (!cfg) {\n                return null;\n            }\n            var annotation = new Ctor(cfg);\n            return {\n                component: annotation,\n                layer: this.isTop(cfg) ? LAYER.FORE : LAYER.BG,\n                direction: DIRECTION.NONE,\n                type: COMPONENT_TYPE.ANNOTATION,\n                extra: option,\n            };\n        }\n    };\n    // APIs for creating annotation component\n    Annotation.prototype.annotation = function (option) {\n        this.option.push(option);\n    };\n    /**\n     * 创建 Arc\n     * @param option\n     * @returns AnnotationController\n     */\n    Annotation.prototype.arc = function (option) {\n        this.annotation(__assign({ type: 'arc' }, option));\n        return this;\n    };\n    /**\n     * 创建 image\n     * @param option\n     * @returns AnnotationController\n     */\n    Annotation.prototype.image = function (option) {\n        this.annotation(__assign({ type: 'image' }, option));\n        return this;\n    };\n    /**\n     * 创建 Line\n     * @param option\n     * @returns AnnotationController\n     */\n    Annotation.prototype.line = function (option) {\n        this.annotation(__assign({ type: 'line' }, option));\n        return this;\n    };\n    /**\n     * 创建 Region\n     * @param option\n     * @returns AnnotationController\n     */\n    Annotation.prototype.region = function (option) {\n        this.annotation(__assign({ type: 'region' }, option));\n        return this;\n    };\n    /**\n     * 创建 Text\n     * @param option\n     * @returns AnnotationController\n     */\n    Annotation.prototype.text = function (option) {\n        this.annotation(__assign({ type: 'text' }, option));\n        return this;\n    };\n    /**\n     * 创建 DataMarker\n     * @param option\n     * @returns AnnotationController\n     */\n    Annotation.prototype.dataMarker = function (option) {\n        this.annotation(__assign({ type: 'dataMarker' }, option));\n        return this;\n    };\n    /**\n     * 创建 DataRegion\n     * @param option\n     * @returns AnnotationController\n     */\n    Annotation.prototype.dataRegion = function (option) {\n        this.annotation(__assign({ type: 'dataRegion' }, option));\n    };\n    /**\n     * 创建 RegionFilter\n     * @param option\n     * @returns AnnotationController\n     */\n    Annotation.prototype.regionFilter = function (option) {\n        this.annotation(__assign({ type: 'regionFilter' }, option));\n    };\n    /**\n     * 创建 ShapeAnnotation\n     * @param option\n     */\n    Annotation.prototype.shape = function (option) {\n        this.annotation(__assign({ type: 'shape' }, option));\n    };\n    /**\n     * 创建 HtmlAnnotation\n     * @param option\n     */\n    Annotation.prototype.html = function (option) {\n        this.annotation(__assign({ type: 'html' }, option));\n    };\n    // end API\n    /**\n     * parse the point position to [x, y]\n     * @param p Position\n     * @returns { x, y }\n     */\n    Annotation.prototype.parsePosition = function (p) {\n        var e_1, _a;\n        var xScale = this.view.getXScale();\n        // 转成 object\n        var yScales = this.view.getScalesByDim('y');\n        var position = isFunction(p) ? p.call(null, xScale, yScales) : p;\n        var x = 0;\n        var y = 0;\n        // 入参是 [24, 24] 这类时\n        if (isArray(position)) {\n            var _b = __read(position, 2), xPos = _b[0], yPos = _b[1];\n            // 如果数据格式是 ['50%', '50%'] 的格式\n            // fix: 原始数据中可能会包含 'xxx5%xxx' 这样的数据，需要判断下 https://github.com/antvis/f2/issues/590\n            // @ts-ignore\n            if (isString(xPos) && xPos.indexOf('%') !== -1 && !isNaN(xPos.slice(0, -1))) {\n                return this.parsePercentPosition(position);\n            }\n            x = getNormalizedValue(xPos, xScale);\n            y = getNormalizedValue(yPos, Object.values(yScales)[0]);\n        }\n        else if (!isNil(position)) {\n            try {\n                // 入参是 object 结构，数据点\n                for (var _c = __values(keys(position)), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var key = _d.value;\n                    var value = position[key];\n                    if (key === xScale.field) {\n                        x = getNormalizedValue(value, xScale);\n                    }\n                    if (yScales[key]) {\n                        y = getNormalizedValue(value, yScales[key]);\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n        if (isNaN(x) || isNaN(y)) {\n            return null;\n        }\n        return this.view.getCoordinate().convert({ x: x, y: y });\n    };\n    /**\n     * parse all the points between start and end\n     * @param start\n     * @param end\n     * @return Point[]\n     */\n    Annotation.prototype.getRegionPoints = function (start, end) {\n        var _this = this;\n        var xScale = this.view.getXScale();\n        var yScales = this.view.getScalesByDim('y');\n        var yScale = Object.values(yScales)[0];\n        var xField = xScale.field;\n        var viewData = this.view.getData();\n        var startXValue = isArray(start) ? start[0] : start[xField];\n        var endXValue = isArray(end) ? end[0] : end[xField];\n        var arr = [];\n        var startIndex;\n        each(viewData, function (item, idx) {\n            if (item[xField] === startXValue) {\n                startIndex = idx;\n            }\n            if (idx >= startIndex) {\n                var point = _this.parsePosition([item[xField], item[yScale.field]]);\n                if (point) {\n                    arr.push(point);\n                }\n            }\n            if (item[xField] === endXValue) {\n                return false;\n            }\n        });\n        return arr;\n    };\n    /**\n     * parse percent position\n     * @param position\n     */\n    Annotation.prototype.parsePercentPosition = function (position) {\n        var xPercent = parseFloat(position[0]) / 100;\n        var yPercent = parseFloat(position[1]) / 100;\n        var coordinate = this.view.getCoordinate();\n        var start = coordinate.start, end = coordinate.end;\n        var topLeft = {\n            x: Math.min(start.x, end.x),\n            y: Math.min(start.y, end.y),\n        };\n        var x = coordinate.getWidth() * xPercent + topLeft.x;\n        var y = coordinate.getHeight() * yPercent + topLeft.y;\n        return { x: x, y: y };\n    };\n    /**\n     * get coordinate bbox\n     */\n    Annotation.prototype.getCoordinateBBox = function () {\n        var coordinate = this.view.getCoordinate();\n        var start = coordinate.start, end = coordinate.end;\n        var width = coordinate.getWidth();\n        var height = coordinate.getHeight();\n        var topLeft = {\n            x: Math.min(start.x, end.x),\n            y: Math.min(start.y, end.y),\n        };\n        return {\n            x: topLeft.x,\n            y: topLeft.y,\n            minX: topLeft.x,\n            minY: topLeft.y,\n            maxX: topLeft.x + width,\n            maxY: topLeft.y + height,\n            width: width,\n            height: height,\n        };\n    };\n    /**\n     * get annotation component config by different type\n     * @param type\n     * @param option 用户的配置\n     * @param theme\n     */\n    Annotation.prototype.getAnnotationCfg = function (type, option, theme) {\n        var _this = this;\n        var coordinate = this.view.getCoordinate();\n        var canvas = this.view.getCanvas();\n        var o = {};\n        if (isNil(option)) {\n            return null;\n        }\n        var start = option.start, end = option.end, position = option.position;\n        var sp = this.parsePosition(start);\n        var ep = this.parsePosition(end);\n        var textPoint = this.parsePosition(position);\n        if (['arc', 'image', 'line', 'region', 'regionFilter'].includes(type) && (!sp || !ep)) {\n            return null;\n        }\n        else if (['text', 'dataMarker', 'html'].includes(type) && !textPoint) {\n            return null;\n        }\n        if (type === 'arc') {\n            var _a = option, start_1 = _a.start, end_1 = _a.end, rest = __rest(_a, [\"start\", \"end\"]);\n            var startAngle = getAngleByPoint(coordinate, sp);\n            var endAngle = getAngleByPoint(coordinate, ep);\n            if (startAngle > endAngle) {\n                endAngle = Math.PI * 2 + endAngle;\n            }\n            o = __assign(__assign({}, rest), { center: coordinate.getCenter(), radius: getDistanceToCenter(coordinate, sp), startAngle: startAngle, endAngle: endAngle });\n        }\n        else if (type === 'image') {\n            var _b = option, start_2 = _b.start, end_2 = _b.end, rest = __rest(_b, [\"start\", \"end\"]);\n            o = __assign(__assign({}, rest), { start: sp, end: ep, src: option.src });\n        }\n        else if (type === 'line') {\n            var _c = option, start_3 = _c.start, end_3 = _c.end, rest = __rest(_c, [\"start\", \"end\"]);\n            o = __assign(__assign({}, rest), { start: sp, end: ep, text: get(option, 'text', null) });\n        }\n        else if (type === 'region') {\n            var _d = option, start_4 = _d.start, end_4 = _d.end, rest = __rest(_d, [\"start\", \"end\"]);\n            o = __assign(__assign({}, rest), { start: sp, end: ep });\n        }\n        else if (type === 'text') {\n            var filteredData = this.view.getData();\n            var _e = option, position_1 = _e.position, content = _e.content, rest = __rest(_e, [\"position\", \"content\"]);\n            var textContent = content;\n            if (isFunction(content)) {\n                textContent = content(filteredData);\n            }\n            o = __assign(__assign(__assign({}, textPoint), rest), { content: textContent });\n        }\n        else if (type === 'dataMarker') {\n            var _f = option, position_2 = _f.position, point = _f.point, line = _f.line, text = _f.text, autoAdjust = _f.autoAdjust, direction = _f.direction, rest = __rest(_f, [\"position\", \"point\", \"line\", \"text\", \"autoAdjust\", \"direction\"]);\n            o = __assign(__assign(__assign({}, rest), textPoint), { coordinateBBox: this.getCoordinateBBox(), point: point, line: line, text: text, autoAdjust: autoAdjust, direction: direction });\n        }\n        else if (type === 'dataRegion') {\n            var _g = option, start_5 = _g.start, end_5 = _g.end, region = _g.region, text = _g.text, lineLength = _g.lineLength, rest = __rest(_g, [\"start\", \"end\", \"region\", \"text\", \"lineLength\"]);\n            o = __assign(__assign({}, rest), { points: this.getRegionPoints(start_5, end_5), region: region, text: text, lineLength: lineLength });\n        }\n        else if (type === 'regionFilter') {\n            var _h = option, start_6 = _h.start, end_6 = _h.end, apply_1 = _h.apply, color = _h.color, rest = __rest(_h, [\"start\", \"end\", \"apply\", \"color\"]);\n            var geometries = this.view.geometries;\n            var shapes_1 = [];\n            var addShapes_1 = function (item) {\n                if (!item) {\n                    return;\n                }\n                if (item.isGroup()) {\n                    item.getChildren().forEach(function (child) { return addShapes_1(child); });\n                }\n                else {\n                    shapes_1.push(item);\n                }\n            };\n            each(geometries, function (geom) {\n                if (apply_1) {\n                    if (contains(apply_1, geom.type)) {\n                        each(geom.elements, function (elem) {\n                            addShapes_1(elem.shape);\n                        });\n                    }\n                }\n                else {\n                    each(geom.elements, function (elem) {\n                        addShapes_1(elem.shape);\n                    });\n                }\n            });\n            o = __assign(__assign({}, rest), { color: color, shapes: shapes_1, start: sp, end: ep });\n        }\n        else if (type === 'shape') {\n            var _j = option, render_1 = _j.render, restOptions = __rest(_j, [\"render\"]);\n            var wrappedRender = function (container) {\n                if (isFunction(option.render)) {\n                    return render_1(container, _this.view, { parsePosition: _this.parsePosition.bind(_this) });\n                }\n            };\n            o = __assign(__assign({}, restOptions), { render: wrappedRender });\n        }\n        else if (type === 'html') {\n            var _k = option, html_1 = _k.html, position_3 = _k.position, restOptions = __rest(_k, [\"html\", \"position\"]);\n            var wrappedHtml = function (container) {\n                if (isFunction(html_1)) {\n                    return html_1(container, _this.view);\n                }\n                return html_1;\n            };\n            o = __assign(__assign(__assign({}, restOptions), textPoint), { \n                // html 组件需要指定 parent\n                parent: canvas.get('el').parentNode, html: wrappedHtml });\n        }\n        // 合并主题，用户配置优先级高于默认主题\n        var cfg = deepMix({}, theme, __assign(__assign({}, o), { top: option.top, style: option.style, offsetX: option.offsetX, offsetY: option.offsetY }));\n        if (type !== 'html') {\n            // html 类型不使用 G container\n            cfg.container = this.getComponentContainer(cfg);\n        }\n        cfg.animate = this.view.getOptions().animate && cfg.animate && get(option, 'animate', cfg.animate); // 如果 view 关闭动画，则不执行\n        cfg.animateOption = deepMix({}, DEFAULT_ANIMATE_CFG, cfg.animateOption, option.animateOption);\n        return cfg;\n    };\n    /**\n     * is annotation render on top\n     * @param option\n     * @return whethe on top\n     */\n    Annotation.prototype.isTop = function (option) {\n        return get(option, 'top', true);\n    };\n    /**\n     * get the container by option.top\n     * default is on top\n     * @param option\n     * @returns the container\n     */\n    Annotation.prototype.getComponentContainer = function (option) {\n        return this.isTop(option) ? this.foregroundContainer : this.backgroundContainer;\n    };\n    Annotation.prototype.getAnnotationTheme = function (type) {\n        return get(this.view.getTheme(), ['components', 'annotation', type], {});\n    };\n    /**\n     * 创建或者更新 annotation\n     * @param option\n     */\n    Annotation.prototype.updateOrCreate = function (option) {\n        // 拿到缓存的内容\n        var co = this.cache.get(this.getCacheKey(option));\n        // 存在则更新，不存在在创建\n        if (co) {\n            var type = option.type;\n            var theme = this.getAnnotationTheme(type);\n            var cfg = this.getAnnotationCfg(type, option, theme);\n            // 忽略掉一些配置\n            if (cfg) {\n                omit(cfg, ['container']);\n            }\n            co.component.update(__assign(__assign({}, (cfg || {})), { visible: !!cfg }));\n            // 对于 regionFilter/shape，因为生命周期的原因，需要额外 render\n            if (includes(ANNOTATIONS_AFTER_RENDER, option.type)) {\n                co.component.render();\n            }\n        }\n        else {\n            // 不存在，创建\n            co = this.createAnnotation(option);\n            if (co) {\n                co.component.init();\n                // Note：regionFilter/shape 特殊处理，regionFilter/shape 需要取到 Geometry 中的 Shape，需要在 view render 之后处理\n                // 其他组件使用外层的统一 render 逻辑\n                if (includes(ANNOTATIONS_AFTER_RENDER, option.type)) {\n                    co.component.render();\n                }\n            }\n        }\n        return co;\n    };\n    /**\n     * 更新缓存，以及销毁组件\n     * @param updated 更新或者创建的组件\n     */\n    Annotation.prototype.syncCache = function (updated) {\n        var _this = this;\n        var newCache = new Map(this.cache); // clone 一份\n        // 将 update 更新到 cache\n        updated.forEach(function (co, key) {\n            newCache.set(key, co);\n        });\n        // 另外和 options 进行对比，删除\n        newCache.forEach(function (co, key) {\n            // option 中已经找不到，那么就是删除的\n            if (!find(_this.option, function (option) {\n                return key === _this.getCacheKey(option);\n            })) {\n                co.component.destroy();\n                newCache.delete(key);\n            }\n        });\n        return newCache;\n    };\n    /**\n     * 获得缓存组件的 key\n     * @param option\n     */\n    Annotation.prototype.getCacheKey = function (option) {\n        // 如果存在 id，则使用 id string，否则直接使用 option 引用作为 key\n        return option;\n        // 后续扩展 id 用\n        // const id = get(option, 'id');\n        // return id ? id : option;\n    };\n    return Annotation;\n}(Controller));\nexport default Annotation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}