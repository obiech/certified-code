{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { isNumber } from '@antv/util';\nimport Base from '../base';\n/**\n * identity scale原则上是定义域和值域一致，scale/invert方法也是一致的\n * 参考R的实现：https://github.com/r-lib/scales/blob/master/R/pal-identity.r\n * 参考d3的实现（做了下转型）：https://github.com/d3/d3-scale/blob/master/src/identity.js\n */\nvar Identity = /** @class */function (_super) {\n  __extends(Identity, _super);\n  function Identity() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = 'identity';\n    _this.isIdentity = true;\n    return _this;\n  }\n  Identity.prototype.calculateTicks = function () {\n    return this.values;\n  };\n  Identity.prototype.scale = function (value) {\n    // 如果传入的值不等于 identity 的值，则直接返回，用于一维图时的 dodge\n    if (this.values[0] !== value && isNumber(value)) {\n      return value;\n    }\n    return this.range[0];\n  };\n  Identity.prototype.invert = function (value) {\n    var range = this.range;\n    if (value < range[0] || value > range[1]) {\n      return NaN;\n    }\n    return this.values[0];\n  };\n  return Identity;\n}(Base);\nexport default Identity;","map":{"version":3,"names":["__extends","isNumber","Base","Identity","_super","_this","apply","arguments","type","isIdentity","prototype","calculateTicks","values","scale","value","range","invert","NaN"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/scale/esm/identity/index.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { isNumber } from '@antv/util';\nimport Base from '../base';\n/**\n * identity scale原则上是定义域和值域一致，scale/invert方法也是一致的\n * 参考R的实现：https://github.com/r-lib/scales/blob/master/R/pal-identity.r\n * 参考d3的实现（做了下转型）：https://github.com/d3/d3-scale/blob/master/src/identity.js\n */\nvar Identity = /** @class */ (function (_super) {\n    __extends(Identity, _super);\n    function Identity() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'identity';\n        _this.isIdentity = true;\n        return _this;\n    }\n    Identity.prototype.calculateTicks = function () {\n        return this.values;\n    };\n    Identity.prototype.scale = function (value) {\n        // 如果传入的值不等于 identity 的值，则直接返回，用于一维图时的 dodge\n        if (this.values[0] !== value && isNumber(value)) {\n            return value;\n        }\n        return this.range[0];\n    };\n    Identity.prototype.invert = function (value) {\n        var range = this.range;\n        if (value < range[0] || value > range[1]) {\n            return NaN;\n        }\n        return this.values[0];\n    };\n    return Identity;\n}(Base));\nexport default Identity;\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,YAAY;AACrC,OAAOC,IAAI,MAAM,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA,IAAIC,QAAQ,GAAG,aAAe,UAAUC,MAAM,EAAE;EAC5CJ,SAAS,CAACG,QAAQ,EAAEC,MAAM,CAAC;EAC3B,SAASD,QAAQA,CAAA,EAAG;IAChB,IAAIE,KAAK,GAAGD,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACE,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,IAAI,IAAI;IACpEF,KAAK,CAACG,IAAI,GAAG,UAAU;IACvBH,KAAK,CAACI,UAAU,GAAG,IAAI;IACvB,OAAOJ,KAAK;EAChB;EACAF,QAAQ,CAACO,SAAS,CAACC,cAAc,GAAG,YAAY;IAC5C,OAAO,IAAI,CAACC,MAAM;EACtB,CAAC;EACDT,QAAQ,CAACO,SAAS,CAACG,KAAK,GAAG,UAAUC,KAAK,EAAE;IACxC;IACA,IAAI,IAAI,CAACF,MAAM,CAAC,CAAC,CAAC,KAAKE,KAAK,IAAIb,QAAQ,CAACa,KAAK,CAAC,EAAE;MAC7C,OAAOA,KAAK;IAChB;IACA,OAAO,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC;EACxB,CAAC;EACDZ,QAAQ,CAACO,SAAS,CAACM,MAAM,GAAG,UAAUF,KAAK,EAAE;IACzC,IAAIC,KAAK,GAAG,IAAI,CAACA,KAAK;IACtB,IAAID,KAAK,GAAGC,KAAK,CAAC,CAAC,CAAC,IAAID,KAAK,GAAGC,KAAK,CAAC,CAAC,CAAC,EAAE;MACtC,OAAOE,GAAG;IACd;IACA,OAAO,IAAI,CAACL,MAAM,CAAC,CAAC,CAAC;EACzB,CAAC;EACD,OAAOT,QAAQ;AACnB,CAAC,CAACD,IAAI,CAAE;AACR,eAAeC,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}