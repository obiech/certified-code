{"ast":null,"code":"import { map, memoize, isString, each } from '@antv/util';\nvar RGB_REG = /rgba?\\(([\\s.,0-9]+)\\)/;\nvar regexLG = /^l\\s*\\(\\s*([\\d.]+)\\s*\\)\\s*(.*)/i;\nvar regexRG = /^r\\s*\\(\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*\\)\\s*(.*)/i;\nvar regexColorStop = /[\\d.]+:(#[^\\s]+|[^\\)]+\\))/gi;\nvar isGradientColor = function (val) {\n  return /^[r,R,L,l]{1}[\\s]*\\(/.test(val);\n};\n// 创建辅助 tag 取颜色\nvar createTmp = function () {\n  var i = document.createElement('i');\n  i.title = 'Web Colour Picker';\n  i.style.display = 'none';\n  document.body.appendChild(i);\n  return i;\n};\n// 获取颜色之间的插值\nvar getValue = function (start, end, percent, index) {\n  return start[index] + (end[index] - start[index]) * percent;\n};\n// 数组转换成颜色\nfunction arr2rgb(arr) {\n  return \"#\" + toHex(arr[0]) + toHex(arr[1]) + toHex(arr[2]);\n}\n// rgb 颜色转换成数组\nvar rgb2arr = function (str) {\n  return [parseInt(str.substr(1, 2), 16), parseInt(str.substr(3, 2), 16), parseInt(str.substr(5, 2), 16)];\n};\n// 将数值从 0-255 转换成16进制字符串\nvar toHex = function (value) {\n  var x16Value = Math.round(value).toString(16);\n  return x16Value.length === 1 ? \"0\" + x16Value : x16Value;\n};\n// 计算颜色\nvar calColor = function (points, percent) {\n  var fixedPercent = isNaN(Number(percent)) || percent < 0 ? 0 : percent > 1 ? 1 : Number(percent);\n  var steps = points.length - 1;\n  var step = Math.floor(steps * fixedPercent);\n  var left = steps * fixedPercent - step;\n  var start = points[step];\n  var end = step === steps ? start : points[step + 1];\n  return arr2rgb([getValue(start, end, left, 0), getValue(start, end, left, 1), getValue(start, end, left, 2)]);\n};\n// 用于给 toRGB 的缓存（使用 memoize 方法替换）\n// const colorCache = {};\nvar iEl;\n/**\n * 将颜色转换到 rgb 的格式\n * @param {color} color 颜色\n * @return 将颜色转换到 '#ffffff' 的格式\n */\nvar toRGB = function (color) {\n  // 如果已经是 rgb的格式\n  if (color[0] === '#' && color.length === 7) {\n    return color;\n  }\n  if (!iEl) {\n    // 防止防止在页头报错\n    iEl = createTmp();\n  }\n  iEl.style.color = color;\n  var rst = document.defaultView.getComputedStyle(iEl, '').getPropertyValue('color');\n  var matches = RGB_REG.exec(rst);\n  var cArray = matches[1].split(/\\s*,\\s*/).map(function (s) {\n    return Number(s);\n  });\n  rst = arr2rgb(cArray);\n  return rst;\n};\n/**\n * 获取渐变函数\n * @param colors 多个颜色\n * @return 颜色值\n */\nvar gradient = function (colors) {\n  var colorArray = isString(colors) ? colors.split('-') : colors;\n  var points = map(colorArray, function (color) {\n    return rgb2arr(color.indexOf('#') === -1 ? toRGB(color) : color);\n  });\n  // 返回一个函数\n  return function (percent) {\n    return calColor(points, percent);\n  };\n};\nvar toCSSGradient = function (gradientColor) {\n  if (isGradientColor(gradientColor)) {\n    var cssColor_1;\n    var steps = void 0;\n    if (gradientColor[0] === 'l') {\n      // 线性渐变\n      var arr = regexLG.exec(gradientColor);\n      var angle = +arr[1] + 90; // css 和 g 的渐变起始角度不同\n      steps = arr[2];\n      cssColor_1 = \"linear-gradient(\" + angle + \"deg, \";\n    } else if (gradientColor[0] === 'r') {\n      // 径向渐变\n      cssColor_1 = 'radial-gradient(';\n      var arr = regexRG.exec(gradientColor);\n      steps = arr[4];\n    }\n    var colorStops_1 = steps.match(regexColorStop);\n    each(colorStops_1, function (item, index) {\n      var itemArr = item.split(':');\n      cssColor_1 += itemArr[1] + \" \" + itemArr[0] * 100 + \"%\";\n      if (index !== colorStops_1.length - 1) {\n        cssColor_1 += ', ';\n      }\n    });\n    cssColor_1 += ')';\n    return cssColor_1;\n  }\n  return gradientColor;\n};\nexport default {\n  rgb2arr: rgb2arr,\n  gradient: gradient,\n  toRGB: memoize(toRGB),\n  toCSSGradient: toCSSGradient\n};","map":{"version":3,"names":["map","memoize","isString","each","RGB_REG","regexLG","regexRG","regexColorStop","isGradientColor","val","test","createTmp","i","document","createElement","title","style","display","body","appendChild","getValue","start","end","percent","index","arr2rgb","arr","toHex","rgb2arr","str","parseInt","substr","value","x16Value","Math","round","toString","length","calColor","points","fixedPercent","isNaN","Number","steps","step","floor","left","iEl","toRGB","color","rst","defaultView","getComputedStyle","getPropertyValue","matches","exec","cArray","split","s","gradient","colors","colorArray","indexOf","toCSSGradient","gradientColor","cssColor_1","angle","colorStops_1","match","item","itemArr"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/color-util/esm/index.js"],"sourcesContent":["import { map, memoize, isString, each } from '@antv/util';\nvar RGB_REG = /rgba?\\(([\\s.,0-9]+)\\)/;\nvar regexLG = /^l\\s*\\(\\s*([\\d.]+)\\s*\\)\\s*(.*)/i;\nvar regexRG = /^r\\s*\\(\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*\\)\\s*(.*)/i;\nvar regexColorStop = /[\\d.]+:(#[^\\s]+|[^\\)]+\\))/gi;\nvar isGradientColor = function (val) { return /^[r,R,L,l]{1}[\\s]*\\(/.test(val); };\n// 创建辅助 tag 取颜色\nvar createTmp = function () {\n    var i = document.createElement('i');\n    i.title = 'Web Colour Picker';\n    i.style.display = 'none';\n    document.body.appendChild(i);\n    return i;\n};\n// 获取颜色之间的插值\nvar getValue = function (start, end, percent, index) {\n    return start[index] + (end[index] - start[index]) * percent;\n};\n// 数组转换成颜色\nfunction arr2rgb(arr) {\n    return \"#\" + toHex(arr[0]) + toHex(arr[1]) + toHex(arr[2]);\n}\n// rgb 颜色转换成数组\nvar rgb2arr = function (str) {\n    return [\n        parseInt(str.substr(1, 2), 16),\n        parseInt(str.substr(3, 2), 16),\n        parseInt(str.substr(5, 2), 16),\n    ];\n};\n// 将数值从 0-255 转换成16进制字符串\nvar toHex = function (value) {\n    var x16Value = Math.round(value).toString(16);\n    return x16Value.length === 1 ? \"0\" + x16Value : x16Value;\n};\n// 计算颜色\nvar calColor = function (points, percent) {\n    var fixedPercent = isNaN(Number(percent)) || percent < 0 ? 0 :\n        percent > 1 ? 1 :\n            Number(percent);\n    var steps = points.length - 1;\n    var step = Math.floor(steps * fixedPercent);\n    var left = steps * fixedPercent - step;\n    var start = points[step];\n    var end = step === steps ? start : points[step + 1];\n    return arr2rgb([\n        getValue(start, end, left, 0),\n        getValue(start, end, left, 1),\n        getValue(start, end, left, 2),\n    ]);\n};\n// 用于给 toRGB 的缓存（使用 memoize 方法替换）\n// const colorCache = {};\nvar iEl;\n/**\n * 将颜色转换到 rgb 的格式\n * @param {color} color 颜色\n * @return 将颜色转换到 '#ffffff' 的格式\n */\nvar toRGB = function (color) {\n    // 如果已经是 rgb的格式\n    if (color[0] === '#' && color.length === 7) {\n        return color;\n    }\n    if (!iEl) {\n        // 防止防止在页头报错\n        iEl = createTmp();\n    }\n    iEl.style.color = color;\n    var rst = document.defaultView.getComputedStyle(iEl, '').getPropertyValue('color');\n    var matches = RGB_REG.exec(rst);\n    var cArray = matches[1].split(/\\s*,\\s*/).map(function (s) { return Number(s); });\n    rst = arr2rgb(cArray);\n    return rst;\n};\n/**\n * 获取渐变函数\n * @param colors 多个颜色\n * @return 颜色值\n */\nvar gradient = function (colors) {\n    var colorArray = isString(colors) ? colors.split('-') : colors;\n    var points = map(colorArray, function (color) {\n        return rgb2arr(color.indexOf('#') === -1 ? toRGB(color) : color);\n    });\n    // 返回一个函数\n    return function (percent) {\n        return calColor(points, percent);\n    };\n};\nvar toCSSGradient = function (gradientColor) {\n    if (isGradientColor(gradientColor)) {\n        var cssColor_1;\n        var steps = void 0;\n        if (gradientColor[0] === 'l') {\n            // 线性渐变\n            var arr = regexLG.exec(gradientColor);\n            var angle = +arr[1] + 90; // css 和 g 的渐变起始角度不同\n            steps = arr[2];\n            cssColor_1 = \"linear-gradient(\" + angle + \"deg, \";\n        }\n        else if (gradientColor[0] === 'r') {\n            // 径向渐变\n            cssColor_1 = 'radial-gradient(';\n            var arr = regexRG.exec(gradientColor);\n            steps = arr[4];\n        }\n        var colorStops_1 = steps.match(regexColorStop);\n        each(colorStops_1, function (item, index) {\n            var itemArr = item.split(':');\n            cssColor_1 += itemArr[1] + \" \" + itemArr[0] * 100 + \"%\";\n            if (index !== (colorStops_1.length - 1)) {\n                cssColor_1 += ', ';\n            }\n        });\n        cssColor_1 += ')';\n        return cssColor_1;\n    }\n    return gradientColor;\n};\nexport default {\n    rgb2arr: rgb2arr,\n    gradient: gradient,\n    toRGB: memoize(toRGB),\n    toCSSGradient: toCSSGradient,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}