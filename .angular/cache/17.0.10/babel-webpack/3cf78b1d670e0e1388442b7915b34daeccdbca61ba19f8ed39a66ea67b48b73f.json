{"ast":null,"code":"import { pointAtSegments, angleAtSegments, distanceAtSegment, lengthOfSegment } from './segments';\nimport polyline from './polyline';\nfunction getAllPoints(points) {\n  var tmp = points.slice(0);\n  if (points.length) {\n    tmp.push(points[0]);\n  }\n  return tmp;\n}\nexport default {\n  /**\n   * 计算多边形的包围盒\n   * @param {array} points 点的集合 [x,y] 的形式\n   * @return {object} 包围盒\n   */\n  box: function (points) {\n    return polyline.box(points);\n  },\n  /**\n   * 计算多边形的长度\n   * @param {array} points 点的集合 [x,y] 的形式\n   * @return {object} 多边形边的长度\n   */\n  length: function (points) {\n    return lengthOfSegment(getAllPoints(points));\n  },\n  /**\n   * 根据比例获取多边形的点\n   * @param {array} points 点的集合 [x,y] 的形式\n   * @param {number} t 在多边形的长度上的比例\n   * @return {object} 根据比例值计算出来的点\n   */\n  pointAt: function (points, t) {\n    return pointAtSegments(getAllPoints(points), t);\n  },\n  /**\n   * 指定点到多边形的距离\n   * @param {array} points 点的集合 [x,y] 的形式\n   * @param {number} x 指定点的 x\n   * @param {number} y 指定点的 y\n   * @return {number} 点到多边形的距离\n   */\n  pointDistance: function (points, x, y) {\n    return distanceAtSegment(getAllPoints(points), x, y);\n  },\n  /**\n   * 根据比例获取多边形的切线角度\n   * @param {array} points 点的集合 [x,y] 的形式\n   * @param {number} t 在多边形的长度上的比例\n   * @return {object} 根据比例值计算出来的角度\n   */\n  tangentAngle: function (points, t) {\n    return angleAtSegments(getAllPoints(points), t);\n  }\n};","map":{"version":3,"names":["pointAtSegments","angleAtSegments","distanceAtSegment","lengthOfSegment","polyline","getAllPoints","points","tmp","slice","length","push","box","pointAt","t","pointDistance","x","y","tangentAngle"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g-math/esm/polygon.js"],"sourcesContent":["import { pointAtSegments, angleAtSegments, distanceAtSegment, lengthOfSegment } from './segments';\nimport polyline from './polyline';\nfunction getAllPoints(points) {\n    var tmp = points.slice(0);\n    if (points.length) {\n        tmp.push(points[0]);\n    }\n    return tmp;\n}\nexport default {\n    /**\n     * 计算多边形的包围盒\n     * @param {array} points 点的集合 [x,y] 的形式\n     * @return {object} 包围盒\n     */\n    box: function (points) {\n        return polyline.box(points);\n    },\n    /**\n     * 计算多边形的长度\n     * @param {array} points 点的集合 [x,y] 的形式\n     * @return {object} 多边形边的长度\n     */\n    length: function (points) {\n        return lengthOfSegment(getAllPoints(points));\n    },\n    /**\n     * 根据比例获取多边形的点\n     * @param {array} points 点的集合 [x,y] 的形式\n     * @param {number} t 在多边形的长度上的比例\n     * @return {object} 根据比例值计算出来的点\n     */\n    pointAt: function (points, t) {\n        return pointAtSegments(getAllPoints(points), t);\n    },\n    /**\n     * 指定点到多边形的距离\n     * @param {array} points 点的集合 [x,y] 的形式\n     * @param {number} x 指定点的 x\n     * @param {number} y 指定点的 y\n     * @return {number} 点到多边形的距离\n     */\n    pointDistance: function (points, x, y) {\n        return distanceAtSegment(getAllPoints(points), x, y);\n    },\n    /**\n     * 根据比例获取多边形的切线角度\n     * @param {array} points 点的集合 [x,y] 的形式\n     * @param {number} t 在多边形的长度上的比例\n     * @return {object} 根据比例值计算出来的角度\n     */\n    tangentAngle: function (points, t) {\n        return angleAtSegments(getAllPoints(points), t);\n    },\n};\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,eAAe,EAAEC,iBAAiB,EAAEC,eAAe,QAAQ,YAAY;AACjG,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,YAAYA,CAACC,MAAM,EAAE;EAC1B,IAAIC,GAAG,GAAGD,MAAM,CAACE,KAAK,CAAC,CAAC,CAAC;EACzB,IAAIF,MAAM,CAACG,MAAM,EAAE;IACfF,GAAG,CAACG,IAAI,CAACJ,MAAM,CAAC,CAAC,CAAC,CAAC;EACvB;EACA,OAAOC,GAAG;AACd;AACA,eAAe;EACX;AACJ;AACA;AACA;AACA;EACII,GAAG,EAAE,SAAAA,CAAUL,MAAM,EAAE;IACnB,OAAOF,QAAQ,CAACO,GAAG,CAACL,MAAM,CAAC;EAC/B,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIG,MAAM,EAAE,SAAAA,CAAUH,MAAM,EAAE;IACtB,OAAOH,eAAe,CAACE,YAAY,CAACC,MAAM,CAAC,CAAC;EAChD,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIM,OAAO,EAAE,SAAAA,CAAUN,MAAM,EAAEO,CAAC,EAAE;IAC1B,OAAOb,eAAe,CAACK,YAAY,CAACC,MAAM,CAAC,EAAEO,CAAC,CAAC;EACnD,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIC,aAAa,EAAE,SAAAA,CAAUR,MAAM,EAAES,CAAC,EAAEC,CAAC,EAAE;IACnC,OAAOd,iBAAiB,CAACG,YAAY,CAACC,MAAM,CAAC,EAAES,CAAC,EAAEC,CAAC,CAAC;EACxD,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIC,YAAY,EAAE,SAAAA,CAAUX,MAAM,EAAEO,CAAC,EAAE;IAC/B,OAAOZ,eAAe,CAACI,YAAY,CAACC,MAAM,CAAC,EAAEO,CAAC,CAAC;EACnD;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}