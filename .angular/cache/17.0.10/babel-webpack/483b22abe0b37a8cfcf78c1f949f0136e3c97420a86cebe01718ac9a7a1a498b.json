{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { debounce, each, isString } from '@antv/util';\nimport { GROUP_Z_INDEX, VIEW_LIFE_CIRCLE } from '../constant';\nimport { getEngine } from '../engine';\nimport { createDom, getChartSize, removeDom, modifyCSS } from '../util/dom';\nimport View from './view';\n/**\n * Chart 类，是使用 G2 进行绘图的入口。\n */\nvar Chart = /** @class */function (_super) {\n  __extends(Chart, _super);\n  // @ts-ignore\n  function Chart(props) {\n    var _this = this;\n    var container = props.container,\n      width = props.width,\n      height = props.height,\n      _a = props.autoFit,\n      autoFit = _a === void 0 ? false : _a,\n      padding = props.padding,\n      appendPadding = props.appendPadding,\n      _b = props.renderer,\n      renderer = _b === void 0 ? 'canvas' : _b,\n      pixelRatio = props.pixelRatio,\n      _c = props.localRefresh,\n      localRefresh = _c === void 0 ? true : _c,\n      _d = props.visible,\n      visible = _d === void 0 ? true : _d,\n      _e = props.supportCSSTransform,\n      supportCSSTransform = _e === void 0 ? false : _e,\n      _f = props.defaultInteractions,\n      defaultInteractions = _f === void 0 ? ['tooltip', 'legend-filter', 'legend-active', 'continuous-filter', 'ellipsis-text', 'axis-description'] : _f,\n      options = props.options,\n      limitInPlot = props.limitInPlot,\n      theme = props.theme,\n      syncViewPadding = props.syncViewPadding;\n    var ele = isString(container) ? document.getElementById(container) : container;\n    // 生成内部正式绘制的 div 元素\n    var wrapperElement = createDom('<div style=\"position:relative;\"></div>');\n    ele.appendChild(wrapperElement);\n    // if autoFit, use the container size, to avoid the graph render twice.\n    var size = getChartSize(ele, autoFit, width, height);\n    var G = getEngine(renderer);\n    var canvas = new G.Canvas(__assign({\n      container: wrapperElement,\n      pixelRatio: pixelRatio,\n      localRefresh: localRefresh,\n      supportCSSTransform: supportCSSTransform\n    }, size));\n    // 调用 view 的创建\n    _this = _super.call(this, {\n      parent: null,\n      canvas: canvas,\n      // create 3 group layers for views.\n      backgroundGroup: canvas.addGroup({\n        zIndex: GROUP_Z_INDEX.BG\n      }),\n      middleGroup: canvas.addGroup({\n        zIndex: GROUP_Z_INDEX.MID\n      }),\n      foregroundGroup: canvas.addGroup({\n        zIndex: GROUP_Z_INDEX.FORE\n      }),\n      padding: padding,\n      appendPadding: appendPadding,\n      visible: visible,\n      options: options,\n      limitInPlot: limitInPlot,\n      theme: theme,\n      syncViewPadding: syncViewPadding\n    }) || this;\n    /**\n     * when container size changed, change chart size props, and re-render.\n     */\n    _this.onResize = debounce(function () {\n      _this.forceFit();\n    }, 300);\n    _this.ele = ele;\n    _this.canvas = canvas;\n    _this.width = size.width;\n    _this.height = size.height;\n    _this.autoFit = autoFit;\n    _this.localRefresh = localRefresh;\n    _this.renderer = renderer;\n    _this.wrapperElement = wrapperElement;\n    // 自适应大小\n    _this.updateCanvasStyle();\n    _this.bindAutoFit();\n    _this.initDefaultInteractions(defaultInteractions);\n    return _this;\n  }\n  Chart.prototype.initDefaultInteractions = function (interactions) {\n    var _this = this;\n    each(interactions, function (interaction) {\n      _this.interaction(interaction);\n    });\n  };\n  /**\n   * 设置 WAI-ARIA 无障碍标签。如何根据图形语法自动生成 arial 内容？\n   * @param ariaOption\n   */\n  Chart.prototype.aria = function (ariaOption) {\n    var ATTR = 'aria-label';\n    if (ariaOption === false) {\n      this.ele.removeAttribute(ATTR);\n    } else {\n      this.ele.setAttribute(ATTR, ariaOption.label);\n    }\n  };\n  /**\n   * 改变图表大小，同时重新渲染。\n   * @param width 图表宽度\n   * @param height 图表高度\n   * @returns\n   */\n  Chart.prototype.changeSize = function (width, height) {\n    // 如果宽高一致，那么 changeSize 不执行任何操作\n    if (this.width === width && this.height === height) {\n      return this;\n    }\n    this.emit(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_SIZE);\n    this.width = width;\n    this.height = height;\n    this.canvas.changeSize(width, height);\n    // 重新渲染\n    this.render(true);\n    this.emit(VIEW_LIFE_CIRCLE.AFTER_CHANGE_SIZE);\n    return this;\n  };\n  /**\n   * 清空图表，同时清除掉 aria 配置\n   */\n  Chart.prototype.clear = function () {\n    _super.prototype.clear.call(this);\n    this.aria(false);\n  };\n  /**\n   * 销毁图表，同时解绑事件，销毁创建的 G.Canvas 实例。\n   * @returns void\n   */\n  Chart.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n    this.unbindAutoFit();\n    this.canvas.destroy();\n    removeDom(this.wrapperElement);\n    this.wrapperElement = null;\n  };\n  /**\n   * 显示或隐藏图表\n   * @param visible 是否可见，true 表示显示，false 表示隐藏\n   * @returns\n   */\n  Chart.prototype.changeVisible = function (visible) {\n    _super.prototype.changeVisible.call(this, visible); // 需要更新 visible 变量\n    this.wrapperElement.style.display = visible ? '' : 'none';\n    return this;\n  };\n  /**\n   * 自动根据容器大小 resize 画布\n   */\n  Chart.prototype.forceFit = function () {\n    // skip if already destroyed\n    if (!this.destroyed) {\n      // 注意第二参数用 true，意思是即时 autoFit = false，forceFit() 调用之后一样是适配容器\n      var _a = getChartSize(this.ele, true, this.width, this.height),\n        width = _a.width,\n        height = _a.height;\n      this.changeSize(width, height);\n    }\n  };\n  Chart.prototype.updateCanvasStyle = function () {\n    modifyCSS(this.canvas.get('el'), {\n      display: 'inline-block',\n      verticalAlign: 'middle'\n    });\n  };\n  Chart.prototype.bindAutoFit = function () {\n    if (this.autoFit) {\n      window.addEventListener('resize', this.onResize);\n    }\n  };\n  Chart.prototype.unbindAutoFit = function () {\n    if (this.autoFit) {\n      window.removeEventListener('resize', this.onResize);\n    }\n  };\n  return Chart;\n}(View);\nexport default Chart;","map":{"version":3,"names":["__assign","__extends","debounce","each","isString","GROUP_Z_INDEX","VIEW_LIFE_CIRCLE","getEngine","createDom","getChartSize","removeDom","modifyCSS","View","Chart","_super","props","_this","container","width","height","_a","autoFit","padding","appendPadding","_b","renderer","pixelRatio","_c","localRefresh","_d","visible","_e","supportCSSTransform","_f","defaultInteractions","options","limitInPlot","theme","syncViewPadding","ele","document","getElementById","wrapperElement","appendChild","size","G","canvas","Canvas","call","parent","backgroundGroup","addGroup","zIndex","BG","middleGroup","MID","foregroundGroup","FORE","onResize","forceFit","updateCanvasStyle","bindAutoFit","initDefaultInteractions","prototype","interactions","interaction","aria","ariaOption","ATTR","removeAttribute","setAttribute","label","changeSize","emit","BEFORE_CHANGE_SIZE","render","AFTER_CHANGE_SIZE","clear","destroy","unbindAutoFit","changeVisible","style","display","destroyed","get","verticalAlign","window","addEventListener","removeEventListener"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g2/esm/chart/chart.js"],"sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { debounce, each, isString } from '@antv/util';\nimport { GROUP_Z_INDEX, VIEW_LIFE_CIRCLE } from '../constant';\nimport { getEngine } from '../engine';\nimport { createDom, getChartSize, removeDom, modifyCSS } from '../util/dom';\nimport View from './view';\n/**\n * Chart 类，是使用 G2 进行绘图的入口。\n */\nvar Chart = /** @class */ (function (_super) {\n    __extends(Chart, _super);\n    // @ts-ignore\n    function Chart(props) {\n        var _this = this;\n        var container = props.container, width = props.width, height = props.height, _a = props.autoFit, autoFit = _a === void 0 ? false : _a, padding = props.padding, appendPadding = props.appendPadding, _b = props.renderer, renderer = _b === void 0 ? 'canvas' : _b, pixelRatio = props.pixelRatio, _c = props.localRefresh, localRefresh = _c === void 0 ? true : _c, _d = props.visible, visible = _d === void 0 ? true : _d, _e = props.supportCSSTransform, supportCSSTransform = _e === void 0 ? false : _e, _f = props.defaultInteractions, defaultInteractions = _f === void 0 ? ['tooltip', 'legend-filter', 'legend-active', 'continuous-filter', 'ellipsis-text', 'axis-description'] : _f, options = props.options, limitInPlot = props.limitInPlot, theme = props.theme, syncViewPadding = props.syncViewPadding;\n        var ele = isString(container) ? document.getElementById(container) : container;\n        // 生成内部正式绘制的 div 元素\n        var wrapperElement = createDom('<div style=\"position:relative;\"></div>');\n        ele.appendChild(wrapperElement);\n        // if autoFit, use the container size, to avoid the graph render twice.\n        var size = getChartSize(ele, autoFit, width, height);\n        var G = getEngine(renderer);\n        var canvas = new G.Canvas(__assign({ container: wrapperElement, pixelRatio: pixelRatio, localRefresh: localRefresh, supportCSSTransform: supportCSSTransform }, size));\n        // 调用 view 的创建\n        _this = _super.call(this, {\n            parent: null,\n            canvas: canvas,\n            // create 3 group layers for views.\n            backgroundGroup: canvas.addGroup({ zIndex: GROUP_Z_INDEX.BG }),\n            middleGroup: canvas.addGroup({ zIndex: GROUP_Z_INDEX.MID }),\n            foregroundGroup: canvas.addGroup({ zIndex: GROUP_Z_INDEX.FORE }),\n            padding: padding,\n            appendPadding: appendPadding,\n            visible: visible,\n            options: options,\n            limitInPlot: limitInPlot,\n            theme: theme,\n            syncViewPadding: syncViewPadding,\n        }) || this;\n        /**\n         * when container size changed, change chart size props, and re-render.\n         */\n        _this.onResize = debounce(function () {\n            _this.forceFit();\n        }, 300);\n        _this.ele = ele;\n        _this.canvas = canvas;\n        _this.width = size.width;\n        _this.height = size.height;\n        _this.autoFit = autoFit;\n        _this.localRefresh = localRefresh;\n        _this.renderer = renderer;\n        _this.wrapperElement = wrapperElement;\n        // 自适应大小\n        _this.updateCanvasStyle();\n        _this.bindAutoFit();\n        _this.initDefaultInteractions(defaultInteractions);\n        return _this;\n    }\n    Chart.prototype.initDefaultInteractions = function (interactions) {\n        var _this = this;\n        each(interactions, function (interaction) {\n            _this.interaction(interaction);\n        });\n    };\n    /**\n     * 设置 WAI-ARIA 无障碍标签。如何根据图形语法自动生成 arial 内容？\n     * @param ariaOption\n     */\n    Chart.prototype.aria = function (ariaOption) {\n        var ATTR = 'aria-label';\n        if (ariaOption === false) {\n            this.ele.removeAttribute(ATTR);\n        }\n        else {\n            this.ele.setAttribute(ATTR, ariaOption.label);\n        }\n    };\n    /**\n     * 改变图表大小，同时重新渲染。\n     * @param width 图表宽度\n     * @param height 图表高度\n     * @returns\n     */\n    Chart.prototype.changeSize = function (width, height) {\n        // 如果宽高一致，那么 changeSize 不执行任何操作\n        if (this.width === width && this.height === height) {\n            return this;\n        }\n        this.emit(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_SIZE);\n        this.width = width;\n        this.height = height;\n        this.canvas.changeSize(width, height);\n        // 重新渲染\n        this.render(true);\n        this.emit(VIEW_LIFE_CIRCLE.AFTER_CHANGE_SIZE);\n        return this;\n    };\n    /**\n     * 清空图表，同时清除掉 aria 配置\n     */\n    Chart.prototype.clear = function () {\n        _super.prototype.clear.call(this);\n        this.aria(false);\n    };\n    /**\n     * 销毁图表，同时解绑事件，销毁创建的 G.Canvas 实例。\n     * @returns void\n     */\n    Chart.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.unbindAutoFit();\n        this.canvas.destroy();\n        removeDom(this.wrapperElement);\n        this.wrapperElement = null;\n    };\n    /**\n     * 显示或隐藏图表\n     * @param visible 是否可见，true 表示显示，false 表示隐藏\n     * @returns\n     */\n    Chart.prototype.changeVisible = function (visible) {\n        _super.prototype.changeVisible.call(this, visible); // 需要更新 visible 变量\n        this.wrapperElement.style.display = visible ? '' : 'none';\n        return this;\n    };\n    /**\n     * 自动根据容器大小 resize 画布\n     */\n    Chart.prototype.forceFit = function () {\n        // skip if already destroyed\n        if (!this.destroyed) {\n            // 注意第二参数用 true，意思是即时 autoFit = false，forceFit() 调用之后一样是适配容器\n            var _a = getChartSize(this.ele, true, this.width, this.height), width = _a.width, height = _a.height;\n            this.changeSize(width, height);\n        }\n    };\n    Chart.prototype.updateCanvasStyle = function () {\n        modifyCSS(this.canvas.get('el'), {\n            display: 'inline-block',\n            verticalAlign: 'middle',\n        });\n    };\n    Chart.prototype.bindAutoFit = function () {\n        if (this.autoFit) {\n            window.addEventListener('resize', this.onResize);\n        }\n    };\n    Chart.prototype.unbindAutoFit = function () {\n        if (this.autoFit) {\n            window.removeEventListener('resize', this.onResize);\n        }\n    };\n    return Chart;\n}(View));\nexport default Chart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}