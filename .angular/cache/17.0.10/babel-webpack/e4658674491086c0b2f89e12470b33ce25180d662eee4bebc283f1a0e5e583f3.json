{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport GroupComponent from '../abstract/group-component';\nimport { createBBox, formatPadding } from '../util/util';\nvar LegendBase = /** @class */function (_super) {\n  __extends(LegendBase, _super);\n  function LegendBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  LegendBase.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n    return __assign(__assign({}, cfg), {\n      name: 'legend',\n      /**\n       * 布局方式： horizontal，vertical\n       * @type {String}\n       */\n      layout: 'horizontal',\n      locationType: 'point',\n      x: 0,\n      y: 0,\n      offsetX: 0,\n      offsetY: 0,\n      title: null,\n      background: null\n    });\n  };\n  LegendBase.prototype.getLayoutBBox = function () {\n    var bbox = _super.prototype.getLayoutBBox.call(this);\n    var maxWidth = this.get('maxWidth');\n    var maxHeight = this.get('maxHeight');\n    var width = bbox.width,\n      height = bbox.height;\n    if (maxWidth) {\n      width = Math.min(width, maxWidth);\n    }\n    if (maxHeight) {\n      height = Math.min(height, maxHeight);\n    }\n    return createBBox(bbox.minX, bbox.minY, width, height);\n  };\n  LegendBase.prototype.setLocation = function (cfg) {\n    this.set('x', cfg.x);\n    this.set('y', cfg.y);\n    this.resetLocation();\n  };\n  LegendBase.prototype.resetLocation = function () {\n    var x = this.get('x');\n    var y = this.get('y');\n    var offsetX = this.get('offsetX');\n    var offsetY = this.get('offsetY');\n    this.moveElementTo(this.get('group'), {\n      x: x + offsetX,\n      y: y + offsetY\n    });\n  };\n  LegendBase.prototype.applyOffset = function () {\n    this.resetLocation();\n  };\n  // 获取当前绘制的点\n  LegendBase.prototype.getDrawPoint = function () {\n    return this.get('currentPoint');\n  };\n  LegendBase.prototype.setDrawPoint = function (point) {\n    return this.set('currentPoint', point);\n  };\n  // 复写父类定义的绘制方法\n  LegendBase.prototype.renderInner = function (group) {\n    this.resetDraw();\n    if (this.get('title')) {\n      this.drawTitle(group);\n    }\n    this.drawLegendContent(group);\n    if (this.get('background')) {\n      this.drawBackground(group);\n    }\n    // this.resetLocation(); // 在顶层已经在处理偏移时一起处理了\n  };\n  // 绘制背景\n  LegendBase.prototype.drawBackground = function (group) {\n    var background = this.get('background');\n    var bbox = group.getBBox();\n    var padding = formatPadding(background.padding);\n    var attrs = __assign({\n      // 背景从 (0,0) 开始绘制\n      x: 0,\n      y: 0,\n      width: bbox.width + padding[1] + padding[3],\n      height: bbox.height + padding[0] + padding[2]\n    }, background.style);\n    var backgroundShape = this.addShape(group, {\n      type: 'rect',\n      id: this.getElementId('background'),\n      name: 'legend-background',\n      attrs: attrs\n    });\n    backgroundShape.toBack();\n  };\n  // 绘制标题，标题在图例项的上面\n  LegendBase.prototype.drawTitle = function (group) {\n    var currentPoint = this.get('currentPoint');\n    var titleCfg = this.get('title');\n    var spacing = titleCfg.spacing,\n      style = titleCfg.style,\n      text = titleCfg.text;\n    var shape = this.addShape(group, {\n      type: 'text',\n      id: this.getElementId('title'),\n      name: 'legend-title',\n      attrs: __assign({\n        text: text,\n        x: currentPoint.x,\n        y: currentPoint.y\n      }, style)\n    });\n    var bbox = shape.getBBox();\n    // 标题单独在一行\n    this.set('currentPoint', {\n      x: currentPoint.x,\n      y: bbox.maxY + spacing\n    });\n  };\n  // 重置绘制时开始的位置，如果绘制边框，考虑边框的 padding\n  LegendBase.prototype.resetDraw = function () {\n    var background = this.get('background');\n    var currentPoint = {\n      x: 0,\n      y: 0\n    };\n    if (background) {\n      var padding = formatPadding(background.padding);\n      currentPoint.x = padding[3]; // 左边 padding\n      currentPoint.y = padding[0]; // 上面 padding\n    }\n\n    this.set('currentPoint', currentPoint); // 设置绘制的初始位置\n  };\n\n  return LegendBase;\n}(GroupComponent);\nexport default LegendBase;","map":{"version":3,"names":["__assign","__extends","GroupComponent","createBBox","formatPadding","LegendBase","_super","apply","arguments","prototype","getDefaultCfg","cfg","call","name","layout","locationType","x","y","offsetX","offsetY","title","background","getLayoutBBox","bbox","maxWidth","get","maxHeight","width","height","Math","min","minX","minY","setLocation","set","resetLocation","moveElementTo","applyOffset","getDrawPoint","setDrawPoint","point","renderInner","group","resetDraw","drawTitle","drawLegendContent","drawBackground","getBBox","padding","attrs","style","backgroundShape","addShape","type","id","getElementId","toBack","currentPoint","titleCfg","spacing","text","shape","maxY"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/component/esm/legend/base.js"],"sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport GroupComponent from '../abstract/group-component';\nimport { createBBox, formatPadding } from '../util/util';\nvar LegendBase = /** @class */ (function (_super) {\n    __extends(LegendBase, _super);\n    function LegendBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    LegendBase.prototype.getDefaultCfg = function () {\n        var cfg = _super.prototype.getDefaultCfg.call(this);\n        return __assign(__assign({}, cfg), { name: 'legend', \n            /**\n             * 布局方式： horizontal，vertical\n             * @type {String}\n             */\n            layout: 'horizontal', locationType: 'point', x: 0, y: 0, offsetX: 0, offsetY: 0, title: null, background: null });\n    };\n    LegendBase.prototype.getLayoutBBox = function () {\n        var bbox = _super.prototype.getLayoutBBox.call(this);\n        var maxWidth = this.get('maxWidth');\n        var maxHeight = this.get('maxHeight');\n        var width = bbox.width, height = bbox.height;\n        if (maxWidth) {\n            width = Math.min(width, maxWidth);\n        }\n        if (maxHeight) {\n            height = Math.min(height, maxHeight);\n        }\n        return createBBox(bbox.minX, bbox.minY, width, height);\n    };\n    LegendBase.prototype.setLocation = function (cfg) {\n        this.set('x', cfg.x);\n        this.set('y', cfg.y);\n        this.resetLocation();\n    };\n    LegendBase.prototype.resetLocation = function () {\n        var x = this.get('x');\n        var y = this.get('y');\n        var offsetX = this.get('offsetX');\n        var offsetY = this.get('offsetY');\n        this.moveElementTo(this.get('group'), {\n            x: x + offsetX,\n            y: y + offsetY,\n        });\n    };\n    LegendBase.prototype.applyOffset = function () {\n        this.resetLocation();\n    };\n    // 获取当前绘制的点\n    LegendBase.prototype.getDrawPoint = function () {\n        return this.get('currentPoint');\n    };\n    LegendBase.prototype.setDrawPoint = function (point) {\n        return this.set('currentPoint', point);\n    };\n    // 复写父类定义的绘制方法\n    LegendBase.prototype.renderInner = function (group) {\n        this.resetDraw();\n        if (this.get('title')) {\n            this.drawTitle(group);\n        }\n        this.drawLegendContent(group);\n        if (this.get('background')) {\n            this.drawBackground(group);\n        }\n        // this.resetLocation(); // 在顶层已经在处理偏移时一起处理了\n    };\n    // 绘制背景\n    LegendBase.prototype.drawBackground = function (group) {\n        var background = this.get('background');\n        var bbox = group.getBBox();\n        var padding = formatPadding(background.padding);\n        var attrs = __assign({ \n            // 背景从 (0,0) 开始绘制\n            x: 0, y: 0, width: bbox.width + padding[1] + padding[3], height: bbox.height + padding[0] + padding[2] }, background.style);\n        var backgroundShape = this.addShape(group, {\n            type: 'rect',\n            id: this.getElementId('background'),\n            name: 'legend-background',\n            attrs: attrs,\n        });\n        backgroundShape.toBack();\n    };\n    // 绘制标题，标题在图例项的上面\n    LegendBase.prototype.drawTitle = function (group) {\n        var currentPoint = this.get('currentPoint');\n        var titleCfg = this.get('title');\n        var spacing = titleCfg.spacing, style = titleCfg.style, text = titleCfg.text;\n        var shape = this.addShape(group, {\n            type: 'text',\n            id: this.getElementId('title'),\n            name: 'legend-title',\n            attrs: __assign({ text: text, x: currentPoint.x, y: currentPoint.y }, style),\n        });\n        var bbox = shape.getBBox();\n        // 标题单独在一行\n        this.set('currentPoint', { x: currentPoint.x, y: bbox.maxY + spacing });\n    };\n    // 重置绘制时开始的位置，如果绘制边框，考虑边框的 padding\n    LegendBase.prototype.resetDraw = function () {\n        var background = this.get('background');\n        var currentPoint = { x: 0, y: 0 };\n        if (background) {\n            var padding = formatPadding(background.padding);\n            currentPoint.x = padding[3]; // 左边 padding\n            currentPoint.y = padding[0]; // 上面 padding\n        }\n        this.set('currentPoint', currentPoint); // 设置绘制的初始位置\n    };\n    return LegendBase;\n}(GroupComponent));\nexport default LegendBase;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}