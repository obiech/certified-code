{"ast":null,"code":"import { assign, isEmpty, isFunction, isNil, isNumber, isObject, isString, map } from '@antv/util';\nimport { getTickMethod } from './tick-method/register';\nvar Scale = /** @class */function () {\n  function Scale(cfg) {\n    /**\n     * 度量的类型\n     */\n    this.type = 'base';\n    /**\n     * 是否分类类型的度量\n     */\n    this.isCategory = false;\n    /**\n     * 是否线性度量，有linear, time 度量\n     */\n    this.isLinear = false;\n    /**\n     * 是否连续类型的度量，linear,time,log, pow, quantile, quantize 都支持\n     */\n    this.isContinuous = false;\n    /**\n     * 是否是常量的度量，传入和传出一致\n     */\n    this.isIdentity = false;\n    this.values = [];\n    this.range = [0, 1];\n    this.ticks = [];\n    this.__cfg__ = cfg;\n    this.initCfg();\n    this.init();\n  }\n  // 对于原始值的必要转换，如分类、时间字段需转换成数值，用transform/map命名可能更好\n  Scale.prototype.translate = function (v) {\n    return v;\n  };\n  /** 重新初始化 */\n  Scale.prototype.change = function (cfg) {\n    // 覆盖配置项，而不替代\n    assign(this.__cfg__, cfg);\n    this.init();\n  };\n  Scale.prototype.clone = function () {\n    return this.constructor(this.__cfg__);\n  };\n  /** 获取坐标轴需要的ticks */\n  Scale.prototype.getTicks = function () {\n    var _this = this;\n    return map(this.ticks, function (tick, idx) {\n      if (isObject(tick)) {\n        // 仅当符合Tick类型时才有意义\n        return tick;\n      }\n      return {\n        text: _this.getText(tick, idx),\n        tickValue: tick,\n        value: _this.scale(tick)\n      };\n    });\n  };\n  /** 获取Tick的格式化结果 */\n  Scale.prototype.getText = function (value, key) {\n    var formatter = this.formatter;\n    var res = formatter ? formatter(value, key) : value;\n    if (isNil(res) || !isFunction(res.toString)) {\n      return '';\n    }\n    return res.toString();\n  };\n  // 获取配置项中的值，当前 scale 上的值可能会被修改\n  Scale.prototype.getConfig = function (key) {\n    return this.__cfg__[key];\n  };\n  // scale初始化\n  Scale.prototype.init = function () {\n    assign(this, this.__cfg__);\n    this.setDomain();\n    if (isEmpty(this.getConfig('ticks'))) {\n      this.ticks = this.calculateTicks();\n    }\n  };\n  // 子类上覆盖某些属性，不能直接在类上声明，否则会被覆盖\n  Scale.prototype.initCfg = function () {};\n  Scale.prototype.setDomain = function () {};\n  Scale.prototype.calculateTicks = function () {\n    var tickMethod = this.tickMethod;\n    var ticks = [];\n    if (isString(tickMethod)) {\n      var method = getTickMethod(tickMethod);\n      if (!method) {\n        throw new Error('There is no method to to calculate ticks!');\n      }\n      ticks = method(this);\n    } else if (isFunction(tickMethod)) {\n      ticks = tickMethod(this);\n    }\n    return ticks;\n  };\n  // range 的最小值\n  Scale.prototype.rangeMin = function () {\n    return this.range[0];\n  };\n  // range 的最大值\n  Scale.prototype.rangeMax = function () {\n    return this.range[1];\n  };\n  /** 定义域转 0~1 */\n  Scale.prototype.calcPercent = function (value, min, max) {\n    if (isNumber(value)) {\n      return (value - min) / (max - min);\n    }\n    return NaN;\n  };\n  /** 0~1转定义域 */\n  Scale.prototype.calcValue = function (percent, min, max) {\n    return min + percent * (max - min);\n  };\n  return Scale;\n}();\nexport default Scale;","map":{"version":3,"names":["assign","isEmpty","isFunction","isNil","isNumber","isObject","isString","map","getTickMethod","Scale","cfg","type","isCategory","isLinear","isContinuous","isIdentity","values","range","ticks","__cfg__","initCfg","init","prototype","translate","v","change","clone","constructor","getTicks","_this","tick","idx","text","getText","tickValue","value","scale","key","formatter","res","toString","getConfig","setDomain","calculateTicks","tickMethod","method","Error","rangeMin","rangeMax","calcPercent","min","max","NaN","calcValue","percent"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/scale/esm/base.js"],"sourcesContent":["import { assign, isEmpty, isFunction, isNil, isNumber, isObject, isString, map } from '@antv/util';\nimport { getTickMethod } from './tick-method/register';\nvar Scale = /** @class */ (function () {\n    function Scale(cfg) {\n        /**\n         * 度量的类型\n         */\n        this.type = 'base';\n        /**\n         * 是否分类类型的度量\n         */\n        this.isCategory = false;\n        /**\n         * 是否线性度量，有linear, time 度量\n         */\n        this.isLinear = false;\n        /**\n         * 是否连续类型的度量，linear,time,log, pow, quantile, quantize 都支持\n         */\n        this.isContinuous = false;\n        /**\n         * 是否是常量的度量，传入和传出一致\n         */\n        this.isIdentity = false;\n        this.values = [];\n        this.range = [0, 1];\n        this.ticks = [];\n        this.__cfg__ = cfg;\n        this.initCfg();\n        this.init();\n    }\n    // 对于原始值的必要转换，如分类、时间字段需转换成数值，用transform/map命名可能更好\n    Scale.prototype.translate = function (v) {\n        return v;\n    };\n    /** 重新初始化 */\n    Scale.prototype.change = function (cfg) {\n        // 覆盖配置项，而不替代\n        assign(this.__cfg__, cfg);\n        this.init();\n    };\n    Scale.prototype.clone = function () {\n        return this.constructor(this.__cfg__);\n    };\n    /** 获取坐标轴需要的ticks */\n    Scale.prototype.getTicks = function () {\n        var _this = this;\n        return map(this.ticks, function (tick, idx) {\n            if (isObject(tick)) {\n                // 仅当符合Tick类型时才有意义\n                return tick;\n            }\n            return {\n                text: _this.getText(tick, idx),\n                tickValue: tick,\n                value: _this.scale(tick),\n            };\n        });\n    };\n    /** 获取Tick的格式化结果 */\n    Scale.prototype.getText = function (value, key) {\n        var formatter = this.formatter;\n        var res = formatter ? formatter(value, key) : value;\n        if (isNil(res) || !isFunction(res.toString)) {\n            return '';\n        }\n        return res.toString();\n    };\n    // 获取配置项中的值，当前 scale 上的值可能会被修改\n    Scale.prototype.getConfig = function (key) {\n        return this.__cfg__[key];\n    };\n    // scale初始化\n    Scale.prototype.init = function () {\n        assign(this, this.__cfg__);\n        this.setDomain();\n        if (isEmpty(this.getConfig('ticks'))) {\n            this.ticks = this.calculateTicks();\n        }\n    };\n    // 子类上覆盖某些属性，不能直接在类上声明，否则会被覆盖\n    Scale.prototype.initCfg = function () { };\n    Scale.prototype.setDomain = function () { };\n    Scale.prototype.calculateTicks = function () {\n        var tickMethod = this.tickMethod;\n        var ticks = [];\n        if (isString(tickMethod)) {\n            var method = getTickMethod(tickMethod);\n            if (!method) {\n                throw new Error('There is no method to to calculate ticks!');\n            }\n            ticks = method(this);\n        }\n        else if (isFunction(tickMethod)) {\n            ticks = tickMethod(this);\n        }\n        return ticks;\n    };\n    // range 的最小值\n    Scale.prototype.rangeMin = function () {\n        return this.range[0];\n    };\n    // range 的最大值\n    Scale.prototype.rangeMax = function () {\n        return this.range[1];\n    };\n    /** 定义域转 0~1 */\n    Scale.prototype.calcPercent = function (value, min, max) {\n        if (isNumber(value)) {\n            return (value - min) / (max - min);\n        }\n        return NaN;\n    };\n    /** 0~1转定义域 */\n    Scale.prototype.calcValue = function (percent, min, max) {\n        return min + percent * (max - min);\n    };\n    return Scale;\n}());\nexport default Scale;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}