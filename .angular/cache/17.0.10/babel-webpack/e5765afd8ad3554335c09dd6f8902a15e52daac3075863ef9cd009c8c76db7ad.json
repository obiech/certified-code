{"ast":null,"code":"import { __extends } from \"tslib\";\n/**\n * @fileoverview polygon\n * @author dengfuping_develop@163.com\n */\nimport { each, isArray } from '@antv/util';\nimport { SVG_ATTR_MAP } from '../constant';\nimport ShapeBase from './base';\nvar Polygon = /** @class */function (_super) {\n  __extends(Polygon, _super);\n  function Polygon() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = 'polygon';\n    _this.canFill = true;\n    _this.canStroke = true;\n    return _this;\n  }\n  Polygon.prototype.createPath = function (context, targetAttrs) {\n    var attrs = this.attr();\n    var el = this.get('el');\n    each(targetAttrs || attrs, function (value, attr) {\n      if (attr === 'points' && isArray(value) && value.length >= 2) {\n        el.setAttribute('points', value.map(function (point) {\n          return point[0] + \",\" + point[1];\n        }).join(' '));\n      } else if (SVG_ATTR_MAP[attr]) {\n        el.setAttribute(SVG_ATTR_MAP[attr], value);\n      }\n    });\n  };\n  return Polygon;\n}(ShapeBase);\nexport default Polygon;","map":{"version":3,"names":["__extends","each","isArray","SVG_ATTR_MAP","ShapeBase","Polygon","_super","_this","apply","arguments","type","canFill","canStroke","prototype","createPath","context","targetAttrs","attrs","attr","el","get","value","length","setAttribute","map","point","join"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g-svg/esm/shape/polygon.js"],"sourcesContent":["import { __extends } from \"tslib\";\n/**\n * @fileoverview polygon\n * @author dengfuping_develop@163.com\n */\nimport { each, isArray } from '@antv/util';\nimport { SVG_ATTR_MAP } from '../constant';\nimport ShapeBase from './base';\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    function Polygon() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'polygon';\n        _this.canFill = true;\n        _this.canStroke = true;\n        return _this;\n    }\n    Polygon.prototype.createPath = function (context, targetAttrs) {\n        var attrs = this.attr();\n        var el = this.get('el');\n        each(targetAttrs || attrs, function (value, attr) {\n            if (attr === 'points' && isArray(value) && value.length >= 2) {\n                el.setAttribute('points', value.map(function (point) { return point[0] + \",\" + point[1]; }).join(' '));\n            }\n            else if (SVG_ATTR_MAP[attr]) {\n                el.setAttribute(SVG_ATTR_MAP[attr], value);\n            }\n        });\n    };\n    return Polygon;\n}(ShapeBase));\nexport default Polygon;\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC;AACA;AACA;AACA;AACA,SAASC,IAAI,EAAEC,OAAO,QAAQ,YAAY;AAC1C,SAASC,YAAY,QAAQ,aAAa;AAC1C,OAAOC,SAAS,MAAM,QAAQ;AAC9B,IAAIC,OAAO,GAAG,aAAe,UAAUC,MAAM,EAAE;EAC3CN,SAAS,CAACK,OAAO,EAAEC,MAAM,CAAC;EAC1B,SAASD,OAAOA,CAAA,EAAG;IACf,IAAIE,KAAK,GAAGD,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACE,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,IAAI,IAAI;IACpEF,KAAK,CAACG,IAAI,GAAG,SAAS;IACtBH,KAAK,CAACI,OAAO,GAAG,IAAI;IACpBJ,KAAK,CAACK,SAAS,GAAG,IAAI;IACtB,OAAOL,KAAK;EAChB;EACAF,OAAO,CAACQ,SAAS,CAACC,UAAU,GAAG,UAAUC,OAAO,EAAEC,WAAW,EAAE;IAC3D,IAAIC,KAAK,GAAG,IAAI,CAACC,IAAI,CAAC,CAAC;IACvB,IAAIC,EAAE,GAAG,IAAI,CAACC,GAAG,CAAC,IAAI,CAAC;IACvBnB,IAAI,CAACe,WAAW,IAAIC,KAAK,EAAE,UAAUI,KAAK,EAAEH,IAAI,EAAE;MAC9C,IAAIA,IAAI,KAAK,QAAQ,IAAIhB,OAAO,CAACmB,KAAK,CAAC,IAAIA,KAAK,CAACC,MAAM,IAAI,CAAC,EAAE;QAC1DH,EAAE,CAACI,YAAY,CAAC,QAAQ,EAAEF,KAAK,CAACG,GAAG,CAAC,UAAUC,KAAK,EAAE;UAAE,OAAOA,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGA,KAAK,CAAC,CAAC,CAAC;QAAE,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC;MAC1G,CAAC,MACI,IAAIvB,YAAY,CAACe,IAAI,CAAC,EAAE;QACzBC,EAAE,CAACI,YAAY,CAACpB,YAAY,CAACe,IAAI,CAAC,EAAEG,KAAK,CAAC;MAC9C;IACJ,CAAC,CAAC;EACN,CAAC;EACD,OAAOhB,OAAO;AAClB,CAAC,CAACD,SAAS,CAAE;AACb,eAAeC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}