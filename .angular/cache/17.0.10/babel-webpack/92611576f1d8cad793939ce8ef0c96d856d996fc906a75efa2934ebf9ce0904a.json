{"ast":null,"code":"import { ActivatedRoute } from '@angular/router';\nimport { TableService } from '@ridy/admin-panel/src/app/@services/table-service';\nimport { environment } from '@ridy/admin-panel/src/environments/environment';\nimport { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@ridy/admin-panel/src/app/@services/table-service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"ng-zorro-antd/table\";\nimport * as i5 from \"ng-zorro-antd/button\";\nimport * as i6 from \"ng-zorro-antd/core/transition-patch\";\nimport * as i7 from \"ng-zorro-antd/core/wave\";\nimport * as i8 from \"ng-zorro-antd/icon\";\nimport * as i9 from \"ng-zorro-antd/page-header\";\nimport * as i10 from \"@ngx-translate/core\";\nfunction PayoutMethodsListComponent_nz_table_7_tr_8_img_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 11);\n  }\n  if (rf & 2) {\n    const data_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"src\", ctx_r5.serverUrl + data_r4.media.address, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction PayoutMethodsListComponent_nz_table_7_tr_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 7)(1, \"td\")(2, \"div\", 8);\n    i0.ɵɵtemplate(3, PayoutMethodsListComponent_nz_table_7_tr_8_img_3_Template, 1, 1, \"img\", 9);\n    i0.ɵɵelementStart(4, \"span\", 10);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const data_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"routerLink\", data_r4.id + \"/edit\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", data_r4.media != null);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", data_r4.name, \" (\", data_r4.type, \")\");\n  }\n}\nfunction PayoutMethodsListComponent_nz_table_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"nz-table\", 4, 5);\n    i0.ɵɵlistener(\"nzQueryParams\", function PayoutMethodsListComponent_nz_table_7_Template_nz_table_nzQueryParams_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.tableService.onTableQueryParamsChange($event));\n    });\n    i0.ɵɵelementStart(2, \"thead\")(3, \"tr\")(4, \"th\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"tbody\");\n    i0.ɵɵtemplate(8, PayoutMethodsListComponent_nz_table_7_tr_8_Template, 6, 4, \"tr\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const payoutMethods_r1 = ctx.ngIf;\n    const _r2 = i0.ɵɵreference(1);\n    i0.ɵɵproperty(\"nzFrontPagination\", false)(\"nzData\", payoutMethods_r1)(\"nzTotal\", payoutMethods_r1.length);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(6, 5, \"profile.title\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", _r2.data);\n  }\n}\nexport class PayoutMethodsListComponent {\n  constructor(route, tableService) {\n    this.route = route;\n    this.tableService = tableService;\n    this.serverUrl = environment.root;\n  }\n  ngOnInit() {\n    this.query = this.route.data.pipe(map(data => data.payoutMethods));\n  }\n  static {\n    this.ɵfac = function PayoutMethodsListComponent_Factory(t) {\n      return new (t || PayoutMethodsListComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.TableService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PayoutMethodsListComponent,\n      selectors: [[\"app-payout-methods-list\"]],\n      decls: 9,\n      vars: 7,\n      consts: [[\"nzBackIcon\", \"\", \"nzTitle\", \"Payout Methods\", \"nzSubtitle\", \"Payout options available to service providers.\", 3, \"nzGhost\"], [\"nz-button\", \"\", \"nzType\", \"primary\", \"routerLink\", \"new\"], [\"nz-icon\", \"\", \"nzType\", \"plus\"], [\"nzShowSizeChanger\", \"\", \"nzBordered\", \"\", 3, \"nzFrontPagination\", \"nzData\", \"nzTotal\", \"nzQueryParams\", 4, \"ngIf\"], [\"nzShowSizeChanger\", \"\", \"nzBordered\", \"\", 3, \"nzFrontPagination\", \"nzData\", \"nzTotal\", \"nzQueryParams\"], [\"table\", \"\"], [\"class\", \"group cursor-pointer\", 3, \"routerLink\", 4, \"ngFor\", \"ngForOf\"], [1, \"group\", \"cursor-pointer\", 3, \"routerLink\"], [1, \"flex\", \"flex-row\", \"items-center\"], [\"width\", \"32\", \"height\", \"32\", 3, \"src\", 4, \"ngIf\"], [1, \"ml-2\"], [\"width\", \"32\", \"height\", \"32\", 3, \"src\"]],\n      template: function PayoutMethodsListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"nz-page-header\", 0)(1, \"nz-page-header-extra\")(2, \"button\", 1);\n          i0.ɵɵelement(3, \"i\", 2);\n          i0.ɵɵtext(4);\n          i0.ɵɵpipe(5, \"translate\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"nz-page-header-content\");\n          i0.ɵɵtemplate(7, PayoutMethodsListComponent_nz_table_7_Template, 9, 7, \"nz-table\", 3);\n          i0.ɵɵpipe(8, \"async\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          let tmp_2_0;\n          i0.ɵɵproperty(\"nzGhost\", false);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 3, \"profile.add\"));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = i0.ɵɵpipeBind1(8, 5, ctx.query)) == null ? null : tmp_2_0.data == null ? null : tmp_2_0.data.payoutMethods);\n        }\n      },\n      dependencies: [i3.NgForOf, i3.NgIf, i4.NzTableComponent, i4.NzTableCellDirective, i4.NzThMeasureDirective, i4.NzTheadComponent, i4.NzTbodyComponent, i4.NzTrDirective, i5.NzButtonComponent, i6.ɵNzTransitionPatchDirective, i7.NzWaveDirective, i8.NzIconDirective, i9.NzPageHeaderComponent, i9.NzPageHeaderContentDirective, i9.NzPageHeaderExtraDirective, i1.RouterLink, i3.AsyncPipe, i10.TranslatePipe],\n      styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwYXlvdXQtbWV0aG9kcy1saXN0LmNvbXBvbmVudC5jc3MifQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL2FwcHMvYWRtaW4tcGFuZWwvc3JjL2FwcC9jbXMvcGF5b3V0cy9wYXlvdXQtbWV0aG9kcy9wYXlvdXQtbWV0aG9kcy1saXN0L3BheW91dC1tZXRob2RzLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUVBLG9MQUFvTCIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["ActivatedRoute","TableService","environment","map","i0","ɵɵelement","ɵɵproperty","ctx_r5","serverUrl","data_r4","media","address","ɵɵsanitizeUrl","ɵɵelementStart","ɵɵtemplate","PayoutMethodsListComponent_nz_table_7_tr_8_img_3_Template","ɵɵtext","ɵɵelementEnd","id","ɵɵadvance","ɵɵtextInterpolate2","name","type","ɵɵlistener","PayoutMethodsListComponent_nz_table_7_Template_nz_table_nzQueryParams_0_listener","$event","ɵɵrestoreView","_r8","ctx_r7","ɵɵnextContext","ɵɵresetView","tableService","onTableQueryParamsChange","PayoutMethodsListComponent_nz_table_7_tr_8_Template","payoutMethods_r1","length","ɵɵtextInterpolate1","ɵɵpipeBind1","_r2","data","PayoutMethodsListComponent","constructor","route","root","ngOnInit","query","pipe","payoutMethods","ɵɵdirectiveInject","i1","i2","selectors","decls","vars","consts","template","PayoutMethodsListComponent_Template","rf","ctx","PayoutMethodsListComponent_nz_table_7_Template","ɵɵtextInterpolate","tmp_2_0"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/apps/admin-panel/src/app/cms/payouts/payout-methods/payout-methods-list/payout-methods-list.component.ts","/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/apps/admin-panel/src/app/cms/payouts/payout-methods/payout-methods-list/payout-methods-list.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ApolloQueryResult } from '@apollo/client/core';\nimport { PayoutMethodsQuery } from '@ridy/admin-panel/generated/graphql';\nimport { TableService } from '@ridy/admin-panel/src/app/@services/table-service';\nimport { environment } from '@ridy/admin-panel/src/environments/environment';\nimport { Observable, map } from 'rxjs';\n\n@Component({\n  selector: 'app-payout-methods-list',\n  templateUrl: './payout-methods-list.component.html',\n  styleUrls: ['./payout-methods-list.component.css'],\n})\nexport class PayoutMethodsListComponent {\n  query?: Observable<ApolloQueryResult<PayoutMethodsQuery>>;\n  serverUrl = environment.root;\n\n  constructor(\n    private route: ActivatedRoute,\n    public tableService: TableService,\n  ) {}\n\n  ngOnInit(): void {\n    this.query = this.route.data.pipe(map((data) => data.payoutMethods));\n  }\n}\n","<nz-page-header [nzGhost]=\"false\" nzBackIcon nzTitle=\"Payout Methods\"\n    nzSubtitle=\"Payout options available to service providers.\">\n    <nz-page-header-extra>\n        <button nz-button nzType=\"primary\" routerLink=\"new\"><i nz-icon nzType=\"plus\"></i>{{ 'profile.add' | translate\n            }}</button>\n    </nz-page-header-extra>\n    <nz-page-header-content>\n        <nz-table #table nzShowSizeChanger [nzFrontPagination]=\"false\"\n            *ngIf=\"(query | async)?.data?.payoutMethods as payoutMethods\" [nzData]=\"payoutMethods\"\n            [nzTotal]=\"payoutMethods.length\" (nzQueryParams)=\"tableService.onTableQueryParamsChange($event)\" nzBordered>\n            <thead>\n                <tr>\n                    <th>\n                        {{ 'profile.title' | translate }}\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let data of table.data\" class=\"group cursor-pointer\" [routerLink]=\"data.id + '/edit'\">\n                    <td>\n                        <div class=\"flex flex-row items-center\">\n                            <img *ngIf=\"data.media != null\" [src]=\"serverUrl + data.media.address\" width=\"32\"\n                                height=\"32\">\n                            <span class=\"ml-2\">{{ data.name }} ({{ data.type }})</span>\n                        </div>\n                    </td>\n                </tr>\n            </tbody>\n        </nz-table>\n    </nz-page-header-content>\n</nz-page-header>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}