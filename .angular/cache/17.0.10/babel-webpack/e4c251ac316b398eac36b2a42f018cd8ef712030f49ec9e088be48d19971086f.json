{"ast":null,"code":"import { __assign, __extends, __read, __spreadArray } from \"tslib\";\nimport { deepMix } from '@antv/util';\nimport Action from '../../base';\n/**\n * @ignore\n * 辅助框 Action 的基类\n */\nvar MultipleMaskBase = /** @class */function (_super) {\n  __extends(MultipleMaskBase, _super);\n  function MultipleMaskBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    // mask 图形\n    _this.maskShapes = [];\n    // 开始 mask 的标记\n    _this.starting = false;\n    // 开始移动的标记\n    _this.moving = false;\n    // 记录 mask 节点\n    _this.recordPoints = null;\n    _this.preMovePoint = null;\n    _this.shapeType = 'path';\n    _this.maskType = 'multi-mask';\n    return _this;\n  }\n  /**\n   * 获取当前的位置\n   */\n  MultipleMaskBase.prototype.getCurrentPoint = function () {\n    var event = this.context.event;\n    return {\n      x: event.x,\n      y: event.y\n    };\n  };\n  /**\n   * 触发 mask 的事件\n   * @param type\n   */\n  MultipleMaskBase.prototype.emitEvent = function (type) {\n    var eventName = \"\".concat(this.maskType, \":\").concat(type);\n    var view = this.context.view;\n    var event = this.context.event;\n    var target = {\n      type: this.shapeType,\n      name: this.maskType,\n      get: function (key) {\n        return target.hasOwnProperty(key) ? target[key] : undefined;\n      }\n    };\n    view.emit(eventName, {\n      target: target,\n      maskShapes: this.maskShapes,\n      multiPoints: this.recordPoints,\n      x: event.x,\n      y: event.y\n    });\n  };\n  /**\n   * 创建 mask\n   * @param index\n   */\n  MultipleMaskBase.prototype.createMask = function (index) {\n    var view = this.context.view;\n    var points = this.recordPoints[index];\n    var maskAttrs = this.getMaskAttrs(points);\n    var maskShape = view.foregroundGroup.addShape({\n      type: this.shapeType,\n      name: 'mask',\n      draggable: true,\n      attrs: __assign({\n        fill: '#C5D4EB',\n        opacity: 0.3\n      }, maskAttrs)\n    });\n    this.maskShapes.push(maskShape);\n  };\n  /**\n   * 生成 mask 的路径\n   */\n  MultipleMaskBase.prototype.getMaskPath = function (points) {\n    return [];\n  };\n  /**\n   * 显示\n   */\n  MultipleMaskBase.prototype.show = function () {\n    if (this.maskShapes.length > 0) {\n      this.maskShapes.forEach(function (maskShape) {\n        return maskShape.show();\n      });\n      this.emitEvent('show');\n    }\n  };\n  /**\n   * 开始\n   */\n  MultipleMaskBase.prototype.start = function (arg) {\n    this.recordPointStart();\n    this.starting = true;\n    // 开始时，保证移动结束\n    this.moving = false;\n    // 开始第 index 个 mask\n    var index = this.recordPoints.length - 1;\n    this.createMask(index);\n    // 开始时设置 capture: false，可以避免创建、resize 时触发事件\n    this.updateShapesCapture(false);\n    this.updateMask(arg === null || arg === void 0 ? void 0 : arg.maskStyle);\n    this.emitEvent('start');\n  };\n  /**\n   * 开始移动\n   */\n  MultipleMaskBase.prototype.moveStart = function () {\n    this.moving = true;\n    this.preMovePoint = this.getCurrentPoint();\n    this.updateShapesCapture(false);\n  };\n  /**\n   * 移动 mask\n   */\n  MultipleMaskBase.prototype.move = function () {\n    if (!this.moving || this.maskShapes.length === 0) {\n      return;\n    }\n    var currentPoint = this.getCurrentPoint();\n    var preMovePoint = this.preMovePoint;\n    var dx = currentPoint.x - preMovePoint.x;\n    var dy = currentPoint.y - preMovePoint.y;\n    // 只移动当前 event (x, y) 所在的某个 mask\n    var index = this.getCurMaskShapeIndex();\n    if (index > -1) {\n      this.recordPoints[index].forEach(function (point) {\n        point.x += dx;\n        point.y += dy;\n      });\n      this.updateMask();\n      this.emitEvent('change');\n      this.preMovePoint = currentPoint;\n    }\n  };\n  /**\n   * 更新\n   * @param maskStyle\n   */\n  MultipleMaskBase.prototype.updateMask = function (maskStyle) {\n    var _this = this;\n    this.recordPoints.forEach(function (points, index) {\n      var attrs = deepMix({}, _this.getMaskAttrs(points), maskStyle);\n      _this.maskShapes[index].attr(attrs);\n    });\n  };\n  /**\n   * 大小变化\n   */\n  MultipleMaskBase.prototype.resize = function () {\n    if (this.starting && this.maskShapes.length > 0) {\n      this.recordPointContinue();\n      this.updateMask();\n      this.emitEvent('change');\n    }\n  };\n  /**\n   * 结束移动\n   */\n  MultipleMaskBase.prototype.moveEnd = function () {\n    this.moving = false;\n    this.preMovePoint = null;\n    this.updateShapesCapture(true);\n  };\n  /**\n   * 结束\n   */\n  MultipleMaskBase.prototype.end = function () {\n    this.starting = false;\n    this.emitEvent('end');\n    this.updateShapesCapture(true);\n  };\n  /**\n   * 隐藏\n   */\n  MultipleMaskBase.prototype.hide = function () {\n    if (this.maskShapes.length > 0) {\n      this.maskShapes.forEach(function (maskShape) {\n        return maskShape.hide();\n      });\n      this.emitEvent('hide');\n    }\n  };\n  /**\n   * 清除某个 mask\n   */\n  MultipleMaskBase.prototype.remove = function () {\n    var index = this.getCurMaskShapeIndex();\n    if (index > -1) {\n      // event (x, y) 在的某个 mask 区域内时，清除该 mask\n      this.recordPoints.splice(index, 1);\n      this.maskShapes[index].remove();\n      this.maskShapes.splice(index, 1);\n      this.preMovePoint = null;\n      this.updateShapesCapture(true);\n      this.emitEvent('change');\n    }\n  };\n  /**\n   * 清除全部 mask\n   */\n  MultipleMaskBase.prototype.clearAll = function () {\n    this.recordPointClear();\n    this.maskShapes.forEach(function (maskShape) {\n      return maskShape.remove();\n    });\n    this.maskShapes = [];\n    this.preMovePoint = null;\n  };\n  /**\n   * 清除\n   */\n  MultipleMaskBase.prototype.clear = function () {\n    var index = this.getCurMaskShapeIndex();\n    if (index === -1) {\n      this.recordPointClear();\n      this.maskShapes.forEach(function (maskShape) {\n        return maskShape.remove();\n      });\n      this.maskShapes = [];\n      this.emitEvent('clearAll');\n    } else {\n      this.recordPoints.splice(index, 1);\n      this.maskShapes[index].remove();\n      this.maskShapes.splice(index, 1);\n      this.preMovePoint = null;\n      this.emitEvent('clearSingle');\n    }\n    this.preMovePoint = null;\n  };\n  /**\n   * 销毁\n   */\n  MultipleMaskBase.prototype.destroy = function () {\n    this.clear();\n    _super.prototype.destroy.call(this);\n  };\n  /**\n   * 获取 mask 节点记录\n   */\n  MultipleMaskBase.prototype.getRecordPoints = function () {\n    var _a;\n    return __spreadArray([], __read((_a = this.recordPoints) !== null && _a !== void 0 ? _a : []), false);\n  };\n  /**\n   * 创建 mask 节点记录\n   */\n  MultipleMaskBase.prototype.recordPointStart = function () {\n    var recordPoints = this.getRecordPoints();\n    var currentPoint = this.getCurrentPoint();\n    this.recordPoints = __spreadArray(__spreadArray([], __read(recordPoints), false), [[currentPoint]], false);\n  };\n  /**\n   * 持续记录 mask 节点\n   */\n  MultipleMaskBase.prototype.recordPointContinue = function () {\n    var recordPoints = this.getRecordPoints();\n    var currentPoint = this.getCurrentPoint();\n    var lastPoints = recordPoints.splice(-1, 1)[0] || [];\n    lastPoints.push(currentPoint);\n    this.recordPoints = __spreadArray(__spreadArray([], __read(recordPoints), false), [lastPoints], false);\n  };\n  /**\n   * 清除 mask 节点 记录\n   */\n  MultipleMaskBase.prototype.recordPointClear = function () {\n    this.recordPoints = [];\n  };\n  /**\n   * 设置 capture\n   * false: 避免创建、resize 时触发事件\n   * true: 正常触发其它事件\n   * @param isCapture\n   */\n  MultipleMaskBase.prototype.updateShapesCapture = function (isCapture) {\n    this.maskShapes.forEach(function (maskShape) {\n      return maskShape.set('capture', isCapture);\n    });\n  };\n  /**\n   *\n   * @returns 获取当前 event (x, y) 所在 maskShape 的 index\n   */\n  MultipleMaskBase.prototype.getCurMaskShapeIndex = function () {\n    var currentPoint = this.getCurrentPoint();\n    return this.maskShapes.findIndex(function (maskShape) {\n      var _a = maskShape.attrs,\n        width = _a.width,\n        height = _a.height,\n        r = _a.r;\n      var isEmpty = width === 0 || height === 0 || r === 0;\n      return !isEmpty && maskShape.isHit(currentPoint.x, currentPoint.y);\n    });\n  };\n  return MultipleMaskBase;\n}(Action);\nexport default MultipleMaskBase;","map":{"version":3,"names":["__assign","__extends","__read","__spreadArray","deepMix","Action","MultipleMaskBase","_super","_this","apply","arguments","maskShapes","starting","moving","recordPoints","preMovePoint","shapeType","maskType","prototype","getCurrentPoint","event","context","x","y","emitEvent","type","eventName","concat","view","target","name","get","key","hasOwnProperty","undefined","emit","multiPoints","createMask","index","points","maskAttrs","getMaskAttrs","maskShape","foregroundGroup","addShape","draggable","attrs","fill","opacity","push","getMaskPath","show","length","forEach","start","arg","recordPointStart","updateShapesCapture","updateMask","maskStyle","moveStart","move","currentPoint","dx","dy","getCurMaskShapeIndex","point","attr","resize","recordPointContinue","moveEnd","end","hide","remove","splice","clearAll","recordPointClear","clear","destroy","call","getRecordPoints","_a","lastPoints","isCapture","set","findIndex","width","height","r","isEmpty","isHit"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g2/esm/interaction/action/mask/multiple/base.js"],"sourcesContent":["import { __assign, __extends, __read, __spreadArray } from \"tslib\";\nimport { deepMix } from '@antv/util';\nimport Action from '../../base';\n/**\n * @ignore\n * 辅助框 Action 的基类\n */\nvar MultipleMaskBase = /** @class */ (function (_super) {\n    __extends(MultipleMaskBase, _super);\n    function MultipleMaskBase() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        // mask 图形\n        _this.maskShapes = [];\n        // 开始 mask 的标记\n        _this.starting = false;\n        // 开始移动的标记\n        _this.moving = false;\n        // 记录 mask 节点\n        _this.recordPoints = null;\n        _this.preMovePoint = null;\n        _this.shapeType = 'path';\n        _this.maskType = 'multi-mask';\n        return _this;\n    }\n    /**\n     * 获取当前的位置\n     */\n    MultipleMaskBase.prototype.getCurrentPoint = function () {\n        var event = this.context.event;\n        return {\n            x: event.x,\n            y: event.y,\n        };\n    };\n    /**\n     * 触发 mask 的事件\n     * @param type\n     */\n    MultipleMaskBase.prototype.emitEvent = function (type) {\n        var eventName = \"\".concat(this.maskType, \":\").concat(type);\n        var view = this.context.view;\n        var event = this.context.event;\n        var target = {\n            type: this.shapeType,\n            name: this.maskType,\n            get: function (key) { return (target.hasOwnProperty(key) ? target[key] : undefined); },\n        };\n        view.emit(eventName, {\n            target: target,\n            maskShapes: this.maskShapes,\n            multiPoints: this.recordPoints,\n            x: event.x,\n            y: event.y,\n        });\n    };\n    /**\n     * 创建 mask\n     * @param index\n     */\n    MultipleMaskBase.prototype.createMask = function (index) {\n        var view = this.context.view;\n        var points = this.recordPoints[index];\n        var maskAttrs = this.getMaskAttrs(points);\n        var maskShape = view.foregroundGroup.addShape({\n            type: this.shapeType,\n            name: 'mask',\n            draggable: true,\n            attrs: __assign({ fill: '#C5D4EB', opacity: 0.3 }, maskAttrs),\n        });\n        this.maskShapes.push(maskShape);\n    };\n    /**\n     * 生成 mask 的路径\n     */\n    MultipleMaskBase.prototype.getMaskPath = function (points) {\n        return [];\n    };\n    /**\n     * 显示\n     */\n    MultipleMaskBase.prototype.show = function () {\n        if (this.maskShapes.length > 0) {\n            this.maskShapes.forEach(function (maskShape) { return maskShape.show(); });\n            this.emitEvent('show');\n        }\n    };\n    /**\n     * 开始\n     */\n    MultipleMaskBase.prototype.start = function (arg) {\n        this.recordPointStart();\n        this.starting = true;\n        // 开始时，保证移动结束\n        this.moving = false;\n        // 开始第 index 个 mask\n        var index = this.recordPoints.length - 1;\n        this.createMask(index);\n        // 开始时设置 capture: false，可以避免创建、resize 时触发事件\n        this.updateShapesCapture(false);\n        this.updateMask(arg === null || arg === void 0 ? void 0 : arg.maskStyle);\n        this.emitEvent('start');\n    };\n    /**\n     * 开始移动\n     */\n    MultipleMaskBase.prototype.moveStart = function () {\n        this.moving = true;\n        this.preMovePoint = this.getCurrentPoint();\n        this.updateShapesCapture(false);\n    };\n    /**\n     * 移动 mask\n     */\n    MultipleMaskBase.prototype.move = function () {\n        if (!this.moving || this.maskShapes.length === 0) {\n            return;\n        }\n        var currentPoint = this.getCurrentPoint();\n        var preMovePoint = this.preMovePoint;\n        var dx = currentPoint.x - preMovePoint.x;\n        var dy = currentPoint.y - preMovePoint.y;\n        // 只移动当前 event (x, y) 所在的某个 mask\n        var index = this.getCurMaskShapeIndex();\n        if (index > -1) {\n            this.recordPoints[index].forEach(function (point) {\n                point.x += dx;\n                point.y += dy;\n            });\n            this.updateMask();\n            this.emitEvent('change');\n            this.preMovePoint = currentPoint;\n        }\n    };\n    /**\n     * 更新\n     * @param maskStyle\n     */\n    MultipleMaskBase.prototype.updateMask = function (maskStyle) {\n        var _this = this;\n        this.recordPoints.forEach(function (points, index) {\n            var attrs = deepMix({}, _this.getMaskAttrs(points), maskStyle);\n            _this.maskShapes[index].attr(attrs);\n        });\n    };\n    /**\n     * 大小变化\n     */\n    MultipleMaskBase.prototype.resize = function () {\n        if (this.starting && this.maskShapes.length > 0) {\n            this.recordPointContinue();\n            this.updateMask();\n            this.emitEvent('change');\n        }\n    };\n    /**\n     * 结束移动\n     */\n    MultipleMaskBase.prototype.moveEnd = function () {\n        this.moving = false;\n        this.preMovePoint = null;\n        this.updateShapesCapture(true);\n    };\n    /**\n     * 结束\n     */\n    MultipleMaskBase.prototype.end = function () {\n        this.starting = false;\n        this.emitEvent('end');\n        this.updateShapesCapture(true);\n    };\n    /**\n     * 隐藏\n     */\n    MultipleMaskBase.prototype.hide = function () {\n        if (this.maskShapes.length > 0) {\n            this.maskShapes.forEach(function (maskShape) { return maskShape.hide(); });\n            this.emitEvent('hide');\n        }\n    };\n    /**\n     * 清除某个 mask\n     */\n    MultipleMaskBase.prototype.remove = function () {\n        var index = this.getCurMaskShapeIndex();\n        if (index > -1) {\n            // event (x, y) 在的某个 mask 区域内时，清除该 mask\n            this.recordPoints.splice(index, 1);\n            this.maskShapes[index].remove();\n            this.maskShapes.splice(index, 1);\n            this.preMovePoint = null;\n            this.updateShapesCapture(true);\n            this.emitEvent('change');\n        }\n    };\n    /**\n     * 清除全部 mask\n     */\n    MultipleMaskBase.prototype.clearAll = function () {\n        this.recordPointClear();\n        this.maskShapes.forEach(function (maskShape) { return maskShape.remove(); });\n        this.maskShapes = [];\n        this.preMovePoint = null;\n    };\n    /**\n     * 清除\n     */\n    MultipleMaskBase.prototype.clear = function () {\n        var index = this.getCurMaskShapeIndex();\n        if (index === -1) {\n            this.recordPointClear();\n            this.maskShapes.forEach(function (maskShape) { return maskShape.remove(); });\n            this.maskShapes = [];\n            this.emitEvent('clearAll');\n        }\n        else {\n            this.recordPoints.splice(index, 1);\n            this.maskShapes[index].remove();\n            this.maskShapes.splice(index, 1);\n            this.preMovePoint = null;\n            this.emitEvent('clearSingle');\n        }\n        this.preMovePoint = null;\n    };\n    /**\n     * 销毁\n     */\n    MultipleMaskBase.prototype.destroy = function () {\n        this.clear();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * 获取 mask 节点记录\n     */\n    MultipleMaskBase.prototype.getRecordPoints = function () {\n        var _a;\n        return __spreadArray([], __read(((_a = this.recordPoints) !== null && _a !== void 0 ? _a : [])), false);\n    };\n    /**\n     * 创建 mask 节点记录\n     */\n    MultipleMaskBase.prototype.recordPointStart = function () {\n        var recordPoints = this.getRecordPoints();\n        var currentPoint = this.getCurrentPoint();\n        this.recordPoints = __spreadArray(__spreadArray([], __read(recordPoints), false), [[currentPoint]], false);\n    };\n    /**\n     * 持续记录 mask 节点\n     */\n    MultipleMaskBase.prototype.recordPointContinue = function () {\n        var recordPoints = this.getRecordPoints();\n        var currentPoint = this.getCurrentPoint();\n        var lastPoints = recordPoints.splice(-1, 1)[0] || [];\n        lastPoints.push(currentPoint);\n        this.recordPoints = __spreadArray(__spreadArray([], __read(recordPoints), false), [lastPoints], false);\n    };\n    /**\n     * 清除 mask 节点 记录\n     */\n    MultipleMaskBase.prototype.recordPointClear = function () {\n        this.recordPoints = [];\n    };\n    /**\n     * 设置 capture\n     * false: 避免创建、resize 时触发事件\n     * true: 正常触发其它事件\n     * @param isCapture\n     */\n    MultipleMaskBase.prototype.updateShapesCapture = function (isCapture) {\n        this.maskShapes.forEach(function (maskShape) { return maskShape.set('capture', isCapture); });\n    };\n    /**\n     *\n     * @returns 获取当前 event (x, y) 所在 maskShape 的 index\n     */\n    MultipleMaskBase.prototype.getCurMaskShapeIndex = function () {\n        var currentPoint = this.getCurrentPoint();\n        return this.maskShapes.findIndex(function (maskShape) {\n            var _a = maskShape.attrs, width = _a.width, height = _a.height, r = _a.r;\n            var isEmpty = width === 0 || height === 0 || r === 0;\n            return !isEmpty && maskShape.isHit(currentPoint.x, currentPoint.y);\n        });\n    };\n    return MultipleMaskBase;\n}(Action));\nexport default MultipleMaskBase;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}