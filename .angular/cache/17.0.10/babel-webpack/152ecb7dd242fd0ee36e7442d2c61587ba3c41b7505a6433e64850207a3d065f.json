{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport * as i1 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nfunction NzDividerComponent_Conditional_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.nzText);\n  }\n}\nfunction NzDividerComponent_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 1);\n    i0.ɵɵtemplate(1, NzDividerComponent_Conditional_0_ng_container_1_Template, 2, 1, \"ng-container\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r0.nzText);\n  }\n}\nclass NzDividerComponent {\n  constructor() {\n    this.nzType = 'horizontal';\n    this.nzOrientation = 'center';\n    this.nzDashed = false;\n    this.nzPlain = false;\n  }\n  static {\n    this.ɵfac = function NzDividerComponent_Factory(t) {\n      return new (t || NzDividerComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzDividerComponent,\n      selectors: [[\"nz-divider\"]],\n      hostAttrs: [1, \"ant-divider\"],\n      hostVars: 16,\n      hostBindings: function NzDividerComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ant-divider-horizontal\", ctx.nzType === \"horizontal\")(\"ant-divider-vertical\", ctx.nzType === \"vertical\")(\"ant-divider-with-text\", ctx.nzText)(\"ant-divider-plain\", ctx.nzPlain)(\"ant-divider-with-text-left\", ctx.nzText && ctx.nzOrientation === \"left\")(\"ant-divider-with-text-right\", ctx.nzText && ctx.nzOrientation === \"right\")(\"ant-divider-with-text-center\", ctx.nzText && ctx.nzOrientation === \"center\")(\"ant-divider-dashed\", ctx.nzDashed);\n        }\n      },\n      inputs: {\n        nzText: \"nzText\",\n        nzType: \"nzType\",\n        nzOrientation: \"nzOrientation\",\n        nzDashed: \"nzDashed\",\n        nzPlain: \"nzPlain\"\n      },\n      exportAs: [\"nzDivider\"],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 1,\n      vars: 1,\n      consts: [[\"class\", \"ant-divider-inner-text\"], [1, \"ant-divider-inner-text\"], [4, \"nzStringTemplateOutlet\"]],\n      template: function NzDividerComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, NzDividerComponent_Conditional_0_Template, 2, 1, \"span\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵconditional(0, ctx.nzText ? 0 : -1);\n        }\n      },\n      dependencies: [NzOutletModule, i1.NzStringTemplateOutletDirective],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n__decorate([InputBoolean()], NzDividerComponent.prototype, \"nzDashed\", void 0);\n__decorate([InputBoolean()], NzDividerComponent.prototype, \"nzPlain\", void 0);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzDividerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-divider',\n      exportAs: 'nzDivider',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: `\n    @if (nzText) {\n      <span class=\"ant-divider-inner-text\">\n        <ng-container *nzStringTemplateOutlet=\"nzText\">{{ nzText }}</ng-container>\n      </span>\n    }\n  `,\n      host: {\n        class: 'ant-divider',\n        '[class.ant-divider-horizontal]': `nzType === 'horizontal'`,\n        '[class.ant-divider-vertical]': `nzType === 'vertical'`,\n        '[class.ant-divider-with-text]': `nzText`,\n        '[class.ant-divider-plain]': `nzPlain`,\n        '[class.ant-divider-with-text-left]': `nzText && nzOrientation === 'left'`,\n        '[class.ant-divider-with-text-right]': `nzText && nzOrientation === 'right'`,\n        '[class.ant-divider-with-text-center]': `nzText && nzOrientation === 'center'`,\n        '[class.ant-divider-dashed]': `nzDashed`\n      },\n      imports: [NzOutletModule],\n      standalone: true\n    }]\n  }], () => [], {\n    nzText: [{\n      type: Input\n    }],\n    nzType: [{\n      type: Input\n    }],\n    nzOrientation: [{\n      type: Input\n    }],\n    nzDashed: [{\n      type: Input\n    }],\n    nzPlain: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzDividerModule {\n  static {\n    this.ɵfac = function NzDividerModule_Factory(t) {\n      return new (t || NzDividerModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NzDividerModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [NzDividerComponent]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzDividerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NzDividerComponent],\n      exports: [NzDividerComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzDividerComponent, NzDividerModule };","map":{"version":3,"names":["__decorate","i0","Component","ViewEncapsulation","ChangeDetectionStrategy","Input","NgModule","i1","NzOutletModule","InputBoolean","NzDividerComponent_Conditional_0_ng_container_1_Template","rf","ctx","ɵɵelementContainerStart","ɵɵtext","ɵɵelementContainerEnd","ctx_r1","ɵɵnextContext","ɵɵadvance","ɵɵtextInterpolate","nzText","NzDividerComponent_Conditional_0_Template","ɵɵelementStart","ɵɵtemplate","ɵɵelementEnd","ctx_r0","ɵɵproperty","NzDividerComponent","constructor","nzType","nzOrientation","nzDashed","nzPlain","ɵfac","NzDividerComponent_Factory","t","ɵcmp","ɵɵdefineComponent","type","selectors","hostAttrs","hostVars","hostBindings","NzDividerComponent_HostBindings","ɵɵclassProp","inputs","exportAs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","NzDividerComponent_Template","ɵɵconditional","dependencies","NzStringTemplateOutletDirective","encapsulation","changeDetection","prototype","ngDevMode","ɵsetClassMetadata","args","selector","preserveWhitespaces","None","OnPush","host","class","imports","NzDividerModule","NzDividerModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","exports"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-divider.mjs"],"sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport * as i1 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\nclass NzDividerComponent {\n    constructor() {\n        this.nzType = 'horizontal';\n        this.nzOrientation = 'center';\n        this.nzDashed = false;\n        this.nzPlain = false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzDividerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"17.3.8\", type: NzDividerComponent, isStandalone: true, selector: \"nz-divider\", inputs: { nzText: \"nzText\", nzType: \"nzType\", nzOrientation: \"nzOrientation\", nzDashed: \"nzDashed\", nzPlain: \"nzPlain\" }, host: { properties: { \"class.ant-divider-horizontal\": \"nzType === 'horizontal'\", \"class.ant-divider-vertical\": \"nzType === 'vertical'\", \"class.ant-divider-with-text\": \"nzText\", \"class.ant-divider-plain\": \"nzPlain\", \"class.ant-divider-with-text-left\": \"nzText && nzOrientation === 'left'\", \"class.ant-divider-with-text-right\": \"nzText && nzOrientation === 'right'\", \"class.ant-divider-with-text-center\": \"nzText && nzOrientation === 'center'\", \"class.ant-divider-dashed\": \"nzDashed\" }, classAttribute: \"ant-divider\" }, exportAs: [\"nzDivider\"], ngImport: i0, template: `\n    @if (nzText) {\n      <span class=\"ant-divider-inner-text\">\n        <ng-container *nzStringTemplateOutlet=\"nzText\">{{ nzText }}</ng-container>\n      </span>\n    }\n  `, isInline: true, dependencies: [{ kind: \"ngmodule\", type: NzOutletModule }, { kind: \"directive\", type: i1.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\n__decorate([\n    InputBoolean()\n], NzDividerComponent.prototype, \"nzDashed\", void 0);\n__decorate([\n    InputBoolean()\n], NzDividerComponent.prototype, \"nzPlain\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzDividerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-divider',\n                    exportAs: 'nzDivider',\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n    @if (nzText) {\n      <span class=\"ant-divider-inner-text\">\n        <ng-container *nzStringTemplateOutlet=\"nzText\">{{ nzText }}</ng-container>\n      </span>\n    }\n  `,\n                    host: {\n                        class: 'ant-divider',\n                        '[class.ant-divider-horizontal]': `nzType === 'horizontal'`,\n                        '[class.ant-divider-vertical]': `nzType === 'vertical'`,\n                        '[class.ant-divider-with-text]': `nzText`,\n                        '[class.ant-divider-plain]': `nzPlain`,\n                        '[class.ant-divider-with-text-left]': `nzText && nzOrientation === 'left'`,\n                        '[class.ant-divider-with-text-right]': `nzText && nzOrientation === 'right'`,\n                        '[class.ant-divider-with-text-center]': `nzText && nzOrientation === 'center'`,\n                        '[class.ant-divider-dashed]': `nzDashed`\n                    },\n                    imports: [NzOutletModule],\n                    standalone: true\n                }]\n        }], ctorParameters: () => [], propDecorators: { nzText: [{\n                type: Input\n            }], nzType: [{\n                type: Input\n            }], nzOrientation: [{\n                type: Input\n            }], nzDashed: [{\n                type: Input\n            }], nzPlain: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzDividerModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzDividerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.3.8\", ngImport: i0, type: NzDividerModule, imports: [NzDividerComponent], exports: [NzDividerComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzDividerModule, imports: [NzDividerComponent] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzDividerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NzDividerComponent],\n                    exports: [NzDividerComponent]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzDividerComponent, NzDividerModule };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}