{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { get } from '@antv/util';\nimport { getXDimensionLength } from '../util/coordinate';\nimport Geometry from './base';\n/** 引入对应的 ShapeFactory */\nimport './shape/interval';\nimport { getDefaultSize } from './util/shape-size';\nimport { getMaxScale } from '../util/scale';\n/**\n * Interval 几何标记。\n * 用于绘制柱状图、饼图、条形图、玫瑰图等。\n */\nvar Interval = /** @class */function (_super) {\n  __extends(Interval, _super);\n  function Interval(cfg) {\n    var _this = _super.call(this, cfg) || this;\n    _this.type = 'interval';\n    _this.shapeType = 'interval';\n    _this.generatePoints = true;\n    var background = cfg.background;\n    _this.background = background;\n    return _this;\n  }\n  /**\n   * 获取每条数据的 Shape 绘制信息\n   * @param obj 经过分组 -> 数字化 -> adjust 调整后的数据记录\n   * @returns\n   */\n  Interval.prototype.createShapePointsCfg = function (obj) {\n    var cfg = _super.prototype.createShapePointsCfg.call(this, obj);\n    // 计算每个 shape 的 size\n    var size;\n    var sizeAttr = this.getAttribute('size');\n    if (sizeAttr) {\n      size = this.getAttributeValues(sizeAttr, obj)[0];\n      // 归一化\n      var coordinate = this.coordinate;\n      var coordinateWidth = getXDimensionLength(coordinate);\n      size = size / coordinateWidth;\n    } else {\n      if (!this.defaultSize) {\n        this.defaultSize = getDefaultSize(this);\n      }\n      size = this.defaultSize;\n    }\n    cfg.size = size;\n    return cfg;\n  };\n  /**\n   * 调整 y 轴的 scale 范围。\n   * 对于 Y 轴为数值轴柱状图，默认从 0 开始 生长。\n   */\n  Interval.prototype.adjustScale = function () {\n    _super.prototype.adjustScale.call(this);\n    var yScale = this.getYScale();\n    // 特殊逻辑：饼图需要填充满整个空间\n    if (this.coordinate.type === 'theta') {\n      yScale.change({\n        nice: false,\n        min: 0,\n        // 发生过 stack 调整，yScale 的 max 被调整过，this.updateStackRange()\n        max: getMaxScale(yScale)\n      });\n    } else {\n      // 柱状图数值轴默认从 0 开始\n      var scaleDefs = this.scaleDefs;\n      var field = yScale.field,\n        min = yScale.min,\n        max = yScale.max,\n        type = yScale.type;\n      if (type !== 'time') {\n        // time 类型不做调整\n        // 柱状图的 Y 轴要从 0 开始生长，但是如果用户设置了则以用户的为准\n        if (min > 0 && !get(scaleDefs, [field, 'min'])) {\n          yScale.change({\n            min: 0\n          });\n        }\n        // 柱当柱状图全为负值时也需要从 0 开始生长，但是如果用户设置了则以用户的为准\n        if (max <= 0 && !get(scaleDefs, [field, 'max'])) {\n          yScale.change({\n            max: 0\n          });\n        }\n      }\n    }\n  };\n  /**\n   * @override\n   */\n  Interval.prototype.getDrawCfg = function (mappingData) {\n    var shapeCfg = _super.prototype.getDrawCfg.call(this, mappingData);\n    shapeCfg.background = this.background;\n    return shapeCfg;\n  };\n  return Interval;\n}(Geometry);\nexport default Interval;","map":{"version":3,"names":["__extends","get","getXDimensionLength","Geometry","getDefaultSize","getMaxScale","Interval","_super","cfg","_this","call","type","shapeType","generatePoints","background","prototype","createShapePointsCfg","obj","size","sizeAttr","getAttribute","getAttributeValues","coordinate","coordinateWidth","defaultSize","adjustScale","yScale","getYScale","change","nice","min","max","scaleDefs","field","getDrawCfg","mappingData","shapeCfg"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g2/esm/geometry/interval.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { get } from '@antv/util';\nimport { getXDimensionLength } from '../util/coordinate';\nimport Geometry from './base';\n/** 引入对应的 ShapeFactory */\nimport './shape/interval';\nimport { getDefaultSize } from './util/shape-size';\nimport { getMaxScale } from '../util/scale';\n/**\n * Interval 几何标记。\n * 用于绘制柱状图、饼图、条形图、玫瑰图等。\n */\nvar Interval = /** @class */ (function (_super) {\n    __extends(Interval, _super);\n    function Interval(cfg) {\n        var _this = _super.call(this, cfg) || this;\n        _this.type = 'interval';\n        _this.shapeType = 'interval';\n        _this.generatePoints = true;\n        var background = cfg.background;\n        _this.background = background;\n        return _this;\n    }\n    /**\n     * 获取每条数据的 Shape 绘制信息\n     * @param obj 经过分组 -> 数字化 -> adjust 调整后的数据记录\n     * @returns\n     */\n    Interval.prototype.createShapePointsCfg = function (obj) {\n        var cfg = _super.prototype.createShapePointsCfg.call(this, obj);\n        // 计算每个 shape 的 size\n        var size;\n        var sizeAttr = this.getAttribute('size');\n        if (sizeAttr) {\n            size = this.getAttributeValues(sizeAttr, obj)[0];\n            // 归一化\n            var coordinate = this.coordinate;\n            var coordinateWidth = getXDimensionLength(coordinate);\n            size = size / coordinateWidth;\n        }\n        else {\n            if (!this.defaultSize) {\n                this.defaultSize = getDefaultSize(this);\n            }\n            size = this.defaultSize;\n        }\n        cfg.size = size;\n        return cfg;\n    };\n    /**\n     * 调整 y 轴的 scale 范围。\n     * 对于 Y 轴为数值轴柱状图，默认从 0 开始 生长。\n     */\n    Interval.prototype.adjustScale = function () {\n        _super.prototype.adjustScale.call(this);\n        var yScale = this.getYScale();\n        // 特殊逻辑：饼图需要填充满整个空间\n        if (this.coordinate.type === 'theta') {\n            yScale.change({\n                nice: false,\n                min: 0,\n                // 发生过 stack 调整，yScale 的 max 被调整过，this.updateStackRange()\n                max: getMaxScale(yScale),\n            });\n        }\n        else {\n            // 柱状图数值轴默认从 0 开始\n            var scaleDefs = this.scaleDefs;\n            var field = yScale.field, min = yScale.min, max = yScale.max, type = yScale.type;\n            if (type !== 'time') {\n                // time 类型不做调整\n                // 柱状图的 Y 轴要从 0 开始生长，但是如果用户设置了则以用户的为准\n                if (min > 0 && !get(scaleDefs, [field, 'min'])) {\n                    yScale.change({\n                        min: 0,\n                    });\n                }\n                // 柱当柱状图全为负值时也需要从 0 开始生长，但是如果用户设置了则以用户的为准\n                if (max <= 0 && !get(scaleDefs, [field, 'max'])) {\n                    yScale.change({\n                        max: 0,\n                    });\n                }\n            }\n        }\n    };\n    /**\n     * @override\n     */\n    Interval.prototype.getDrawCfg = function (mappingData) {\n        var shapeCfg = _super.prototype.getDrawCfg.call(this, mappingData);\n        shapeCfg.background = this.background;\n        return shapeCfg;\n    };\n    return Interval;\n}(Geometry));\nexport default Interval;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}