{"ast":null,"code":"import { RidersListGQL } from '@ridy/admin-panel/generated/graphql';\nimport { TableService } from '@ridy/admin-panel/src/app/@services/table-service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ridy/admin-panel/src/app/@services/table-service\";\nimport * as i2 from \"@ridy/admin-panel/generated/graphql\";\nexport class RidersListResolver {\n  constructor(paging, gql) {\n    this.paging = paging;\n    this.gql = gql;\n  }\n  resolve(route, state) {\n    const params = this.paging.deserializeQueryParams(route.queryParams);\n    return this.gql.fetch(params);\n  }\n  static {\n    this.ɵfac = function RidersListResolver_Factory(t) {\n      return new (t || RidersListResolver)(i0.ɵɵinject(i1.TableService), i0.ɵɵinject(i2.RidersListGQL));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: RidersListResolver,\n      factory: RidersListResolver.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["RidersListGQL","TableService","RidersListResolver","constructor","paging","gql","resolve","route","state","params","deserializeQueryParams","queryParams","fetch","i0","ɵɵinject","i1","i2","factory","ɵfac"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/apps/admin-panel/src/app/cms/riders/riders-list/riders-list.resolver.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { ApolloQueryResult } from '@apollo/client/core';\nimport { RiderFilter, RidersListGQL, RidersListQuery, RiderSortFields } from '@ridy/admin-panel/generated/graphql';\nimport { TableService } from '@ridy/admin-panel/src/app/@services/table-service';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class RidersListResolver  {\n  constructor(\n    private paging: TableService,\n    private gql: RidersListGQL\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ApolloQueryResult<RidersListQuery>> {\n    const params = this.paging.deserializeQueryParams<RiderSortFields, RiderFilter>(route.queryParams);\n    return this.gql.fetch(params);\n  }\n}\n"],"mappings":"AAGA,SAAsBA,aAAa,QAA0C,qCAAqC;AAClH,SAASC,YAAY,QAAQ,mDAAmD;;;;AAIhF,OAAM,MAAOC,kBAAkB;EAC7BC,YACUC,MAAoB,EACpBC,GAAkB;IADlB,KAAAD,MAAM,GAANA,MAAM;IACN,KAAAC,GAAG,GAAHA,GAAG;EACV;EAEHC,OAAOA,CAACC,KAA6B,EAAEC,KAA0B;IAC/D,MAAMC,MAAM,GAAG,IAAI,CAACL,MAAM,CAACM,sBAAsB,CAA+BH,KAAK,CAACI,WAAW,CAAC;IAClG,OAAO,IAAI,CAACN,GAAG,CAACO,KAAK,CAACH,MAAM,CAAC;EAC/B;;;uBATWP,kBAAkB,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAd,YAAA,GAAAY,EAAA,CAAAC,QAAA,CAAAE,EAAA,CAAAhB,aAAA;IAAA;EAAA;;;aAAlBE,kBAAkB;MAAAe,OAAA,EAAlBf,kBAAkB,CAAAgB;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}