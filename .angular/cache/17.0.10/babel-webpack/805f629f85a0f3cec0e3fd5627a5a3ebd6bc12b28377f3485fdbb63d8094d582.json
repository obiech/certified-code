{"ast":null,"code":"import { GiftBatchListGQL } from '@ridy/admin-panel/generated/graphql';\nimport { TableService } from '@ridy/admin-panel/src/app/@services/table-service';\nimport { NzMessageService } from 'ng-zorro-antd/message';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ridy/admin-panel/src/app/@services/table-service\";\nimport * as i2 from \"@ridy/admin-panel/generated/graphql\";\nimport * as i3 from \"ng-zorro-antd/message\";\nexport class GiftBatchListResolver {\n  constructor(paging, gql, message) {\n    this.paging = paging;\n    this.gql = gql;\n    this.message = message;\n  }\n  resolve(route, state) {\n    const params = this.paging.deserializeQueryParams(route.queryParams);\n    const result = this.gql.fetch(params);\n    this.subscription = result.subscribe({\n      error: error => {\n        this.message.error('This role does not have sufficient permission to access this menu.');\n      }\n    });\n    return result;\n  }\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n  static {\n    this.ɵfac = function GiftBatchListResolver_Factory(t) {\n      return new (t || GiftBatchListResolver)(i0.ɵɵinject(i1.TableService), i0.ɵɵinject(i2.GiftBatchListGQL), i0.ɵɵinject(i3.NzMessageService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: GiftBatchListResolver,\n      factory: GiftBatchListResolver.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["GiftBatchListGQL","TableService","NzMessageService","GiftBatchListResolver","constructor","paging","gql","message","resolve","route","state","params","deserializeQueryParams","queryParams","result","fetch","subscription","subscribe","error","ngOnDestroy","unsubscribe","i0","ɵɵinject","i1","i2","i3","factory","ɵfac"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/apps/admin-panel/src/app/cms/marketing/gift/gift-batch-list/gift-batch-list.resolver.ts"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { ApolloQueryResult } from '@apollo/client/core';\nimport {\n  CouponFilter,\n  CouponSortFields,\n  GiftBatchListGQL,\n  GiftBatchListQuery,\n} from '@ridy/admin-panel/generated/graphql';\nimport { TableService } from '@ridy/admin-panel/src/app/@services/table-service';\nimport { NzMessageService } from 'ng-zorro-antd/message';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class GiftBatchListResolver {\n  subscription?: any;\n\n  constructor(\n    private paging: TableService,\n    private gql: GiftBatchListGQL,\n    private message: NzMessageService,\n  ) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot,\n  ): Observable<ApolloQueryResult<GiftBatchListQuery>> {\n    const params = this.paging.deserializeQueryParams<\n      CouponSortFields,\n      CouponFilter\n    >(route.queryParams);\n    const result = this.gql.fetch(params);\n    this.subscription = result.subscribe({\n      error: (error) => {\n        this.message.error(\n          'This role does not have sufficient permission to access this menu.',\n        );\n      },\n    });\n    return result;\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n}\n"],"mappings":"AAGA,SAGEA,gBAAgB,QAEX,qCAAqC;AAC5C,SAASC,YAAY,QAAQ,mDAAmD;AAChF,SAASC,gBAAgB,QAAQ,uBAAuB;;;;;AAIxD,OAAM,MAAOC,qBAAqB;EAGhCC,YACUC,MAAoB,EACpBC,GAAqB,EACrBC,OAAyB;IAFzB,KAAAF,MAAM,GAANA,MAAM;IACN,KAAAC,GAAG,GAAHA,GAAG;IACH,KAAAC,OAAO,GAAPA,OAAO;EACd;EAEHC,OAAOA,CACLC,KAA6B,EAC7BC,KAA0B;IAE1B,MAAMC,MAAM,GAAG,IAAI,CAACN,MAAM,CAACO,sBAAsB,CAG/CH,KAAK,CAACI,WAAW,CAAC;IACpB,MAAMC,MAAM,GAAG,IAAI,CAACR,GAAG,CAACS,KAAK,CAACJ,MAAM,CAAC;IACrC,IAAI,CAACK,YAAY,GAAGF,MAAM,CAACG,SAAS,CAAC;MACnCC,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAACX,OAAO,CAACW,KAAK,CAChB,oEAAoE,CACrE;MACH;KACD,CAAC;IACF,OAAOJ,MAAM;EACf;EAEAK,WAAWA,CAAA;IACT,IAAI,CAACH,YAAY,EAAEI,WAAW,EAAE;EAClC;;;uBA9BWjB,qBAAqB,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAtB,YAAA,GAAAoB,EAAA,CAAAC,QAAA,CAAAE,EAAA,CAAAxB,gBAAA,GAAAqB,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAvB,gBAAA;IAAA;EAAA;;;aAArBC,qBAAqB;MAAAuB,OAAA,EAArBvB,qBAAqB,CAAAwB;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}