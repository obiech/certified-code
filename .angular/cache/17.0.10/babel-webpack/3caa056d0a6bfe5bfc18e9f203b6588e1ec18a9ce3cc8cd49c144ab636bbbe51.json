{"ast":null,"code":"import line from './line';\nimport { distance } from './util';\nfunction analyzePoints(points) {\n  // 计算每段的长度和总的长度\n  var totalLength = 0;\n  var segments = [];\n  for (var i = 0; i < points.length - 1; i++) {\n    var from = points[i];\n    var to = points[i + 1];\n    var length_1 = distance(from[0], from[1], to[0], to[1]);\n    var seg = {\n      from: from,\n      to: to,\n      length: length_1\n    };\n    segments.push(seg);\n    totalLength += length_1;\n  }\n  return {\n    segments: segments,\n    totalLength: totalLength\n  };\n}\nexport function lengthOfSegment(points) {\n  if (points.length < 2) {\n    return 0;\n  }\n  var totalLength = 0;\n  for (var i = 0; i < points.length - 1; i++) {\n    var from = points[i];\n    var to = points[i + 1];\n    totalLength += distance(from[0], from[1], to[0], to[1]);\n  }\n  return totalLength;\n}\n/**\n * 按照比例在数据片段中获取点\n * @param {array} points 点的集合\n * @param {number} t 百分比 0-1\n * @return {object} 点的坐标\n */\nexport function pointAtSegments(points, t) {\n  // 边界判断\n  if (t > 1 || t < 0 || points.length < 2) {\n    return null;\n  }\n  var _a = analyzePoints(points),\n    segments = _a.segments,\n    totalLength = _a.totalLength;\n  // 多个点有可能重合\n  if (totalLength === 0) {\n    return {\n      x: points[0][0],\n      y: points[0][1]\n    };\n  }\n  // 计算比例\n  var startRatio = 0;\n  var point = null;\n  for (var i = 0; i < segments.length; i++) {\n    var seg = segments[i];\n    var from = seg.from,\n      to = seg.to;\n    var currentRatio = seg.length / totalLength;\n    if (t >= startRatio && t <= startRatio + currentRatio) {\n      var localRatio = (t - startRatio) / currentRatio;\n      point = line.pointAt(from[0], from[1], to[0], to[1], localRatio);\n      break;\n    }\n    startRatio += currentRatio;\n  }\n  return point;\n}\n/**\n * 按照比例在数据片段中获取切线的角度\n * @param {array} points 点的集合\n * @param {number} t 百分比 0-1\n */\nexport function angleAtSegments(points, t) {\n  // 边界判断\n  if (t > 1 || t < 0 || points.length < 2) {\n    return 0;\n  }\n  var _a = analyzePoints(points),\n    segments = _a.segments,\n    totalLength = _a.totalLength;\n  // 计算比例\n  var startRatio = 0;\n  var angle = 0;\n  for (var i = 0; i < segments.length; i++) {\n    var seg = segments[i];\n    var from = seg.from,\n      to = seg.to;\n    var currentRatio = seg.length / totalLength;\n    if (t >= startRatio && t <= startRatio + currentRatio) {\n      angle = Math.atan2(to[1] - from[1], to[0] - from[0]);\n      break;\n    }\n    startRatio += currentRatio;\n  }\n  return angle;\n}\nexport function distanceAtSegment(points, x, y) {\n  var minDistance = Infinity;\n  for (var i = 0; i < points.length - 1; i++) {\n    var point = points[i];\n    var nextPoint = points[i + 1];\n    var distance_1 = line.pointDistance(point[0], point[1], nextPoint[0], nextPoint[1], x, y);\n    if (distance_1 < minDistance) {\n      minDistance = distance_1;\n    }\n  }\n  return minDistance;\n}","map":{"version":3,"names":["line","distance","analyzePoints","points","totalLength","segments","i","length","from","to","length_1","seg","push","lengthOfSegment","pointAtSegments","t","_a","x","y","startRatio","point","currentRatio","localRatio","pointAt","angleAtSegments","angle","Math","atan2","distanceAtSegment","minDistance","Infinity","nextPoint","distance_1","pointDistance"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g-math/esm/segments.js"],"sourcesContent":["import line from './line';\nimport { distance } from './util';\nfunction analyzePoints(points) {\n    // 计算每段的长度和总的长度\n    var totalLength = 0;\n    var segments = [];\n    for (var i = 0; i < points.length - 1; i++) {\n        var from = points[i];\n        var to = points[i + 1];\n        var length_1 = distance(from[0], from[1], to[0], to[1]);\n        var seg = {\n            from: from,\n            to: to,\n            length: length_1,\n        };\n        segments.push(seg);\n        totalLength += length_1;\n    }\n    return { segments: segments, totalLength: totalLength };\n}\nexport function lengthOfSegment(points) {\n    if (points.length < 2) {\n        return 0;\n    }\n    var totalLength = 0;\n    for (var i = 0; i < points.length - 1; i++) {\n        var from = points[i];\n        var to = points[i + 1];\n        totalLength += distance(from[0], from[1], to[0], to[1]);\n    }\n    return totalLength;\n}\n/**\n * 按照比例在数据片段中获取点\n * @param {array} points 点的集合\n * @param {number} t 百分比 0-1\n * @return {object} 点的坐标\n */\nexport function pointAtSegments(points, t) {\n    // 边界判断\n    if (t > 1 || t < 0 || points.length < 2) {\n        return null;\n    }\n    var _a = analyzePoints(points), segments = _a.segments, totalLength = _a.totalLength;\n    // 多个点有可能重合\n    if (totalLength === 0) {\n        return {\n            x: points[0][0],\n            y: points[0][1],\n        };\n    }\n    // 计算比例\n    var startRatio = 0;\n    var point = null;\n    for (var i = 0; i < segments.length; i++) {\n        var seg = segments[i];\n        var from = seg.from, to = seg.to;\n        var currentRatio = seg.length / totalLength;\n        if (t >= startRatio && t <= startRatio + currentRatio) {\n            var localRatio = (t - startRatio) / currentRatio;\n            point = line.pointAt(from[0], from[1], to[0], to[1], localRatio);\n            break;\n        }\n        startRatio += currentRatio;\n    }\n    return point;\n}\n/**\n * 按照比例在数据片段中获取切线的角度\n * @param {array} points 点的集合\n * @param {number} t 百分比 0-1\n */\nexport function angleAtSegments(points, t) {\n    // 边界判断\n    if (t > 1 || t < 0 || points.length < 2) {\n        return 0;\n    }\n    var _a = analyzePoints(points), segments = _a.segments, totalLength = _a.totalLength;\n    // 计算比例\n    var startRatio = 0;\n    var angle = 0;\n    for (var i = 0; i < segments.length; i++) {\n        var seg = segments[i];\n        var from = seg.from, to = seg.to;\n        var currentRatio = seg.length / totalLength;\n        if (t >= startRatio && t <= startRatio + currentRatio) {\n            angle = Math.atan2(to[1] - from[1], to[0] - from[0]);\n            break;\n        }\n        startRatio += currentRatio;\n    }\n    return angle;\n}\nexport function distanceAtSegment(points, x, y) {\n    var minDistance = Infinity;\n    for (var i = 0; i < points.length - 1; i++) {\n        var point = points[i];\n        var nextPoint = points[i + 1];\n        var distance_1 = line.pointDistance(point[0], point[1], nextPoint[0], nextPoint[1], x, y);\n        if (distance_1 < minDistance) {\n            minDistance = distance_1;\n        }\n    }\n    return minDistance;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}