{"ast":null,"code":"import { __assign, __read, __spreadArray } from \"tslib\";\nimport { firstValue, get, isEmpty, isNil, isNumber, isString, valuesOfKey } from '@antv/util';\nimport { GROUP_ATTRS } from '../constant';\nimport { getScale } from '../dependents';\nimport { isFullCircle } from './coordinate';\nvar dateRegex = /^(?:(?!0000)[0-9]{4}([-/.]+)(?:(?:0?[1-9]|1[0-2])\\1(?:0?[1-9]|1[0-9]|2[0-8])|(?:0?[13-9]|1[0-2])\\1(?:29|30)|(?:0?[13578]|1[02])\\1(?:31))|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)([-/.]+)0?2\\2(?:29))(\\s+([01]|([01][0-9]|2[0-3])):([0-9]|[0-5][0-9]):([0-9]|[0-5][0-9]))?$/;\n/**\n * 获取字段对应数据的类型\n * @param field 数据字段名\n * @param data 数据源\n * @returns default type 返回对应的数据类型\n */\nfunction getDefaultType(value) {\n  var type = 'linear';\n  if (dateRegex.test(value)) {\n    type = 'timeCat';\n  } else if (isString(value)) {\n    type = 'cat';\n  }\n  return type;\n}\n/**\n * using the scale type if user specified, otherwise infer the type\n */\nexport function inferScaleType(scale, scaleDef, attrType, geometryType) {\n  if (scaleDef === void 0) {\n    scaleDef = {};\n  }\n  if (scaleDef.type) return scaleDef.type;\n  // identity scale 直接返回\n  // geometry 类型有: edge,heatmap,interval,line,path,point,polygon,schema,voilin等；理论上，interval 下，可以用 linear scale 作为分组字段\n  if (scale.type !== 'identity' && GROUP_ATTRS.includes(attrType) && ['interval'].includes(geometryType)) {\n    return 'cat';\n  }\n  return scale.isCategory ? 'cat' : scale.type;\n}\n/**\n * @ignore\n * 为指定的 `field` 字段数据创建 scale\n * @param field 字段名\n * @param [data] 数据集，可为空\n * @param [scaleDef] 列定义，可为空\n * @returns scale 返回创建的 Scale 实例\n */\nexport function createScaleByField(field, data, scaleDef) {\n  var validData = data || [];\n  if (isNumber(field) || isNil(firstValue(validData, field)) && isEmpty(scaleDef)) {\n    var Identity = getScale('identity');\n    return new Identity({\n      field: field.toString(),\n      values: [field]\n    });\n  }\n  var values = valuesOfKey(validData, field);\n  // 如果已经定义过这个度量 (fix-later 单纯从数据中，推断 scale type 是不精确的)\n  var type = get(scaleDef, 'type', getDefaultType(values[0]));\n  var ScaleCtor = getScale(type);\n  return new ScaleCtor(__assign({\n    field: field,\n    values: values\n  }, scaleDef));\n}\n/**\n * @ignore\n * 同步 scale\n * @todo 是否可以通过 scale.update() 方法进行更新\n * @param scale 需要同步的 scale 实例\n * @param newScale 同步源 Scale\n */\nexport function syncScale(scale, newScale) {\n  if (scale.type !== 'identity' && newScale.type !== 'identity') {\n    var obj = {};\n    for (var k in newScale) {\n      if (Object.prototype.hasOwnProperty.call(newScale, k)) {\n        obj[k] = newScale[k];\n      }\n    }\n    scale.change(obj);\n  }\n}\n/**\n * @ignore\n * get the scale name, if alias exist, return alias, or else field\n * @param scale\n * @returns the name of field\n */\nexport function getName(scale) {\n  return scale.alias || scale.field;\n}\n/**\n * 根据 scale values 和 coordinate 获取分类默认 range\n * @param scale 需要获取的 scale 实例\n * @param coordinate coordinate 实例\n * @param theme theme\n */\nexport function getDefaultCategoryScaleRange(scale, coordinate, theme) {\n  var values = scale.values;\n  var count = values.length;\n  var range;\n  if (count === 1) {\n    range = [0.5, 1]; // 只有一个分类时,防止计算出现 [0.5,0.5] 的状态\n  } else {\n    var widthRatio = 1;\n    var offset = 0;\n    if (isFullCircle(coordinate)) {\n      if (!coordinate.isTransposed) {\n        range = [0, 1 - 1 / count];\n      } else {\n        widthRatio = get(theme, 'widthRatio.multiplePie', 1 / 1.3);\n        offset = 1 / count * widthRatio;\n        range = [offset / 2, 1 - offset / 2];\n      }\n    } else {\n      offset = 1 / count / 2; // 两边留下分类空间的一半\n      range = [offset, 1 - offset]; // 坐标轴最前面和最后面留下空白防止绘制柱状图时\n    }\n  }\n\n  return range;\n}\n/**\n * @function y轴scale的max\n * @param {yScale}\n */\nexport function getMaxScale(scale) {\n  // 过滤values[]中 NaN/undefined/null 等\n  var values = scale.values.filter(function (item) {\n    return !isNil(item) && !isNaN(item);\n  });\n  return Math.max.apply(Math, __spreadArray(__spreadArray([], __read(values), false), [isNil(scale.max) ? -Infinity : scale.max], false));\n}","map":{"version":3,"names":["__assign","__read","__spreadArray","firstValue","get","isEmpty","isNil","isNumber","isString","valuesOfKey","GROUP_ATTRS","getScale","isFullCircle","dateRegex","getDefaultType","value","type","test","inferScaleType","scale","scaleDef","attrType","geometryType","includes","isCategory","createScaleByField","field","data","validData","Identity","toString","values","ScaleCtor","syncScale","newScale","obj","k","Object","prototype","hasOwnProperty","call","change","getName","alias","getDefaultCategoryScaleRange","coordinate","theme","count","length","range","widthRatio","offset","isTransposed","getMaxScale","filter","item","isNaN","Math","max","apply","Infinity"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g2/esm/util/scale.js"],"sourcesContent":["import { __assign, __read, __spreadArray } from \"tslib\";\nimport { firstValue, get, isEmpty, isNil, isNumber, isString, valuesOfKey } from '@antv/util';\nimport { GROUP_ATTRS } from '../constant';\nimport { getScale } from '../dependents';\nimport { isFullCircle } from './coordinate';\nvar dateRegex = /^(?:(?!0000)[0-9]{4}([-/.]+)(?:(?:0?[1-9]|1[0-2])\\1(?:0?[1-9]|1[0-9]|2[0-8])|(?:0?[13-9]|1[0-2])\\1(?:29|30)|(?:0?[13578]|1[02])\\1(?:31))|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)([-/.]+)0?2\\2(?:29))(\\s+([01]|([01][0-9]|2[0-3])):([0-9]|[0-5][0-9]):([0-9]|[0-5][0-9]))?$/;\n/**\n * 获取字段对应数据的类型\n * @param field 数据字段名\n * @param data 数据源\n * @returns default type 返回对应的数据类型\n */\nfunction getDefaultType(value) {\n    var type = 'linear';\n    if (dateRegex.test(value)) {\n        type = 'timeCat';\n    }\n    else if (isString(value)) {\n        type = 'cat';\n    }\n    return type;\n}\n/**\n * using the scale type if user specified, otherwise infer the type\n */\nexport function inferScaleType(scale, scaleDef, attrType, geometryType) {\n    if (scaleDef === void 0) { scaleDef = {}; }\n    if (scaleDef.type)\n        return scaleDef.type;\n    // identity scale 直接返回\n    // geometry 类型有: edge,heatmap,interval,line,path,point,polygon,schema,voilin等；理论上，interval 下，可以用 linear scale 作为分组字段\n    if (scale.type !== 'identity' && GROUP_ATTRS.includes(attrType) && ['interval'].includes(geometryType)) {\n        return 'cat';\n    }\n    return scale.isCategory ? 'cat' : scale.type;\n}\n/**\n * @ignore\n * 为指定的 `field` 字段数据创建 scale\n * @param field 字段名\n * @param [data] 数据集，可为空\n * @param [scaleDef] 列定义，可为空\n * @returns scale 返回创建的 Scale 实例\n */\nexport function createScaleByField(field, data, scaleDef) {\n    var validData = data || [];\n    if (isNumber(field) || (isNil(firstValue(validData, field)) && isEmpty(scaleDef))) {\n        var Identity = getScale('identity');\n        return new Identity({\n            field: field.toString(),\n            values: [field],\n        });\n    }\n    var values = valuesOfKey(validData, field);\n    // 如果已经定义过这个度量 (fix-later 单纯从数据中，推断 scale type 是不精确的)\n    var type = get(scaleDef, 'type', getDefaultType(values[0]));\n    var ScaleCtor = getScale(type);\n    return new ScaleCtor(__assign({ field: field, values: values }, scaleDef));\n}\n/**\n * @ignore\n * 同步 scale\n * @todo 是否可以通过 scale.update() 方法进行更新\n * @param scale 需要同步的 scale 实例\n * @param newScale 同步源 Scale\n */\nexport function syncScale(scale, newScale) {\n    if (scale.type !== 'identity' && newScale.type !== 'identity') {\n        var obj = {};\n        for (var k in newScale) {\n            if (Object.prototype.hasOwnProperty.call(newScale, k)) {\n                obj[k] = newScale[k];\n            }\n        }\n        scale.change(obj);\n    }\n}\n/**\n * @ignore\n * get the scale name, if alias exist, return alias, or else field\n * @param scale\n * @returns the name of field\n */\nexport function getName(scale) {\n    return scale.alias || scale.field;\n}\n/**\n * 根据 scale values 和 coordinate 获取分类默认 range\n * @param scale 需要获取的 scale 实例\n * @param coordinate coordinate 实例\n * @param theme theme\n */\nexport function getDefaultCategoryScaleRange(scale, coordinate, theme) {\n    var values = scale.values;\n    var count = values.length;\n    var range;\n    if (count === 1) {\n        range = [0.5, 1]; // 只有一个分类时,防止计算出现 [0.5,0.5] 的状态\n    }\n    else {\n        var widthRatio = 1;\n        var offset = 0;\n        if (isFullCircle(coordinate)) {\n            if (!coordinate.isTransposed) {\n                range = [0, 1 - 1 / count];\n            }\n            else {\n                widthRatio = get(theme, 'widthRatio.multiplePie', 1 / 1.3);\n                offset = (1 / count) * widthRatio;\n                range = [offset / 2, 1 - offset / 2];\n            }\n        }\n        else {\n            offset = 1 / count / 2; // 两边留下分类空间的一半\n            range = [offset, 1 - offset]; // 坐标轴最前面和最后面留下空白防止绘制柱状图时\n        }\n    }\n    return range;\n}\n/**\n * @function y轴scale的max\n * @param {yScale}\n */\nexport function getMaxScale(scale) {\n    // 过滤values[]中 NaN/undefined/null 等\n    var values = scale.values.filter(function (item) { return !isNil(item) && !isNaN(item); });\n    return Math.max.apply(Math, __spreadArray(__spreadArray([], __read(values), false), [isNil(scale.max) ? -Infinity : scale.max], false));\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}