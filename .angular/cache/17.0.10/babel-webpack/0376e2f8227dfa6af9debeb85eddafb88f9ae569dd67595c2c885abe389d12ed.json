{"ast":null,"code":"/**\n * @description 扩展方法，提供 gl-matrix 为提供的方法\n * */\nimport { mat3, vec2 } from 'gl-matrix';\nexport function leftTranslate(out, a, v) {\n  var transMat = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n  mat3.fromTranslation(transMat, v);\n  return mat3.multiply(out, transMat, a);\n}\nexport function leftRotate(out, a, rad) {\n  var rotateMat = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n  mat3.fromRotation(rotateMat, rad);\n  return mat3.multiply(out, rotateMat, a);\n}\nexport function leftScale(out, a, v) {\n  var scaleMat = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n  mat3.fromScaling(scaleMat, v);\n  return mat3.multiply(out, scaleMat, a);\n}\nfunction leftMultiply(out, a, a1) {\n  return mat3.multiply(out, a1, a);\n}\n/**\n * 根据 actions 来做 transform\n * @param m\n * @param actions\n */\nexport function transform(m, actions) {\n  var matrix = m ? [].concat(m) : [1, 0, 0, 0, 1, 0, 0, 0, 1];\n  for (var i = 0, len = actions.length; i < len; i++) {\n    var action = actions[i];\n    switch (action[0]) {\n      case 't':\n        leftTranslate(matrix, matrix, [action[1], action[2]]);\n        break;\n      case 's':\n        leftScale(matrix, matrix, [action[1], action[2]]);\n        break;\n      case 'r':\n        leftRotate(matrix, matrix, action[1]);\n        break;\n      case 'm':\n        leftMultiply(matrix, matrix, action[1]);\n        break;\n      default:\n        break;\n    }\n  }\n  return matrix;\n}\n/**\n * 向量 v1 到 向量 v2 夹角的方向\n * @param  {Array} v1 向量\n * @param  {Array} v2 向量\n * @return {Boolean} >= 0 顺时针 < 0 逆时针\n */\nexport function direction(v1, v2) {\n  return v1[0] * v2[1] - v2[0] * v1[1];\n}\n/**\n * 二维向量 v1 到 v2 的夹角\n * @param v1\n * @param v2\n * @param direct\n */\nexport function angleTo(v1, v2, direct) {\n  var ang = vec2.angle(v1, v2);\n  var angleLargeThanPI = direction(v1, v2) >= 0;\n  if (direct) {\n    if (angleLargeThanPI) {\n      return Math.PI * 2 - ang;\n    }\n    return ang;\n  }\n  if (angleLargeThanPI) {\n    return ang;\n  }\n  return Math.PI * 2 - ang;\n}\n/**\n * 计算二维向量的垂直向量\n * @param out\n * @param v\n * @param flag\n */\nexport function vertical(out, v, flag) {\n  if (flag) {\n    out[0] = v[1];\n    out[1] = -1 * v[0];\n  } else {\n    out[0] = -1 * v[1];\n    out[1] = v[0];\n  }\n  return out;\n}","map":{"version":3,"names":["mat3","vec2","leftTranslate","out","a","v","transMat","fromTranslation","multiply","leftRotate","rad","rotateMat","fromRotation","leftScale","scaleMat","fromScaling","leftMultiply","a1","transform","m","actions","matrix","concat","i","len","length","action","direction","v1","v2","angleTo","direct","ang","angle","angleLargeThanPI","Math","PI","vertical","flag"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/path-util/node_modules/@antv/matrix-util/esm/ext.js"],"sourcesContent":["/**\n * @description 扩展方法，提供 gl-matrix 为提供的方法\n * */\nimport { mat3, vec2 } from 'gl-matrix';\nexport function leftTranslate(out, a, v) {\n    var transMat = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n    mat3.fromTranslation(transMat, v);\n    return mat3.multiply(out, transMat, a);\n}\nexport function leftRotate(out, a, rad) {\n    var rotateMat = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n    mat3.fromRotation(rotateMat, rad);\n    return mat3.multiply(out, rotateMat, a);\n}\nexport function leftScale(out, a, v) {\n    var scaleMat = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n    mat3.fromScaling(scaleMat, v);\n    return mat3.multiply(out, scaleMat, a);\n}\nfunction leftMultiply(out, a, a1) {\n    return mat3.multiply(out, a1, a);\n}\n/**\n * 根据 actions 来做 transform\n * @param m\n * @param actions\n */\nexport function transform(m, actions) {\n    var matrix = m ? [].concat(m) : [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    for (var i = 0, len = actions.length; i < len; i++) {\n        var action = actions[i];\n        switch (action[0]) {\n            case 't':\n                leftTranslate(matrix, matrix, [action[1], action[2]]);\n                break;\n            case 's':\n                leftScale(matrix, matrix, [action[1], action[2]]);\n                break;\n            case 'r':\n                leftRotate(matrix, matrix, action[1]);\n                break;\n            case 'm':\n                leftMultiply(matrix, matrix, action[1]);\n                break;\n            default:\n                break;\n        }\n    }\n    return matrix;\n}\n/**\n * 向量 v1 到 向量 v2 夹角的方向\n * @param  {Array} v1 向量\n * @param  {Array} v2 向量\n * @return {Boolean} >= 0 顺时针 < 0 逆时针\n */\nexport function direction(v1, v2) {\n    return v1[0] * v2[1] - v2[0] * v1[1];\n}\n/**\n * 二维向量 v1 到 v2 的夹角\n * @param v1\n * @param v2\n * @param direct\n */\nexport function angleTo(v1, v2, direct) {\n    var ang = vec2.angle(v1, v2);\n    var angleLargeThanPI = direction(v1, v2) >= 0;\n    if (direct) {\n        if (angleLargeThanPI) {\n            return Math.PI * 2 - ang;\n        }\n        return ang;\n    }\n    if (angleLargeThanPI) {\n        return ang;\n    }\n    return Math.PI * 2 - ang;\n}\n/**\n * 计算二维向量的垂直向量\n * @param out\n * @param v\n * @param flag\n */\nexport function vertical(out, v, flag) {\n    if (flag) {\n        out[0] = v[1];\n        out[1] = -1 * v[0];\n    }\n    else {\n        out[0] = -1 * v[1];\n        out[1] = v[0];\n    }\n    return out;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}