{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\n/**\n * @fileoverview line\n * @author dengfuping_develop@163.com\n */\nimport { Line as LineUtil } from '@antv/g-math';\nimport { each, isObject } from '@antv/util';\nimport { SVG_ATTR_MAP } from '../constant';\nimport ShapeBase from './base';\nvar Line = /** @class */function (_super) {\n  __extends(Line, _super);\n  function Line() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = 'line';\n    _this.canFill = false;\n    _this.canStroke = true;\n    return _this;\n  }\n  Line.prototype.getDefaultAttrs = function () {\n    var attrs = _super.prototype.getDefaultAttrs.call(this);\n    return __assign(__assign({}, attrs), {\n      x1: 0,\n      y1: 0,\n      x2: 0,\n      y2: 0,\n      startArrow: false,\n      endArrow: false\n    });\n  };\n  Line.prototype.createPath = function (context, targetAttrs) {\n    var attrs = this.attr();\n    var el = this.get('el');\n    each(targetAttrs || attrs, function (value, attr) {\n      if (attr === 'startArrow' || attr === 'endArrow') {\n        if (value) {\n          var id = isObject(value) ? context.addArrow(attrs, SVG_ATTR_MAP[attr]) : context.getDefaultArrow(attrs, SVG_ATTR_MAP[attr]);\n          el.setAttribute(SVG_ATTR_MAP[attr], \"url(#\" + id + \")\");\n        } else {\n          el.removeAttribute(SVG_ATTR_MAP[attr]);\n        }\n      } else if (SVG_ATTR_MAP[attr]) {\n        el.setAttribute(SVG_ATTR_MAP[attr], value);\n      }\n    });\n  };\n  /**\n   * Use math calculation to get length of line\n   * @return {number} length\n   */\n  Line.prototype.getTotalLength = function () {\n    var _a = this.attr(),\n      x1 = _a.x1,\n      y1 = _a.y1,\n      x2 = _a.x2,\n      y2 = _a.y2;\n    return LineUtil.length(x1, y1, x2, y2);\n  };\n  /**\n   * Use math calculation to get point according to ratio as same sa Canvas version\n   * @param {number} ratio\n   * @return {Point} point\n   */\n  Line.prototype.getPoint = function (ratio) {\n    var _a = this.attr(),\n      x1 = _a.x1,\n      y1 = _a.y1,\n      x2 = _a.x2,\n      y2 = _a.y2;\n    return LineUtil.pointAt(x1, y1, x2, y2, ratio);\n  };\n  return Line;\n}(ShapeBase);\nexport default Line;","map":{"version":3,"names":["__assign","__extends","Line","LineUtil","each","isObject","SVG_ATTR_MAP","ShapeBase","_super","_this","apply","arguments","type","canFill","canStroke","prototype","getDefaultAttrs","attrs","call","x1","y1","x2","y2","startArrow","endArrow","createPath","context","targetAttrs","attr","el","get","value","id","addArrow","getDefaultArrow","setAttribute","removeAttribute","getTotalLength","_a","length","getPoint","ratio","pointAt"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g-svg/esm/shape/line.js"],"sourcesContent":["import { __assign, __extends } from \"tslib\";\n/**\n * @fileoverview line\n * @author dengfuping_develop@163.com\n */\nimport { Line as LineUtil } from '@antv/g-math';\nimport { each, isObject } from '@antv/util';\nimport { SVG_ATTR_MAP } from '../constant';\nimport ShapeBase from './base';\nvar Line = /** @class */ (function (_super) {\n    __extends(Line, _super);\n    function Line() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'line';\n        _this.canFill = false;\n        _this.canStroke = true;\n        return _this;\n    }\n    Line.prototype.getDefaultAttrs = function () {\n        var attrs = _super.prototype.getDefaultAttrs.call(this);\n        return __assign(__assign({}, attrs), { x1: 0, y1: 0, x2: 0, y2: 0, startArrow: false, endArrow: false });\n    };\n    Line.prototype.createPath = function (context, targetAttrs) {\n        var attrs = this.attr();\n        var el = this.get('el');\n        each(targetAttrs || attrs, function (value, attr) {\n            if (attr === 'startArrow' || attr === 'endArrow') {\n                if (value) {\n                    var id = isObject(value)\n                        ? context.addArrow(attrs, SVG_ATTR_MAP[attr])\n                        : context.getDefaultArrow(attrs, SVG_ATTR_MAP[attr]);\n                    el.setAttribute(SVG_ATTR_MAP[attr], \"url(#\" + id + \")\");\n                }\n                else {\n                    el.removeAttribute(SVG_ATTR_MAP[attr]);\n                }\n            }\n            else if (SVG_ATTR_MAP[attr]) {\n                el.setAttribute(SVG_ATTR_MAP[attr], value);\n            }\n        });\n    };\n    /**\n     * Use math calculation to get length of line\n     * @return {number} length\n     */\n    Line.prototype.getTotalLength = function () {\n        var _a = this.attr(), x1 = _a.x1, y1 = _a.y1, x2 = _a.x2, y2 = _a.y2;\n        return LineUtil.length(x1, y1, x2, y2);\n    };\n    /**\n     * Use math calculation to get point according to ratio as same sa Canvas version\n     * @param {number} ratio\n     * @return {Point} point\n     */\n    Line.prototype.getPoint = function (ratio) {\n        var _a = this.attr(), x1 = _a.x1, y1 = _a.y1, x2 = _a.x2, y2 = _a.y2;\n        return LineUtil.pointAt(x1, y1, x2, y2, ratio);\n    };\n    return Line;\n}(ShapeBase));\nexport default Line;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}