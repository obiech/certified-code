{"ast":null,"code":"var isBetween = function (value, min, max) {\n  return value >= min && value <= max;\n};\nexport default function getLineIntersect(p0, p1, p2, p3) {\n  var tolerance = 0.001;\n  var E = {\n    x: p2.x - p0.x,\n    y: p2.y - p0.y\n  };\n  var D0 = {\n    x: p1.x - p0.x,\n    y: p1.y - p0.y\n  };\n  var D1 = {\n    x: p3.x - p2.x,\n    y: p3.y - p2.y\n  };\n  var kross = D0.x * D1.y - D0.y * D1.x;\n  var sqrKross = kross * kross;\n  var sqrLen0 = D0.x * D0.x + D0.y * D0.y;\n  var sqrLen1 = D1.x * D1.x + D1.y * D1.y;\n  var point = null;\n  if (sqrKross > tolerance * sqrLen0 * sqrLen1) {\n    var s = (E.x * D1.y - E.y * D1.x) / kross;\n    var t = (E.x * D0.y - E.y * D0.x) / kross;\n    if (isBetween(s, 0, 1) && isBetween(t, 0, 1)) {\n      point = {\n        x: p0.x + s * D0.x,\n        y: p0.y + s * D0.y\n      };\n    }\n  }\n  return point;\n}\n;","map":{"version":3,"names":["isBetween","value","min","max","getLineIntersect","p0","p1","p2","p3","tolerance","E","x","y","D0","D1","kross","sqrKross","sqrLen0","sqrLen1","point","s","t"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/path-util/esm/get-line-intersect.js"],"sourcesContent":["var isBetween = function (value, min, max) { return value >= min && value <= max; };\nexport default function getLineIntersect(p0, p1, p2, p3) {\n    var tolerance = 0.001;\n    var E = {\n        x: p2.x - p0.x,\n        y: p2.y - p0.y,\n    };\n    var D0 = {\n        x: p1.x - p0.x,\n        y: p1.y - p0.y,\n    };\n    var D1 = {\n        x: p3.x - p2.x,\n        y: p3.y - p2.y,\n    };\n    var kross = D0.x * D1.y - D0.y * D1.x;\n    var sqrKross = kross * kross;\n    var sqrLen0 = D0.x * D0.x + D0.y * D0.y;\n    var sqrLen1 = D1.x * D1.x + D1.y * D1.y;\n    var point = null;\n    if (sqrKross > tolerance * sqrLen0 * sqrLen1) {\n        var s = (E.x * D1.y - E.y * D1.x) / kross;\n        var t = (E.x * D0.y - E.y * D0.x) / kross;\n        if (isBetween(s, 0, 1) && isBetween(t, 0, 1)) {\n            point = {\n                x: p0.x + s * D0.x,\n                y: p0.y + s * D0.y,\n            };\n        }\n    }\n    return point;\n}\n;\n"],"mappings":"AAAA,IAAIA,SAAS,GAAG,SAAAA,CAAUC,KAAK,EAAEC,GAAG,EAAEC,GAAG,EAAE;EAAE,OAAOF,KAAK,IAAIC,GAAG,IAAID,KAAK,IAAIE,GAAG;AAAE,CAAC;AACnF,eAAe,SAASC,gBAAgBA,CAACC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;EACrD,IAAIC,SAAS,GAAG,KAAK;EACrB,IAAIC,CAAC,GAAG;IACJC,CAAC,EAAEJ,EAAE,CAACI,CAAC,GAAGN,EAAE,CAACM,CAAC;IACdC,CAAC,EAAEL,EAAE,CAACK,CAAC,GAAGP,EAAE,CAACO;EACjB,CAAC;EACD,IAAIC,EAAE,GAAG;IACLF,CAAC,EAAEL,EAAE,CAACK,CAAC,GAAGN,EAAE,CAACM,CAAC;IACdC,CAAC,EAAEN,EAAE,CAACM,CAAC,GAAGP,EAAE,CAACO;EACjB,CAAC;EACD,IAAIE,EAAE,GAAG;IACLH,CAAC,EAAEH,EAAE,CAACG,CAAC,GAAGJ,EAAE,CAACI,CAAC;IACdC,CAAC,EAAEJ,EAAE,CAACI,CAAC,GAAGL,EAAE,CAACK;EACjB,CAAC;EACD,IAAIG,KAAK,GAAGF,EAAE,CAACF,CAAC,GAAGG,EAAE,CAACF,CAAC,GAAGC,EAAE,CAACD,CAAC,GAAGE,EAAE,CAACH,CAAC;EACrC,IAAIK,QAAQ,GAAGD,KAAK,GAAGA,KAAK;EAC5B,IAAIE,OAAO,GAAGJ,EAAE,CAACF,CAAC,GAAGE,EAAE,CAACF,CAAC,GAAGE,EAAE,CAACD,CAAC,GAAGC,EAAE,CAACD,CAAC;EACvC,IAAIM,OAAO,GAAGJ,EAAE,CAACH,CAAC,GAAGG,EAAE,CAACH,CAAC,GAAGG,EAAE,CAACF,CAAC,GAAGE,EAAE,CAACF,CAAC;EACvC,IAAIO,KAAK,GAAG,IAAI;EAChB,IAAIH,QAAQ,GAAGP,SAAS,GAAGQ,OAAO,GAAGC,OAAO,EAAE;IAC1C,IAAIE,CAAC,GAAG,CAACV,CAAC,CAACC,CAAC,GAAGG,EAAE,CAACF,CAAC,GAAGF,CAAC,CAACE,CAAC,GAAGE,EAAE,CAACH,CAAC,IAAII,KAAK;IACzC,IAAIM,CAAC,GAAG,CAACX,CAAC,CAACC,CAAC,GAAGE,EAAE,CAACD,CAAC,GAAGF,CAAC,CAACE,CAAC,GAAGC,EAAE,CAACF,CAAC,IAAII,KAAK;IACzC,IAAIf,SAAS,CAACoB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAIpB,SAAS,CAACqB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;MAC1CF,KAAK,GAAG;QACJR,CAAC,EAAEN,EAAE,CAACM,CAAC,GAAGS,CAAC,GAAGP,EAAE,CAACF,CAAC;QAClBC,CAAC,EAAEP,EAAE,CAACO,CAAC,GAAGQ,CAAC,GAAGP,EAAE,CAACD;MACrB,CAAC;IACL;EACJ;EACA,OAAOO,KAAK;AAChB;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}