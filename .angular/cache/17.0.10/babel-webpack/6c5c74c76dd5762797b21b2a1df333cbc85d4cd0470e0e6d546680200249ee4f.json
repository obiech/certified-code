{"ast":null,"code":"import _asyncToGenerator from \"/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { UntypedFormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { CreateSmsProviderGQL, MarkSmsProviderAsDefaultGQL, SmsProviderType, UpdateSmsProviderGQL } from '@ridy/admin-panel/generated/graphql';\nimport { RouterHelperService } from '@ridy/admin-panel/src/app/@services/router-helper.service';\nimport { environment } from '@ridy/admin-panel/src/environments/environment';\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport { firstValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@ridy/admin-panel/generated/graphql\";\nimport * as i4 from \"@ridy/admin-panel/src/app/@services/router-helper.service\";\nimport * as i5 from \"ng-zorro-antd/modal\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"ng-zorro-antd/alert\";\nimport * as i8 from \"ng-zorro-antd/input\";\nimport * as i9 from \"ng-zorro-antd/button\";\nimport * as i10 from \"ng-zorro-antd/core/transition-patch\";\nimport * as i11 from \"ng-zorro-antd/core/wave\";\nimport * as i12 from \"ng-zorro-antd/grid\";\nimport * as i13 from \"ng-zorro-antd/form\";\nimport * as i14 from \"ng-zorro-antd/select\";\nimport * as i15 from \"ng-zorro-antd/page-header\";\nimport * as i16 from \"ng-zorro-antd/space\";\nimport * as i17 from \"@ngx-translate/core\";\nfunction SMSProviderViewComponent_div_4_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function SMSProviderViewComponent_div_4_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.markAsDefault());\n    });\n    i0.ɵɵtext(1, \"Mark as default\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SMSProviderViewComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, SMSProviderViewComponent_div_4_button_1_Template, 2, 0, \"button\", 14);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ((tmp_0_0 = i0.ɵɵpipeBind1(2, 1, ctx_r0.route.data)) == null ? null : tmp_0_0.smsProvider == null ? null : tmp_0_0.smsProvider.isDefault) === false);\n  }\n}\nfunction SMSProviderViewComponent_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r1.form.invalid);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 2, \"profile.saveChanges\"), \" \");\n  }\n}\nfunction SMSProviderViewComponent_nz_option_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-option\", 17);\n  }\n  if (rf & 2) {\n    const type_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"nzValue\", type_r7)(\"nzLabel\", type_r7);\n  }\n}\nfunction SMSProviderViewComponent_div_22_nz_form_item_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nz-form-item\")(1, \"nz-form-label\", 19);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"nz-form-control\");\n    i0.ɵɵelement(4, \"input\", 20);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const apiKeyObject_r8 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(apiKeyObject_r8.accountId);\n  }\n}\nfunction SMSProviderViewComponent_div_22_nz_form_item_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nz-form-item\")(1, \"nz-form-label\", 21);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"nz-form-control\");\n    i0.ɵɵelement(4, \"input\", 22);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const apiKeyObject_r8 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(apiKeyObject_r8.authToken);\n  }\n}\nfunction SMSProviderViewComponent_div_22_nz_form_item_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nz-form-item\")(1, \"nz-form-label\", 23);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"nz-form-control\");\n    i0.ɵɵelement(4, \"input\", 24);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const apiKeyObject_r8 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(apiKeyObject_r8.fromNumber);\n  }\n}\nfunction SMSProviderViewComponent_div_22_nz_form_item_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nz-form-item\")(1, \"nz-form-label\", 25);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"nz-form-control\");\n    i0.ɵɵelement(4, \"input\", 26);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const apiKeyObject_r8 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(apiKeyObject_r8.smsType);\n  }\n}\nfunction SMSProviderViewComponent_div_22_nz_form_item_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nz-form-item\")(1, \"nz-form-label\", 27);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"nz-form-control\");\n    i0.ɵɵelement(4, \"input\", 28);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const apiKeyObject_r8 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(apiKeyObject_r8.verificationTemplate);\n  }\n}\nfunction SMSProviderViewComponent_div_22_nz_alert_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-alert\", 29);\n  }\n}\nfunction SMSProviderViewComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵtemplate(2, SMSProviderViewComponent_div_22_nz_form_item_2_Template, 5, 1, \"nz-form-item\", 12)(3, SMSProviderViewComponent_div_22_nz_form_item_3_Template, 5, 1, \"nz-form-item\", 12)(4, SMSProviderViewComponent_div_22_nz_form_item_4_Template, 5, 1, \"nz-form-item\", 12)(5, SMSProviderViewComponent_div_22_nz_form_item_5_Template, 5, 1, \"nz-form-item\", 12)(6, SMSProviderViewComponent_div_22_nz_form_item_6_Template, 5, 1, \"nz-form-item\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, SMSProviderViewComponent_div_22_nz_alert_7_Template, 1, 0, \"nz-alert\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const apiKeyObject_r8 = ctx.ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", apiKeyObject_r8.accountId);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", apiKeyObject_r8.authToken);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", apiKeyObject_r8.fromNumber);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", apiKeyObject_r8.smsType);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", apiKeyObject_r8.verificationTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", apiKeyObject_r8.verificationTemplate);\n  }\n}\nexport class SMSProviderViewComponent {\n  constructor(route, fb, updateGQL, createGQL, markAsDefaultGQL, routerHelper, modalService) {\n    this.route = route;\n    this.fb = fb;\n    this.updateGQL = updateGQL;\n    this.createGQL = createGQL;\n    this.markAsDefaultGQL = markAsDefaultGQL;\n    this.routerHelper = routerHelper;\n    this.modalService = modalService;\n    this.form = this.fb.group({\n      id: [null],\n      name: [null, Validators.required],\n      type: [null, Validators.required],\n      accountId: [null],\n      authToken: [null],\n      verificationTemplate: [null],\n      fromNumber: [null],\n      smsType: [null]\n    });\n    this.smsProviders = [SmsProviderType.Twilio, SmsProviderType.BroadNet, SmsProviderType.Plivo, SmsProviderType.Vonage, SmsProviderType.Pahappa];\n    this.root = environment.root;\n    this.jwt = localStorage.getItem('ridy_admin_token');\n  }\n  ngOnInit() {\n    this.subscription = this.route.data.subscribe(data => {\n      const provider = data.smsProvider;\n      this.form.patchValue(provider.data.smsProvider);\n    });\n  }\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n  onSubmit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const {\n        id,\n        ...input\n      } = _this.form.value;\n      if (id == null) {\n        _this.modalService.create({\n          nzTitle: 'Default SMS Provider',\n          nzContent: 'Do you want to set this as the default SMS provider?',\n          nzOnOk: function () {\n            var _ref = _asyncToGenerator(function* () {\n              yield firstValueFrom(_this.createGQL.mutate({\n                input: {\n                  ...input,\n                  isDefault: true\n                }\n              }));\n              _this.routerHelper.goToParent(_this.route);\n            });\n            return function nzOnOk() {\n              return _ref.apply(this, arguments);\n            };\n          }(),\n          nzOnCancel: function () {\n            var _ref2 = _asyncToGenerator(function* () {\n              yield firstValueFrom(_this.createGQL.mutate({\n                input\n              }));\n              _this.routerHelper.goToParent(_this.route);\n            });\n            return function nzOnCancel() {\n              return _ref2.apply(this, arguments);\n            };\n          }()\n        });\n      } else {\n        yield firstValueFrom(_this.updateGQL.mutate({\n          id,\n          input\n        }));\n        _this.routerHelper.goToParent(_this.route);\n      }\n    })();\n  }\n  getProviderAPIRequirements(type) {\n    if (type == null) return null;\n    switch (type) {\n      case SmsProviderType.Twilio:\n        return {\n          accountId: 'Account SID',\n          authToken: 'Auth Token',\n          fromNumber: 'From Number',\n          verificationTemplate: 'Verification Template'\n        };\n      case SmsProviderType.BroadNet:\n        return {\n          accountId: 'Username',\n          authToken: 'Password',\n          fromNumber: 'From Number',\n          smsType: 'SMS Type',\n          verificationTemplate: 'Verification Template'\n        };\n      case SmsProviderType.Plivo:\n        return {\n          accountId: 'Auth ID',\n          authToken: 'Auth Token',\n          fromNumber: 'Sender ID',\n          verificationTemplate: 'Verification Template'\n        };\n      case SmsProviderType.Vonage:\n        return {\n          accountId: 'API Key',\n          authToken: 'API Secret',\n          fromNumber: 'From Number',\n          verificationTemplate: 'Verification Template'\n        };\n      case SmsProviderType.Pahappa:\n        return {\n          accountId: 'Username',\n          authToken: 'Password',\n          fromNumber: 'Sender',\n          verificationTemplate: 'Verification Template'\n        };\n      default:\n        return null;\n    }\n  }\n  markAsDefault() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const id = _this2.form.get('id')?.value;\n      if (id == null) return;\n      yield firstValueFrom(_this2.markAsDefaultGQL.mutate({\n        id\n      }));\n      _this2.routerHelper.goToParent(_this2.route);\n    })();\n  }\n  static {\n    this.ɵfac = function SMSProviderViewComponent_Factory(t) {\n      return new (t || SMSProviderViewComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.UntypedFormBuilder), i0.ɵɵdirectiveInject(i3.UpdateSmsProviderGQL), i0.ɵɵdirectiveInject(i3.CreateSmsProviderGQL), i0.ɵɵdirectiveInject(i3.MarkSmsProviderAsDefaultGQL), i0.ɵɵdirectiveInject(i4.RouterHelperService), i0.ɵɵdirectiveInject(i5.NzModalService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SMSProviderViewComponent,\n      selectors: [[\"app-sms-provider-view\"]],\n      decls: 26,\n      vars: 8,\n      consts: [[\"nz-form\", \"\", \"nzLayout\", \"vertical\", 3, \"formGroup\", \"ngSubmit\"], [\"nzBackIcon\", \"\", \"nzTitle\", \"SMS Provider\", \"nzSubtitle\", \"Manage SMS providers for sending verification codes\", 3, \"nzGhost\"], [4, \"nzSpaceItem\"], [\"nz-button\", \"\", \"nzType\", \"primary\", \"type\", \"submit\", 3, \"disabled\", 4, \"nzSpaceItem\"], [\"formControlName\", \"id\", \"type\", \"hidden\", \"hidden\", \"\"], [1, \"lg:grid\", \"lg:grid-cols-4\", \"lg:gap-2\"], [\"nzRequired\", \"\", \"nzFor\", \"name\"], [\"nz-input\", \"\", \"required\", \"\", \"id\", \"name\", \"formControlName\", \"name\"], [\"nzRequired\", \"\", \"nzFor\", \"type\"], [\"formControlName\", \"type\", \"id\", \"type\"], [3, \"nzValue\", \"nzLabel\", 4, \"ngFor\", \"ngForOf\"], [1, \"my-2\", \"text-sm\"], [4, \"ngIf\"], [\"nz-button\", \"\", \"nzType\", \"primary\", \"type\", \"submit\", 1, \"float-right\", 3, \"disabled\"], [\"nz-button\", \"\", \"nzType\", \"default\", 3, \"click\", 4, \"ngIf\"], [\"nz-button\", \"\", \"nzType\", \"default\", 3, \"click\"], [\"nz-button\", \"\", \"nzType\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [3, \"nzValue\", \"nzLabel\"], [\"nzType\", \"info\", \"nzMessage\", \"Verification code template\", \"nzDescription\", \"Use the following variables in your template: {code} as placeholder for the verification code.\", \"nzShowIcon\", \"\", 4, \"ngIf\"], [\"nzFor\", \"accountId\"], [\"nz-input\", \"\", \"formControlName\", \"accountId\", \"id\", \"accountId\"], [\"nzFor\", \"authToken\"], [\"nz-input\", \"\", \"formControlName\", \"authToken\", \"id\", \"authToken\"], [\"nzFor\", \"fromNumber\"], [\"nz-input\", \"\", \"formControlName\", \"fromNumber\", \"id\", \"fromNumber\"], [\"nzFor\", \"smsType\"], [\"nz-input\", \"\", \"formControlName\", \"smsType\", \"id\", \"smsType\"], [\"nzFor\", \"verificationTemplate\"], [\"nz-input\", \"\", \"formControlName\", \"verificationTemplate\", \"id\", \"verificationTemplate\"], [\"nzType\", \"info\", \"nzMessage\", \"Verification code template\", \"nzDescription\", \"Use the following variables in your template: {code} as placeholder for the verification code.\", \"nzShowIcon\", \"\"]],\n      template: function SMSProviderViewComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function SMSProviderViewComponent_Template_form_ngSubmit_0_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(1, \"nz-page-header\", 1)(2, \"nz-page-header-extra\")(3, \"nz-space\");\n          i0.ɵɵtemplate(4, SMSProviderViewComponent_div_4_Template, 3, 3, \"div\", 2)(5, SMSProviderViewComponent_button_5_Template, 3, 4, \"button\", 3);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"nz-page-header-content\");\n          i0.ɵɵelement(7, \"input\", 4);\n          i0.ɵɵelementStart(8, \"div\", 5)(9, \"nz-form-item\")(10, \"nz-form-label\", 6);\n          i0.ɵɵtext(11, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"nz-form-control\");\n          i0.ɵɵelement(13, \"input\", 7);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(14, \"nz-form-item\")(15, \"nz-form-label\", 8);\n          i0.ɵɵtext(16, \"Type\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"nz-form-control\")(18, \"nz-select\", 9);\n          i0.ɵɵtemplate(19, SMSProviderViewComponent_nz_option_19_Template, 1, 2, \"nz-option\", 10);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(20, \"h3\", 11);\n          i0.ɵɵtext(21, \"API Keys\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(22, SMSProviderViewComponent_div_22_Template, 8, 6, \"div\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"button\", 13);\n          i0.ɵɵtext(24);\n          i0.ɵɵpipe(25, \"translate\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"nzGhost\", false);\n          i0.ɵɵadvance(18);\n          i0.ɵɵproperty(\"ngForOf\", ctx.smsProviders);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.getProviderAPIRequirements(ctx.form.value.type));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(25, 6, \"profile.submit\"));\n        }\n      },\n      dependencies: [i6.NgForOf, i6.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName, i7.NzAlertComponent, i8.NzInputDirective, i9.NzButtonComponent, i10.ɵNzTransitionPatchDirective, i11.NzWaveDirective, i12.NzColDirective, i12.NzRowDirective, i13.NzFormDirective, i13.NzFormItemComponent, i13.NzFormLabelComponent, i13.NzFormControlComponent, i14.NzOptionComponent, i14.NzSelectComponent, i15.NzPageHeaderComponent, i15.NzPageHeaderContentDirective, i15.NzPageHeaderExtraDirective, i16.NzSpaceComponent, i16.NzSpaceItemDirective, i6.AsyncPipe, i17.TranslatePipe],\n      encapsulation: 2\n    });\n  }\n}\nclass SMSProviderAPIKeyObj {}","map":{"version":3,"names":["UntypedFormBuilder","Validators","ActivatedRoute","CreateSmsProviderGQL","MarkSmsProviderAsDefaultGQL","SmsProviderType","UpdateSmsProviderGQL","RouterHelperService","environment","NzModalService","firstValueFrom","i0","ɵɵelementStart","ɵɵlistener","SMSProviderViewComponent_div_4_button_1_Template_button_click_0_listener","ɵɵrestoreView","_r6","ctx_r5","ɵɵnextContext","ɵɵresetView","markAsDefault","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","SMSProviderViewComponent_div_4_button_1_Template","ɵɵadvance","ɵɵproperty","tmp_0_0","ɵɵpipeBind1","ctx_r0","route","data","smsProvider","isDefault","ctx_r1","form","invalid","ɵɵtextInterpolate1","ɵɵelement","type_r7","ɵɵtextInterpolate","apiKeyObject_r8","accountId","authToken","fromNumber","smsType","verificationTemplate","SMSProviderViewComponent_div_22_nz_form_item_2_Template","SMSProviderViewComponent_div_22_nz_form_item_3_Template","SMSProviderViewComponent_div_22_nz_form_item_4_Template","SMSProviderViewComponent_div_22_nz_form_item_5_Template","SMSProviderViewComponent_div_22_nz_form_item_6_Template","SMSProviderViewComponent_div_22_nz_alert_7_Template","SMSProviderViewComponent","constructor","fb","updateGQL","createGQL","markAsDefaultGQL","routerHelper","modalService","group","id","name","required","type","smsProviders","Twilio","BroadNet","Plivo","Vonage","Pahappa","root","jwt","localStorage","getItem","ngOnInit","subscription","subscribe","provider","patchValue","ngOnDestroy","unsubscribe","onSubmit","_this","_asyncToGenerator","input","value","create","nzTitle","nzContent","nzOnOk","_ref","mutate","goToParent","apply","arguments","nzOnCancel","_ref2","getProviderAPIRequirements","_this2","get","ɵɵdirectiveInject","i1","i2","i3","i4","i5","selectors","decls","vars","consts","template","SMSProviderViewComponent_Template","rf","ctx","SMSProviderViewComponent_Template_form_ngSubmit_0_listener","SMSProviderViewComponent_div_4_Template","SMSProviderViewComponent_button_5_Template","SMSProviderViewComponent_nz_option_19_Template","SMSProviderViewComponent_div_22_Template","SMSProviderAPIKeyObj"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/apps/admin-panel/src/app/cms/management/management-sms-provider/sms-provider-view/sms-provider-view.component.ts","/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/apps/admin-panel/src/app/cms/management/management-sms-provider/sms-provider-view/sms-provider-view.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { UntypedFormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { ApolloQueryResult } from '@apollo/client/core';\nimport {\n  CreateSmsProviderGQL,\n  MarkSmsProviderAsDefaultGQL,\n  SmsProviderType,\n  UpdateSmsProviderGQL,\n  ViewSmsProviderQuery,\n} from '@ridy/admin-panel/generated/graphql';\nimport { RouterHelperService } from '@ridy/admin-panel/src/app/@services/router-helper.service';\nimport { environment } from '@ridy/admin-panel/src/environments/environment';\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport { firstValueFrom, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-sms-provider-view',\n  templateUrl: './sms-provider-view.component.html',\n})\nexport class SMSProviderViewComponent implements OnInit, OnDestroy {\n  constructor(\n    public route: ActivatedRoute,\n    private fb: UntypedFormBuilder,\n    private updateGQL: UpdateSmsProviderGQL,\n    private createGQL: CreateSmsProviderGQL,\n    private markAsDefaultGQL: MarkSmsProviderAsDefaultGQL,\n    private routerHelper: RouterHelperService,\n    private modalService: NzModalService,\n  ) {}\n\n  form = this.fb.group({\n    id: [null],\n    name: [null, Validators.required],\n    type: [null, Validators.required],\n    accountId: [null],\n    authToken: [null],\n    verificationTemplate: [null],\n    fromNumber: [null],\n    smsType: [null],\n  });\n  subscription?: Subscription;\n  smsProviders = [\n    SmsProviderType.Twilio,\n    SmsProviderType.BroadNet,\n    SmsProviderType.Plivo,\n    SmsProviderType.Vonage,\n    SmsProviderType.Pahappa,\n  ];\n  root = environment.root;\n  jwt = localStorage.getItem('ridy_admin_token');\n\n  ngOnInit(): void {\n    this.subscription = this.route.data.subscribe((data) => {\n      const provider: ApolloQueryResult<ViewSmsProviderQuery> =\n        data.smsProvider;\n      this.form.patchValue(provider.data.smsProvider);\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n\n  async onSubmit() {\n    const { id, ...input } = this.form.value;\n    if (id == null) {\n      this.modalService.create({\n        nzTitle: 'Default SMS Provider',\n        nzContent: 'Do you want to set this as the default SMS provider?',\n        nzOnOk: async () => {\n          await firstValueFrom(\n            this.createGQL.mutate({ input: { ...input, isDefault: true } }),\n          );\n          this.routerHelper.goToParent(this.route);\n        },\n        nzOnCancel: async () => {\n          await firstValueFrom(this.createGQL.mutate({ input }));\n          this.routerHelper.goToParent(this.route);\n        },\n      });\n    } else {\n      await firstValueFrom(this.updateGQL.mutate({ id, input }));\n      this.routerHelper.goToParent(this.route);\n    }\n  }\n\n  getProviderAPIRequirements(\n    type?: SmsProviderType,\n  ): SMSProviderAPIKeyObj | null {\n    if (type == null) return null;\n    switch (type) {\n      case SmsProviderType.Twilio:\n        return {\n          accountId: 'Account SID',\n          authToken: 'Auth Token',\n          fromNumber: 'From Number',\n          verificationTemplate: 'Verification Template',\n        };\n\n      case SmsProviderType.BroadNet:\n        return {\n          accountId: 'Username',\n          authToken: 'Password',\n          fromNumber: 'From Number',\n          smsType: 'SMS Type',\n          verificationTemplate: 'Verification Template',\n        };\n\n      case SmsProviderType.Plivo:\n        return {\n          accountId: 'Auth ID',\n          authToken: 'Auth Token',\n          fromNumber: 'Sender ID',\n          verificationTemplate: 'Verification Template',\n        };\n\n      case SmsProviderType.Vonage:\n        return {\n          accountId: 'API Key',\n          authToken: 'API Secret',\n          fromNumber: 'From Number',\n          verificationTemplate: 'Verification Template',\n        };\n\n      case SmsProviderType.Pahappa:\n        return {\n          accountId: 'Username',\n          authToken: 'Password',\n          fromNumber: 'Sender',\n          verificationTemplate: 'Verification Template',\n        };\n\n      default:\n        return null;\n    }\n  }\n\n  async markAsDefault() {\n    const id = this.form.get('id')?.value;\n    if (id == null) return;\n    await firstValueFrom(this.markAsDefaultGQL.mutate({ id }));\n    this.routerHelper.goToParent(this.route);\n  }\n}\nclass SMSProviderAPIKeyObj {\n  accountId?: string;\n  authToken?: string;\n  fromNumber?: string;\n  verificationTemplate?: string;\n  smsType?: string;\n}\n","<form nz-form [formGroup]=\"form\" nzLayout=\"vertical\" (ngSubmit)=\"onSubmit()\">\n\n  <nz-page-header [nzGhost]=\"false\" nzBackIcon nzTitle=\"SMS Provider\"\n    nzSubtitle=\"Manage SMS providers for sending verification codes\">\n    <nz-page-header-extra>\n      <nz-space>\n        <div *nzSpaceItem>\n          <button nz-button nzType=\"default\" (click)=\"markAsDefault()\"\n            *ngIf=\"(route.data | async)?.smsProvider?.isDefault === false\">Mark\n            as default</button>\n        </div>\n        <button *nzSpaceItem nz-button nzType=\"primary\" [disabled]=\"form.invalid\" type=\"submit\">\n          {{ 'profile.saveChanges' | translate }}\n\n        </button>\n      </nz-space>\n    </nz-page-header-extra>\n    <nz-page-header-content>\n      <input formControlName=\"id\" type=\"hidden\" hidden>\n      <div class=\"lg:grid lg:grid-cols-4 lg:gap-2\">\n        <nz-form-item>\n          <nz-form-label nzRequired nzFor=\"name\">Name</nz-form-label>\n          <nz-form-control>\n            <input nz-input required id=\"name\" formControlName=\"name\">\n          </nz-form-control>\n        </nz-form-item>\n        <nz-form-item>\n          <nz-form-label nzRequired nzFor=\"type\">Type</nz-form-label>\n          <nz-form-control>\n            <nz-select formControlName=\"type\" id=\"type\">\n              <nz-option *ngFor=\"let type of smsProviders\" [nzValue]=\"type\" [nzLabel]=\"type\"></nz-option>\n            </nz-select>\n          </nz-form-control>\n        </nz-form-item>\n      </div>\n      <h3 class=\"my-2 text-sm\">API Keys</h3>\n      <div *ngIf=\"getProviderAPIRequirements(form.value.type) as apiKeyObject\">\n        <div class=\"lg:grid lg:grid-cols-4 lg:gap-2\">\n          <nz-form-item *ngIf=\"apiKeyObject.accountId\">\n            <nz-form-label nzFor=\"accountId\">{{apiKeyObject.accountId}}</nz-form-label>\n            <nz-form-control>\n              <input nz-input formControlName=\"accountId\" id=\"accountId\">\n            </nz-form-control>\n          </nz-form-item>\n          <nz-form-item *ngIf=\"apiKeyObject.authToken\">\n            <nz-form-label nzFor=\"authToken\">{{apiKeyObject.authToken}}</nz-form-label>\n            <nz-form-control>\n              <input nz-input formControlName=\"authToken\" id=\"authToken\">\n            </nz-form-control>\n          </nz-form-item>\n          <nz-form-item *ngIf=\"apiKeyObject.fromNumber\">\n            <nz-form-label nzFor=\"fromNumber\">{{apiKeyObject.fromNumber}}</nz-form-label>\n            <nz-form-control>\n              <input nz-input formControlName=\"fromNumber\" id=\"fromNumber\">\n            </nz-form-control>\n          </nz-form-item>\n          <nz-form-item *ngIf=\"apiKeyObject.smsType\">\n            <nz-form-label nzFor=\"smsType\">{{apiKeyObject.smsType}}</nz-form-label>\n            <nz-form-control>\n              <input nz-input formControlName=\"smsType\" id=\"smsType\">\n            </nz-form-control>\n          </nz-form-item>\n          <nz-form-item *ngIf=\"apiKeyObject.verificationTemplate\">\n            <nz-form-label nzFor=\"verificationTemplate\">{{apiKeyObject.verificationTemplate}}</nz-form-label>\n            <nz-form-control>\n              <input nz-input formControlName=\"verificationTemplate\" id=\"verificationTemplate\">\n            </nz-form-control>\n          </nz-form-item>\n\n        </div>\n        <nz-alert nzType=\"info\" nzMessage=\"Verification code template\" *ngIf=\"apiKeyObject.verificationTemplate\"\n          nzDescription=\"Use the following variables in your template: {code} as placeholder for the verification code.\"\n          nzShowIcon></nz-alert>\n      </div>\n    </nz-page-header-content>\n    <button nz-button nzType=\"primary\" class=\"float-right\" type=\"submit\" [disabled]=\"form.invalid\">{{ 'profile.submit' |\n      translate\n      }}</button>\n  </nz-page-header>\n</form>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}