{"ast":null,"code":"import _asyncToGenerator from \"/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Router } from '@angular/router';\nimport { CurrentConfigurationGQL } from '@ridy/admin-panel/generated/graphql';\nimport { NzMessageService } from 'ng-zorro-antd/message';\nimport { firstValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"ng-zorro-antd/message\";\nimport * as i3 from \"@ridy/admin-panel/generated/graphql\";\nexport class ConfigGuard {\n  constructor(router, msg, currentConfigGql) {\n    this.router = router;\n    this.msg = msg;\n    this.currentConfigGql = currentConfigGql;\n  }\n  canActivate(next, state) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const result = yield firstValueFrom(_this.currentConfigGql.fetch({}));\n      if (result.data.currentConfiguration.firebaseProjectPrivateKey == null || result.data.currentConfiguration.purchaseCode == null) {\n        return true;\n      } else {\n        _this.msg.warning('System is already configured. Try with admin password parameter');\n        _this.router.navigate(['../login']);\n        return false;\n      }\n    })();\n  }\n  static {\n    this.ɵfac = function ConfigGuard_Factory(t) {\n      return new (t || ConfigGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.NzMessageService), i0.ɵɵinject(i3.CurrentConfigurationGQL));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ConfigGuard,\n      factory: ConfigGuard.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["Router","CurrentConfigurationGQL","NzMessageService","firstValueFrom","ConfigGuard","constructor","router","msg","currentConfigGql","canActivate","next","state","_this","_asyncToGenerator","result","fetch","data","currentConfiguration","firebaseProjectPrivateKey","purchaseCode","warning","navigate","i0","ɵɵinject","i1","i2","i3","factory","ɵfac"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/apps/admin-panel/src/app/config/config.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { CurrentConfigurationGQL } from '@ridy/admin-panel/generated/graphql';\nimport { NzMessageService } from 'ng-zorro-antd/message';\nimport { firstValueFrom } from 'rxjs';\n\n@Injectable()\nexport class ConfigGuard  {\n  constructor(\n    private router: Router,\n    private msg: NzMessageService,\n    private currentConfigGql: CurrentConfigurationGQL\n  ) {}\n\n  async canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Promise<boolean | UrlTree> {\n    const result = await firstValueFrom(this.currentConfigGql.fetch({}));\n    if (\n      result.data.currentConfiguration.firebaseProjectPrivateKey == null ||\n      result.data.currentConfiguration.purchaseCode == null\n    ) {\n      return true;\n    } else {\n      this.msg.warning(\n        'System is already configured. Try with admin password parameter'\n      );\n      this.router.navigate(['../login']);\n      return false;\n    }\n  }\n}\n"],"mappings":";AACA,SAAiCA,MAAM,QAAsC,iBAAiB;AAC9F,SAASC,uBAAuB,QAAQ,qCAAqC;AAC7E,SAASC,gBAAgB,QAAQ,uBAAuB;AACxD,SAASC,cAAc,QAAQ,MAAM;;;;;AAGrC,OAAM,MAAOC,WAAW;EACtBC,YACUC,MAAc,EACdC,GAAqB,EACrBC,gBAAyC;IAFzC,KAAAF,MAAM,GAANA,MAAM;IACN,KAAAC,GAAG,GAAHA,GAAG;IACH,KAAAC,gBAAgB,GAAhBA,gBAAgB;EACvB;EAEGC,WAAWA,CACfC,IAA4B,EAC5BC,KAA0B;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAE1B,MAAMC,MAAM,SAASX,cAAc,CAACS,KAAI,CAACJ,gBAAgB,CAACO,KAAK,CAAC,EAAE,CAAC,CAAC;MACpE,IACED,MAAM,CAACE,IAAI,CAACC,oBAAoB,CAACC,yBAAyB,IAAI,IAAI,IAClEJ,MAAM,CAACE,IAAI,CAACC,oBAAoB,CAACE,YAAY,IAAI,IAAI,EACrD;QACA,OAAO,IAAI;OACZ,MAAM;QACLP,KAAI,CAACL,GAAG,CAACa,OAAO,CACd,iEAAiE,CAClE;QACDR,KAAI,CAACN,MAAM,CAACe,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;QAClC,OAAO,KAAK;;IACb;EACH;;;uBAxBWjB,WAAW,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAxB,MAAA,GAAAsB,EAAA,CAAAC,QAAA,CAAAE,EAAA,CAAAvB,gBAAA,GAAAoB,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAzB,uBAAA;IAAA;EAAA;;;aAAXG,WAAW;MAAAuB,OAAA,EAAXvB,WAAW,CAAAwB;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}