{"ast":null,"code":"import { __extends } from \"tslib\";\nimport Action from '../base';\nimport { distance } from '../util';\nvar DISTANCE = 4; // 移动的最小距离\n/**\n * @ignore\n * View 支持 Drag 的 Action\n */\nvar Drag = /** @class */function (_super) {\n  __extends(Drag, _super);\n  function Drag() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    // Action 开始，不等同于 拖拽开始，需要判定移动的范围\n    _this.starting = false;\n    // 拖拽开始\n    _this.dragStart = false;\n    return _this;\n  }\n  /**\n   * 开始\n   */\n  Drag.prototype.start = function () {\n    this.starting = true;\n    this.startPoint = this.context.getCurrentPoint();\n  };\n  /**\n   * 拖拽\n   */\n  Drag.prototype.drag = function () {\n    if (!this.startPoint) {\n      return;\n    }\n    var current = this.context.getCurrentPoint();\n    var view = this.context.view;\n    var event = this.context.event;\n    if (!this.dragStart) {\n      if (distance(current, this.startPoint) > DISTANCE) {\n        view.emit('dragstart', {\n          target: event.target,\n          x: event.x,\n          y: event.y\n        });\n        this.dragStart = true;\n      }\n    } else {\n      view.emit('drag', {\n        target: event.target,\n        x: event.x,\n        y: event.y\n      });\n    }\n  };\n  /**\n   * 结束\n   */\n  Drag.prototype.end = function () {\n    if (this.dragStart) {\n      var view = this.context.view;\n      var event_1 = this.context.event;\n      view.emit('dragend', {\n        target: event_1.target,\n        x: event_1.x,\n        y: event_1.y\n      });\n    }\n    this.starting = false;\n    this.dragStart = false;\n  };\n  return Drag;\n}(Action);\nexport default Drag;","map":{"version":3,"names":["__extends","Action","distance","DISTANCE","Drag","_super","_this","apply","arguments","starting","dragStart","prototype","start","startPoint","context","getCurrentPoint","drag","current","view","event","emit","target","x","y","end","event_1"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g2/esm/interaction/action/view/drag.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport Action from '../base';\nimport { distance } from '../util';\nvar DISTANCE = 4; // 移动的最小距离\n/**\n * @ignore\n * View 支持 Drag 的 Action\n */\nvar Drag = /** @class */ (function (_super) {\n    __extends(Drag, _super);\n    function Drag() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        // Action 开始，不等同于 拖拽开始，需要判定移动的范围\n        _this.starting = false;\n        // 拖拽开始\n        _this.dragStart = false;\n        return _this;\n    }\n    /**\n     * 开始\n     */\n    Drag.prototype.start = function () {\n        this.starting = true;\n        this.startPoint = this.context.getCurrentPoint();\n    };\n    /**\n     * 拖拽\n     */\n    Drag.prototype.drag = function () {\n        if (!this.startPoint) {\n            return;\n        }\n        var current = this.context.getCurrentPoint();\n        var view = this.context.view;\n        var event = this.context.event;\n        if (!this.dragStart) {\n            if (distance(current, this.startPoint) > DISTANCE) {\n                view.emit('dragstart', {\n                    target: event.target,\n                    x: event.x,\n                    y: event.y,\n                });\n                this.dragStart = true;\n            }\n        }\n        else {\n            view.emit('drag', {\n                target: event.target,\n                x: event.x,\n                y: event.y,\n            });\n        }\n    };\n    /**\n     * 结束\n     */\n    Drag.prototype.end = function () {\n        if (this.dragStart) {\n            var view = this.context.view;\n            var event_1 = this.context.event;\n            view.emit('dragend', {\n                target: event_1.target,\n                x: event_1.x,\n                y: event_1.y,\n            });\n        }\n        this.starting = false;\n        this.dragStart = false;\n    };\n    return Drag;\n}(Action));\nexport default Drag;\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,MAAM,MAAM,SAAS;AAC5B,SAASC,QAAQ,QAAQ,SAAS;AAClC,IAAIC,QAAQ,GAAG,CAAC,CAAC,CAAC;AAClB;AACA;AACA;AACA;AACA,IAAIC,IAAI,GAAG,aAAe,UAAUC,MAAM,EAAE;EACxCL,SAAS,CAACI,IAAI,EAAEC,MAAM,CAAC;EACvB,SAASD,IAAIA,CAAA,EAAG;IACZ,IAAIE,KAAK,GAAGD,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACE,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,IAAI,IAAI;IACpE;IACAF,KAAK,CAACG,QAAQ,GAAG,KAAK;IACtB;IACAH,KAAK,CAACI,SAAS,GAAG,KAAK;IACvB,OAAOJ,KAAK;EAChB;EACA;AACJ;AACA;EACIF,IAAI,CAACO,SAAS,CAACC,KAAK,GAAG,YAAY;IAC/B,IAAI,CAACH,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACI,UAAU,GAAG,IAAI,CAACC,OAAO,CAACC,eAAe,CAAC,CAAC;EACpD,CAAC;EACD;AACJ;AACA;EACIX,IAAI,CAACO,SAAS,CAACK,IAAI,GAAG,YAAY;IAC9B,IAAI,CAAC,IAAI,CAACH,UAAU,EAAE;MAClB;IACJ;IACA,IAAII,OAAO,GAAG,IAAI,CAACH,OAAO,CAACC,eAAe,CAAC,CAAC;IAC5C,IAAIG,IAAI,GAAG,IAAI,CAACJ,OAAO,CAACI,IAAI;IAC5B,IAAIC,KAAK,GAAG,IAAI,CAACL,OAAO,CAACK,KAAK;IAC9B,IAAI,CAAC,IAAI,CAACT,SAAS,EAAE;MACjB,IAAIR,QAAQ,CAACe,OAAO,EAAE,IAAI,CAACJ,UAAU,CAAC,GAAGV,QAAQ,EAAE;QAC/Ce,IAAI,CAACE,IAAI,CAAC,WAAW,EAAE;UACnBC,MAAM,EAAEF,KAAK,CAACE,MAAM;UACpBC,CAAC,EAAEH,KAAK,CAACG,CAAC;UACVC,CAAC,EAAEJ,KAAK,CAACI;QACb,CAAC,CAAC;QACF,IAAI,CAACb,SAAS,GAAG,IAAI;MACzB;IACJ,CAAC,MACI;MACDQ,IAAI,CAACE,IAAI,CAAC,MAAM,EAAE;QACdC,MAAM,EAAEF,KAAK,CAACE,MAAM;QACpBC,CAAC,EAAEH,KAAK,CAACG,CAAC;QACVC,CAAC,EAAEJ,KAAK,CAACI;MACb,CAAC,CAAC;IACN;EACJ,CAAC;EACD;AACJ;AACA;EACInB,IAAI,CAACO,SAAS,CAACa,GAAG,GAAG,YAAY;IAC7B,IAAI,IAAI,CAACd,SAAS,EAAE;MAChB,IAAIQ,IAAI,GAAG,IAAI,CAACJ,OAAO,CAACI,IAAI;MAC5B,IAAIO,OAAO,GAAG,IAAI,CAACX,OAAO,CAACK,KAAK;MAChCD,IAAI,CAACE,IAAI,CAAC,SAAS,EAAE;QACjBC,MAAM,EAAEI,OAAO,CAACJ,MAAM;QACtBC,CAAC,EAAEG,OAAO,CAACH,CAAC;QACZC,CAAC,EAAEE,OAAO,CAACF;MACf,CAAC,CAAC;IACN;IACA,IAAI,CAACd,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,SAAS,GAAG,KAAK;EAC1B,CAAC;EACD,OAAON,IAAI;AACf,CAAC,CAACH,MAAM,CAAE;AACV,eAAeG,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}