{"ast":null,"code":"import { clone, isPlainObject, lowerCase, mix } from '@antv/util';\nimport GrammarInteraction from './grammar-interaction';\nvar Interactions = {};\n/**\n * 根据交互行为名字获取对应的交互类\n * @param name 交互名字\n * @returns 交互类\n */\nexport function getInteraction(name) {\n  return Interactions[lowerCase(name)];\n}\n/**\n * 注册交互行为\n * @param name 交互行为名字\n * @param interaction 交互类\n */\nexport function registerInteraction(name, interaction) {\n  Interactions[lowerCase(name)] = interaction;\n}\n/**\n * 创建交互实例\n * @param name 交互名\n * @param view 交互应用的 View 实例\n * @param cfg 交互行为配置\n */\nexport function createInteraction(name, view, cfg) {\n  var interaciton = getInteraction(name);\n  if (!interaciton) {\n    return null;\n  }\n  if (isPlainObject(interaciton)) {\n    // 如果不 clone 则会多个 interaction 实例共享 step 的定义\n    var steps = mix(clone(interaciton), cfg);\n    return new GrammarInteraction(view, steps);\n  } else {\n    var cls = interaciton;\n    return new cls(view, cfg);\n  }\n}\nexport { default as Interaction } from './interaction';\nexport { Action, registerAction, getActionClass } from './action';","map":{"version":3,"names":["clone","isPlainObject","lowerCase","mix","GrammarInteraction","Interactions","getInteraction","name","registerInteraction","interaction","createInteraction","view","cfg","interaciton","steps","cls","default","Interaction","Action","registerAction","getActionClass"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g2/esm/interaction/index.js"],"sourcesContent":["import { clone, isPlainObject, lowerCase, mix } from '@antv/util';\nimport GrammarInteraction from './grammar-interaction';\nvar Interactions = {};\n/**\n * 根据交互行为名字获取对应的交互类\n * @param name 交互名字\n * @returns 交互类\n */\nexport function getInteraction(name) {\n    return Interactions[lowerCase(name)];\n}\n/**\n * 注册交互行为\n * @param name 交互行为名字\n * @param interaction 交互类\n */\nexport function registerInteraction(name, interaction) {\n    Interactions[lowerCase(name)] = interaction;\n}\n/**\n * 创建交互实例\n * @param name 交互名\n * @param view 交互应用的 View 实例\n * @param cfg 交互行为配置\n */\nexport function createInteraction(name, view, cfg) {\n    var interaciton = getInteraction(name);\n    if (!interaciton) {\n        return null;\n    }\n    if (isPlainObject(interaciton)) {\n        // 如果不 clone 则会多个 interaction 实例共享 step 的定义\n        var steps = mix(clone(interaciton), cfg);\n        return new GrammarInteraction(view, steps);\n    }\n    else {\n        var cls = interaciton;\n        return new cls(view, cfg);\n    }\n}\nexport { default as Interaction } from './interaction';\nexport { Action, registerAction, getActionClass } from './action';\n"],"mappings":"AAAA,SAASA,KAAK,EAAEC,aAAa,EAAEC,SAAS,EAAEC,GAAG,QAAQ,YAAY;AACjE,OAAOC,kBAAkB,MAAM,uBAAuB;AACtD,IAAIC,YAAY,GAAG,CAAC,CAAC;AACrB;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAACC,IAAI,EAAE;EACjC,OAAOF,YAAY,CAACH,SAAS,CAACK,IAAI,CAAC,CAAC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,mBAAmBA,CAACD,IAAI,EAAEE,WAAW,EAAE;EACnDJ,YAAY,CAACH,SAAS,CAACK,IAAI,CAAC,CAAC,GAAGE,WAAW;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,iBAAiBA,CAACH,IAAI,EAAEI,IAAI,EAAEC,GAAG,EAAE;EAC/C,IAAIC,WAAW,GAAGP,cAAc,CAACC,IAAI,CAAC;EACtC,IAAI,CAACM,WAAW,EAAE;IACd,OAAO,IAAI;EACf;EACA,IAAIZ,aAAa,CAACY,WAAW,CAAC,EAAE;IAC5B;IACA,IAAIC,KAAK,GAAGX,GAAG,CAACH,KAAK,CAACa,WAAW,CAAC,EAAED,GAAG,CAAC;IACxC,OAAO,IAAIR,kBAAkB,CAACO,IAAI,EAAEG,KAAK,CAAC;EAC9C,CAAC,MACI;IACD,IAAIC,GAAG,GAAGF,WAAW;IACrB,OAAO,IAAIE,GAAG,CAACJ,IAAI,EAAEC,GAAG,CAAC;EAC7B;AACJ;AACA,SAASI,OAAO,IAAIC,WAAW,QAAQ,eAAe;AACtD,SAASC,MAAM,EAAEC,cAAc,EAAEC,cAAc,QAAQ,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}