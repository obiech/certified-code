{"ast":null,"code":"import { __assign, __extends, __values } from \"tslib\";\nimport { deepMix, find, get, isEqual, isFunction, mix, isString, isBoolean, flatten, isArray } from '@antv/util';\nimport { Crosshair, HtmlTooltip } from '../../dependents';\nimport { getAngleByPoint, getDistanceToCenter, getCoordinateClipCfg } from '../../util/coordinate';\nimport { polarToCartesian } from '../../util/graphics';\nimport { findItemsFromView } from '../../util/tooltip';\nimport { BBox } from '../../util/bbox';\nimport { Controller } from './base';\nimport Event from '../event';\n// Filter duplicates, use `name`, `color`, `value` and `title` property values as condition\nfunction uniq(items) {\n  var uniqItems = [];\n  var _loop_1 = function (index) {\n    var item = items[index];\n    var result = find(uniqItems, function (subItem) {\n      return subItem.color === item.color && subItem.name === item.name && subItem.value === item.value && subItem.title === item.title;\n    });\n    if (!result) {\n      uniqItems.push(item);\n    }\n  };\n  for (var index = 0; index < items.length; index++) {\n    _loop_1(index);\n  }\n  return uniqItems;\n}\n/** @ignore */\nvar Tooltip = /** @class */function (_super) {\n  __extends(Tooltip, _super);\n  function Tooltip() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.isLocked = false;\n    return _this;\n  }\n  Object.defineProperty(Tooltip.prototype, \"name\", {\n    get: function () {\n      return 'tooltip';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Tooltip.prototype.init = function () {};\n  Tooltip.prototype.isVisible = function () {\n    var option = this.view.getOptions().tooltip;\n    return option !== false;\n  };\n  Tooltip.prototype.render = function () {};\n  /**\n   * Shows tooltip\n   * @param point\n   */\n  Tooltip.prototype.showTooltip = function (point) {\n    this.point = point;\n    if (!this.isVisible()) {\n      // 如果设置 tooltip(false) 则始终不显示\n      return;\n    }\n    var view = this.view;\n    var items = this.getTooltipItems(point);\n    if (!items.length) {\n      // 无内容则不展示，同时 tooltip 需要隐藏\n      this.hideTooltip();\n      return;\n    }\n    var title = this.getTitle(items);\n    var dataPoint = {\n      x: items[0].x,\n      y: items[0].y\n    }; // 数据点位置\n    view.emit('tooltip:show', Event.fromData(view, 'tooltip:show', __assign({\n      items: items,\n      title: title\n    }, point)));\n    var cfg = this.getTooltipCfg();\n    var follow = cfg.follow,\n      showMarkers = cfg.showMarkers,\n      showCrosshairs = cfg.showCrosshairs,\n      showContent = cfg.showContent,\n      marker = cfg.marker;\n    var lastItems = this.items;\n    var lastTitle = this.title;\n    if (!isEqual(lastTitle, title) || !isEqual(lastItems, items)) {\n      // 内容发生变化了更新 tooltip\n      view.emit('tooltip:change', Event.fromData(view, 'tooltip:change', __assign({\n        items: items,\n        title: title\n      }, point)));\n      if (isFunction(showContent) ? showContent(items) : showContent) {\n        // 展示 tooltip 内容框才渲染 tooltip\n        if (!this.tooltip) {\n          // 延迟生成\n          this.renderTooltip();\n        }\n        this.tooltip.update(mix({}, cfg, {\n          items: this.getItemsAfterProcess(items),\n          title: title\n        }, follow ? point : {}));\n        this.tooltip.show();\n      }\n      if (showMarkers) {\n        // 展示 tooltipMarkers，tooltipMarkers 跟随数据\n        this.renderTooltipMarkers(items, marker);\n      }\n    } else {\n      // 内容未发生变化，则更新位置\n      if (this.tooltip && follow) {\n        this.tooltip.update(point);\n        this.tooltip.show(); // tooltip 有可能被隐藏，需要保证显示状态\n      }\n\n      if (this.tooltipMarkersGroup) {\n        this.tooltipMarkersGroup.show();\n      }\n    }\n    this.items = items;\n    this.title = title;\n    if (showCrosshairs) {\n      // 展示 tooltip 辅助线\n      var isCrosshairsFollowCursor = get(cfg, ['crosshairs', 'follow'], false); // 辅助线是否要跟随鼠标\n      this.renderCrosshairs(isCrosshairsFollowCursor ? point : dataPoint, cfg);\n    }\n  };\n  Tooltip.prototype.hideTooltip = function () {\n    var follow = this.getTooltipCfg().follow;\n    if (!follow) {\n      this.point = null;\n      return;\n    }\n    // hide the tooltipMarkers\n    var tooltipMarkersGroup = this.tooltipMarkersGroup;\n    if (tooltipMarkersGroup) {\n      tooltipMarkersGroup.hide();\n    }\n    // hide crosshairs\n    var xCrosshair = this.xCrosshair;\n    var yCrosshair = this.yCrosshair;\n    if (xCrosshair) {\n      xCrosshair.hide();\n    }\n    if (yCrosshair) {\n      yCrosshair.hide();\n    }\n    var tooltip = this.tooltip;\n    if (tooltip) {\n      tooltip.hide();\n    }\n    this.view.emit('tooltip:hide', Event.fromData(this.view, 'tooltip:hide', {}));\n    this.point = null;\n  };\n  /**\n   * lockTooltip\n   */\n  Tooltip.prototype.lockTooltip = function () {\n    this.isLocked = true;\n    if (this.tooltip) {\n      // tooltip contianer 可捕获事件\n      this.tooltip.setCapture(true);\n    }\n  };\n  /**\n   * unlockTooltip\n   */\n  Tooltip.prototype.unlockTooltip = function () {\n    this.isLocked = false;\n    var cfg = this.getTooltipCfg();\n    if (this.tooltip) {\n      // 重置 capture 属性\n      this.tooltip.setCapture(cfg.capture);\n    }\n  };\n  /**\n   * isTooltipLocked\n   */\n  Tooltip.prototype.isTooltipLocked = function () {\n    return this.isLocked;\n  };\n  Tooltip.prototype.clear = function () {\n    var _a = this,\n      tooltip = _a.tooltip,\n      xCrosshair = _a.xCrosshair,\n      yCrosshair = _a.yCrosshair,\n      tooltipMarkersGroup = _a.tooltipMarkersGroup;\n    if (tooltip) {\n      tooltip.hide();\n      tooltip.clear();\n    }\n    if (xCrosshair) {\n      xCrosshair.clear();\n    }\n    if (yCrosshair) {\n      yCrosshair.clear();\n    }\n    if (tooltipMarkersGroup) {\n      tooltipMarkersGroup.clear();\n    }\n    // 如果 customContent 不为空，就重新生成 tooltip\n    if (tooltip === null || tooltip === void 0 ? void 0 : tooltip.get('customContent')) {\n      this.tooltip.destroy();\n      this.tooltip = null;\n    }\n    // title 和 items 需要清空, 否则 tooltip 内容会出现置空的情况\n    // 即：需要走进 !isEqual(lastTitle, title) || !isEqual(lastItems, items) 的逻辑，更新 tooltip 的内容\n    this.title = null;\n    this.items = null;\n  };\n  Tooltip.prototype.destroy = function () {\n    if (this.tooltip) {\n      this.tooltip.destroy();\n    }\n    if (this.xCrosshair) {\n      this.xCrosshair.destroy();\n    }\n    if (this.yCrosshair) {\n      this.yCrosshair.destroy();\n    }\n    if (this.guideGroup) {\n      this.guideGroup.remove(true);\n    }\n    this.reset();\n  };\n  Tooltip.prototype.reset = function () {\n    this.items = null;\n    this.title = null;\n    this.tooltipMarkersGroup = null;\n    this.tooltipCrosshairsGroup = null;\n    this.xCrosshair = null;\n    this.yCrosshair = null;\n    this.tooltip = null;\n    this.guideGroup = null;\n    this.isLocked = false;\n    this.point = null;\n  };\n  Tooltip.prototype.changeVisible = function (visible) {\n    if (this.visible === visible) {\n      return;\n    }\n    var _a = this,\n      tooltip = _a.tooltip,\n      tooltipMarkersGroup = _a.tooltipMarkersGroup,\n      xCrosshair = _a.xCrosshair,\n      yCrosshair = _a.yCrosshair;\n    if (visible) {\n      if (tooltip) {\n        tooltip.show();\n      }\n      if (tooltipMarkersGroup) {\n        tooltipMarkersGroup.show();\n      }\n      if (xCrosshair) {\n        xCrosshair.show();\n      }\n      if (yCrosshair) {\n        yCrosshair.show();\n      }\n    } else {\n      if (tooltip) {\n        tooltip.hide();\n      }\n      if (tooltipMarkersGroup) {\n        tooltipMarkersGroup.hide();\n      }\n      if (xCrosshair) {\n        xCrosshair.hide();\n      }\n      if (yCrosshair) {\n        yCrosshair.hide();\n      }\n    }\n    this.visible = visible;\n  };\n  Tooltip.prototype.getTooltipItems = function (point) {\n    var e_1, _a, e_2, _b, e_3, _c;\n    var items = this.findItemsFromView(this.view, point);\n    if (items.length) {\n      // 三层\n      items = flatten(items);\n      try {\n        for (var items_1 = __values(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {\n          var itemArr = items_1_1.value;\n          try {\n            for (var itemArr_1 = (e_2 = void 0, __values(itemArr)), itemArr_1_1 = itemArr_1.next(); !itemArr_1_1.done; itemArr_1_1 = itemArr_1.next()) {\n              var item = itemArr_1_1.value;\n              var _d = item.mappingData,\n                x = _d.x,\n                y = _d.y;\n              item.x = isArray(x) ? x[x.length - 1] : x;\n              item.y = isArray(y) ? y[y.length - 1] : y;\n            }\n          } catch (e_2_1) {\n            e_2 = {\n              error: e_2_1\n            };\n          } finally {\n            try {\n              if (itemArr_1_1 && !itemArr_1_1.done && (_b = itemArr_1.return)) _b.call(itemArr_1);\n            } finally {\n              if (e_2) throw e_2.error;\n            }\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n      var shared = this.getTooltipCfg().shared;\n      // shared: false 代表只显示当前拾取到的 shape 的数据，但是一个 view 会有多个 Geometry，所以有可能会拾取到多个 shape\n      if (shared === false && items.length > 1) {\n        var snapItem = items[0];\n        var min = Math.abs(point.y - snapItem[0].y);\n        try {\n          for (var items_2 = __values(items), items_2_1 = items_2.next(); !items_2_1.done; items_2_1 = items_2.next()) {\n            var aItem = items_2_1.value;\n            var yDistance = Math.abs(point.y - aItem[0].y);\n            if (yDistance <= min) {\n              snapItem = aItem;\n              min = yDistance;\n            }\n          }\n        } catch (e_3_1) {\n          e_3 = {\n            error: e_3_1\n          };\n        } finally {\n          try {\n            if (items_2_1 && !items_2_1.done && (_c = items_2.return)) _c.call(items_2);\n          } finally {\n            if (e_3) throw e_3.error;\n          }\n        }\n        items = [snapItem];\n      }\n      return uniq(flatten(items));\n    }\n    return [];\n  };\n  Tooltip.prototype.layout = function () {};\n  Tooltip.prototype.update = function () {\n    if (this.point) {\n      this.showTooltip(this.point);\n    }\n    if (this.tooltip) {\n      // #2279 修复resize之后tooltip越界的问题\n      // 确保tooltip已经创建的情况下\n      var canvas = this.view.getCanvas();\n      // TODO 逍为 tooltip 的区域不应该是 canvas，而应该是整个 特别是在图比较小的时候\n      // 更新 region\n      this.tooltip.set('region', {\n        start: {\n          x: 0,\n          y: 0\n        },\n        end: {\n          x: canvas.get('width'),\n          y: canvas.get('height')\n        }\n      });\n    }\n  };\n  /**\n   * 当前鼠标点是在 enter tooltip 中\n   * @param point\n   */\n  Tooltip.prototype.isCursorEntered = function (point) {\n    // 是可捕获的，并且点在 tooltip dom 上\n    if (this.tooltip) {\n      var el = this.tooltip.getContainer();\n      var capture = this.tooltip.get('capture');\n      if (el && capture) {\n        var _a = el.getBoundingClientRect(),\n          x = _a.x,\n          y = _a.y,\n          width = _a.width,\n          height = _a.height;\n        return new BBox(x, y, width, height).isPointIn(point);\n      }\n    }\n    return false;\n  };\n  // 获取 tooltip 配置，因为用户可能会通过 view.tooltip() 重新配置 tooltip，所以就不做缓存，每次直接读取\n  Tooltip.prototype.getTooltipCfg = function () {\n    var view = this.view;\n    var option = view.getOptions().tooltip;\n    var processOption = this.processCustomContent(option);\n    var theme = view.getTheme();\n    var defaultCfg = get(theme, ['components', 'tooltip'], {});\n    var enterable = get(processOption, 'enterable', defaultCfg.enterable);\n    return deepMix({}, defaultCfg, processOption, {\n      capture: enterable || this.isLocked ? true : false\n    });\n  };\n  // process customContent\n  Tooltip.prototype.processCustomContent = function (option) {\n    if (isBoolean(option) || !get(option, 'customContent')) {\n      return option;\n    }\n    var currentCustomContent = option.customContent;\n    var customContent = function (title, items) {\n      var content = currentCustomContent(title, items) || '';\n      return isString(content) ? '<div class=\"g2-tooltip\">' + content + '</div>' : content;\n    };\n    return __assign(__assign({}, option), {\n      customContent: customContent\n    });\n  };\n  Tooltip.prototype.getTitle = function (items) {\n    var title = items[0].title || items[0].name;\n    this.title = title;\n    return title;\n  };\n  Tooltip.prototype.renderTooltip = function () {\n    var canvas = this.view.getCanvas();\n    var region = {\n      start: {\n        x: 0,\n        y: 0\n      },\n      end: {\n        x: canvas.get('width'),\n        y: canvas.get('height')\n      }\n    };\n    var cfg = this.getTooltipCfg();\n    var tooltip = new HtmlTooltip(__assign(__assign({\n      parent: canvas.get('el').parentNode,\n      region: region\n    }, cfg), {\n      visible: false,\n      crosshairs: null\n    }));\n    tooltip.init();\n    this.tooltip = tooltip;\n  };\n  Tooltip.prototype.renderTooltipMarkers = function (items, marker) {\n    var e_4, _a;\n    var tooltipMarkersGroup = this.getTooltipMarkersGroup();\n    var rootView = this.view.getRootView();\n    var limitInPlot = rootView.limitInPlot;\n    try {\n      for (var items_3 = __values(items), items_3_1 = items_3.next(); !items_3_1.done; items_3_1 = items_3.next()) {\n        var item = items_3_1.value;\n        var x = item.x,\n          y = item.y;\n        // 有裁剪就剪切\n        if (limitInPlot || (tooltipMarkersGroup === null || tooltipMarkersGroup === void 0 ? void 0 : tooltipMarkersGroup.getClip())) {\n          var _b = getCoordinateClipCfg(rootView.getCoordinate()),\n            type = _b.type,\n            attrs_1 = _b.attrs;\n          tooltipMarkersGroup === null || tooltipMarkersGroup === void 0 ? void 0 : tooltipMarkersGroup.setClip({\n            type: type,\n            attrs: attrs_1\n          });\n        } else {\n          // 清除已有的 clip\n          tooltipMarkersGroup === null || tooltipMarkersGroup === void 0 ? void 0 : tooltipMarkersGroup.setClip(undefined);\n        }\n        var theme = this.view.getTheme();\n        var markerDefaultCfg = get(theme, ['components', 'tooltip', 'marker'], {});\n        var attrs = __assign(__assign({\n          fill: item.color,\n          symbol: 'circle',\n          shadowColor: item.color\n        }, isFunction(marker) ? __assign(__assign({}, markerDefaultCfg), marker(item)) : marker), {\n          x: x,\n          y: y\n        });\n        tooltipMarkersGroup.addShape('marker', {\n          attrs: attrs\n        });\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (items_3_1 && !items_3_1.done && (_a = items_3.return)) _a.call(items_3);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n  };\n  Tooltip.prototype.renderCrosshairs = function (point, cfg) {\n    var crosshairsType = get(cfg, ['crosshairs', 'type'], 'x'); // 默认展示 x 轴上的辅助线\n    if (crosshairsType === 'x') {\n      if (this.yCrosshair) {\n        this.yCrosshair.hide();\n      }\n      this.renderXCrosshairs(point, cfg);\n    } else if (crosshairsType === 'y') {\n      if (this.xCrosshair) {\n        this.xCrosshair.hide();\n      }\n      this.renderYCrosshairs(point, cfg);\n    } else if (crosshairsType === 'xy') {\n      this.renderXCrosshairs(point, cfg);\n      this.renderYCrosshairs(point, cfg);\n    }\n  };\n  // 渲染 x 轴上的 tooltip 辅助线\n  Tooltip.prototype.renderXCrosshairs = function (point, tooltipCfg) {\n    var coordinate = this.getViewWithGeometry(this.view).getCoordinate();\n    var start;\n    var end;\n    if (coordinate.isRect) {\n      if (coordinate.isTransposed) {\n        start = {\n          x: coordinate.start.x,\n          y: point.y\n        };\n        end = {\n          x: coordinate.end.x,\n          y: point.y\n        };\n      } else {\n        start = {\n          x: point.x,\n          y: coordinate.end.y\n        };\n        end = {\n          x: point.x,\n          y: coordinate.start.y\n        };\n      }\n    } else {\n      // 极坐标下 x 轴上的 crosshairs 表现为半径\n      var angle = getAngleByPoint(coordinate, point);\n      var center = coordinate.getCenter();\n      var radius = coordinate.getRadius();\n      end = polarToCartesian(center.x, center.y, radius, angle);\n      start = center;\n    }\n    var cfg = deepMix({\n      start: start,\n      end: end,\n      container: this.getTooltipCrosshairsGroup()\n    }, get(tooltipCfg, 'crosshairs', {}), this.getCrosshairsText('x', point, tooltipCfg));\n    delete cfg.type; // 与 Crosshairs 组件的 type 冲突故删除\n    var xCrosshair = this.xCrosshair;\n    if (xCrosshair) {\n      xCrosshair.update(cfg);\n    } else {\n      xCrosshair = new Crosshair.Line(cfg);\n      xCrosshair.init();\n    }\n    xCrosshair.render();\n    xCrosshair.show();\n    this.xCrosshair = xCrosshair;\n  };\n  // 渲染 y 轴上的辅助线\n  Tooltip.prototype.renderYCrosshairs = function (point, tooltipCfg) {\n    var coordinate = this.getViewWithGeometry(this.view).getCoordinate();\n    var cfg;\n    var type;\n    if (coordinate.isRect) {\n      var start = void 0;\n      var end = void 0;\n      if (coordinate.isTransposed) {\n        start = {\n          x: point.x,\n          y: coordinate.end.y\n        };\n        end = {\n          x: point.x,\n          y: coordinate.start.y\n        };\n      } else {\n        start = {\n          x: coordinate.start.x,\n          y: point.y\n        };\n        end = {\n          x: coordinate.end.x,\n          y: point.y\n        };\n      }\n      cfg = {\n        start: start,\n        end: end\n      };\n      type = 'Line';\n    } else {\n      // 极坐标下 y 轴上的 crosshairs 表现为圆弧\n      cfg = {\n        center: coordinate.getCenter(),\n        // @ts-ignore\n        radius: getDistanceToCenter(coordinate, point),\n        startAngle: coordinate.startAngle,\n        endAngle: coordinate.endAngle\n      };\n      type = 'Circle';\n    }\n    cfg = deepMix({\n      container: this.getTooltipCrosshairsGroup()\n    }, cfg, get(tooltipCfg, 'crosshairs', {}), this.getCrosshairsText('y', point, tooltipCfg));\n    delete cfg.type; // 与 Crosshairs 组件的 type 冲突故删除\n    var yCrosshair = this.yCrosshair;\n    if (yCrosshair) {\n      // 如果坐标系发生直角坐标系与极坐标的切换操作\n      if (coordinate.isRect && yCrosshair.get('type') === 'circle' || !coordinate.isRect && yCrosshair.get('type') === 'line') {\n        yCrosshair = new Crosshair[type](cfg);\n        yCrosshair.init();\n      } else {\n        yCrosshair.update(cfg);\n      }\n    } else {\n      yCrosshair = new Crosshair[type](cfg);\n      yCrosshair.init();\n    }\n    yCrosshair.render();\n    yCrosshair.show();\n    this.yCrosshair = yCrosshair;\n  };\n  Tooltip.prototype.getCrosshairsText = function (type, point, tooltipCfg) {\n    var textCfg = get(tooltipCfg, ['crosshairs', 'text']);\n    var follow = get(tooltipCfg, ['crosshairs', 'follow']);\n    var items = this.items;\n    if (textCfg) {\n      var view = this.getViewWithGeometry(this.view);\n      // 需要展示文本\n      var firstItem = items[0];\n      var xScale = view.getXScale();\n      var yScale = view.getYScales()[0];\n      var xValue = void 0;\n      var yValue = void 0;\n      if (follow) {\n        // 如果需要跟随鼠标移动，就需要将当前鼠标坐标点转换为对应的数值\n        var invertPoint = this.view.getCoordinate().invert(point);\n        xValue = xScale.invert(invertPoint.x); // 转换为原始值\n        yValue = yScale.invert(invertPoint.y); // 转换为原始值\n      } else {\n        xValue = firstItem.data[xScale.field];\n        yValue = firstItem.data[yScale.field];\n      }\n      var content = type === 'x' ? xValue : yValue;\n      if (isFunction(textCfg)) {\n        textCfg = textCfg(type, content, items, point);\n      } else {\n        textCfg.content = content;\n      }\n      return {\n        text: textCfg\n      };\n    }\n  };\n  // 获取存储 tooltipMarkers 和 crosshairs 的容器\n  Tooltip.prototype.getGuideGroup = function () {\n    if (!this.guideGroup) {\n      var foregroundGroup = this.view.foregroundGroup;\n      this.guideGroup = foregroundGroup.addGroup({\n        name: 'tooltipGuide',\n        capture: false\n      });\n    }\n    return this.guideGroup;\n  };\n  // 获取 tooltipMarkers 存储的容器\n  Tooltip.prototype.getTooltipMarkersGroup = function () {\n    var tooltipMarkersGroup = this.tooltipMarkersGroup;\n    if (tooltipMarkersGroup && !tooltipMarkersGroup.destroyed) {\n      tooltipMarkersGroup.clear();\n      tooltipMarkersGroup.show();\n    } else {\n      tooltipMarkersGroup = this.getGuideGroup().addGroup({\n        name: 'tooltipMarkersGroup'\n      });\n      tooltipMarkersGroup.toFront();\n      this.tooltipMarkersGroup = tooltipMarkersGroup;\n    }\n    return tooltipMarkersGroup;\n  };\n  // 获取 tooltip crosshairs 存储的容器\n  Tooltip.prototype.getTooltipCrosshairsGroup = function () {\n    var tooltipCrosshairsGroup = this.tooltipCrosshairsGroup;\n    if (!tooltipCrosshairsGroup) {\n      tooltipCrosshairsGroup = this.getGuideGroup().addGroup({\n        name: 'tooltipCrosshairsGroup',\n        capture: false\n      });\n      tooltipCrosshairsGroup.toBack();\n      this.tooltipCrosshairsGroup = tooltipCrosshairsGroup;\n    }\n    return tooltipCrosshairsGroup;\n  };\n  Tooltip.prototype.findItemsFromView = function (view, point) {\n    var e_5, _a;\n    if (view.getOptions().tooltip === false) {\n      // 如果 view 关闭了 tooltip\n      return [];\n    }\n    var tooltipCfg = this.getTooltipCfg();\n    var result = findItemsFromView(view, point, tooltipCfg);\n    try {\n      // 递归查找，并合并结果\n      for (var _b = __values(view.views), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var childView = _c.value;\n        result = result.concat(this.findItemsFromView(childView, point));\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n    return result;\n  };\n  // FIXME: hack 方法\n  // 因为 tooltip 的交互是挂载在 Chart 上，所以当chart 上没有绘制 Geometry 的时候，就查找不到数据，并且绘图区域同子 View 的区域不同\n  Tooltip.prototype.getViewWithGeometry = function (view) {\n    var _this = this;\n    if (view.geometries.length) {\n      return view;\n    }\n    return find(view.views, function (childView) {\n      return _this.getViewWithGeometry(childView);\n    });\n  };\n  /**\n   * 根据用户配置的 items 配置，来进行用户自定义的处理，并返回最终的 items\n   * 默认不做任何处理\n   */\n  Tooltip.prototype.getItemsAfterProcess = function (originalItems) {\n    var customItems = this.getTooltipCfg().customItems;\n    var fn = customItems ? customItems : function (v) {\n      return v;\n    };\n    return fn(originalItems);\n  };\n  return Tooltip;\n}(Controller);\nexport default Tooltip;","map":{"version":3,"names":["__assign","__extends","__values","deepMix","find","get","isEqual","isFunction","mix","isString","isBoolean","flatten","isArray","Crosshair","HtmlTooltip","getAngleByPoint","getDistanceToCenter","getCoordinateClipCfg","polarToCartesian","findItemsFromView","BBox","Controller","Event","uniq","items","uniqItems","_loop_1","index","item","result","subItem","color","name","value","title","push","length","Tooltip","_super","_this","apply","arguments","isLocked","Object","defineProperty","prototype","enumerable","configurable","init","isVisible","option","view","getOptions","tooltip","render","showTooltip","point","getTooltipItems","hideTooltip","getTitle","dataPoint","x","y","emit","fromData","cfg","getTooltipCfg","follow","showMarkers","showCrosshairs","showContent","marker","lastItems","lastTitle","renderTooltip","update","getItemsAfterProcess","show","renderTooltipMarkers","tooltipMarkersGroup","isCrosshairsFollowCursor","renderCrosshairs","hide","xCrosshair","yCrosshair","lockTooltip","setCapture","unlockTooltip","capture","isTooltipLocked","clear","_a","destroy","guideGroup","remove","reset","tooltipCrosshairsGroup","changeVisible","visible","e_1","e_2","_b","e_3","_c","items_1","items_1_1","next","done","itemArr","itemArr_1","itemArr_1_1","_d","mappingData","e_2_1","error","return","call","e_1_1","shared","snapItem","min","Math","abs","items_2","items_2_1","aItem","yDistance","e_3_1","layout","canvas","getCanvas","set","start","end","isCursorEntered","el","getContainer","getBoundingClientRect","width","height","isPointIn","processOption","processCustomContent","theme","getTheme","defaultCfg","enterable","currentCustomContent","customContent","content","region","parent","parentNode","crosshairs","e_4","getTooltipMarkersGroup","rootView","getRootView","limitInPlot","items_3","items_3_1","getClip","getCoordinate","type","attrs_1","attrs","setClip","undefined","markerDefaultCfg","fill","symbol","shadowColor","addShape","e_4_1","crosshairsType","renderXCrosshairs","renderYCrosshairs","tooltipCfg","coordinate","getViewWithGeometry","isRect","isTransposed","angle","center","getCenter","radius","getRadius","container","getTooltipCrosshairsGroup","getCrosshairsText","Line","startAngle","endAngle","textCfg","firstItem","xScale","getXScale","yScale","getYScales","xValue","yValue","invertPoint","invert","data","field","text","getGuideGroup","foregroundGroup","addGroup","destroyed","toFront","toBack","e_5","views","childView","concat","e_5_1","geometries","originalItems","customItems","fn","v"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g2/esm/chart/controller/tooltip.js"],"sourcesContent":["import { __assign, __extends, __values } from \"tslib\";\nimport { deepMix, find, get, isEqual, isFunction, mix, isString, isBoolean, flatten, isArray } from '@antv/util';\nimport { Crosshair, HtmlTooltip } from '../../dependents';\nimport { getAngleByPoint, getDistanceToCenter, getCoordinateClipCfg } from '../../util/coordinate';\nimport { polarToCartesian } from '../../util/graphics';\nimport { findItemsFromView } from '../../util/tooltip';\nimport { BBox } from '../../util/bbox';\nimport { Controller } from './base';\nimport Event from '../event';\n// Filter duplicates, use `name`, `color`, `value` and `title` property values as condition\nfunction uniq(items) {\n    var uniqItems = [];\n    var _loop_1 = function (index) {\n        var item = items[index];\n        var result = find(uniqItems, function (subItem) {\n            return (subItem.color === item.color &&\n                subItem.name === item.name &&\n                subItem.value === item.value &&\n                subItem.title === item.title);\n        });\n        if (!result) {\n            uniqItems.push(item);\n        }\n    };\n    for (var index = 0; index < items.length; index++) {\n        _loop_1(index);\n    }\n    return uniqItems;\n}\n/** @ignore */\nvar Tooltip = /** @class */ (function (_super) {\n    __extends(Tooltip, _super);\n    function Tooltip() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isLocked = false;\n        return _this;\n    }\n    Object.defineProperty(Tooltip.prototype, \"name\", {\n        get: function () {\n            return 'tooltip';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Tooltip.prototype.init = function () { };\n    Tooltip.prototype.isVisible = function () {\n        var option = this.view.getOptions().tooltip;\n        return option !== false;\n    };\n    Tooltip.prototype.render = function () { };\n    /**\n     * Shows tooltip\n     * @param point\n     */\n    Tooltip.prototype.showTooltip = function (point) {\n        this.point = point;\n        if (!this.isVisible()) {\n            // 如果设置 tooltip(false) 则始终不显示\n            return;\n        }\n        var view = this.view;\n        var items = this.getTooltipItems(point);\n        if (!items.length) {\n            // 无内容则不展示，同时 tooltip 需要隐藏\n            this.hideTooltip();\n            return;\n        }\n        var title = this.getTitle(items);\n        var dataPoint = {\n            x: items[0].x,\n            y: items[0].y,\n        }; // 数据点位置\n        view.emit('tooltip:show', Event.fromData(view, 'tooltip:show', __assign({ items: items, title: title }, point)));\n        var cfg = this.getTooltipCfg();\n        var follow = cfg.follow, showMarkers = cfg.showMarkers, showCrosshairs = cfg.showCrosshairs, showContent = cfg.showContent, marker = cfg.marker;\n        var lastItems = this.items;\n        var lastTitle = this.title;\n        if (!isEqual(lastTitle, title) || !isEqual(lastItems, items)) {\n            // 内容发生变化了更新 tooltip\n            view.emit('tooltip:change', Event.fromData(view, 'tooltip:change', __assign({ items: items, title: title }, point)));\n            if (isFunction(showContent) ? showContent(items) : showContent) {\n                // 展示 tooltip 内容框才渲染 tooltip\n                if (!this.tooltip) {\n                    // 延迟生成\n                    this.renderTooltip();\n                }\n                this.tooltip.update(mix({}, cfg, {\n                    items: this.getItemsAfterProcess(items),\n                    title: title,\n                }, follow ? point : {}));\n                this.tooltip.show();\n            }\n            if (showMarkers) {\n                // 展示 tooltipMarkers，tooltipMarkers 跟随数据\n                this.renderTooltipMarkers(items, marker);\n            }\n        }\n        else {\n            // 内容未发生变化，则更新位置\n            if (this.tooltip && follow) {\n                this.tooltip.update(point);\n                this.tooltip.show(); // tooltip 有可能被隐藏，需要保证显示状态\n            }\n            if (this.tooltipMarkersGroup) {\n                this.tooltipMarkersGroup.show();\n            }\n        }\n        this.items = items;\n        this.title = title;\n        if (showCrosshairs) {\n            // 展示 tooltip 辅助线\n            var isCrosshairsFollowCursor = get(cfg, ['crosshairs', 'follow'], false); // 辅助线是否要跟随鼠标\n            this.renderCrosshairs(isCrosshairsFollowCursor ? point : dataPoint, cfg);\n        }\n    };\n    Tooltip.prototype.hideTooltip = function () {\n        var follow = this.getTooltipCfg().follow;\n        if (!follow) {\n            this.point = null;\n            return;\n        }\n        // hide the tooltipMarkers\n        var tooltipMarkersGroup = this.tooltipMarkersGroup;\n        if (tooltipMarkersGroup) {\n            tooltipMarkersGroup.hide();\n        }\n        // hide crosshairs\n        var xCrosshair = this.xCrosshair;\n        var yCrosshair = this.yCrosshair;\n        if (xCrosshair) {\n            xCrosshair.hide();\n        }\n        if (yCrosshair) {\n            yCrosshair.hide();\n        }\n        var tooltip = this.tooltip;\n        if (tooltip) {\n            tooltip.hide();\n        }\n        this.view.emit('tooltip:hide', Event.fromData(this.view, 'tooltip:hide', {}));\n        this.point = null;\n    };\n    /**\n     * lockTooltip\n     */\n    Tooltip.prototype.lockTooltip = function () {\n        this.isLocked = true;\n        if (this.tooltip) {\n            // tooltip contianer 可捕获事件\n            this.tooltip.setCapture(true);\n        }\n    };\n    /**\n     * unlockTooltip\n     */\n    Tooltip.prototype.unlockTooltip = function () {\n        this.isLocked = false;\n        var cfg = this.getTooltipCfg();\n        if (this.tooltip) {\n            // 重置 capture 属性\n            this.tooltip.setCapture(cfg.capture);\n        }\n    };\n    /**\n     * isTooltipLocked\n     */\n    Tooltip.prototype.isTooltipLocked = function () {\n        return this.isLocked;\n    };\n    Tooltip.prototype.clear = function () {\n        var _a = this, tooltip = _a.tooltip, xCrosshair = _a.xCrosshair, yCrosshair = _a.yCrosshair, tooltipMarkersGroup = _a.tooltipMarkersGroup;\n        if (tooltip) {\n            tooltip.hide();\n            tooltip.clear();\n        }\n        if (xCrosshair) {\n            xCrosshair.clear();\n        }\n        if (yCrosshair) {\n            yCrosshair.clear();\n        }\n        if (tooltipMarkersGroup) {\n            tooltipMarkersGroup.clear();\n        }\n        // 如果 customContent 不为空，就重新生成 tooltip\n        if (tooltip === null || tooltip === void 0 ? void 0 : tooltip.get('customContent')) {\n            this.tooltip.destroy();\n            this.tooltip = null;\n        }\n        // title 和 items 需要清空, 否则 tooltip 内容会出现置空的情况\n        // 即：需要走进 !isEqual(lastTitle, title) || !isEqual(lastItems, items) 的逻辑，更新 tooltip 的内容\n        this.title = null;\n        this.items = null;\n    };\n    Tooltip.prototype.destroy = function () {\n        if (this.tooltip) {\n            this.tooltip.destroy();\n        }\n        if (this.xCrosshair) {\n            this.xCrosshair.destroy();\n        }\n        if (this.yCrosshair) {\n            this.yCrosshair.destroy();\n        }\n        if (this.guideGroup) {\n            this.guideGroup.remove(true);\n        }\n        this.reset();\n    };\n    Tooltip.prototype.reset = function () {\n        this.items = null;\n        this.title = null;\n        this.tooltipMarkersGroup = null;\n        this.tooltipCrosshairsGroup = null;\n        this.xCrosshair = null;\n        this.yCrosshair = null;\n        this.tooltip = null;\n        this.guideGroup = null;\n        this.isLocked = false;\n        this.point = null;\n    };\n    Tooltip.prototype.changeVisible = function (visible) {\n        if (this.visible === visible) {\n            return;\n        }\n        var _a = this, tooltip = _a.tooltip, tooltipMarkersGroup = _a.tooltipMarkersGroup, xCrosshair = _a.xCrosshair, yCrosshair = _a.yCrosshair;\n        if (visible) {\n            if (tooltip) {\n                tooltip.show();\n            }\n            if (tooltipMarkersGroup) {\n                tooltipMarkersGroup.show();\n            }\n            if (xCrosshair) {\n                xCrosshair.show();\n            }\n            if (yCrosshair) {\n                yCrosshair.show();\n            }\n        }\n        else {\n            if (tooltip) {\n                tooltip.hide();\n            }\n            if (tooltipMarkersGroup) {\n                tooltipMarkersGroup.hide();\n            }\n            if (xCrosshair) {\n                xCrosshair.hide();\n            }\n            if (yCrosshair) {\n                yCrosshair.hide();\n            }\n        }\n        this.visible = visible;\n    };\n    Tooltip.prototype.getTooltipItems = function (point) {\n        var e_1, _a, e_2, _b, e_3, _c;\n        var items = this.findItemsFromView(this.view, point);\n        if (items.length) {\n            // 三层\n            items = flatten(items);\n            try {\n                for (var items_1 = __values(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {\n                    var itemArr = items_1_1.value;\n                    try {\n                        for (var itemArr_1 = (e_2 = void 0, __values(itemArr)), itemArr_1_1 = itemArr_1.next(); !itemArr_1_1.done; itemArr_1_1 = itemArr_1.next()) {\n                            var item = itemArr_1_1.value;\n                            var _d = item.mappingData, x = _d.x, y = _d.y;\n                            item.x = isArray(x) ? x[x.length - 1] : x;\n                            item.y = isArray(y) ? y[y.length - 1] : y;\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (itemArr_1_1 && !itemArr_1_1.done && (_b = itemArr_1.return)) _b.call(itemArr_1);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            var shared = this.getTooltipCfg().shared;\n            // shared: false 代表只显示当前拾取到的 shape 的数据，但是一个 view 会有多个 Geometry，所以有可能会拾取到多个 shape\n            if (shared === false && items.length > 1) {\n                var snapItem = items[0];\n                var min = Math.abs(point.y - snapItem[0].y);\n                try {\n                    for (var items_2 = __values(items), items_2_1 = items_2.next(); !items_2_1.done; items_2_1 = items_2.next()) {\n                        var aItem = items_2_1.value;\n                        var yDistance = Math.abs(point.y - aItem[0].y);\n                        if (yDistance <= min) {\n                            snapItem = aItem;\n                            min = yDistance;\n                        }\n                    }\n                }\n                catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                finally {\n                    try {\n                        if (items_2_1 && !items_2_1.done && (_c = items_2.return)) _c.call(items_2);\n                    }\n                    finally { if (e_3) throw e_3.error; }\n                }\n                items = [snapItem];\n            }\n            return uniq(flatten(items));\n        }\n        return [];\n    };\n    Tooltip.prototype.layout = function () { };\n    Tooltip.prototype.update = function () {\n        if (this.point) {\n            this.showTooltip(this.point);\n        }\n        if (this.tooltip) {\n            // #2279 修复resize之后tooltip越界的问题\n            // 确保tooltip已经创建的情况下\n            var canvas = this.view.getCanvas();\n            // TODO 逍为 tooltip 的区域不应该是 canvas，而应该是整个 特别是在图比较小的时候\n            // 更新 region\n            this.tooltip.set('region', {\n                start: { x: 0, y: 0 },\n                end: { x: canvas.get('width'), y: canvas.get('height') },\n            });\n        }\n    };\n    /**\n     * 当前鼠标点是在 enter tooltip 中\n     * @param point\n     */\n    Tooltip.prototype.isCursorEntered = function (point) {\n        // 是可捕获的，并且点在 tooltip dom 上\n        if (this.tooltip) {\n            var el = this.tooltip.getContainer();\n            var capture = this.tooltip.get('capture');\n            if (el && capture) {\n                var _a = el.getBoundingClientRect(), x = _a.x, y = _a.y, width = _a.width, height = _a.height;\n                return new BBox(x, y, width, height).isPointIn(point);\n            }\n        }\n        return false;\n    };\n    // 获取 tooltip 配置，因为用户可能会通过 view.tooltip() 重新配置 tooltip，所以就不做缓存，每次直接读取\n    Tooltip.prototype.getTooltipCfg = function () {\n        var view = this.view;\n        var option = view.getOptions().tooltip;\n        var processOption = this.processCustomContent(option);\n        var theme = view.getTheme();\n        var defaultCfg = get(theme, ['components', 'tooltip'], {});\n        var enterable = get(processOption, 'enterable', defaultCfg.enterable);\n        return deepMix({}, defaultCfg, processOption, {\n            capture: enterable || this.isLocked ? true : false,\n        });\n    };\n    // process customContent\n    Tooltip.prototype.processCustomContent = function (option) {\n        if (isBoolean(option) || !get(option, 'customContent')) {\n            return option;\n        }\n        var currentCustomContent = option.customContent;\n        var customContent = function (title, items) {\n            var content = currentCustomContent(title, items) || '';\n            return isString(content) ? '<div class=\"g2-tooltip\">' + content + '</div>' : content;\n        };\n        return __assign(__assign({}, option), { customContent: customContent });\n    };\n    Tooltip.prototype.getTitle = function (items) {\n        var title = items[0].title || items[0].name;\n        this.title = title;\n        return title;\n    };\n    Tooltip.prototype.renderTooltip = function () {\n        var canvas = this.view.getCanvas();\n        var region = {\n            start: { x: 0, y: 0 },\n            end: { x: canvas.get('width'), y: canvas.get('height') },\n        };\n        var cfg = this.getTooltipCfg();\n        var tooltip = new HtmlTooltip(__assign(__assign({ parent: canvas.get('el').parentNode, region: region }, cfg), { visible: false, crosshairs: null }));\n        tooltip.init();\n        this.tooltip = tooltip;\n    };\n    Tooltip.prototype.renderTooltipMarkers = function (items, marker) {\n        var e_4, _a;\n        var tooltipMarkersGroup = this.getTooltipMarkersGroup();\n        var rootView = this.view.getRootView();\n        var limitInPlot = rootView.limitInPlot;\n        try {\n            for (var items_3 = __values(items), items_3_1 = items_3.next(); !items_3_1.done; items_3_1 = items_3.next()) {\n                var item = items_3_1.value;\n                var x = item.x, y = item.y;\n                // 有裁剪就剪切\n                if (limitInPlot || (tooltipMarkersGroup === null || tooltipMarkersGroup === void 0 ? void 0 : tooltipMarkersGroup.getClip())) {\n                    var _b = getCoordinateClipCfg(rootView.getCoordinate()), type = _b.type, attrs_1 = _b.attrs;\n                    tooltipMarkersGroup === null || tooltipMarkersGroup === void 0 ? void 0 : tooltipMarkersGroup.setClip({\n                        type: type,\n                        attrs: attrs_1,\n                    });\n                }\n                else {\n                    // 清除已有的 clip\n                    tooltipMarkersGroup === null || tooltipMarkersGroup === void 0 ? void 0 : tooltipMarkersGroup.setClip(undefined);\n                }\n                var theme = this.view.getTheme();\n                var markerDefaultCfg = get(theme, ['components', 'tooltip', 'marker'], {});\n                var attrs = __assign(__assign({ fill: item.color, symbol: 'circle', shadowColor: item.color }, (isFunction(marker) ? __assign(__assign({}, markerDefaultCfg), marker(item)) : marker)), { x: x, y: y });\n                tooltipMarkersGroup.addShape('marker', {\n                    attrs: attrs,\n                });\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (items_3_1 && !items_3_1.done && (_a = items_3.return)) _a.call(items_3);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n    };\n    Tooltip.prototype.renderCrosshairs = function (point, cfg) {\n        var crosshairsType = get(cfg, ['crosshairs', 'type'], 'x'); // 默认展示 x 轴上的辅助线\n        if (crosshairsType === 'x') {\n            if (this.yCrosshair) {\n                this.yCrosshair.hide();\n            }\n            this.renderXCrosshairs(point, cfg);\n        }\n        else if (crosshairsType === 'y') {\n            if (this.xCrosshair) {\n                this.xCrosshair.hide();\n            }\n            this.renderYCrosshairs(point, cfg);\n        }\n        else if (crosshairsType === 'xy') {\n            this.renderXCrosshairs(point, cfg);\n            this.renderYCrosshairs(point, cfg);\n        }\n    };\n    // 渲染 x 轴上的 tooltip 辅助线\n    Tooltip.prototype.renderXCrosshairs = function (point, tooltipCfg) {\n        var coordinate = this.getViewWithGeometry(this.view).getCoordinate();\n        var start;\n        var end;\n        if (coordinate.isRect) {\n            if (coordinate.isTransposed) {\n                start = {\n                    x: coordinate.start.x,\n                    y: point.y,\n                };\n                end = {\n                    x: coordinate.end.x,\n                    y: point.y,\n                };\n            }\n            else {\n                start = {\n                    x: point.x,\n                    y: coordinate.end.y,\n                };\n                end = {\n                    x: point.x,\n                    y: coordinate.start.y,\n                };\n            }\n        }\n        else {\n            // 极坐标下 x 轴上的 crosshairs 表现为半径\n            var angle = getAngleByPoint(coordinate, point);\n            var center = coordinate.getCenter();\n            var radius = coordinate.getRadius();\n            end = polarToCartesian(center.x, center.y, radius, angle);\n            start = center;\n        }\n        var cfg = deepMix({\n            start: start,\n            end: end,\n            container: this.getTooltipCrosshairsGroup(),\n        }, get(tooltipCfg, 'crosshairs', {}), this.getCrosshairsText('x', point, tooltipCfg));\n        delete cfg.type; // 与 Crosshairs 组件的 type 冲突故删除\n        var xCrosshair = this.xCrosshair;\n        if (xCrosshair) {\n            xCrosshair.update(cfg);\n        }\n        else {\n            xCrosshair = new Crosshair.Line(cfg);\n            xCrosshair.init();\n        }\n        xCrosshair.render();\n        xCrosshair.show();\n        this.xCrosshair = xCrosshair;\n    };\n    // 渲染 y 轴上的辅助线\n    Tooltip.prototype.renderYCrosshairs = function (point, tooltipCfg) {\n        var coordinate = this.getViewWithGeometry(this.view).getCoordinate();\n        var cfg;\n        var type;\n        if (coordinate.isRect) {\n            var start = void 0;\n            var end = void 0;\n            if (coordinate.isTransposed) {\n                start = {\n                    x: point.x,\n                    y: coordinate.end.y,\n                };\n                end = {\n                    x: point.x,\n                    y: coordinate.start.y,\n                };\n            }\n            else {\n                start = {\n                    x: coordinate.start.x,\n                    y: point.y,\n                };\n                end = {\n                    x: coordinate.end.x,\n                    y: point.y,\n                };\n            }\n            cfg = {\n                start: start,\n                end: end,\n            };\n            type = 'Line';\n        }\n        else {\n            // 极坐标下 y 轴上的 crosshairs 表现为圆弧\n            cfg = {\n                center: coordinate.getCenter(),\n                // @ts-ignore\n                radius: getDistanceToCenter(coordinate, point),\n                startAngle: coordinate.startAngle,\n                endAngle: coordinate.endAngle,\n            };\n            type = 'Circle';\n        }\n        cfg = deepMix({\n            container: this.getTooltipCrosshairsGroup(),\n        }, cfg, get(tooltipCfg, 'crosshairs', {}), this.getCrosshairsText('y', point, tooltipCfg));\n        delete cfg.type; // 与 Crosshairs 组件的 type 冲突故删除\n        var yCrosshair = this.yCrosshair;\n        if (yCrosshair) {\n            // 如果坐标系发生直角坐标系与极坐标的切换操作\n            if ((coordinate.isRect && yCrosshair.get('type') === 'circle') ||\n                (!coordinate.isRect && yCrosshair.get('type') === 'line')) {\n                yCrosshair = new Crosshair[type](cfg);\n                yCrosshair.init();\n            }\n            else {\n                yCrosshair.update(cfg);\n            }\n        }\n        else {\n            yCrosshair = new Crosshair[type](cfg);\n            yCrosshair.init();\n        }\n        yCrosshair.render();\n        yCrosshair.show();\n        this.yCrosshair = yCrosshair;\n    };\n    Tooltip.prototype.getCrosshairsText = function (type, point, tooltipCfg) {\n        var textCfg = get(tooltipCfg, ['crosshairs', 'text']);\n        var follow = get(tooltipCfg, ['crosshairs', 'follow']);\n        var items = this.items;\n        if (textCfg) {\n            var view = this.getViewWithGeometry(this.view);\n            // 需要展示文本\n            var firstItem = items[0];\n            var xScale = view.getXScale();\n            var yScale = view.getYScales()[0];\n            var xValue = void 0;\n            var yValue = void 0;\n            if (follow) {\n                // 如果需要跟随鼠标移动，就需要将当前鼠标坐标点转换为对应的数值\n                var invertPoint = this.view.getCoordinate().invert(point);\n                xValue = xScale.invert(invertPoint.x); // 转换为原始值\n                yValue = yScale.invert(invertPoint.y); // 转换为原始值\n            }\n            else {\n                xValue = firstItem.data[xScale.field];\n                yValue = firstItem.data[yScale.field];\n            }\n            var content = type === 'x' ? xValue : yValue;\n            if (isFunction(textCfg)) {\n                textCfg = textCfg(type, content, items, point);\n            }\n            else {\n                textCfg.content = content;\n            }\n            return {\n                text: textCfg,\n            };\n        }\n    };\n    // 获取存储 tooltipMarkers 和 crosshairs 的容器\n    Tooltip.prototype.getGuideGroup = function () {\n        if (!this.guideGroup) {\n            var foregroundGroup = this.view.foregroundGroup;\n            this.guideGroup = foregroundGroup.addGroup({\n                name: 'tooltipGuide',\n                capture: false,\n            });\n        }\n        return this.guideGroup;\n    };\n    // 获取 tooltipMarkers 存储的容器\n    Tooltip.prototype.getTooltipMarkersGroup = function () {\n        var tooltipMarkersGroup = this.tooltipMarkersGroup;\n        if (tooltipMarkersGroup && !tooltipMarkersGroup.destroyed) {\n            tooltipMarkersGroup.clear();\n            tooltipMarkersGroup.show();\n        }\n        else {\n            tooltipMarkersGroup = this.getGuideGroup().addGroup({\n                name: 'tooltipMarkersGroup',\n            });\n            tooltipMarkersGroup.toFront();\n            this.tooltipMarkersGroup = tooltipMarkersGroup;\n        }\n        return tooltipMarkersGroup;\n    };\n    // 获取 tooltip crosshairs 存储的容器\n    Tooltip.prototype.getTooltipCrosshairsGroup = function () {\n        var tooltipCrosshairsGroup = this.tooltipCrosshairsGroup;\n        if (!tooltipCrosshairsGroup) {\n            tooltipCrosshairsGroup = this.getGuideGroup().addGroup({\n                name: 'tooltipCrosshairsGroup',\n                capture: false,\n            });\n            tooltipCrosshairsGroup.toBack();\n            this.tooltipCrosshairsGroup = tooltipCrosshairsGroup;\n        }\n        return tooltipCrosshairsGroup;\n    };\n    Tooltip.prototype.findItemsFromView = function (view, point) {\n        var e_5, _a;\n        if (view.getOptions().tooltip === false) {\n            // 如果 view 关闭了 tooltip\n            return [];\n        }\n        var tooltipCfg = this.getTooltipCfg();\n        var result = findItemsFromView(view, point, tooltipCfg);\n        try {\n            // 递归查找，并合并结果\n            for (var _b = __values(view.views), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var childView = _c.value;\n                result = result.concat(this.findItemsFromView(childView, point));\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n        return result;\n    };\n    // FIXME: hack 方法\n    // 因为 tooltip 的交互是挂载在 Chart 上，所以当chart 上没有绘制 Geometry 的时候，就查找不到数据，并且绘图区域同子 View 的区域不同\n    Tooltip.prototype.getViewWithGeometry = function (view) {\n        var _this = this;\n        if (view.geometries.length) {\n            return view;\n        }\n        return find(view.views, function (childView) { return _this.getViewWithGeometry(childView); });\n    };\n    /**\n     * 根据用户配置的 items 配置，来进行用户自定义的处理，并返回最终的 items\n     * 默认不做任何处理\n     */\n    Tooltip.prototype.getItemsAfterProcess = function (originalItems) {\n        var customItems = this.getTooltipCfg().customItems;\n        var fn = customItems ? customItems : function (v) { return v; };\n        return fn(originalItems);\n    };\n    return Tooltip;\n}(Controller));\nexport default Tooltip;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}