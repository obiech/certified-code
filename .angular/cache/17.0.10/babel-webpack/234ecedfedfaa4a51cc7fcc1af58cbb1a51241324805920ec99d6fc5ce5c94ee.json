{"ast":null,"code":"import _asyncToGenerator from \"/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { UntypedFormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { CreatePaymentGatewayGQL, PaymentGatewayType, UpdatePaymentGatewayGQL } from '@ridy/admin-panel/generated/graphql';\nimport { RouterHelperService } from '@ridy/admin-panel/src/app/@services/router-helper.service';\nimport { environment } from '@ridy/admin-panel/src/environments/environment';\nimport { NzMessageService } from 'ng-zorro-antd/message';\nimport { firstValueFrom, Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@ridy/admin-panel/generated/graphql\";\nimport * as i4 from \"@ridy/admin-panel/src/app/@services/router-helper.service\";\nimport * as i5 from \"ng-zorro-antd/message\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"ng-zorro-antd/input\";\nimport * as i8 from \"ng-zorro-antd/button\";\nimport * as i9 from \"ng-zorro-antd/core/transition-patch\";\nimport * as i10 from \"ng-zorro-antd/core/wave\";\nimport * as i11 from \"ng-zorro-antd/icon\";\nimport * as i12 from \"ng-zorro-antd/grid\";\nimport * as i13 from \"ng-zorro-antd/form\";\nimport * as i14 from \"ng-zorro-antd/select\";\nimport * as i15 from \"ng-zorro-antd/page-header\";\nimport * as i16 from \"ng-zorro-antd/upload\";\nimport * as i17 from \"ng-zorro-antd/switch\";\nimport * as i18 from \"@ngx-translate/core\";\nfunction PaymentGatewayViewComponent_nz_option_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-option\", 19);\n  }\n  if (rf & 2) {\n    const type_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"nzValue\", type_r4)(\"nzLabel\", type_r4);\n  }\n}\nfunction PaymentGatewayViewComponent_div_29_nz_form_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nz-form-item\")(1, \"nz-form-label\", 20);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"nz-form-control\");\n    i0.ɵɵelement(4, \"input\", 21);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const apiKeyObject_r5 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(apiKeyObject_r5.publicKey);\n  }\n}\nfunction PaymentGatewayViewComponent_div_29_nz_form_item_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nz-form-item\")(1, \"nz-form-label\", 22);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"nz-form-control\");\n    i0.ɵɵelement(4, \"input\", 23);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const apiKeyObject_r5 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(apiKeyObject_r5.privateKey);\n  }\n}\nfunction PaymentGatewayViewComponent_div_29_nz_form_item_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nz-form-item\")(1, \"nz-form-label\", 24);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"nz-form-control\");\n    i0.ɵɵelement(4, \"input\", 25);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const apiKeyObject_r5 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(apiKeyObject_r5.merchantId);\n  }\n}\nfunction PaymentGatewayViewComponent_div_29_nz_form_item_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nz-form-item\")(1, \"nz-form-label\", 26);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"nz-form-control\");\n    i0.ɵɵelement(4, \"input\", 27);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const apiKeyObject_r5 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(apiKeyObject_r5.saltKey);\n  }\n}\nfunction PaymentGatewayViewComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtemplate(1, PaymentGatewayViewComponent_div_29_nz_form_item_1_Template, 5, 1, \"nz-form-item\", 16)(2, PaymentGatewayViewComponent_div_29_nz_form_item_2_Template, 5, 1, \"nz-form-item\", 16)(3, PaymentGatewayViewComponent_div_29_nz_form_item_3_Template, 5, 1, \"nz-form-item\", 16)(4, PaymentGatewayViewComponent_div_29_nz_form_item_4_Template, 5, 1, \"nz-form-item\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const apiKeyObject_r5 = ctx.ngIf;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", apiKeyObject_r5.publicKey != null);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", apiKeyObject_r5.privateKey != null);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", apiKeyObject_r5.merchantId != null);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", apiKeyObject_r5.saltKey != null);\n  }\n}\nfunction PaymentGatewayViewComponent_ng_container_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"i\", 28);\n    i0.ɵɵelementStart(2, \"div\", 29);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"nzType\", ctx_r2.loadingUpload ? \"loading\" : \"plus\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 2, \"profile.upload\"));\n  }\n}\nfunction PaymentGatewayViewComponent_img_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 30);\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r3.root + ctx_r3.avatarUrl, i0.ɵɵsanitizeUrl);\n  }\n}\nconst _c0 = a0 => ({\n  Authorization: a0\n});\nexport class PaymentGatewayViewComponent {\n  constructor(route, fb, updateGQL, createGQL, routerHelper, msg) {\n    this.route = route;\n    this.fb = fb;\n    this.updateGQL = updateGQL;\n    this.createGQL = createGQL;\n    this.routerHelper = routerHelper;\n    this.msg = msg;\n    this.form = this.fb.group({\n      id: [null],\n      title: [null, Validators.required],\n      type: [null, Validators.required],\n      enabled: [true, Validators.required],\n      privateKey: [null, Validators.required],\n      publicKey: [null],\n      saltKey: [null],\n      merchantId: [null],\n      mediaId: [null]\n    });\n    this.unavailableGateways = [PaymentGatewayType.BrainTree, PaymentGatewayType.PayGate, PaymentGatewayType.SberBank];\n    this.gatewayTypes = Object.values(PaymentGatewayType).filter(type => !this.unavailableGateways.includes(type));\n    this.root = environment.root;\n    this.jwt = localStorage.getItem('ridy_admin_token');\n    this.beforeUpload = (file, _fileList) => new Observable(observer => {\n      const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n      if (!isJpgOrPng) {\n        this.msg.error('You can only upload JPG file!');\n        observer.complete();\n        return;\n      }\n      const isLt2M = (file.size ?? 0) / 1024 / 1024 < 2;\n      if (!isLt2M) {\n        this.msg.error('Image must smaller than 2MB!');\n        observer.complete();\n        return;\n      }\n      observer.next(isJpgOrPng && isLt2M);\n      observer.complete();\n    });\n    this.loadingUpload = false;\n  }\n  ngOnInit() {\n    this.subscription = this.route.data.subscribe(data => {\n      const gateway = data.paymentGateway;\n      this.form.patchValue(gateway.data.paymentGateway);\n      this.avatarUrl = gateway.data.paymentGateway?.media?.address;\n    });\n  }\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n  onSubmit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const {\n        id,\n        ...input\n      } = _this.form.value;\n      if (id == null) {\n        yield firstValueFrom(_this.createGQL.mutate({\n          input\n        }));\n      } else {\n        yield firstValueFrom(_this.updateGQL.mutate({\n          id,\n          input\n        }));\n      }\n      _this.routerHelper.goToParent(_this.route);\n    })();\n  }\n  handleUploadChange(event) {\n    switch (event.file.status) {\n      case 'uploading':\n        this.loadingUpload = true;\n        break;\n      case 'done':\n        this.loadingUpload = false;\n        this.form.patchValue({\n          mediaId: event.file.response.id\n        });\n        this.avatarUrl = event.file.response.address;\n        break;\n      case 'error':\n        this.msg.error('Network error');\n        this.loadingUpload = false;\n        break;\n    }\n  }\n  getPaymentGatewayAPIRequirements(type) {\n    if (type == null) return null;\n    switch (type) {\n      case PaymentGatewayType.AmazonPaymentServices:\n        return {\n          privateKey: 'Access Code',\n          merchantId: 'Merchant Identifier'\n        };\n      case PaymentGatewayType.BrainTree:\n        // TODO: Complete the integration\n        return {\n          privateKey: 'Private key',\n          publicKey: 'Public key',\n          merchantId: 'Merchant ID'\n        };\n      case PaymentGatewayType.CustomLink:\n        return {\n          privateKey: 'URL'\n        };\n      case PaymentGatewayType.Flutterwave:\n        return {\n          privateKey: 'Secret Key'\n        };\n      case PaymentGatewayType.Instamojo:\n        return {\n          privateKey: 'Auth Key',\n          publicKey: 'API Key'\n        };\n      case PaymentGatewayType.Mips:\n        console.log(type);\n        return {\n          privateKey: 'Cipher key',\n          saltKey: 'Salt key',\n          publicKey: 'Form ID',\n          merchantId: 'Merchant ID'\n        };\n      case PaymentGatewayType.MercadoPago:\n        return {\n          publicKey: 'Public key',\n          privateKey: 'Access Token'\n        };\n      case PaymentGatewayType.PayTr:\n        return {\n          merchantId: 'Merchant ID',\n          privateKey: 'Merchant key',\n          saltKey: 'Merchant salt'\n        };\n      case PaymentGatewayType.MyFatoorah:\n        return {\n          privateKey: 'Private key',\n          merchantId: 'Payment Method code'\n        };\n      case PaymentGatewayType.MyTMoney:\n        return {\n          publicKey: 'Public key',\n          privateKey: 'Private key',\n          merchantId: 'App Id'\n        };\n      case PaymentGatewayType.PayGate:\n        // TODO: Complete the integration\n        return {\n          privateKey: 'Secret Key'\n        };\n      case PaymentGatewayType.PayPal:\n        return {\n          privateKey: 'Client Secret',\n          merchantId: 'Client ID'\n        };\n      case PaymentGatewayType.PayU:\n        return {\n          privateKey: 'Client secret',\n          merchantId: 'Merchant Pos Id'\n        };\n      case PaymentGatewayType.Paystack:\n        return {\n          privateKey: 'API key'\n        };\n      case PaymentGatewayType.Paytm:\n        return {\n          privateKey: 'Merchant Key',\n          merchantId: 'Merchant Id'\n        };\n      case PaymentGatewayType.Razorpay:\n        return {\n          privateKey: 'Key Secret',\n          merchantId: 'Key Id'\n        };\n      case PaymentGatewayType.SberBank:\n        // TODO: Complete the integration\n        return {\n          publicKey: 'Username',\n          privateKey: 'Password'\n        };\n      case PaymentGatewayType.Stripe:\n        return {\n          privateKey: 'API key'\n        };\n      case PaymentGatewayType.WayForPay:\n        return {\n          privateKey: 'Merchant secret Key',\n          publicKey: 'Merchant domain name',\n          merchantId: 'Merchant Id'\n        };\n      case PaymentGatewayType.BinancePay:\n        return {\n          publicKey: 'API Key',\n          privateKey: 'Secret Key'\n        };\n      case PaymentGatewayType.OpenPix:\n        return {\n          privateKey: 'AppID'\n        };\n    }\n  }\n  static {\n    this.ɵfac = function PaymentGatewayViewComponent_Factory(t) {\n      return new (t || PaymentGatewayViewComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.UntypedFormBuilder), i0.ɵɵdirectiveInject(i3.UpdatePaymentGatewayGQL), i0.ɵɵdirectiveInject(i3.CreatePaymentGatewayGQL), i0.ɵɵdirectiveInject(i4.RouterHelperService), i0.ɵɵdirectiveInject(i5.NzMessageService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PaymentGatewayViewComponent,\n      selectors: [[\"app-payment-gateway-view\"]],\n      decls: 40,\n      vars: 26,\n      consts: [[\"nz-form\", \"\", \"nzLayout\", \"vertical\", 3, \"formGroup\", \"ngSubmit\"], [\"nzBackIcon\", \"\", \"nzSubtitle\", \"API keys and client facing definitions.\", 3, \"nzGhost\", \"nzTitle\"], [\"nz-button\", \"\", \"nzType\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [\"formControlName\", \"id\", \"type\", \"hidden\", \"hidden\", \"\"], [1, \"lg:grid\", \"lg:grid-cols-4\", \"lg:gap-2\"], [\"nzRequired\", \"\", \"nzFor\", \"title\"], [\"nz-input\", \"\", \"required\", \"\", \"id\", \"title\", \"formControlName\", \"title\"], [\"nzRequired\", \"\", \"nzFor\", \"type\"], [\"formControlName\", \"type\", \"id\", \"type\"], [3, \"nzValue\", \"nzLabel\", 4, \"ngFor\", \"ngForOf\"], [\"nzRequired\", \"\", \"nzFor\", \"enabled\"], [\"required\", \"\", \"id\", \"enabled\", \"formControlName\", \"enabled\"], [1, \"my-2\", \"text-sm\"], [\"class\", \"lg:grid lg:grid-cols-4 lg:gap-2\", 4, \"ngIf\"], [\"nzRequired\", \"\"], [\"nzListType\", \"picture-card\", 3, \"nzAction\", \"nzHeaders\", \"nzBeforeUpload\", \"nzShowUploadList\", \"nzChange\"], [4, \"ngIf\"], [\"style\", \"width: 100%\", 3, \"src\", 4, \"ngIf\"], [\"nz-button\", \"\", \"nzType\", \"primary\", \"type\", \"submit\", 1, \"float-right\", 3, \"disabled\"], [3, \"nzValue\", \"nzLabel\"], [\"nzFor\", \"publicKey\"], [\"nz-input\", \"\", \"formControlName\", \"publicKey\", \"id\", \"publicKey\"], [\"nzFor\", \"privateKey\"], [\"nz-input\", \"\", \"formControlName\", \"privateKey\", \"id\", \"privateKey\"], [\"nzFor\", \"merchantId\"], [\"nz-input\", \"\", \"formControlName\", \"merchantId\", \"id\", \"merchantId\"], [\"nzFor\", \"saltKey\"], [\"nz-input\", \"\", \"formControlName\", \"saltKey\", \"id\", \"saltKey\"], [\"nz-icon\", \"\", 1, \"upload-icon\", 3, \"nzType\"], [1, \"ant-upload-text\"], [2, \"width\", \"100%\", 3, \"src\"]],\n      template: function PaymentGatewayViewComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function PaymentGatewayViewComponent_Template_form_ngSubmit_0_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(1, \"nz-page-header\", 1);\n          i0.ɵɵpipe(2, \"translate\");\n          i0.ɵɵelementStart(3, \"nz-page-header-extra\")(4, \"button\", 2);\n          i0.ɵɵtext(5);\n          i0.ɵɵpipe(6, \"translate\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"nz-page-header-content\");\n          i0.ɵɵelement(8, \"input\", 3);\n          i0.ɵɵelementStart(9, \"div\", 4)(10, \"nz-form-item\")(11, \"nz-form-label\", 5);\n          i0.ɵɵtext(12, \"Title\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"nz-form-control\");\n          i0.ɵɵelement(14, \"input\", 6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"nz-form-item\")(16, \"nz-form-label\", 7);\n          i0.ɵɵtext(17, \"Type\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"nz-form-control\")(19, \"nz-select\", 8);\n          i0.ɵɵtemplate(20, PaymentGatewayViewComponent_nz_option_20_Template, 1, 2, \"nz-option\", 9);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(21, \"nz-form-item\")(22, \"nz-form-label\", 10);\n          i0.ɵɵtext(23);\n          i0.ɵɵpipe(24, \"translate\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"nz-form-control\");\n          i0.ɵɵelement(26, \"nz-switch\", 11);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(27, \"h3\", 12);\n          i0.ɵɵtext(28, \"API Keys\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(29, PaymentGatewayViewComponent_div_29_Template, 5, 4, \"div\", 13);\n          i0.ɵɵelementStart(30, \"nz-form-item\")(31, \"nz-form-label\", 14);\n          i0.ɵɵtext(32, \"Image\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(33, \"nz-form-control\")(34, \"nz-upload\", 15);\n          i0.ɵɵlistener(\"nzChange\", function PaymentGatewayViewComponent_Template_nz_upload_nzChange_34_listener($event) {\n            return ctx.handleUploadChange($event);\n          });\n          i0.ɵɵtemplate(35, PaymentGatewayViewComponent_ng_container_35_Template, 5, 4, \"ng-container\", 16)(36, PaymentGatewayViewComponent_img_36_Template, 1, 1, \"img\", 17);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(37, \"button\", 18);\n          i0.ɵɵtext(38);\n          i0.ɵɵpipe(39, \"translate\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance();\n          i0.ɵɵpropertyInterpolate(\"nzTitle\", i0.ɵɵpipeBind1(2, 16, \"menu.management.paymentGateways\"));\n          i0.ɵɵproperty(\"nzGhost\", false);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(6, 18, \"profile.saveChanges\"), \" \");\n          i0.ɵɵadvance(15);\n          i0.ɵɵproperty(\"ngForOf\", ctx.gatewayTypes);\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(24, 20, \"profile.visibilityStatus\"));\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngIf\", ctx.getPaymentGatewayAPIRequirements(ctx.form.value.type));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"nzAction\", ctx.root + \"upload\")(\"nzHeaders\", i0.ɵɵpureFunction1(24, _c0, \"Bearer \" + ctx.jwt))(\"nzBeforeUpload\", ctx.beforeUpload)(\"nzShowUploadList\", false);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.avatarUrl);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.avatarUrl);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(39, 22, \"profile.submit\"));\n        }\n      },\n      dependencies: [i6.NgForOf, i6.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName, i7.NzInputDirective, i8.NzButtonComponent, i9.ɵNzTransitionPatchDirective, i10.NzWaveDirective, i11.NzIconDirective, i12.NzColDirective, i12.NzRowDirective, i13.NzFormDirective, i13.NzFormItemComponent, i13.NzFormLabelComponent, i13.NzFormControlComponent, i14.NzOptionComponent, i14.NzSelectComponent, i15.NzPageHeaderComponent, i15.NzPageHeaderContentDirective, i15.NzPageHeaderExtraDirective, i16.NzUploadComponent, i17.NzSwitchComponent, i18.TranslatePipe],\n      encapsulation: 2\n    });\n  }\n}\nclass GatewayAPIKeyObj {}","map":{"version":3,"names":["UntypedFormBuilder","Validators","ActivatedRoute","CreatePaymentGatewayGQL","PaymentGatewayType","UpdatePaymentGatewayGQL","RouterHelperService","environment","NzMessageService","firstValueFrom","Observable","i0","ɵɵelement","ɵɵproperty","type_r4","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","apiKeyObject_r5","publicKey","privateKey","merchantId","saltKey","ɵɵtemplate","PaymentGatewayViewComponent_div_29_nz_form_item_1_Template","PaymentGatewayViewComponent_div_29_nz_form_item_2_Template","PaymentGatewayViewComponent_div_29_nz_form_item_3_Template","PaymentGatewayViewComponent_div_29_nz_form_item_4_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","ctx_r2","loadingUpload","ɵɵpipeBind1","ctx_r3","root","avatarUrl","ɵɵsanitizeUrl","PaymentGatewayViewComponent","constructor","route","fb","updateGQL","createGQL","routerHelper","msg","form","group","id","title","required","type","enabled","mediaId","unavailableGateways","BrainTree","PayGate","SberBank","gatewayTypes","Object","values","filter","includes","jwt","localStorage","getItem","beforeUpload","file","_fileList","observer","isJpgOrPng","error","complete","isLt2M","size","next","ngOnInit","subscription","data","subscribe","gateway","paymentGateway","patchValue","media","address","ngOnDestroy","unsubscribe","onSubmit","_this","_asyncToGenerator","input","value","mutate","goToParent","handleUploadChange","event","status","response","getPaymentGatewayAPIRequirements","AmazonPaymentServices","CustomLink","Flutterwave","Instamojo","Mips","console","log","MercadoPago","PayTr","MyFatoorah","MyTMoney","PayPal","PayU","Paystack","Paytm","Razorpay","Stripe","WayForPay","BinancePay","OpenPix","ɵɵdirectiveInject","i1","i2","i3","i4","i5","selectors","decls","vars","consts","template","PaymentGatewayViewComponent_Template","rf","ctx","ɵɵlistener","PaymentGatewayViewComponent_Template_form_ngSubmit_0_listener","PaymentGatewayViewComponent_nz_option_20_Template","PaymentGatewayViewComponent_div_29_Template","PaymentGatewayViewComponent_Template_nz_upload_nzChange_34_listener","$event","PaymentGatewayViewComponent_ng_container_35_Template","PaymentGatewayViewComponent_img_36_Template","ɵɵpropertyInterpolate","invalid","ɵɵtextInterpolate1","ɵɵpureFunction1","_c0","GatewayAPIKeyObj"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/apps/admin-panel/src/app/cms/management/management-payment-gateways/payment-gateway-view/payment-gateway-view.component.ts","/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/apps/admin-panel/src/app/cms/management/management-payment-gateways/payment-gateway-view/payment-gateway-view.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { UntypedFormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { ApolloQueryResult } from '@apollo/client/core';\nimport {\n  CreatePaymentGatewayGQL,\n  PaymentGatewayType,\n  UpdatePaymentGatewayGQL,\n  ViewPaymentGatewayQuery,\n} from '@ridy/admin-panel/generated/graphql';\nimport { RouterHelperService } from '@ridy/admin-panel/src/app/@services/router-helper.service';\nimport { environment } from '@ridy/admin-panel/src/environments/environment';\nimport { NzMessageService } from 'ng-zorro-antd/message';\nimport { NzUploadFile } from 'ng-zorro-antd/upload';\nimport { firstValueFrom, Observable, Observer, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-payment-gateway-view',\n  templateUrl: './payment-gateway-view.component.html',\n})\nexport class PaymentGatewayViewComponent implements OnInit, OnDestroy {\n  form = this.fb.group({\n    id: [null],\n    title: [null, Validators.required],\n    type: [null, Validators.required],\n    enabled: [true, Validators.required],\n    privateKey: [null, Validators.required],\n    publicKey: [null],\n    saltKey: [null],\n    merchantId: [null],\n    mediaId: [null],\n  });\n  subscription?: Subscription;\n  unavailableGateways = [\n    PaymentGatewayType.BrainTree,\n    PaymentGatewayType.PayGate,\n    PaymentGatewayType.SberBank,\n  ];\n  gatewayTypes = Object.values(PaymentGatewayType).filter(\n    (type) => !this.unavailableGateways.includes(type as PaymentGatewayType),\n  );\n  root = environment.root;\n  jwt = localStorage.getItem('ridy_admin_token');\n  beforeUpload = (file: NzUploadFile, _fileList: NzUploadFile[]) =>\n    new Observable((observer: Observer<boolean>) => {\n      const isJpgOrPng =\n        file.type === 'image/jpeg' || file.type === 'image/png';\n      if (!isJpgOrPng) {\n        this.msg.error('You can only upload JPG file!');\n        observer.complete();\n        return;\n      }\n      const isLt2M = (file.size ?? 0) / 1024 / 1024 < 2;\n      if (!isLt2M) {\n        this.msg.error('Image must smaller than 2MB!');\n        observer.complete();\n        return;\n      }\n      observer.next(isJpgOrPng && isLt2M);\n      observer.complete();\n    });\n  avatarUrl?: string;\n  loadingUpload = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private fb: UntypedFormBuilder,\n    private updateGQL: UpdatePaymentGatewayGQL,\n    private createGQL: CreatePaymentGatewayGQL,\n    private routerHelper: RouterHelperService,\n    private msg: NzMessageService,\n  ) {}\n\n  ngOnInit(): void {\n    this.subscription = this.route.data.subscribe((data) => {\n      const gateway: ApolloQueryResult<ViewPaymentGatewayQuery> =\n        data.paymentGateway;\n      this.form.patchValue(gateway.data.paymentGateway as any);\n      this.avatarUrl = gateway.data.paymentGateway?.media?.address;\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n\n  async onSubmit() {\n    const { id, ...input } = this.form.value;\n    if (id == null) {\n      await firstValueFrom(this.createGQL.mutate({ input }));\n    } else {\n      await firstValueFrom(this.updateGQL.mutate({ id, input }));\n    }\n    this.routerHelper.goToParent(this.route);\n  }\n\n  handleUploadChange(event: { file: NzUploadFile }) {\n    switch (event.file.status) {\n      case 'uploading':\n        this.loadingUpload = true;\n        break;\n      case 'done':\n        this.loadingUpload = false;\n        this.form.patchValue({ mediaId: event.file.response.id });\n        this.avatarUrl = event.file.response.address;\n        break;\n      case 'error':\n        this.msg.error('Network error');\n        this.loadingUpload = false;\n        break;\n    }\n  }\n\n  getPaymentGatewayAPIRequirements(\n    type?: PaymentGatewayType,\n  ): GatewayAPIKeyObj | null {\n    if (type == null) return null;\n    switch (type) {\n      case PaymentGatewayType.AmazonPaymentServices:\n        return {\n          privateKey: 'Access Code',\n          merchantId: 'Merchant Identifier',\n        };\n\n      case PaymentGatewayType.BrainTree: // TODO: Complete the integration\n        return {\n          privateKey: 'Private key',\n          publicKey: 'Public key',\n          merchantId: 'Merchant ID',\n        };\n      case PaymentGatewayType.CustomLink:\n        return {\n          privateKey: 'URL',\n        };\n\n      case PaymentGatewayType.Flutterwave:\n        return {\n          privateKey: 'Secret Key',\n        };\n\n      case PaymentGatewayType.Instamojo:\n        return {\n          privateKey: 'Auth Key',\n          publicKey: 'API Key',\n        };\n\n      case PaymentGatewayType.Mips:\n        console.log(type);\n        return {\n          privateKey: 'Cipher key',\n          saltKey: 'Salt key',\n          publicKey: 'Form ID',\n          merchantId: 'Merchant ID',\n        };\n\n      case PaymentGatewayType.MercadoPago:\n        return {\n          publicKey: 'Public key',\n          privateKey: 'Access Token',\n        };\n\n      case PaymentGatewayType.PayTr:\n        return {\n          merchantId: 'Merchant ID',\n          privateKey: 'Merchant key',\n          saltKey: 'Merchant salt',\n        };\n\n      case PaymentGatewayType.MyFatoorah:\n        return {\n          privateKey: 'Private key',\n          merchantId: 'Payment Method code',\n        };\n\n      case PaymentGatewayType.MyTMoney:\n        return {\n          publicKey: 'Public key',\n          privateKey: 'Private key',\n          merchantId: 'App Id',\n        };\n\n      case PaymentGatewayType.PayGate: // TODO: Complete the integration\n        return {\n          privateKey: 'Secret Key',\n        };\n      case PaymentGatewayType.PayPal:\n        return {\n          privateKey: 'Client Secret',\n          merchantId: 'Client ID',\n        };\n\n      case PaymentGatewayType.PayU:\n        return {\n          privateKey: 'Client secret',\n          merchantId: 'Merchant Pos Id',\n        };\n      case PaymentGatewayType.Paystack:\n        return {\n          privateKey: 'API key',\n        };\n      case PaymentGatewayType.Paytm:\n        return {\n          privateKey: 'Merchant Key',\n          merchantId: 'Merchant Id',\n        };\n      case PaymentGatewayType.Razorpay:\n        return {\n          privateKey: 'Key Secret',\n          merchantId: 'Key Id',\n        };\n\n      case PaymentGatewayType.SberBank: // TODO: Complete the integration\n        return {\n          publicKey: 'Username',\n          privateKey: 'Password',\n        };\n\n      case PaymentGatewayType.Stripe:\n        return {\n          privateKey: 'API key',\n        };\n\n      case PaymentGatewayType.WayForPay:\n        return {\n          privateKey: 'Merchant secret Key',\n          publicKey: 'Merchant domain name',\n          merchantId: 'Merchant Id',\n        };\n\n      case PaymentGatewayType.BinancePay:\n        return {\n          publicKey: 'API Key',\n          privateKey: 'Secret Key',\n        };\n\n      case PaymentGatewayType.OpenPix:\n        return {\n          privateKey: 'AppID',\n        };\n    }\n  }\n}\nclass GatewayAPIKeyObj {\n  privateKey!: string;\n  publicKey?: string;\n  saltKey?: string;\n  merchantId?: string;\n}\n","<form nz-form [formGroup]=\"form\" nzLayout=\"vertical\" (ngSubmit)=\"onSubmit()\">\n\n  <nz-page-header [nzGhost]=\"false\" nzBackIcon nzTitle=\"{{'menu.management.paymentGateways' | translate}}\"\n    nzSubtitle=\"API keys and client facing definitions.\">\n    <nz-page-header-extra>\n      <button nz-button nzType=\"primary\" [disabled]=\"form.invalid\" type=\"submit\">\n        {{ 'profile.saveChanges' | translate }}\n      </button>\n    </nz-page-header-extra>\n    <nz-page-header-content>\n      <input formControlName=\"id\" type=\"hidden\" hidden>\n      <div class=\"lg:grid lg:grid-cols-4 lg:gap-2\">\n        <nz-form-item>\n          <nz-form-label nzRequired nzFor=\"title\">Title</nz-form-label>\n          <nz-form-control>\n            <input nz-input required id=\"title\" formControlName=\"title\">\n          </nz-form-control>\n        </nz-form-item>\n        <nz-form-item>\n          <nz-form-label nzRequired nzFor=\"type\">Type</nz-form-label>\n          <nz-form-control>\n            <nz-select formControlName=\"type\" id=\"type\">\n              <nz-option *ngFor=\"let type of gatewayTypes\" [nzValue]=\"type\" [nzLabel]=\"type\"></nz-option>\n            </nz-select>\n          </nz-form-control>\n        </nz-form-item>\n        <nz-form-item>\n          <nz-form-label nzRequired nzFor=\"enabled\">{{'profile.visibilityStatus' | translate}}</nz-form-label>\n          <nz-form-control>\n            <nz-switch required id=\"enabled\" formControlName=\"enabled\"></nz-switch>\n          </nz-form-control>\n        </nz-form-item>\n      </div>\n      <h3 class=\"my-2 text-sm\">API Keys</h3>\n      <div class=\"lg:grid lg:grid-cols-4 lg:gap-2\"\n        *ngIf=\"getPaymentGatewayAPIRequirements(form.value.type) as apiKeyObject\">\n        <nz-form-item *ngIf=\"apiKeyObject.publicKey != null\">\n          <nz-form-label nzFor=\"publicKey\">{{apiKeyObject.publicKey}}</nz-form-label>\n          <nz-form-control>\n            <input nz-input formControlName=\"publicKey\" id=\"publicKey\">\n          </nz-form-control>\n        </nz-form-item>\n        <nz-form-item *ngIf=\"apiKeyObject.privateKey != null\">\n          <nz-form-label nzFor=\"privateKey\">{{apiKeyObject.privateKey}}</nz-form-label>\n          <nz-form-control>\n            <input nz-input formControlName=\"privateKey\" id=\"privateKey\">\n          </nz-form-control>\n        </nz-form-item>\n        <nz-form-item *ngIf=\"apiKeyObject.merchantId != null\">\n          <nz-form-label nzFor=\"merchantId\">{{apiKeyObject.merchantId}}</nz-form-label>\n          <nz-form-control>\n            <input nz-input formControlName=\"merchantId\" id=\"merchantId\">\n          </nz-form-control>\n        </nz-form-item>\n        <nz-form-item *ngIf=\"apiKeyObject.saltKey != null\">\n          <nz-form-label nzFor=\"saltKey\">{{apiKeyObject.saltKey}}</nz-form-label>\n          <nz-form-control>\n            <input nz-input formControlName=\"saltKey\" id=\"saltKey\">\n          </nz-form-control>\n        </nz-form-item>\n      </div>\n      <nz-form-item>\n        <nz-form-label nzRequired>Image</nz-form-label>\n        <nz-form-control>\n          <nz-upload [nzAction]=\"root + 'upload'\" [nzHeaders]=\"{Authorization: 'Bearer ' + jwt}\"\n            (nzChange)=\"handleUploadChange($event)\" [nzBeforeUpload]=\"beforeUpload\" nzListType=\"picture-card\"\n            [nzShowUploadList]=\"false\">\n            <ng-container *ngIf=\"!avatarUrl\">\n              <i class=\"upload-icon\" nz-icon [nzType]=\"loadingUpload ? 'loading' : 'plus'\"></i>\n              <div class=\"ant-upload-text\">{{ 'profile.upload' | translate }}</div>\n            </ng-container>\n            <img *ngIf=\"avatarUrl\" [src]=\"root + avatarUrl\" style=\"width: 100%\" />\n          </nz-upload>\n        </nz-form-control>\n      </nz-form-item>\n    </nz-page-header-content>\n    <button nz-button nzType=\"primary\" class=\"float-right\" type=\"submit\" [disabled]=\"form.invalid\">{{ 'profile.submit' |\n      translate\n      }}</button>\n  </nz-page-header>\n</form>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}