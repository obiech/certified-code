{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { Base } from '@antv/g-base';\nimport { deepMix, each, hasKey, isObject } from '@antv/util';\nvar LOCATION_FIELD_MAP = {\n  none: [],\n  point: ['x', 'y'],\n  region: ['start', 'end'],\n  points: ['points'],\n  circle: ['center', 'radius', 'startAngle', 'endAngle']\n};\nvar Component = /** @class */function (_super) {\n  __extends(Component, _super);\n  function Component(cfg) {\n    var _this = _super.call(this, cfg) || this;\n    _this.initCfg();\n    return _this;\n  }\n  /**\n   * @protected\n   * 默认的配置项\n   * @returns {object} 默认的配置项\n   */\n  Component.prototype.getDefaultCfg = function () {\n    return {\n      id: '',\n      name: '',\n      type: '',\n      locationType: 'none',\n      offsetX: 0,\n      offsetY: 0,\n      animate: false,\n      capture: true,\n      updateAutoRender: false,\n      animateOption: {\n        appear: null,\n        update: {\n          duration: 400,\n          easing: 'easeQuadInOut'\n        },\n        enter: {\n          duration: 400,\n          easing: 'easeQuadInOut'\n        },\n        leave: {\n          duration: 350,\n          easing: 'easeQuadIn'\n        }\n      },\n      events: null,\n      defaultCfg: {},\n      visible: true\n    };\n  };\n  /**\n   * 清理组件的内容，一般配合 render 使用\n   * @example\n   * axis.clear();\n   * axis.render();\n   */\n  Component.prototype.clear = function () {};\n  /**\n   * 更新组件\n   * @param {object} cfg 更新属性\n   */\n  Component.prototype.update = function (cfg) {\n    var _this = this;\n    var defaultCfg = this.get('defaultCfg') || {};\n    each(cfg, function (value, name) {\n      var originCfg = _this.get(name);\n      var newCfg = value;\n      if (originCfg !== value) {\n        // 判断两者是否相等，主要是进行 null 的判定\n        if (isObject(value) && defaultCfg[name]) {\n          // 新设置的属性与默认值进行合并\n          newCfg = deepMix({}, defaultCfg[name], value);\n        }\n        _this.set(name, newCfg);\n      }\n    });\n    this.updateInner(cfg);\n    this.afterUpdate(cfg);\n  };\n  // 更新内部\n  Component.prototype.updateInner = function (cfg) {};\n  Component.prototype.afterUpdate = function (cfg) {\n    // 更新时考虑显示、隐藏\n    if (hasKey(cfg, 'visible')) {\n      if (cfg.visible) {\n        this.show();\n      } else {\n        this.hide();\n      }\n    }\n    // 更新时考虑capture\n    if (hasKey(cfg, 'capture')) {\n      this.setCapture(cfg.capture);\n    }\n  };\n  Component.prototype.getLayoutBBox = function () {\n    return this.getBBox(); // 默认返回 getBBox，不同的组件内部单独实现\n  };\n\n  Component.prototype.getLocationType = function () {\n    return this.get('locationType');\n  };\n  Component.prototype.getOffset = function () {\n    return {\n      offsetX: this.get('offsetX'),\n      offsetY: this.get('offsetY')\n    };\n  };\n  // 默认使用 update\n  Component.prototype.setOffset = function (offsetX, offsetY) {\n    this.update({\n      offsetX: offsetX,\n      offsetY: offsetY\n    });\n  };\n  Component.prototype.setLocation = function (cfg) {\n    var location = __assign({}, cfg);\n    this.update(location);\n  };\n  // 实现 ILocation 接口的 getLocation\n  Component.prototype.getLocation = function () {\n    var _this = this;\n    var location = {};\n    var locationType = this.get('locationType');\n    var fields = LOCATION_FIELD_MAP[locationType];\n    each(fields, function (field) {\n      location[field] = _this.get(field);\n    });\n    return location;\n  };\n  Component.prototype.isList = function () {\n    return false;\n  };\n  Component.prototype.isSlider = function () {\n    return false;\n  };\n  /**\n   * @protected\n   * 初始化，用于具体的组件继承\n   */\n  Component.prototype.init = function () {};\n  // 将组件默认的配置项设置合并到传入的配置项\n  Component.prototype.initCfg = function () {\n    var _this = this;\n    var defaultCfg = this.get('defaultCfg');\n    each(defaultCfg, function (value, name) {\n      var cfg = _this.get(name);\n      if (isObject(cfg)) {\n        var newCfg = deepMix({}, value, cfg);\n        _this.set(name, newCfg);\n      }\n    });\n  };\n  return Component;\n}(Base);\nexport default Component;","map":{"version":3,"names":["__assign","__extends","Base","deepMix","each","hasKey","isObject","LOCATION_FIELD_MAP","none","point","region","points","circle","Component","_super","cfg","_this","call","initCfg","prototype","getDefaultCfg","id","name","type","locationType","offsetX","offsetY","animate","capture","updateAutoRender","animateOption","appear","update","duration","easing","enter","leave","events","defaultCfg","visible","clear","get","value","originCfg","newCfg","set","updateInner","afterUpdate","show","hide","setCapture","getLayoutBBox","getBBox","getLocationType","getOffset","setOffset","setLocation","location","getLocation","fields","field","isList","isSlider","init"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/component/esm/abstract/component.js"],"sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { Base } from '@antv/g-base';\nimport { deepMix, each, hasKey, isObject } from '@antv/util';\nvar LOCATION_FIELD_MAP = {\n    none: [],\n    point: ['x', 'y'],\n    region: ['start', 'end'],\n    points: ['points'],\n    circle: ['center', 'radius', 'startAngle', 'endAngle'],\n};\nvar Component = /** @class */ (function (_super) {\n    __extends(Component, _super);\n    function Component(cfg) {\n        var _this = _super.call(this, cfg) || this;\n        _this.initCfg();\n        return _this;\n    }\n    /**\n     * @protected\n     * 默认的配置项\n     * @returns {object} 默认的配置项\n     */\n    Component.prototype.getDefaultCfg = function () {\n        return {\n            id: '',\n            name: '',\n            type: '',\n            locationType: 'none',\n            offsetX: 0,\n            offsetY: 0,\n            animate: false,\n            capture: true,\n            updateAutoRender: false,\n            animateOption: {\n                appear: null,\n                update: {\n                    duration: 400,\n                    easing: 'easeQuadInOut',\n                },\n                enter: {\n                    duration: 400,\n                    easing: 'easeQuadInOut',\n                },\n                leave: {\n                    duration: 350,\n                    easing: 'easeQuadIn',\n                },\n            },\n            events: null,\n            defaultCfg: {},\n            visible: true,\n        };\n    };\n    /**\n     * 清理组件的内容，一般配合 render 使用\n     * @example\n     * axis.clear();\n     * axis.render();\n     */\n    Component.prototype.clear = function () { };\n    /**\n     * 更新组件\n     * @param {object} cfg 更新属性\n     */\n    Component.prototype.update = function (cfg) {\n        var _this = this;\n        var defaultCfg = this.get('defaultCfg') || {};\n        each(cfg, function (value, name) {\n            var originCfg = _this.get(name);\n            var newCfg = value;\n            if (originCfg !== value) {\n                // 判断两者是否相等，主要是进行 null 的判定\n                if (isObject(value) && defaultCfg[name]) {\n                    // 新设置的属性与默认值进行合并\n                    newCfg = deepMix({}, defaultCfg[name], value);\n                }\n                _this.set(name, newCfg);\n            }\n        });\n        this.updateInner(cfg);\n        this.afterUpdate(cfg);\n    };\n    // 更新内部\n    Component.prototype.updateInner = function (cfg) {\n    };\n    Component.prototype.afterUpdate = function (cfg) {\n        // 更新时考虑显示、隐藏\n        if (hasKey(cfg, 'visible')) {\n            if (cfg.visible) {\n                this.show();\n            }\n            else {\n                this.hide();\n            }\n        }\n        // 更新时考虑capture\n        if (hasKey(cfg, 'capture')) {\n            this.setCapture(cfg.capture);\n        }\n    };\n    Component.prototype.getLayoutBBox = function () {\n        return this.getBBox(); // 默认返回 getBBox，不同的组件内部单独实现\n    };\n    Component.prototype.getLocationType = function () {\n        return this.get('locationType');\n    };\n    Component.prototype.getOffset = function () {\n        return {\n            offsetX: this.get('offsetX'),\n            offsetY: this.get('offsetY'),\n        };\n    };\n    // 默认使用 update\n    Component.prototype.setOffset = function (offsetX, offsetY) {\n        this.update({\n            offsetX: offsetX,\n            offsetY: offsetY,\n        });\n    };\n    Component.prototype.setLocation = function (cfg) {\n        var location = __assign({}, cfg);\n        this.update(location);\n    };\n    // 实现 ILocation 接口的 getLocation\n    Component.prototype.getLocation = function () {\n        var _this = this;\n        var location = {};\n        var locationType = this.get('locationType');\n        var fields = LOCATION_FIELD_MAP[locationType];\n        each(fields, function (field) {\n            location[field] = _this.get(field);\n        });\n        return location;\n    };\n    Component.prototype.isList = function () {\n        return false;\n    };\n    Component.prototype.isSlider = function () {\n        return false;\n    };\n    /**\n     * @protected\n     * 初始化，用于具体的组件继承\n     */\n    Component.prototype.init = function () { };\n    // 将组件默认的配置项设置合并到传入的配置项\n    Component.prototype.initCfg = function () {\n        var _this = this;\n        var defaultCfg = this.get('defaultCfg');\n        each(defaultCfg, function (value, name) {\n            var cfg = _this.get(name);\n            if (isObject(cfg)) {\n                var newCfg = deepMix({}, value, cfg);\n                _this.set(name, newCfg);\n            }\n        });\n    };\n    return Component;\n}(Base));\nexport default Component;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}