{"ast":null,"code":"import { GetConfigurationGQL } from '@ridy/admin-panel/generated/graphql';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ridy/admin-panel/generated/graphql\";\nexport class ManagementSettingsResolver {\n  constructor(gql) {\n    this.gql = gql;\n  }\n  resolve(route, state) {\n    return this.gql.fetch({});\n  }\n  static {\n    this.ɵfac = function ManagementSettingsResolver_Factory(t) {\n      return new (t || ManagementSettingsResolver)(i0.ɵɵinject(i1.GetConfigurationGQL));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ManagementSettingsResolver,\n      factory: ManagementSettingsResolver.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["GetConfigurationGQL","ManagementSettingsResolver","constructor","gql","resolve","route","state","fetch","i0","ɵɵinject","i1","factory","ɵfac"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/apps/admin-panel/src/app/cms/management/management-settings/management-settings.resolver.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { ApolloQueryResult } from '@apollo/client/core';\nimport {\n  GetConfigurationGQL,\n  GetConfigurationQuery,\n} from '@ridy/admin-panel/generated/graphql';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ManagementSettingsResolver {\n  constructor(private gql: GetConfigurationGQL) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot,\n  ): Observable<ApolloQueryResult<GetConfigurationQuery>> {\n    return this.gql.fetch({});\n  }\n}\n"],"mappings":"AAGA,SACEA,mBAAmB,QAEd,qCAAqC;;;AAI5C,OAAM,MAAOC,0BAA0B;EACrCC,YAAoBC,GAAwB;IAAxB,KAAAA,GAAG,GAAHA,GAAG;EAAwB;EAE/CC,OAAOA,CACLC,KAA6B,EAC7BC,KAA0B;IAE1B,OAAO,IAAI,CAACH,GAAG,CAACI,KAAK,CAAC,EAAE,CAAC;EAC3B;;;uBARWN,0BAA0B,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAV,mBAAA;IAAA;EAAA;;;aAA1BC,0BAA0B;MAAAU,OAAA,EAA1BV,0BAA0B,CAAAW;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}