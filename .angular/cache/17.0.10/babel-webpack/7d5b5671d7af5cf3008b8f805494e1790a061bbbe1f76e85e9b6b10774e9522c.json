{"ast":null,"code":"import { CurrentConfigurationGQL } from '@ridy/admin-panel/generated/graphql';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ridy/admin-panel/generated/graphql\";\nexport class ConfigResolver {\n  constructor(currentConfigGql) {\n    this.currentConfigGql = currentConfigGql;\n  }\n  resolve(route, state) {\n    return this.currentConfigGql.fetch({});\n  }\n  static {\n    this.ɵfac = function ConfigResolver_Factory(t) {\n      return new (t || ConfigResolver)(i0.ɵɵinject(i1.CurrentConfigurationGQL));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ConfigResolver,\n      factory: ConfigResolver.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["CurrentConfigurationGQL","ConfigResolver","constructor","currentConfigGql","resolve","route","state","fetch","i0","ɵɵinject","i1","factory","ɵfac"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/apps/admin-panel/src/app/config/config-resolver.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { CurrentConfigurationGQL, CurrentConfigurationQuery } from '@ridy/admin-panel/generated/graphql';\nimport { Observable } from 'rxjs';\nimport { ApolloQueryResult } from '@apollo/client/core';\n\n@Injectable()\nexport class ConfigResolver  {\n  constructor(\n    private currentConfigGql: CurrentConfigurationGQL\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ApolloQueryResult<CurrentConfigurationQuery>> {\n    return this.currentConfigGql.fetch({});\n  }\n}\n"],"mappings":"AAEA,SAASA,uBAAuB,QAAmC,qCAAqC;;;AAKxG,OAAM,MAAOC,cAAc;EACzBC,YACUC,gBAAyC;IAAzC,KAAAA,gBAAgB,GAAhBA,gBAAgB;EACvB;EAEHC,OAAOA,CAACC,KAA6B,EAAEC,KAA0B;IAC/D,OAAO,IAAI,CAACH,gBAAgB,CAACI,KAAK,CAAC,EAAE,CAAC;EACxC;;;uBAPWN,cAAc,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAV,uBAAA;IAAA;EAAA;;;aAAdC,cAAc;MAAAU,OAAA,EAAdV,cAAc,CAAAW;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}