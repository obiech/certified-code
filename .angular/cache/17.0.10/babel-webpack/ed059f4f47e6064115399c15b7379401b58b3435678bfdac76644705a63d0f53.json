{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { clamp, deepMix, each, get, isArray, isNil, size } from '@antv/util';\nimport GroupComponent from '../abstract/group-component';\nimport { Trend } from '../trend/trend';\nimport { DEFAULT_HANDLER_STYLE, Handler } from './handler';\nimport { BACKGROUND_STYLE, DEFAULT_HANDLER_WIDTH, FOREGROUND_STYLE, HANDLER_STYLE, SLIDER_CHANGE, TEXT_STYLE } from './constant';\nvar Slider = /** @class */function (_super) {\n  __extends(Slider, _super);\n  function Slider() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.onMouseDown = function (target) {\n      return function (e) {\n        _this.currentTarget = target;\n        // 取出原生事件\n        var event = e.originalEvent;\n        // 2. 存储当前点击位置\n        event.stopPropagation();\n        event.preventDefault();\n        // 兼容移动端获取数据\n        _this.prevX = get(event, 'touches.0.pageX', event.pageX);\n        _this.prevY = get(event, 'touches.0.pageY', event.pageY);\n        // 3. 开始滑动的时候，绑定 move 和 up 事件\n        var containerDOM = _this.getContainerDOM();\n        containerDOM.addEventListener('mousemove', _this.onMouseMove);\n        containerDOM.addEventListener('mouseup', _this.onMouseUp);\n        containerDOM.addEventListener('mouseleave', _this.onMouseUp);\n        // 移动端事件\n        containerDOM.addEventListener('touchmove', _this.onMouseMove);\n        containerDOM.addEventListener('touchend', _this.onMouseUp);\n        containerDOM.addEventListener('touchcancel', _this.onMouseUp);\n      };\n    };\n    _this.onMouseMove = function (event) {\n      var width = _this.cfg.width;\n      var originValue = [_this.get('start'), _this.get('end')];\n      // 滑动过程中，计算偏移，更新滑块，然后 emit 数据出去\n      event.stopPropagation();\n      event.preventDefault();\n      var x = get(event, 'touches.0.pageX', event.pageX);\n      var y = get(event, 'touches.0.pageY', event.pageY);\n      // 横向的 slider 只处理 x\n      var offsetX = x - _this.prevX;\n      var offsetXRange = _this.adjustOffsetRange(offsetX / width);\n      // 更新 start end range 范围\n      _this.updateStartEnd(offsetXRange);\n      // 更新 ui\n      _this.updateUI(_this.getElementByLocalId('foreground'), _this.getElementByLocalId('minText'), _this.getElementByLocalId('maxText'));\n      _this.prevX = x;\n      _this.prevY = y;\n      _this.draw();\n      // 因为存储的 start、end 可能不一定是按大小存储的，所以排序一下，对外是 end >= start\n      _this.emit(SLIDER_CHANGE, [_this.get('start'), _this.get('end')].sort());\n      _this.delegateEmit('valuechanged', {\n        originValue: originValue,\n        value: [_this.get('start'), _this.get('end')]\n      });\n    };\n    _this.onMouseUp = function () {\n      // 结束之后，取消绑定的事件\n      if (_this.currentTarget) {\n        _this.currentTarget = undefined;\n      }\n      var containerDOM = _this.getContainerDOM();\n      if (containerDOM) {\n        containerDOM.removeEventListener('mousemove', _this.onMouseMove);\n        containerDOM.removeEventListener('mouseup', _this.onMouseUp);\n        // 防止滑动到 canvas 外部之后，状态丢失\n        containerDOM.removeEventListener('mouseleave', _this.onMouseUp);\n        // 移动端事件\n        containerDOM.removeEventListener('touchmove', _this.onMouseMove);\n        containerDOM.removeEventListener('touchend', _this.onMouseUp);\n        containerDOM.removeEventListener('touchcancel', _this.onMouseUp);\n      }\n    };\n    return _this;\n  }\n  Slider.prototype.setRange = function (min, max) {\n    this.set('minLimit', min);\n    this.set('maxLimit', max);\n    var oldStart = this.get('start');\n    var oldEnd = this.get('end');\n    var newStart = clamp(oldStart, min, max);\n    var newEnd = clamp(oldEnd, min, max);\n    if (!this.get('isInit') && (oldStart !== newStart || oldEnd !== newEnd)) {\n      this.setValue([newStart, newEnd]);\n    }\n  };\n  Slider.prototype.getRange = function () {\n    return {\n      min: this.get('minLimit') || 0,\n      max: this.get('maxLimit') || 1\n    };\n  };\n  Slider.prototype.setValue = function (value) {\n    var range = this.getRange();\n    if (isArray(value) && value.length === 2) {\n      var originValue = [this.get('start'), this.get('end')];\n      this.update({\n        start: clamp(value[0], range.min, range.max),\n        end: clamp(value[1], range.min, range.max)\n      });\n      if (!this.get('updateAutoRender')) {\n        this.render();\n      }\n      this.delegateEmit('valuechanged', {\n        originValue: originValue,\n        value: value\n      });\n    }\n  };\n  Slider.prototype.getValue = function () {\n    return [this.get('start'), this.get('end')];\n  };\n  Slider.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n    return __assign(__assign({}, cfg), {\n      name: 'slider',\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 16,\n      backgroundStyle: {},\n      foregroundStyle: {},\n      handlerStyle: {},\n      textStyle: {},\n      defaultCfg: {\n        backgroundStyle: BACKGROUND_STYLE,\n        foregroundStyle: FOREGROUND_STYLE,\n        handlerStyle: HANDLER_STYLE,\n        textStyle: TEXT_STYLE\n      }\n    });\n  };\n  Slider.prototype.update = function (cfg) {\n    var start = cfg.start,\n      end = cfg.end;\n    var validCfg = __assign({}, cfg);\n    if (!isNil(start)) {\n      validCfg.start = clamp(start, 0, 1);\n    }\n    if (!isNil(end)) {\n      validCfg.end = clamp(end, 0, 1);\n    }\n    _super.prototype.update.call(this, validCfg);\n    this.minHandler = this.getChildComponentById(this.getElementId('minHandler'));\n    this.maxHandler = this.getChildComponentById(this.getElementId('maxHandler'));\n    this.trend = this.getChildComponentById(this.getElementId('trend'));\n  };\n  Slider.prototype.init = function () {\n    this.set('start', clamp(this.get('start'), 0, 1));\n    this.set('end', clamp(this.get('end'), 0, 1));\n    _super.prototype.init.call(this);\n  };\n  Slider.prototype.render = function () {\n    _super.prototype.render.call(this);\n    this.updateUI(this.getElementByLocalId('foreground'), this.getElementByLocalId('minText'), this.getElementByLocalId('maxText'));\n  };\n  Slider.prototype.renderInner = function (group) {\n    var _a = this.cfg,\n      start = _a.start,\n      end = _a.end,\n      width = _a.width,\n      height = _a.height,\n      _b = _a.trendCfg,\n      trendCfg = _b === void 0 ? {} : _b,\n      minText = _a.minText,\n      maxText = _a.maxText,\n      _c = _a.backgroundStyle,\n      backgroundStyle = _c === void 0 ? {} : _c,\n      _d = _a.foregroundStyle,\n      foregroundStyle = _d === void 0 ? {} : _d,\n      _e = _a.textStyle,\n      textStyle = _e === void 0 ? {} : _e;\n    var handlerStyle = deepMix({}, DEFAULT_HANDLER_STYLE, this.cfg.handlerStyle);\n    var min = start * width;\n    var max = end * width;\n    // 趋势图数据\n    if (size(get(trendCfg, 'data'))) {\n      this.trend = this.addComponent(group, __assign({\n        component: Trend,\n        id: this.getElementId('trend'),\n        x: 0,\n        y: 0,\n        width: width,\n        height: height\n      }, trendCfg));\n    }\n    // 1. 背景\n    this.addShape(group, {\n      id: this.getElementId('background'),\n      type: 'rect',\n      attrs: __assign({\n        x: 0,\n        y: 0,\n        width: width,\n        height: height\n      }, backgroundStyle)\n    });\n    // 2. 左右文字\n    var minTextShape = this.addShape(group, {\n      id: this.getElementId('minText'),\n      type: 'text',\n      attrs: __assign({\n        // x: 0,\n        y: height / 2,\n        textAlign: 'right',\n        text: minText,\n        silent: false\n      }, textStyle)\n    });\n    var maxTextShape = this.addShape(group, {\n      id: this.getElementId('maxText'),\n      type: 'text',\n      attrs: __assign({\n        // x: 0,\n        y: height / 2,\n        textAlign: 'left',\n        text: maxText,\n        silent: false\n      }, textStyle)\n    });\n    // 3. 前景 选中背景框\n    var foregroundShape = this.addShape(group, {\n      id: this.getElementId('foreground'),\n      name: 'foreground',\n      type: 'rect',\n      attrs: __assign({\n        // x: 0,\n        y: 0,\n        // width: 0,\n        height: height\n      }, foregroundStyle)\n    });\n    // 滑块相关的大小信息\n    var handlerWidth = get(handlerStyle, 'width', DEFAULT_HANDLER_WIDTH);\n    var handlerHeight = get(handlerStyle, 'height', 24);\n    // 4. 左右滑块\n    this.minHandler = this.addComponent(group, {\n      component: Handler,\n      id: this.getElementId('minHandler'),\n      name: 'handler-min',\n      x: 0,\n      y: (height - handlerHeight) / 2,\n      width: handlerWidth,\n      height: handlerHeight,\n      cursor: 'ew-resize',\n      style: handlerStyle\n    });\n    this.maxHandler = this.addComponent(group, {\n      component: Handler,\n      id: this.getElementId('maxHandler'),\n      name: 'handler-max',\n      x: 0,\n      y: (height - handlerHeight) / 2,\n      width: handlerWidth,\n      height: handlerHeight,\n      cursor: 'ew-resize',\n      style: handlerStyle\n    });\n  };\n  Slider.prototype.applyOffset = function () {\n    this.moveElementTo(this.get('group'), {\n      x: this.get('x'),\n      y: this.get('y')\n    });\n  };\n  Slider.prototype.initEvent = function () {\n    this.bindEvents();\n  };\n  Slider.prototype.updateUI = function (foregroundShape, minTextShape, maxTextShape) {\n    var _a = this.cfg,\n      start = _a.start,\n      end = _a.end,\n      width = _a.width,\n      minText = _a.minText,\n      maxText = _a.maxText,\n      handlerStyle = _a.handlerStyle,\n      height = _a.height;\n    var min = start * width;\n    var max = end * width;\n    if (this.trend) {\n      this.trend.update({\n        width: width,\n        height: height\n      });\n      if (!this.get('updateAutoRender')) {\n        this.trend.render();\n      }\n    }\n    // 1. foreground\n    foregroundShape.attr('x', min);\n    foregroundShape.attr('width', max - min);\n    // 滑块相关的大小信息\n    var handlerWidth = get(handlerStyle, 'width', DEFAULT_HANDLER_WIDTH);\n    // 设置文本\n    minTextShape.attr('text', minText);\n    maxTextShape.attr('text', maxText);\n    var _b = this._dodgeText([min, max], minTextShape, maxTextShape),\n      minAttrs = _b[0],\n      maxAttrs = _b[1];\n    // 2. 左侧滑块和文字位置\n    if (this.minHandler) {\n      this.minHandler.update({\n        x: min - handlerWidth / 2\n      });\n      if (!this.get('updateAutoRender')) {\n        this.minHandler.render();\n      }\n    }\n    each(minAttrs, function (v, k) {\n      return minTextShape.attr(k, v);\n    });\n    // 3. 右侧滑块和文字位置\n    if (this.maxHandler) {\n      this.maxHandler.update({\n        x: max - handlerWidth / 2\n      });\n      if (!this.get('updateAutoRender')) {\n        this.maxHandler.render();\n      }\n    }\n    each(maxAttrs, function (v, k) {\n      return maxTextShape.attr(k, v);\n    });\n  };\n  Slider.prototype.bindEvents = function () {\n    var group = this.get('group');\n    group.on('handler-min:mousedown', this.onMouseDown('minHandler'));\n    group.on('handler-min:touchstart', this.onMouseDown('minHandler'));\n    // 2. 右滑块的滑动\n    group.on('handler-max:mousedown', this.onMouseDown('maxHandler'));\n    group.on('handler-max:touchstart', this.onMouseDown('maxHandler'));\n    // 3. 前景选中区域\n    var foreground = group.findById(this.getElementId('foreground'));\n    foreground.on('mousedown', this.onMouseDown('foreground'));\n    foreground.on('touchstart', this.onMouseDown('foreground'));\n  };\n  /**\n   * 调整 offsetRange，因为一些范围的限制\n   * @param offsetRange\n   */\n  Slider.prototype.adjustOffsetRange = function (offsetRange) {\n    var _a = this.cfg,\n      start = _a.start,\n      end = _a.end;\n    // 针对不同的滑动组件，处理的方式不同\n    switch (this.currentTarget) {\n      case 'minHandler':\n        {\n          var min = 0 - start;\n          var max = 1 - start;\n          return Math.min(max, Math.max(min, offsetRange));\n        }\n      case 'maxHandler':\n        {\n          var min = 0 - end;\n          var max = 1 - end;\n          return Math.min(max, Math.max(min, offsetRange));\n        }\n      case 'foreground':\n        {\n          var min = 0 - start;\n          var max = 1 - end;\n          return Math.min(max, Math.max(min, offsetRange));\n        }\n    }\n  };\n  Slider.prototype.updateStartEnd = function (offsetRange) {\n    var _a = this.cfg,\n      start = _a.start,\n      end = _a.end;\n    // 操作不同的组件，反馈不一样\n    switch (this.currentTarget) {\n      case 'minHandler':\n        start += offsetRange;\n        break;\n      case 'maxHandler':\n        end += offsetRange;\n        break;\n      case 'foreground':\n        start += offsetRange;\n        end += offsetRange;\n        break;\n    }\n    this.set('start', start);\n    this.set('end', end);\n  };\n  /**\n   * 调整 text 的位置，自动躲避\n   * 根据位置，调整返回新的位置\n   * @param range\n   */\n  Slider.prototype._dodgeText = function (range, minTextShape, maxTextShape) {\n    var _a, _b;\n    var _c = this.cfg,\n      handlerStyle = _c.handlerStyle,\n      width = _c.width;\n    var PADDING = 2;\n    var handlerWidth = get(handlerStyle, 'width', DEFAULT_HANDLER_WIDTH);\n    var min = range[0],\n      max = range[1];\n    var sorted = false;\n    // 如果交换了位置，则对应的 min max 也交互\n    if (min > max) {\n      _a = [max, min], min = _a[0], max = _a[1];\n      _b = [maxTextShape, minTextShape], minTextShape = _b[0], maxTextShape = _b[1];\n      sorted = true;\n    }\n    // 避让规则，优先显示在两侧，只有显示不下的时候，才显示在中间\n    var minBBox = minTextShape.getBBox();\n    var maxBBox = maxTextShape.getBBox();\n    var minAttrs = minBBox.width > min - PADDING ? {\n      x: min + handlerWidth / 2 + PADDING,\n      textAlign: 'left'\n    } : {\n      x: min - handlerWidth / 2 - PADDING,\n      textAlign: 'right'\n    };\n    var maxAttrs = maxBBox.width > width - max - PADDING ? {\n      x: max - handlerWidth / 2 - PADDING,\n      textAlign: 'right'\n    } : {\n      x: max + handlerWidth / 2 + PADDING,\n      textAlign: 'left'\n    };\n    return !sorted ? [minAttrs, maxAttrs] : [maxAttrs, minAttrs];\n  };\n  Slider.prototype.draw = function () {\n    var container = this.get('container');\n    var canvas = container && container.get('canvas');\n    if (canvas) {\n      canvas.draw();\n    }\n  };\n  Slider.prototype.getContainerDOM = function () {\n    var container = this.get('container');\n    var canvas = container && container.get('canvas');\n    return canvas && canvas.get('container');\n  };\n  return Slider;\n}(GroupComponent);\nexport { Slider };\nexport default Slider;","map":{"version":3,"names":["__assign","__extends","clamp","deepMix","each","get","isArray","isNil","size","GroupComponent","Trend","DEFAULT_HANDLER_STYLE","Handler","BACKGROUND_STYLE","DEFAULT_HANDLER_WIDTH","FOREGROUND_STYLE","HANDLER_STYLE","SLIDER_CHANGE","TEXT_STYLE","Slider","_super","_this","apply","arguments","onMouseDown","target","e","currentTarget","event","originalEvent","stopPropagation","preventDefault","prevX","pageX","prevY","pageY","containerDOM","getContainerDOM","addEventListener","onMouseMove","onMouseUp","width","cfg","originValue","x","y","offsetX","offsetXRange","adjustOffsetRange","updateStartEnd","updateUI","getElementByLocalId","draw","emit","sort","delegateEmit","value","undefined","removeEventListener","prototype","setRange","min","max","set","oldStart","oldEnd","newStart","newEnd","setValue","getRange","range","length","update","start","end","render","getValue","getDefaultCfg","call","name","height","backgroundStyle","foregroundStyle","handlerStyle","textStyle","defaultCfg","validCfg","minHandler","getChildComponentById","getElementId","maxHandler","trend","init","renderInner","group","_a","_b","trendCfg","minText","maxText","_c","_d","_e","addComponent","component","id","addShape","type","attrs","minTextShape","textAlign","text","silent","maxTextShape","foregroundShape","handlerWidth","handlerHeight","cursor","style","applyOffset","moveElementTo","initEvent","bindEvents","attr","_dodgeText","minAttrs","maxAttrs","v","k","on","foreground","findById","offsetRange","Math","PADDING","sorted","minBBox","getBBox","maxBBox","container","canvas"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/component/esm/slider/slider.js"],"sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { clamp, deepMix, each, get, isArray, isNil, size } from '@antv/util';\nimport GroupComponent from '../abstract/group-component';\nimport { Trend } from '../trend/trend';\nimport { DEFAULT_HANDLER_STYLE, Handler } from './handler';\nimport { BACKGROUND_STYLE, DEFAULT_HANDLER_WIDTH, FOREGROUND_STYLE, HANDLER_STYLE, SLIDER_CHANGE, TEXT_STYLE, } from './constant';\nvar Slider = /** @class */ (function (_super) {\n    __extends(Slider, _super);\n    function Slider() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.onMouseDown = function (target) { return function (e) {\n            _this.currentTarget = target;\n            // 取出原生事件\n            var event = e.originalEvent;\n            // 2. 存储当前点击位置\n            event.stopPropagation();\n            event.preventDefault();\n            // 兼容移动端获取数据\n            _this.prevX = get(event, 'touches.0.pageX', event.pageX);\n            _this.prevY = get(event, 'touches.0.pageY', event.pageY);\n            // 3. 开始滑动的时候，绑定 move 和 up 事件\n            var containerDOM = _this.getContainerDOM();\n            containerDOM.addEventListener('mousemove', _this.onMouseMove);\n            containerDOM.addEventListener('mouseup', _this.onMouseUp);\n            containerDOM.addEventListener('mouseleave', _this.onMouseUp);\n            // 移动端事件\n            containerDOM.addEventListener('touchmove', _this.onMouseMove);\n            containerDOM.addEventListener('touchend', _this.onMouseUp);\n            containerDOM.addEventListener('touchcancel', _this.onMouseUp);\n        }; };\n        _this.onMouseMove = function (event) {\n            var width = _this.cfg.width;\n            var originValue = [_this.get('start'), _this.get('end')];\n            // 滑动过程中，计算偏移，更新滑块，然后 emit 数据出去\n            event.stopPropagation();\n            event.preventDefault();\n            var x = get(event, 'touches.0.pageX', event.pageX);\n            var y = get(event, 'touches.0.pageY', event.pageY);\n            // 横向的 slider 只处理 x\n            var offsetX = x - _this.prevX;\n            var offsetXRange = _this.adjustOffsetRange(offsetX / width);\n            // 更新 start end range 范围\n            _this.updateStartEnd(offsetXRange);\n            // 更新 ui\n            _this.updateUI(_this.getElementByLocalId('foreground'), _this.getElementByLocalId('minText'), _this.getElementByLocalId('maxText'));\n            _this.prevX = x;\n            _this.prevY = y;\n            _this.draw();\n            // 因为存储的 start、end 可能不一定是按大小存储的，所以排序一下，对外是 end >= start\n            _this.emit(SLIDER_CHANGE, [_this.get('start'), _this.get('end')].sort());\n            _this.delegateEmit('valuechanged', {\n                originValue: originValue,\n                value: [_this.get('start'), _this.get('end')],\n            });\n        };\n        _this.onMouseUp = function () {\n            // 结束之后，取消绑定的事件\n            if (_this.currentTarget) {\n                _this.currentTarget = undefined;\n            }\n            var containerDOM = _this.getContainerDOM();\n            if (containerDOM) {\n                containerDOM.removeEventListener('mousemove', _this.onMouseMove);\n                containerDOM.removeEventListener('mouseup', _this.onMouseUp);\n                // 防止滑动到 canvas 外部之后，状态丢失\n                containerDOM.removeEventListener('mouseleave', _this.onMouseUp);\n                // 移动端事件\n                containerDOM.removeEventListener('touchmove', _this.onMouseMove);\n                containerDOM.removeEventListener('touchend', _this.onMouseUp);\n                containerDOM.removeEventListener('touchcancel', _this.onMouseUp);\n            }\n        };\n        return _this;\n    }\n    Slider.prototype.setRange = function (min, max) {\n        this.set('minLimit', min);\n        this.set('maxLimit', max);\n        var oldStart = this.get('start');\n        var oldEnd = this.get('end');\n        var newStart = clamp(oldStart, min, max);\n        var newEnd = clamp(oldEnd, min, max);\n        if (!this.get('isInit') && (oldStart !== newStart || oldEnd !== newEnd)) {\n            this.setValue([newStart, newEnd]);\n        }\n    };\n    Slider.prototype.getRange = function () {\n        return {\n            min: this.get('minLimit') || 0,\n            max: this.get('maxLimit') || 1,\n        };\n    };\n    Slider.prototype.setValue = function (value) {\n        var range = this.getRange();\n        if (isArray(value) && value.length === 2) {\n            var originValue = [this.get('start'), this.get('end')];\n            this.update({\n                start: clamp(value[0], range.min, range.max),\n                end: clamp(value[1], range.min, range.max),\n            });\n            if (!this.get('updateAutoRender')) {\n                this.render();\n            }\n            this.delegateEmit('valuechanged', {\n                originValue: originValue,\n                value: value,\n            });\n        }\n    };\n    Slider.prototype.getValue = function () {\n        return [this.get('start'), this.get('end')];\n    };\n    Slider.prototype.getDefaultCfg = function () {\n        var cfg = _super.prototype.getDefaultCfg.call(this);\n        return __assign(__assign({}, cfg), { name: 'slider', x: 0, y: 0, width: 100, height: 16, backgroundStyle: {}, foregroundStyle: {}, handlerStyle: {}, textStyle: {}, defaultCfg: {\n                backgroundStyle: BACKGROUND_STYLE,\n                foregroundStyle: FOREGROUND_STYLE,\n                handlerStyle: HANDLER_STYLE,\n                textStyle: TEXT_STYLE,\n            } });\n    };\n    Slider.prototype.update = function (cfg) {\n        var start = cfg.start, end = cfg.end;\n        var validCfg = __assign({}, cfg);\n        if (!isNil(start)) {\n            validCfg.start = clamp(start, 0, 1);\n        }\n        if (!isNil(end)) {\n            validCfg.end = clamp(end, 0, 1);\n        }\n        _super.prototype.update.call(this, validCfg);\n        this.minHandler = this.getChildComponentById(this.getElementId('minHandler'));\n        this.maxHandler = this.getChildComponentById(this.getElementId('maxHandler'));\n        this.trend = this.getChildComponentById(this.getElementId('trend'));\n    };\n    Slider.prototype.init = function () {\n        this.set('start', clamp(this.get('start'), 0, 1));\n        this.set('end', clamp(this.get('end'), 0, 1));\n        _super.prototype.init.call(this);\n    };\n    Slider.prototype.render = function () {\n        _super.prototype.render.call(this);\n        this.updateUI(this.getElementByLocalId('foreground'), this.getElementByLocalId('minText'), this.getElementByLocalId('maxText'));\n    };\n    Slider.prototype.renderInner = function (group) {\n        var _a = this.cfg, start = _a.start, end = _a.end, width = _a.width, height = _a.height, _b = _a.trendCfg, trendCfg = _b === void 0 ? {} : _b, minText = _a.minText, maxText = _a.maxText, _c = _a.backgroundStyle, backgroundStyle = _c === void 0 ? {} : _c, _d = _a.foregroundStyle, foregroundStyle = _d === void 0 ? {} : _d, _e = _a.textStyle, textStyle = _e === void 0 ? {} : _e;\n        var handlerStyle = deepMix({}, DEFAULT_HANDLER_STYLE, this.cfg.handlerStyle);\n        var min = start * width;\n        var max = end * width;\n        // 趋势图数据\n        if (size(get(trendCfg, 'data'))) {\n            this.trend = this.addComponent(group, __assign({ component: Trend, id: this.getElementId('trend'), x: 0, y: 0, width: width,\n                height: height }, trendCfg));\n        }\n        // 1. 背景\n        this.addShape(group, {\n            id: this.getElementId('background'),\n            type: 'rect',\n            attrs: __assign({ x: 0, y: 0, width: width,\n                height: height }, backgroundStyle),\n        });\n        // 2. 左右文字\n        var minTextShape = this.addShape(group, {\n            id: this.getElementId('minText'),\n            type: 'text',\n            attrs: __assign({ \n                // x: 0,\n                y: height / 2, textAlign: 'right', text: minText, silent: false }, textStyle),\n        });\n        var maxTextShape = this.addShape(group, {\n            id: this.getElementId('maxText'),\n            type: 'text',\n            attrs: __assign({ \n                // x: 0,\n                y: height / 2, textAlign: 'left', text: maxText, silent: false }, textStyle),\n        });\n        // 3. 前景 选中背景框\n        var foregroundShape = this.addShape(group, {\n            id: this.getElementId('foreground'),\n            name: 'foreground',\n            type: 'rect',\n            attrs: __assign({ \n                // x: 0,\n                y: 0, \n                // width: 0,\n                height: height }, foregroundStyle),\n        });\n        // 滑块相关的大小信息\n        var handlerWidth = get(handlerStyle, 'width', DEFAULT_HANDLER_WIDTH);\n        var handlerHeight = get(handlerStyle, 'height', 24);\n        // 4. 左右滑块\n        this.minHandler = this.addComponent(group, {\n            component: Handler,\n            id: this.getElementId('minHandler'),\n            name: 'handler-min',\n            x: 0,\n            y: (height - handlerHeight) / 2,\n            width: handlerWidth,\n            height: handlerHeight,\n            cursor: 'ew-resize',\n            style: handlerStyle,\n        });\n        this.maxHandler = this.addComponent(group, {\n            component: Handler,\n            id: this.getElementId('maxHandler'),\n            name: 'handler-max',\n            x: 0,\n            y: (height - handlerHeight) / 2,\n            width: handlerWidth,\n            height: handlerHeight,\n            cursor: 'ew-resize',\n            style: handlerStyle,\n        });\n    };\n    Slider.prototype.applyOffset = function () {\n        this.moveElementTo(this.get('group'), {\n            x: this.get('x'),\n            y: this.get('y'),\n        });\n    };\n    Slider.prototype.initEvent = function () {\n        this.bindEvents();\n    };\n    Slider.prototype.updateUI = function (foregroundShape, minTextShape, maxTextShape) {\n        var _a = this.cfg, start = _a.start, end = _a.end, width = _a.width, minText = _a.minText, maxText = _a.maxText, handlerStyle = _a.handlerStyle, height = _a.height;\n        var min = start * width;\n        var max = end * width;\n        if (this.trend) {\n            this.trend.update({\n                width: width,\n                height: height,\n            });\n            if (!this.get('updateAutoRender')) {\n                this.trend.render();\n            }\n        }\n        // 1. foreground\n        foregroundShape.attr('x', min);\n        foregroundShape.attr('width', max - min);\n        // 滑块相关的大小信息\n        var handlerWidth = get(handlerStyle, 'width', DEFAULT_HANDLER_WIDTH);\n        // 设置文本\n        minTextShape.attr('text', minText);\n        maxTextShape.attr('text', maxText);\n        var _b = this._dodgeText([min, max], minTextShape, maxTextShape), minAttrs = _b[0], maxAttrs = _b[1];\n        // 2. 左侧滑块和文字位置\n        if (this.minHandler) {\n            this.minHandler.update({\n                x: min - handlerWidth / 2,\n            });\n            if (!this.get('updateAutoRender')) {\n                this.minHandler.render();\n            }\n        }\n        each(minAttrs, function (v, k) { return minTextShape.attr(k, v); });\n        // 3. 右侧滑块和文字位置\n        if (this.maxHandler) {\n            this.maxHandler.update({\n                x: max - handlerWidth / 2,\n            });\n            if (!this.get('updateAutoRender')) {\n                this.maxHandler.render();\n            }\n        }\n        each(maxAttrs, function (v, k) { return maxTextShape.attr(k, v); });\n    };\n    Slider.prototype.bindEvents = function () {\n        var group = this.get('group');\n        group.on('handler-min:mousedown', this.onMouseDown('minHandler'));\n        group.on('handler-min:touchstart', this.onMouseDown('minHandler'));\n        // 2. 右滑块的滑动\n        group.on('handler-max:mousedown', this.onMouseDown('maxHandler'));\n        group.on('handler-max:touchstart', this.onMouseDown('maxHandler'));\n        // 3. 前景选中区域\n        var foreground = group.findById(this.getElementId('foreground'));\n        foreground.on('mousedown', this.onMouseDown('foreground'));\n        foreground.on('touchstart', this.onMouseDown('foreground'));\n    };\n    /**\n     * 调整 offsetRange，因为一些范围的限制\n     * @param offsetRange\n     */\n    Slider.prototype.adjustOffsetRange = function (offsetRange) {\n        var _a = this.cfg, start = _a.start, end = _a.end;\n        // 针对不同的滑动组件，处理的方式不同\n        switch (this.currentTarget) {\n            case 'minHandler': {\n                var min = 0 - start;\n                var max = 1 - start;\n                return Math.min(max, Math.max(min, offsetRange));\n            }\n            case 'maxHandler': {\n                var min = 0 - end;\n                var max = 1 - end;\n                return Math.min(max, Math.max(min, offsetRange));\n            }\n            case 'foreground': {\n                var min = 0 - start;\n                var max = 1 - end;\n                return Math.min(max, Math.max(min, offsetRange));\n            }\n        }\n    };\n    Slider.prototype.updateStartEnd = function (offsetRange) {\n        var _a = this.cfg, start = _a.start, end = _a.end;\n        // 操作不同的组件，反馈不一样\n        switch (this.currentTarget) {\n            case 'minHandler':\n                start += offsetRange;\n                break;\n            case 'maxHandler':\n                end += offsetRange;\n                break;\n            case 'foreground':\n                start += offsetRange;\n                end += offsetRange;\n                break;\n        }\n        this.set('start', start);\n        this.set('end', end);\n    };\n    /**\n     * 调整 text 的位置，自动躲避\n     * 根据位置，调整返回新的位置\n     * @param range\n     */\n    Slider.prototype._dodgeText = function (range, minTextShape, maxTextShape) {\n        var _a, _b;\n        var _c = this.cfg, handlerStyle = _c.handlerStyle, width = _c.width;\n        var PADDING = 2;\n        var handlerWidth = get(handlerStyle, 'width', DEFAULT_HANDLER_WIDTH);\n        var min = range[0], max = range[1];\n        var sorted = false;\n        // 如果交换了位置，则对应的 min max 也交互\n        if (min > max) {\n            _a = [max, min], min = _a[0], max = _a[1];\n            _b = [maxTextShape, minTextShape], minTextShape = _b[0], maxTextShape = _b[1];\n            sorted = true;\n        }\n        // 避让规则，优先显示在两侧，只有显示不下的时候，才显示在中间\n        var minBBox = minTextShape.getBBox();\n        var maxBBox = maxTextShape.getBBox();\n        var minAttrs = minBBox.width > min - PADDING\n            ? { x: min + handlerWidth / 2 + PADDING, textAlign: 'left' }\n            : { x: min - handlerWidth / 2 - PADDING, textAlign: 'right' };\n        var maxAttrs = maxBBox.width > width - max - PADDING\n            ? { x: max - handlerWidth / 2 - PADDING, textAlign: 'right' }\n            : { x: max + handlerWidth / 2 + PADDING, textAlign: 'left' };\n        return !sorted ? [minAttrs, maxAttrs] : [maxAttrs, minAttrs];\n    };\n    Slider.prototype.draw = function () {\n        var container = this.get('container');\n        var canvas = container && container.get('canvas');\n        if (canvas) {\n            canvas.draw();\n        }\n    };\n    Slider.prototype.getContainerDOM = function () {\n        var container = this.get('container');\n        var canvas = container && container.get('canvas');\n        return canvas && canvas.get('container');\n    };\n    return Slider;\n}(GroupComponent));\nexport { Slider };\nexport default Slider;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}