{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { LOCALE_ID, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Optional, EventEmitter, Output, NgModule } from '@angular/core';\nimport { Subject, interval } from 'rxjs';\nimport * as i3 from 'ng-zorro-antd/core/pipe';\nimport { NzPipesModule } from 'ng-zorro-antd/core/pipe';\nimport { getLocaleNumberSymbol, NumberSymbol, NgIf, NgTemplateOutlet, NgStyle } from '@angular/common';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i2 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport * as i1 from '@angular/cdk/bidi';\nimport * as i1$1 from '@angular/cdk/platform';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst _c0 = a0 => ({\n  $implicit: a0\n});\nfunction NzStatisticNumberComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.nzValueTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c0, ctx_r0.nzValue));\n  }\n}\nfunction NzStatisticNumberComponent_ng_container_2_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r2.displayInt);\n  }\n}\nfunction NzStatisticNumberComponent_ng_container_2_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r3.displayDecimal);\n  }\n}\nfunction NzStatisticNumberComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzStatisticNumberComponent_ng_container_2_span_1_Template, 2, 1, \"span\", 4)(2, NzStatisticNumberComponent_ng_container_2_span_2_Template, 2, 1, \"span\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.displayInt);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.displayDecimal);\n  }\n}\nfunction NzStatisticComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.nzTitle);\n  }\n}\nfunction NzStatisticComponent_span_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r3.nzPrefix);\n  }\n}\nfunction NzStatisticComponent_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 6);\n    i0.ɵɵtemplate(1, NzStatisticComponent_span_3_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r1.nzPrefix);\n  }\n}\nfunction NzStatisticComponent_span_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r4.nzSuffix);\n  }\n}\nfunction NzStatisticComponent_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵtemplate(1, NzStatisticComponent_span_5_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r2.nzSuffix);\n  }\n}\nfunction NzCountdownComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n    i0.ɵɵpipe(1, \"nzTimeRange\");\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(1, 1, ctx_r0.diff, ctx_r0.nzFormat));\n  }\n}\nclass NzStatisticNumberComponent {\n  constructor(locale_id) {\n    this.locale_id = locale_id;\n    this.displayInt = '';\n    this.displayDecimal = '';\n  }\n  ngOnChanges() {\n    this.formatNumber();\n  }\n  formatNumber() {\n    const decimalSeparator = typeof this.nzValue === 'number' ? '.' : getLocaleNumberSymbol(this.locale_id, NumberSymbol.Decimal);\n    const value = String(this.nzValue);\n    const [int, decimal] = value.split(decimalSeparator);\n    this.displayInt = int;\n    this.displayDecimal = decimal ? `${decimalSeparator}${decimal}` : '';\n  }\n  static {\n    this.ɵfac = function NzStatisticNumberComponent_Factory(t) {\n      return new (t || NzStatisticNumberComponent)(i0.ɵɵdirectiveInject(LOCALE_ID));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzStatisticNumberComponent,\n      selectors: [[\"nz-statistic-number\"]],\n      inputs: {\n        nzValue: \"nzValue\",\n        nzValueTemplate: \"nzValueTemplate\"\n      },\n      exportAs: [\"nzStatisticNumber\"],\n      standalone: true,\n      features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      decls: 3,\n      vars: 2,\n      consts: [[1, \"ant-statistic-content-value\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"class\", \"ant-statistic-content-value-int\", 4, \"ngIf\"], [\"class\", \"ant-statistic-content-value-decimal\", 4, \"ngIf\"], [1, \"ant-statistic-content-value-int\"], [1, \"ant-statistic-content-value-decimal\"]],\n      template: function NzStatisticNumberComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"span\", 0);\n          i0.ɵɵtemplate(1, NzStatisticNumberComponent_ng_container_1_Template, 1, 4, \"ng-container\", 1)(2, NzStatisticNumberComponent_ng_container_2_Template, 3, 2, \"ng-container\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.nzValueTemplate);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.nzValueTemplate);\n        }\n      },\n      dependencies: [NgIf, NgTemplateOutlet],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzStatisticNumberComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      preserveWhitespaces: false,\n      selector: 'nz-statistic-number',\n      exportAs: 'nzStatisticNumber',\n      template: `\n    <span class=\"ant-statistic-content-value\">\n      <ng-container\n        *ngIf=\"nzValueTemplate\"\n        [ngTemplateOutlet]=\"nzValueTemplate\"\n        [ngTemplateOutletContext]=\"{ $implicit: nzValue }\"\n      ></ng-container>\n      <ng-container *ngIf=\"!nzValueTemplate\">\n        <span *ngIf=\"displayInt\" class=\"ant-statistic-content-value-int\">{{ displayInt }}</span>\n        <span *ngIf=\"displayDecimal\" class=\"ant-statistic-content-value-decimal\">{{ displayDecimal }}</span>\n      </ng-container>\n    </span>\n  `,\n      imports: [NgIf, NgTemplateOutlet],\n      standalone: true\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [LOCALE_ID]\n    }]\n  }], {\n    nzValue: [{\n      type: Input\n    }],\n    nzValueTemplate: [{\n      type: Input\n    }]\n  });\n})();\nclass NzStatisticComponent {\n  constructor(cdr, directionality) {\n    this.cdr = cdr;\n    this.directionality = directionality;\n    this.nzValueStyle = {};\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n  }\n  ngOnInit() {\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n    this.dir = this.directionality.value;\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  static {\n    this.ɵfac = function NzStatisticComponent_Factory(t) {\n      return new (t || NzStatisticComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.Directionality, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzStatisticComponent,\n      selectors: [[\"nz-statistic\"]],\n      hostAttrs: [1, \"ant-statistic\"],\n      hostVars: 2,\n      hostBindings: function NzStatisticComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ant-statistic-rtl\", ctx.dir === \"rtl\");\n        }\n      },\n      inputs: {\n        nzPrefix: \"nzPrefix\",\n        nzSuffix: \"nzSuffix\",\n        nzTitle: \"nzTitle\",\n        nzValue: \"nzValue\",\n        nzValueStyle: \"nzValueStyle\",\n        nzValueTemplate: \"nzValueTemplate\"\n      },\n      exportAs: [\"nzStatistic\"],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 6,\n      vars: 6,\n      consts: [[1, \"ant-statistic-title\"], [4, \"nzStringTemplateOutlet\"], [1, \"ant-statistic-content\", 3, \"ngStyle\"], [\"class\", \"ant-statistic-content-prefix\", 4, \"ngIf\"], [3, \"nzValue\", \"nzValueTemplate\"], [\"class\", \"ant-statistic-content-suffix\", 4, \"ngIf\"], [1, \"ant-statistic-content-prefix\"], [1, \"ant-statistic-content-suffix\"]],\n      template: function NzStatisticComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, NzStatisticComponent_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"div\", 2);\n          i0.ɵɵtemplate(3, NzStatisticComponent_span_3_Template, 2, 1, \"span\", 3);\n          i0.ɵɵelement(4, \"nz-statistic-number\", 4);\n          i0.ɵɵtemplate(5, NzStatisticComponent_span_5_Template, 2, 1, \"span\", 5);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.nzTitle);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngStyle\", ctx.nzValueStyle);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.nzPrefix);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"nzValue\", ctx.nzValue)(\"nzValueTemplate\", ctx.nzValueTemplate);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.nzSuffix);\n        }\n      },\n      dependencies: [NzStatisticNumberComponent, NgIf, NzOutletModule, i2.NzStringTemplateOutletDirective, NgStyle],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzStatisticComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-statistic',\n      exportAs: 'nzStatistic',\n      template: `\n    <div class=\"ant-statistic-title\">\n      <ng-container *nzStringTemplateOutlet=\"nzTitle\">{{ nzTitle }}</ng-container>\n    </div>\n    <div class=\"ant-statistic-content\" [ngStyle]=\"nzValueStyle\">\n      <span *ngIf=\"nzPrefix\" class=\"ant-statistic-content-prefix\">\n        <ng-container *nzStringTemplateOutlet=\"nzPrefix\">{{ nzPrefix }}</ng-container>\n      </span>\n      <nz-statistic-number [nzValue]=\"nzValue\" [nzValueTemplate]=\"nzValueTemplate\"></nz-statistic-number>\n      <span *ngIf=\"nzSuffix\" class=\"ant-statistic-content-suffix\">\n        <ng-container *nzStringTemplateOutlet=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n      </span>\n    </div>\n  `,\n      host: {\n        class: 'ant-statistic',\n        '[class.ant-statistic-rtl]': `dir === 'rtl'`\n      },\n      imports: [NzStatisticNumberComponent, NgIf, NzOutletModule, NgStyle],\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i1.Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    nzPrefix: [{\n      type: Input\n    }],\n    nzSuffix: [{\n      type: Input\n    }],\n    nzTitle: [{\n      type: Input\n    }],\n    nzValue: [{\n      type: Input\n    }],\n    nzValueStyle: [{\n      type: Input\n    }],\n    nzValueTemplate: [{\n      type: Input\n    }]\n  });\n})();\nconst REFRESH_INTERVAL = 1000 / 30;\nclass NzCountdownComponent extends NzStatisticComponent {\n  constructor(cdr, ngZone, platform, directionality) {\n    super(cdr, directionality);\n    this.ngZone = ngZone;\n    this.platform = platform;\n    this.nzFormat = 'HH:mm:ss';\n    this.nzCountdownFinish = new EventEmitter();\n    this.target = 0;\n  }\n  ngOnChanges(changes) {\n    if (changes.nzValue) {\n      this.target = Number(changes.nzValue.currentValue);\n      if (!changes.nzValue.isFirstChange()) {\n        this.syncTimer();\n      }\n    }\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    this.syncTimer();\n  }\n  ngOnDestroy() {\n    this.stopTimer();\n  }\n  syncTimer() {\n    if (this.target >= Date.now()) {\n      this.startTimer();\n    } else {\n      this.stopTimer();\n    }\n  }\n  startTimer() {\n    if (this.platform.isBrowser) {\n      this.ngZone.runOutsideAngular(() => {\n        this.stopTimer();\n        this.updater_ = interval(REFRESH_INTERVAL).subscribe(() => {\n          this.updateValue();\n          this.cdr.detectChanges();\n        });\n      });\n    }\n  }\n  stopTimer() {\n    if (this.updater_) {\n      this.updater_.unsubscribe();\n      this.updater_ = null;\n    }\n  }\n  /**\n   * Update time that should be displayed on the screen.\n   */\n  updateValue() {\n    this.diff = Math.max(this.target - Date.now(), 0);\n    if (this.diff === 0) {\n      this.stopTimer();\n      if (this.nzCountdownFinish.observers.length) {\n        this.ngZone.run(() => this.nzCountdownFinish.emit());\n      }\n    }\n  }\n  static {\n    this.ɵfac = function NzCountdownComponent_Factory(t) {\n      return new (t || NzCountdownComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1$1.Platform), i0.ɵɵdirectiveInject(i1.Directionality, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzCountdownComponent,\n      selectors: [[\"nz-countdown\"]],\n      inputs: {\n        nzFormat: \"nzFormat\"\n      },\n      outputs: {\n        nzCountdownFinish: \"nzCountdownFinish\"\n      },\n      exportAs: [\"nzCountdown\"],\n      standalone: true,\n      features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      decls: 3,\n      vars: 6,\n      consts: [[3, \"nzValue\", \"nzValueStyle\", \"nzValueTemplate\", \"nzTitle\", \"nzPrefix\", \"nzSuffix\"], [\"countDownTpl\", \"\"]],\n      template: function NzCountdownComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"nz-statistic\", 0);\n          i0.ɵɵtemplate(1, NzCountdownComponent_ng_template_1_Template, 2, 4, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n        }\n        if (rf & 2) {\n          const _r1 = i0.ɵɵreference(2);\n          i0.ɵɵproperty(\"nzValue\", ctx.diff)(\"nzValueStyle\", ctx.nzValueStyle)(\"nzValueTemplate\", ctx.nzValueTemplate || _r1)(\"nzTitle\", ctx.nzTitle)(\"nzPrefix\", ctx.nzPrefix)(\"nzSuffix\", ctx.nzSuffix);\n        }\n      },\n      dependencies: [NzStatisticComponent, NzPipesModule, i3.NzTimeRangePipe],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzCountdownComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-countdown',\n      exportAs: 'nzCountdown',\n      template: `\n    <nz-statistic\n      [nzValue]=\"diff\"\n      [nzValueStyle]=\"nzValueStyle\"\n      [nzValueTemplate]=\"nzValueTemplate || countDownTpl\"\n      [nzTitle]=\"nzTitle\"\n      [nzPrefix]=\"nzPrefix\"\n      [nzSuffix]=\"nzSuffix\"\n    ></nz-statistic>\n\n    <ng-template #countDownTpl>{{ diff | nzTimeRange: nzFormat }}</ng-template>\n  `,\n      imports: [NzStatisticComponent, NzPipesModule],\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i1$1.Platform\n  }, {\n    type: i1.Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    nzFormat: [{\n      type: Input\n    }],\n    nzCountdownFinish: [{\n      type: Output\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzStatisticModule {\n  static {\n    this.ɵfac = function NzStatisticModule_Factory(t) {\n      return new (t || NzStatisticModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NzStatisticModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [NzStatisticComponent, NzCountdownComponent]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzStatisticModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NzStatisticComponent, NzCountdownComponent, NzStatisticNumberComponent],\n      exports: [NzStatisticComponent, NzCountdownComponent, NzStatisticNumberComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzCountdownComponent, NzStatisticComponent, NzStatisticModule, NzStatisticNumberComponent };","map":{"version":3,"names":["i0","LOCALE_ID","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","Input","Optional","EventEmitter","Output","NgModule","Subject","interval","i3","NzPipesModule","getLocaleNumberSymbol","NumberSymbol","NgIf","NgTemplateOutlet","NgStyle","takeUntil","i2","NzOutletModule","i1","i1$1","_c0","a0","$implicit","NzStatisticNumberComponent_ng_container_1_Template","rf","ctx","ɵɵelementContainer","ctx_r0","ɵɵnextContext","ɵɵproperty","nzValueTemplate","ɵɵpureFunction1","nzValue","NzStatisticNumberComponent_ng_container_2_span_1_Template","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r2","ɵɵadvance","ɵɵtextInterpolate","displayInt","NzStatisticNumberComponent_ng_container_2_span_2_Template","ctx_r3","displayDecimal","NzStatisticNumberComponent_ng_container_2_Template","ɵɵelementContainerStart","ɵɵtemplate","ɵɵelementContainerEnd","ctx_r1","NzStatisticComponent_ng_container_1_Template","nzTitle","NzStatisticComponent_span_3_ng_container_1_Template","nzPrefix","NzStatisticComponent_span_3_Template","NzStatisticComponent_span_5_ng_container_1_Template","ctx_r4","nzSuffix","NzStatisticComponent_span_5_Template","NzCountdownComponent_ng_template_1_Template","ɵɵpipe","ɵɵpipeBind2","diff","nzFormat","NzStatisticNumberComponent","constructor","locale_id","ngOnChanges","formatNumber","decimalSeparator","Decimal","value","String","int","decimal","split","ɵfac","NzStatisticNumberComponent_Factory","t","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","type","selectors","inputs","exportAs","standalone","features","ɵɵNgOnChangesFeature","ɵɵStandaloneFeature","decls","vars","consts","template","NzStatisticNumberComponent_Template","dependencies","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","OnPush","None","preserveWhitespaces","selector","imports","undefined","decorators","NzStatisticComponent","cdr","directionality","nzValueStyle","dir","destroy$","ngOnInit","change","pipe","subscribe","direction","detectChanges","ngOnDestroy","next","complete","NzStatisticComponent_Factory","ChangeDetectorRef","Directionality","hostAttrs","hostVars","hostBindings","NzStatisticComponent_HostBindings","ɵɵclassProp","NzStatisticComponent_Template","ɵɵelement","NzStringTemplateOutletDirective","host","class","REFRESH_INTERVAL","NzCountdownComponent","ngZone","platform","nzCountdownFinish","target","changes","Number","currentValue","isFirstChange","syncTimer","stopTimer","Date","now","startTimer","isBrowser","runOutsideAngular","updater_","updateValue","unsubscribe","Math","max","observers","length","run","emit","NzCountdownComponent_Factory","NgZone","Platform","outputs","ɵɵInheritDefinitionFeature","NzCountdownComponent_Template","ɵɵtemplateRefExtractor","_r1","ɵɵreference","NzTimeRangePipe","NzStatisticModule","NzStatisticModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","exports"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-statistic.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { LOCALE_ID, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Optional, EventEmitter, Output, NgModule } from '@angular/core';\nimport { Subject, interval } from 'rxjs';\nimport * as i3 from 'ng-zorro-antd/core/pipe';\nimport { NzPipesModule } from 'ng-zorro-antd/core/pipe';\nimport { getLocaleNumberSymbol, NumberSymbol, NgIf, NgTemplateOutlet, NgStyle } from '@angular/common';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i2 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport * as i1 from '@angular/cdk/bidi';\nimport * as i1$1 from '@angular/cdk/platform';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzStatisticNumberComponent {\n    constructor(locale_id) {\n        this.locale_id = locale_id;\n        this.displayInt = '';\n        this.displayDecimal = '';\n    }\n    ngOnChanges() {\n        this.formatNumber();\n    }\n    formatNumber() {\n        const decimalSeparator = typeof this.nzValue === 'number' ? '.' : getLocaleNumberSymbol(this.locale_id, NumberSymbol.Decimal);\n        const value = String(this.nzValue);\n        const [int, decimal] = value.split(decimalSeparator);\n        this.displayInt = int;\n        this.displayDecimal = decimal ? `${decimalSeparator}${decimal}` : '';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzStatisticNumberComponent, deps: [{ token: LOCALE_ID }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.8\", type: NzStatisticNumberComponent, isStandalone: true, selector: \"nz-statistic-number\", inputs: { nzValue: \"nzValue\", nzValueTemplate: \"nzValueTemplate\" }, exportAs: [\"nzStatisticNumber\"], usesOnChanges: true, ngImport: i0, template: `\n    <span class=\"ant-statistic-content-value\">\n      <ng-container\n        *ngIf=\"nzValueTemplate\"\n        [ngTemplateOutlet]=\"nzValueTemplate\"\n        [ngTemplateOutletContext]=\"{ $implicit: nzValue }\"\n      ></ng-container>\n      <ng-container *ngIf=\"!nzValueTemplate\">\n        <span *ngIf=\"displayInt\" class=\"ant-statistic-content-value-int\">{{ displayInt }}</span>\n        <span *ngIf=\"displayDecimal\" class=\"ant-statistic-content-value-decimal\">{{ displayDecimal }}</span>\n      </ng-container>\n    </span>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzStatisticNumberComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    preserveWhitespaces: false,\n                    selector: 'nz-statistic-number',\n                    exportAs: 'nzStatisticNumber',\n                    template: `\n    <span class=\"ant-statistic-content-value\">\n      <ng-container\n        *ngIf=\"nzValueTemplate\"\n        [ngTemplateOutlet]=\"nzValueTemplate\"\n        [ngTemplateOutletContext]=\"{ $implicit: nzValue }\"\n      ></ng-container>\n      <ng-container *ngIf=\"!nzValueTemplate\">\n        <span *ngIf=\"displayInt\" class=\"ant-statistic-content-value-int\">{{ displayInt }}</span>\n        <span *ngIf=\"displayDecimal\" class=\"ant-statistic-content-value-decimal\">{{ displayDecimal }}</span>\n      </ng-container>\n    </span>\n  `,\n                    imports: [NgIf, NgTemplateOutlet],\n                    standalone: true\n                }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [LOCALE_ID]\n                }] }], propDecorators: { nzValue: [{\n                type: Input\n            }], nzValueTemplate: [{\n                type: Input\n            }] } });\n\nclass NzStatisticComponent {\n    constructor(cdr, directionality) {\n        this.cdr = cdr;\n        this.directionality = directionality;\n        this.nzValueStyle = {};\n        this.dir = 'ltr';\n        this.destroy$ = new Subject();\n    }\n    ngOnInit() {\n        this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzStatisticComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.8\", type: NzStatisticComponent, isStandalone: true, selector: \"nz-statistic\", inputs: { nzPrefix: \"nzPrefix\", nzSuffix: \"nzSuffix\", nzTitle: \"nzTitle\", nzValue: \"nzValue\", nzValueStyle: \"nzValueStyle\", nzValueTemplate: \"nzValueTemplate\" }, host: { properties: { \"class.ant-statistic-rtl\": \"dir === 'rtl'\" }, classAttribute: \"ant-statistic\" }, exportAs: [\"nzStatistic\"], ngImport: i0, template: `\n    <div class=\"ant-statistic-title\">\n      <ng-container *nzStringTemplateOutlet=\"nzTitle\">{{ nzTitle }}</ng-container>\n    </div>\n    <div class=\"ant-statistic-content\" [ngStyle]=\"nzValueStyle\">\n      <span *ngIf=\"nzPrefix\" class=\"ant-statistic-content-prefix\">\n        <ng-container *nzStringTemplateOutlet=\"nzPrefix\">{{ nzPrefix }}</ng-container>\n      </span>\n      <nz-statistic-number [nzValue]=\"nzValue\" [nzValueTemplate]=\"nzValueTemplate\"></nz-statistic-number>\n      <span *ngIf=\"nzSuffix\" class=\"ant-statistic-content-suffix\">\n        <ng-container *nzStringTemplateOutlet=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n      </span>\n    </div>\n  `, isInline: true, dependencies: [{ kind: \"component\", type: NzStatisticNumberComponent, selector: \"nz-statistic-number\", inputs: [\"nzValue\", \"nzValueTemplate\"], exportAs: [\"nzStatisticNumber\"] }, { kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"ngmodule\", type: NzOutletModule }, { kind: \"directive\", type: i2.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }, { kind: \"directive\", type: NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzStatisticComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'nz-statistic',\n                    exportAs: 'nzStatistic',\n                    template: `\n    <div class=\"ant-statistic-title\">\n      <ng-container *nzStringTemplateOutlet=\"nzTitle\">{{ nzTitle }}</ng-container>\n    </div>\n    <div class=\"ant-statistic-content\" [ngStyle]=\"nzValueStyle\">\n      <span *ngIf=\"nzPrefix\" class=\"ant-statistic-content-prefix\">\n        <ng-container *nzStringTemplateOutlet=\"nzPrefix\">{{ nzPrefix }}</ng-container>\n      </span>\n      <nz-statistic-number [nzValue]=\"nzValue\" [nzValueTemplate]=\"nzValueTemplate\"></nz-statistic-number>\n      <span *ngIf=\"nzSuffix\" class=\"ant-statistic-content-suffix\">\n        <ng-container *nzStringTemplateOutlet=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n      </span>\n    </div>\n  `,\n                    host: {\n                        class: 'ant-statistic',\n                        '[class.ant-statistic-rtl]': `dir === 'rtl'`\n                    },\n                    imports: [NzStatisticNumberComponent, NgIf, NzOutletModule, NgStyle],\n                    standalone: true\n                }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }], propDecorators: { nzPrefix: [{\n                type: Input\n            }], nzSuffix: [{\n                type: Input\n            }], nzTitle: [{\n                type: Input\n            }], nzValue: [{\n                type: Input\n            }], nzValueStyle: [{\n                type: Input\n            }], nzValueTemplate: [{\n                type: Input\n            }] } });\n\nconst REFRESH_INTERVAL = 1000 / 30;\nclass NzCountdownComponent extends NzStatisticComponent {\n    constructor(cdr, ngZone, platform, directionality) {\n        super(cdr, directionality);\n        this.ngZone = ngZone;\n        this.platform = platform;\n        this.nzFormat = 'HH:mm:ss';\n        this.nzCountdownFinish = new EventEmitter();\n        this.target = 0;\n    }\n    ngOnChanges(changes) {\n        if (changes.nzValue) {\n            this.target = Number(changes.nzValue.currentValue);\n            if (!changes.nzValue.isFirstChange()) {\n                this.syncTimer();\n            }\n        }\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        this.syncTimer();\n    }\n    ngOnDestroy() {\n        this.stopTimer();\n    }\n    syncTimer() {\n        if (this.target >= Date.now()) {\n            this.startTimer();\n        }\n        else {\n            this.stopTimer();\n        }\n    }\n    startTimer() {\n        if (this.platform.isBrowser) {\n            this.ngZone.runOutsideAngular(() => {\n                this.stopTimer();\n                this.updater_ = interval(REFRESH_INTERVAL).subscribe(() => {\n                    this.updateValue();\n                    this.cdr.detectChanges();\n                });\n            });\n        }\n    }\n    stopTimer() {\n        if (this.updater_) {\n            this.updater_.unsubscribe();\n            this.updater_ = null;\n        }\n    }\n    /**\n     * Update time that should be displayed on the screen.\n     */\n    updateValue() {\n        this.diff = Math.max(this.target - Date.now(), 0);\n        if (this.diff === 0) {\n            this.stopTimer();\n            if (this.nzCountdownFinish.observers.length) {\n                this.ngZone.run(() => this.nzCountdownFinish.emit());\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzCountdownComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: i1$1.Platform }, { token: i1.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.8\", type: NzCountdownComponent, isStandalone: true, selector: \"nz-countdown\", inputs: { nzFormat: \"nzFormat\" }, outputs: { nzCountdownFinish: \"nzCountdownFinish\" }, exportAs: [\"nzCountdown\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `\n    <nz-statistic\n      [nzValue]=\"diff\"\n      [nzValueStyle]=\"nzValueStyle\"\n      [nzValueTemplate]=\"nzValueTemplate || countDownTpl\"\n      [nzTitle]=\"nzTitle\"\n      [nzPrefix]=\"nzPrefix\"\n      [nzSuffix]=\"nzSuffix\"\n    ></nz-statistic>\n\n    <ng-template #countDownTpl>{{ diff | nzTimeRange: nzFormat }}</ng-template>\n  `, isInline: true, dependencies: [{ kind: \"component\", type: NzStatisticComponent, selector: \"nz-statistic\", inputs: [\"nzPrefix\", \"nzSuffix\", \"nzTitle\", \"nzValue\", \"nzValueStyle\", \"nzValueTemplate\"], exportAs: [\"nzStatistic\"] }, { kind: \"ngmodule\", type: NzPipesModule }, { kind: \"pipe\", type: i3.NzTimeRangePipe, name: \"nzTimeRange\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzCountdownComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'nz-countdown',\n                    exportAs: 'nzCountdown',\n                    template: `\n    <nz-statistic\n      [nzValue]=\"diff\"\n      [nzValueStyle]=\"nzValueStyle\"\n      [nzValueTemplate]=\"nzValueTemplate || countDownTpl\"\n      [nzTitle]=\"nzTitle\"\n      [nzPrefix]=\"nzPrefix\"\n      [nzSuffix]=\"nzSuffix\"\n    ></nz-statistic>\n\n    <ng-template #countDownTpl>{{ diff | nzTimeRange: nzFormat }}</ng-template>\n  `,\n                    imports: [NzStatisticComponent, NzPipesModule],\n                    standalone: true\n                }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: i1$1.Platform }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }], propDecorators: { nzFormat: [{\n                type: Input\n            }], nzCountdownFinish: [{\n                type: Output\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzStatisticModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzStatisticModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.3.8\", ngImport: i0, type: NzStatisticModule, imports: [NzStatisticComponent, NzCountdownComponent, NzStatisticNumberComponent], exports: [NzStatisticComponent, NzCountdownComponent, NzStatisticNumberComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzStatisticModule, imports: [NzStatisticComponent, NzCountdownComponent] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzStatisticModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NzStatisticComponent, NzCountdownComponent, NzStatisticNumberComponent],\n                    exports: [NzStatisticComponent, NzCountdownComponent, NzStatisticNumberComponent]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzCountdownComponent, NzStatisticComponent, NzStatisticModule, NzStatisticNumberComponent };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}