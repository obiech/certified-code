{"ast":null,"code":"import { __decorate } from 'tslib';\nimport { RIGHT_ARROW, UP_ARROW, LEFT_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { NgStyle, NgForOf, NgIf } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewChild, Input, EventEmitter, forwardRef, Optional, ViewChildren, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { takeUntil, filter, tap, map, distinctUntilChanged } from 'rxjs/operators';\nimport { InputBoolean, InputNumber, ensureNumberInRange, silentEvent, getPrecision, getPercent, getElementOffset, isNil, arraysEqual } from 'ng-zorro-antd/core/util';\nimport * as i2 from 'ng-zorro-antd/tooltip';\nimport { NzTooltipDirective, NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport * as i2$1 from '@angular/cdk/platform';\nimport * as i3 from '@angular/cdk/bidi';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst _c0 = [\"handle\"];\nconst _c1 = a0 => ({\n  $implicit: a0\n});\nfunction NzSliderMarksComponent_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 1);\n  }\n  if (rf & 2) {\n    const attr_r1 = ctx.$implicit;\n    i0.ɵɵclassProp(\"ant-slider-mark-active\", attr_r1.active);\n    i0.ɵɵproperty(\"ngStyle\", attr_r1.style)(\"innerHTML\", attr_r1.label, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction NzSliderStepComponent_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 1);\n  }\n  if (rf & 2) {\n    const mark_r1 = ctx.$implicit;\n    i0.ɵɵclassProp(\"ant-slider-dot-active\", mark_r1.active);\n    i0.ɵɵproperty(\"ngStyle\", mark_r1.style);\n  }\n}\nfunction NzSliderComponent_nz_slider_step_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-slider-step\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"vertical\", ctx_r0.nzVertical)(\"min\", ctx_r0.nzMin)(\"max\", ctx_r0.nzMax)(\"lowerBound\", ctx_r0.bounds.lower)(\"upperBound\", ctx_r0.bounds.upper)(\"marksArray\", ctx_r0.marksArray)(\"included\", ctx_r0.nzIncluded)(\"reverse\", ctx_r0.nzReverse);\n  }\n}\nfunction NzSliderComponent_nz_slider_handle_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"nz-slider-handle\", 5);\n    i0.ɵɵlistener(\"focusin\", function NzSliderComponent_nz_slider_handle_3_Template_nz_slider_handle_focusin_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const handleIndex_r4 = restoredCtx.index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onHandleFocusIn(handleIndex_r4));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const handle_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"vertical\", ctx_r1.nzVertical)(\"reverse\", ctx_r1.nzReverse)(\"offset\", handle_r3.offset)(\"value\", handle_r3.value)(\"active\", handle_r3.active)(\"tooltipFormatter\", ctx_r1.nzTipFormatter)(\"tooltipVisible\", ctx_r1.nzTooltipVisible)(\"tooltipPlacement\", ctx_r1.nzTooltipPlacement)(\"dir\", ctx_r1.dir);\n  }\n}\nfunction NzSliderComponent_nz_slider_marks_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-slider-marks\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"vertical\", ctx_r2.nzVertical)(\"min\", ctx_r2.nzMin)(\"max\", ctx_r2.nzMax)(\"lowerBound\", ctx_r2.bounds.lower)(\"upperBound\", ctx_r2.bounds.upper)(\"marksArray\", ctx_r2.marksArray)(\"included\", ctx_r2.nzIncluded)(\"reverse\", ctx_r2.nzReverse);\n  }\n}\nclass NzSliderService {\n  constructor() {\n    this.isDragging = false;\n  }\n  static {\n    this.ɵfac = function NzSliderService_Factory(t) {\n      return new (t || NzSliderService)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NzSliderService,\n      factory: NzSliderService.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSliderService, [{\n    type: Injectable\n  }], null, null);\n})();\nclass NzSliderHandleComponent {\n  constructor(sliderService, cdr) {\n    this.sliderService = sliderService;\n    this.cdr = cdr;\n    this.tooltipVisible = 'default';\n    this.active = false;\n    this.dir = 'ltr';\n    this.style = {};\n    this.enterHandle = () => {\n      if (!this.sliderService.isDragging) {\n        this.toggleTooltip(true);\n        this.updateTooltipPosition();\n        this.cdr.detectChanges();\n      }\n    };\n    this.leaveHandle = () => {\n      if (!this.sliderService.isDragging) {\n        this.toggleTooltip(false);\n        this.cdr.detectChanges();\n      }\n    };\n  }\n  ngOnChanges(changes) {\n    const {\n      offset,\n      value,\n      active,\n      tooltipVisible,\n      reverse,\n      dir\n    } = changes;\n    if (offset || reverse || dir) {\n      this.updateStyle();\n    }\n    if (value) {\n      this.updateTooltipTitle();\n      this.updateTooltipPosition();\n    }\n    if (active) {\n      if (active.currentValue) {\n        this.toggleTooltip(true);\n      } else {\n        this.toggleTooltip(false);\n      }\n    }\n    if (tooltipVisible?.currentValue === 'always') {\n      Promise.resolve().then(() => this.toggleTooltip(true, true));\n    }\n  }\n  focus() {\n    this.handleEl?.nativeElement.focus();\n  }\n  toggleTooltip(show, force = false) {\n    if (!force && (this.tooltipVisible !== 'default' || !this.tooltip)) {\n      return;\n    }\n    if (show) {\n      this.tooltip?.show();\n    } else {\n      this.tooltip?.hide();\n    }\n  }\n  updateTooltipTitle() {\n    if (this.tooltipFormatter) {\n      this.tooltipTitle = typeof this.tooltipFormatter === 'function' ? this.tooltipFormatter(this.value) : this.tooltipFormatter;\n    } else {\n      this.tooltipTitle = `${this.value}`;\n    }\n  }\n  updateTooltipPosition() {\n    if (this.tooltip) {\n      Promise.resolve().then(() => this.tooltip?.updatePosition());\n    }\n  }\n  updateStyle() {\n    const vertical = this.vertical;\n    const reverse = this.reverse;\n    const offset = this.offset;\n    const positionStyle = vertical ? {\n      [reverse ? 'top' : 'bottom']: `${offset}%`,\n      [reverse ? 'bottom' : 'top']: 'auto',\n      transform: reverse ? null : `translateY(+50%)`\n    } : {\n      ...this.getHorizontalStylePosition(),\n      transform: `translateX(${reverse ? this.dir === 'rtl' ? '-' : '+' : this.dir === 'rtl' ? '+' : '-'}50%)`\n    };\n    this.style = positionStyle;\n    this.cdr.markForCheck();\n  }\n  getHorizontalStylePosition() {\n    let left = this.reverse ? 'auto' : `${this.offset}%`;\n    let right = this.reverse ? `${this.offset}%` : 'auto';\n    if (this.dir === 'rtl') {\n      const tmp = left;\n      left = right;\n      right = tmp;\n    }\n    return {\n      left,\n      right\n    };\n  }\n  static {\n    this.ɵfac = function NzSliderHandleComponent_Factory(t) {\n      return new (t || NzSliderHandleComponent)(i0.ɵɵdirectiveInject(NzSliderService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzSliderHandleComponent,\n      selectors: [[\"nz-slider-handle\"]],\n      viewQuery: function NzSliderHandleComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n          i0.ɵɵviewQuery(NzTooltipDirective, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.handleEl = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltip = _t.first);\n        }\n      },\n      hostBindings: function NzSliderHandleComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"mouseenter\", function NzSliderHandleComponent_mouseenter_HostBindingHandler() {\n            return ctx.enterHandle();\n          })(\"mouseleave\", function NzSliderHandleComponent_mouseleave_HostBindingHandler() {\n            return ctx.leaveHandle();\n          });\n        }\n      },\n      inputs: {\n        vertical: \"vertical\",\n        reverse: \"reverse\",\n        offset: \"offset\",\n        value: \"value\",\n        tooltipVisible: \"tooltipVisible\",\n        tooltipPlacement: \"tooltipPlacement\",\n        tooltipFormatter: \"tooltipFormatter\",\n        active: \"active\",\n        dir: \"dir\"\n      },\n      exportAs: [\"nzSliderHandle\"],\n      standalone: true,\n      features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      decls: 2,\n      vars: 7,\n      consts: [[\"tabindex\", \"0\", \"nz-tooltip\", \"\", 1, \"ant-slider-handle\", 3, \"ngStyle\", \"nzTooltipTitle\", \"nzTooltipTitleContext\", \"nzTooltipTrigger\", \"nzTooltipPlacement\"], [\"handle\", \"\"]],\n      template: function NzSliderHandleComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"div\", 0, 1);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngStyle\", ctx.style)(\"nzTooltipTitle\", ctx.tooltipFormatter === null || ctx.tooltipVisible === \"never\" ? null : ctx.tooltipTitle)(\"nzTooltipTitleContext\", i0.ɵɵpureFunction1(5, _c1, ctx.value))(\"nzTooltipTrigger\", null)(\"nzTooltipPlacement\", ctx.tooltipPlacement);\n        }\n      },\n      dependencies: [NzToolTipModule, i2.NzTooltipDirective, NgStyle],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n__decorate([InputBoolean()], NzSliderHandleComponent.prototype, \"active\", void 0);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSliderHandleComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-slider-handle',\n      exportAs: 'nzSliderHandle',\n      preserveWhitespaces: false,\n      template: `\n    <div\n      #handle\n      class=\"ant-slider-handle\"\n      tabindex=\"0\"\n      nz-tooltip\n      [ngStyle]=\"style\"\n      [nzTooltipTitle]=\"tooltipFormatter === null || tooltipVisible === 'never' ? null : tooltipTitle\"\n      [nzTooltipTitleContext]=\"{ $implicit: value }\"\n      [nzTooltipTrigger]=\"null\"\n      [nzTooltipPlacement]=\"tooltipPlacement\"\n    ></div>\n  `,\n      host: {\n        '(mouseenter)': 'enterHandle()',\n        '(mouseleave)': 'leaveHandle()'\n      },\n      imports: [NzToolTipModule, NgStyle],\n      standalone: true\n    }]\n  }], () => [{\n    type: NzSliderService\n  }, {\n    type: i0.ChangeDetectorRef\n  }], {\n    handleEl: [{\n      type: ViewChild,\n      args: ['handle', {\n        static: false\n      }]\n    }],\n    tooltip: [{\n      type: ViewChild,\n      args: [NzTooltipDirective, {\n        static: false\n      }]\n    }],\n    vertical: [{\n      type: Input\n    }],\n    reverse: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    tooltipVisible: [{\n      type: Input\n    }],\n    tooltipPlacement: [{\n      type: Input\n    }],\n    tooltipFormatter: [{\n      type: Input\n    }],\n    active: [{\n      type: Input\n    }],\n    dir: [{\n      type: Input\n    }]\n  });\n})();\nclass NzSliderMarksComponent {\n  constructor() {\n    this.lowerBound = null;\n    this.upperBound = null;\n    this.marksArray = [];\n    this.vertical = false;\n    this.included = false;\n    this.marks = [];\n  }\n  ngOnChanges(changes) {\n    const {\n      marksArray,\n      lowerBound,\n      upperBound,\n      reverse\n    } = changes;\n    if (marksArray || reverse) {\n      this.buildMarks();\n    }\n    if (marksArray || lowerBound || upperBound || reverse) {\n      this.togglePointActive();\n    }\n  }\n  trackById(_index, mark) {\n    return mark.value;\n  }\n  buildMarks() {\n    const range = this.max - this.min;\n    this.marks = this.marksArray.map(mark => {\n      const {\n        value,\n        offset,\n        config\n      } = mark;\n      const style = this.getMarkStyles(value, range, config);\n      const label = isConfigObject(config) ? config.label : config;\n      return {\n        label,\n        offset,\n        style,\n        value,\n        config,\n        active: false\n      };\n    });\n  }\n  getMarkStyles(value, range, config) {\n    let style;\n    const markValue = this.reverse ? this.max + this.min - value : value;\n    if (this.vertical) {\n      style = {\n        marginBottom: '-50%',\n        bottom: `${(markValue - this.min) / range * 100}%`\n      };\n    } else {\n      style = {\n        transform: `translate3d(-50%, 0, 0)`,\n        left: `${(markValue - this.min) / range * 100}%`\n      };\n    }\n    if (isConfigObject(config) && config.style) {\n      style = {\n        ...style,\n        ...config.style\n      };\n    }\n    return style;\n  }\n  togglePointActive() {\n    if (this.marks && this.lowerBound !== null && this.upperBound !== null) {\n      this.marks.forEach(mark => {\n        const value = mark.value;\n        const isActive = !this.included && value === this.upperBound || this.included && value <= this.upperBound && value >= this.lowerBound;\n        mark.active = isActive;\n      });\n    }\n  }\n  static {\n    this.ɵfac = function NzSliderMarksComponent_Factory(t) {\n      return new (t || NzSliderMarksComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzSliderMarksComponent,\n      selectors: [[\"nz-slider-marks\"]],\n      hostAttrs: [1, \"ant-slider-mark\"],\n      inputs: {\n        lowerBound: \"lowerBound\",\n        upperBound: \"upperBound\",\n        marksArray: \"marksArray\",\n        min: \"min\",\n        max: \"max\",\n        vertical: \"vertical\",\n        included: \"included\",\n        reverse: \"reverse\"\n      },\n      exportAs: [\"nzSliderMarks\"],\n      standalone: true,\n      features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      decls: 1,\n      vars: 2,\n      consts: [[\"class\", \"ant-slider-mark-text\", 3, \"ant-slider-mark-active\", \"ngStyle\", \"innerHTML\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"ant-slider-mark-text\", 3, \"ngStyle\", \"innerHTML\"]],\n      template: function NzSliderMarksComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, NzSliderMarksComponent_span_0_Template, 1, 4, \"span\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngForOf\", ctx.marks)(\"ngForTrackBy\", ctx.trackById);\n        }\n      },\n      dependencies: [NgStyle, NgForOf],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n__decorate([InputBoolean()], NzSliderMarksComponent.prototype, \"vertical\", void 0);\n__decorate([InputBoolean()], NzSliderMarksComponent.prototype, \"included\", void 0);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSliderMarksComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      preserveWhitespaces: false,\n      selector: 'nz-slider-marks',\n      exportAs: 'nzSliderMarks',\n      template: `\n    <span\n      class=\"ant-slider-mark-text\"\n      *ngFor=\"let attr of marks; trackBy: trackById\"\n      [class.ant-slider-mark-active]=\"attr.active\"\n      [ngStyle]=\"attr.style!\"\n      [innerHTML]=\"attr.label\"\n    ></span>\n  `,\n      imports: [NgStyle, NgForOf],\n      standalone: true,\n      host: {\n        class: 'ant-slider-mark'\n      }\n    }]\n  }], null, {\n    lowerBound: [{\n      type: Input\n    }],\n    upperBound: [{\n      type: Input\n    }],\n    marksArray: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    vertical: [{\n      type: Input\n    }],\n    included: [{\n      type: Input\n    }],\n    reverse: [{\n      type: Input\n    }]\n  });\n})();\nfunction isConfigObject(config) {\n  return typeof config !== 'string';\n}\nclass NzSliderStepComponent {\n  constructor() {\n    this.lowerBound = null;\n    this.upperBound = null;\n    this.marksArray = [];\n    this.vertical = false;\n    this.included = false;\n    this.steps = [];\n  }\n  ngOnChanges(changes) {\n    const {\n      marksArray,\n      lowerBound,\n      upperBound,\n      reverse\n    } = changes;\n    if (marksArray || reverse) {\n      this.buildSteps();\n    }\n    if (marksArray || lowerBound || upperBound || reverse) {\n      this.togglePointActive();\n    }\n  }\n  trackById(_index, step) {\n    return step.value;\n  }\n  buildSteps() {\n    const orient = this.vertical ? 'bottom' : 'left';\n    this.steps = this.marksArray.map(mark => {\n      const {\n        value,\n        config\n      } = mark;\n      let offset = mark.offset;\n      const range = this.max - this.min;\n      if (this.reverse) {\n        offset = (this.max - value) / range * 100;\n      }\n      return {\n        value,\n        offset,\n        config,\n        active: false,\n        style: {\n          [orient]: `${offset}%`,\n          transform: this.vertical ? 'translateY(50%)' : 'translateX(-50%)'\n        }\n      };\n    });\n  }\n  togglePointActive() {\n    if (this.steps && this.lowerBound !== null && this.upperBound !== null) {\n      this.steps.forEach(step => {\n        const value = step.value;\n        const isActive = !this.included && value === this.upperBound || this.included && value <= this.upperBound && value >= this.lowerBound;\n        step.active = isActive;\n      });\n    }\n  }\n  static {\n    this.ɵfac = function NzSliderStepComponent_Factory(t) {\n      return new (t || NzSliderStepComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzSliderStepComponent,\n      selectors: [[\"nz-slider-step\"]],\n      hostAttrs: [1, \"ant-slider-step\"],\n      inputs: {\n        lowerBound: \"lowerBound\",\n        upperBound: \"upperBound\",\n        marksArray: \"marksArray\",\n        min: \"min\",\n        max: \"max\",\n        vertical: \"vertical\",\n        included: \"included\",\n        reverse: \"reverse\"\n      },\n      exportAs: [\"nzSliderStep\"],\n      standalone: true,\n      features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      decls: 1,\n      vars: 2,\n      consts: [[\"class\", \"ant-slider-dot\", 3, \"ant-slider-dot-active\", \"ngStyle\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"ant-slider-dot\", 3, \"ngStyle\"]],\n      template: function NzSliderStepComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, NzSliderStepComponent_span_0_Template, 1, 3, \"span\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngForOf\", ctx.steps)(\"ngForTrackBy\", ctx.trackById);\n        }\n      },\n      dependencies: [NgStyle, NgForOf],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n__decorate([InputBoolean()], NzSliderStepComponent.prototype, \"vertical\", void 0);\n__decorate([InputBoolean()], NzSliderStepComponent.prototype, \"included\", void 0);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSliderStepComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-slider-step',\n      exportAs: 'nzSliderStep',\n      preserveWhitespaces: false,\n      template: `\n    <span\n      class=\"ant-slider-dot\"\n      *ngFor=\"let mark of steps; trackBy: trackById\"\n      [class.ant-slider-dot-active]=\"mark.active\"\n      [ngStyle]=\"mark.style!\"\n    ></span>\n  `,\n      imports: [NgStyle, NgForOf],\n      standalone: true,\n      host: {\n        class: 'ant-slider-step'\n      }\n    }]\n  }], null, {\n    lowerBound: [{\n      type: Input\n    }],\n    upperBound: [{\n      type: Input\n    }],\n    marksArray: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    vertical: [{\n      type: Input\n    }],\n    included: [{\n      type: Input\n    }],\n    reverse: [{\n      type: Input\n    }]\n  });\n})();\nclass NzSliderTrackComponent {\n  constructor() {\n    this.offset = 0;\n    this.reverse = false;\n    this.dir = 'ltr';\n    this.length = 0;\n    this.vertical = false;\n    this.included = false;\n    this.style = {};\n  }\n  ngOnChanges() {\n    const vertical = this.vertical;\n    const reverse = this.reverse;\n    const visibility = this.included ? 'visible' : 'hidden';\n    const offset = this.offset;\n    const length = this.length;\n    const positonStyle = vertical ? {\n      [reverse ? 'top' : 'bottom']: `${offset}%`,\n      [reverse ? 'bottom' : 'top']: 'auto',\n      height: `${length}%`,\n      visibility\n    } : {\n      ...this.getHorizontalStylePosition(),\n      width: `${length}%`,\n      visibility\n    };\n    this.style = positonStyle;\n  }\n  getHorizontalStylePosition() {\n    let left = this.reverse ? 'auto' : `${this.offset}%`;\n    let right = this.reverse ? `${this.offset}%` : 'auto';\n    if (this.dir === 'rtl') {\n      const tmp = left;\n      left = right;\n      right = tmp;\n    }\n    return {\n      left,\n      right\n    };\n  }\n  static {\n    this.ɵfac = function NzSliderTrackComponent_Factory(t) {\n      return new (t || NzSliderTrackComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzSliderTrackComponent,\n      selectors: [[\"nz-slider-track\"]],\n      inputs: {\n        offset: \"offset\",\n        reverse: \"reverse\",\n        dir: \"dir\",\n        length: \"length\",\n        vertical: \"vertical\",\n        included: \"included\"\n      },\n      exportAs: [\"nzSliderTrack\"],\n      standalone: true,\n      features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      decls: 1,\n      vars: 1,\n      consts: [[1, \"ant-slider-track\", 3, \"ngStyle\"]],\n      template: function NzSliderTrackComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"div\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngStyle\", ctx.style);\n        }\n      },\n      dependencies: [NgStyle],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n__decorate([InputNumber()], NzSliderTrackComponent.prototype, \"offset\", void 0);\n__decorate([InputBoolean()], NzSliderTrackComponent.prototype, \"reverse\", void 0);\n__decorate([InputNumber()], NzSliderTrackComponent.prototype, \"length\", void 0);\n__decorate([InputBoolean()], NzSliderTrackComponent.prototype, \"vertical\", void 0);\n__decorate([InputBoolean()], NzSliderTrackComponent.prototype, \"included\", void 0);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSliderTrackComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-slider-track',\n      exportAs: 'nzSliderTrack',\n      preserveWhitespaces: false,\n      template: ` <div class=\"ant-slider-track\" [ngStyle]=\"style\"></div> `,\n      imports: [NgStyle],\n      standalone: true\n    }]\n  }], null, {\n    offset: [{\n      type: Input\n    }],\n    reverse: [{\n      type: Input\n    }],\n    dir: [{\n      type: Input\n    }],\n    length: [{\n      type: Input\n    }],\n    vertical: [{\n      type: Input\n    }],\n    included: [{\n      type: Input\n    }]\n  });\n})();\nclass NzSliderComponent {\n  constructor(slider, sliderService, cdr, platform, directionality) {\n    this.slider = slider;\n    this.sliderService = sliderService;\n    this.cdr = cdr;\n    this.platform = platform;\n    this.directionality = directionality;\n    this.nzDisabled = false;\n    this.nzDots = false;\n    this.nzIncluded = true;\n    this.nzRange = false;\n    this.nzVertical = false;\n    this.nzReverse = false;\n    this.nzMarks = null;\n    this.nzMax = 100;\n    this.nzMin = 0;\n    this.nzStep = 1;\n    this.nzTooltipVisible = 'default';\n    this.nzTooltipPlacement = 'top';\n    this.nzOnAfterChange = new EventEmitter();\n    this.value = null;\n    this.cacheSliderStart = null;\n    this.cacheSliderLength = null;\n    this.activeValueIndex = undefined; // Current activated handle's index ONLY for range=true\n    this.track = {\n      offset: null,\n      length: null\n    }; // Track's offset and length\n    this.handles = []; // Handles' offset\n    this.marksArray = null; // \"steps\" in array type with more data & FILTER out the invalid mark\n    this.bounds = {\n      lower: null,\n      upper: null\n    }; // now for nz-slider-step\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n    this.isNzDisableFirstChange = true;\n  }\n  ngOnInit() {\n    this.dir = this.directionality.value;\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n      this.updateTrackAndHandles();\n      this.onValueChange(this.getValue(true));\n    });\n    this.handles = generateHandlers(this.nzRange ? 2 : 1);\n    this.marksArray = this.nzMarks ? this.generateMarkItems(this.nzMarks) : null;\n    this.bindDraggingHandlers();\n    this.toggleDragDisabled(this.nzDisabled);\n    if (this.getValue() === null) {\n      this.setValue(this.formatValue(null));\n    }\n  }\n  ngOnChanges(changes) {\n    const {\n      nzDisabled,\n      nzMarks,\n      nzRange\n    } = changes;\n    if (nzDisabled && !nzDisabled.firstChange) {\n      this.toggleDragDisabled(nzDisabled.currentValue);\n    } else if (nzMarks && !nzMarks.firstChange) {\n      this.marksArray = this.nzMarks ? this.generateMarkItems(this.nzMarks) : null;\n    } else if (nzRange && !nzRange.firstChange) {\n      this.handles = generateHandlers(nzRange.currentValue ? 2 : 1);\n      this.setValue(this.formatValue(null));\n    }\n  }\n  ngOnDestroy() {\n    this.unsubscribeDrag();\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  writeValue(val) {\n    this.setValue(val, true);\n  }\n  onValueChange(_value) {}\n  onTouched() {}\n  registerOnChange(fn) {\n    this.onValueChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  setDisabledState(isDisabled) {\n    this.nzDisabled = this.isNzDisableFirstChange && this.nzDisabled || isDisabled;\n    this.isNzDisableFirstChange = false;\n    this.toggleDragDisabled(this.nzDisabled);\n    this.cdr.markForCheck();\n  }\n  /**\n   * Event handler is only triggered when a slider handler is focused.\n   */\n  onKeyDown(e) {\n    if (this.nzDisabled) {\n      return;\n    }\n    const code = e.keyCode;\n    const isIncrease = code === RIGHT_ARROW || code === UP_ARROW;\n    const isDecrease = code === LEFT_ARROW || code === DOWN_ARROW;\n    if (!(isIncrease || isDecrease)) {\n      return;\n    }\n    e.preventDefault();\n    let step = (isDecrease ? -this.nzStep : this.nzStep) * (this.nzReverse ? -1 : 1);\n    step = this.dir === 'rtl' ? step * -1 : step;\n    const newVal = this.nzRange ? this.value[this.activeValueIndex] + step : this.value + step;\n    this.setActiveValue(ensureNumberInRange(newVal, this.nzMin, this.nzMax));\n    this.nzOnAfterChange.emit(this.getValue(true));\n  }\n  onHandleFocusIn(index) {\n    this.activeValueIndex = index;\n  }\n  setValue(value, isWriteValue = false) {\n    if (isWriteValue) {\n      this.value = this.formatValue(value);\n      this.updateTrackAndHandles();\n    } else if (!valuesEqual(this.value, value)) {\n      this.value = value;\n      this.updateTrackAndHandles();\n      this.onValueChange(this.getValue(true));\n    }\n  }\n  getValue(cloneAndSort = false) {\n    if (cloneAndSort && this.value && isValueRange(this.value)) {\n      return [...this.value].sort((a, b) => a - b);\n    }\n    return this.value;\n  }\n  /**\n   * Clone & sort current value and convert them to offsets, then return the new one.\n   */\n  getValueToOffset(value) {\n    let normalizedValue = value;\n    if (typeof normalizedValue === 'undefined') {\n      normalizedValue = this.getValue(true);\n    }\n    return isValueRange(normalizedValue) ? normalizedValue.map(val => this.valueToOffset(val)) : this.valueToOffset(normalizedValue);\n  }\n  /**\n   * Find the closest value to be activated.\n   */\n  setActiveValueIndex(pointerValue) {\n    const value = this.getValue();\n    if (isValueRange(value)) {\n      let minimal = null;\n      let gap;\n      let activeIndex = -1;\n      value.forEach((val, index) => {\n        gap = Math.abs(pointerValue - val);\n        if (minimal === null || gap < minimal) {\n          minimal = gap;\n          activeIndex = index;\n        }\n      });\n      this.activeValueIndex = activeIndex;\n      this.handlerComponents.toArray()[activeIndex].focus();\n    } else {\n      this.handlerComponents.toArray()[0].focus();\n    }\n  }\n  setActiveValue(pointerValue) {\n    if (isValueRange(this.value)) {\n      const newValue = [...this.value];\n      newValue[this.activeValueIndex] = pointerValue;\n      this.setValue(newValue);\n    } else {\n      this.setValue(pointerValue);\n    }\n  }\n  /**\n   * Update track and handles' position and length.\n   */\n  updateTrackAndHandles() {\n    const value = this.getValue();\n    const offset = this.getValueToOffset(value);\n    const valueSorted = this.getValue(true);\n    const offsetSorted = this.getValueToOffset(valueSorted);\n    const boundParts = isValueRange(valueSorted) ? valueSorted : [0, valueSorted];\n    const trackParts = isValueRange(offsetSorted) ? [offsetSorted[0], offsetSorted[1] - offsetSorted[0]] : [0, offsetSorted];\n    this.handles.forEach((handle, index) => {\n      handle.offset = isValueRange(offset) ? offset[index] : offset;\n      handle.value = isValueRange(value) ? value[index] : value || 0;\n    });\n    [this.bounds.lower, this.bounds.upper] = boundParts;\n    [this.track.offset, this.track.length] = trackParts;\n    this.cdr.markForCheck();\n  }\n  onDragStart(value) {\n    this.toggleDragMoving(true);\n    this.cacheSliderProperty();\n    this.setActiveValueIndex(this.getLogicalValue(value));\n    this.setActiveValue(this.getLogicalValue(value));\n    this.showHandleTooltip(this.nzRange ? this.activeValueIndex : 0);\n  }\n  onDragMove(value) {\n    this.setActiveValue(this.getLogicalValue(value));\n    this.cdr.markForCheck();\n  }\n  getLogicalValue(value) {\n    if (this.nzReverse) {\n      if (!this.nzVertical && this.dir === 'rtl') {\n        return value;\n      }\n      return this.nzMax - value + this.nzMin;\n    }\n    if (!this.nzVertical && this.dir === 'rtl') {\n      return this.nzMax - value + this.nzMin;\n    }\n    return value;\n  }\n  onDragEnd() {\n    this.nzOnAfterChange.emit(this.getValue(true));\n    this.toggleDragMoving(false);\n    this.cacheSliderProperty(true);\n    this.hideAllHandleTooltip();\n    this.cdr.markForCheck();\n  }\n  /**\n   * Create user interactions handles.\n   */\n  bindDraggingHandlers() {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n    const pluckFunc = keys => event => keys.reduce((acc, key) => acc[key] || acc, event);\n    const sliderDOM = this.slider.nativeElement;\n    const orientField = this.nzVertical ? 'pageY' : 'pageX';\n    const mouse = {\n      start: 'mousedown',\n      move: 'mousemove',\n      end: 'mouseup',\n      pluckKey: [orientField]\n    };\n    const touch = {\n      start: 'touchstart',\n      move: 'touchmove',\n      end: 'touchend',\n      pluckKey: ['touches', '0', orientField],\n      filter: e => e instanceof TouchEvent\n    };\n    [mouse, touch].forEach(source => {\n      const {\n        start,\n        move,\n        end,\n        pluckKey,\n        filter: filterFunc = () => true\n      } = source;\n      source.startPlucked$ = fromEvent(sliderDOM, start).pipe(filter(filterFunc), tap(silentEvent), map(pluckFunc(pluckKey)), map(position => this.findClosestValue(position)));\n      source.end$ = fromEvent(document, end);\n      source.moveResolved$ = fromEvent(document, move).pipe(filter(filterFunc), tap(silentEvent), map(pluckFunc(pluckKey)), distinctUntilChanged(), map(position => this.findClosestValue(position)), distinctUntilChanged(), takeUntil(source.end$));\n    });\n    this.dragStart$ = merge(mouse.startPlucked$, touch.startPlucked$);\n    this.dragMove$ = merge(mouse.moveResolved$, touch.moveResolved$);\n    this.dragEnd$ = merge(mouse.end$, touch.end$);\n  }\n  subscribeDrag(periods = ['start', 'move', 'end']) {\n    if (periods.indexOf('start') !== -1 && this.dragStart$ && !this.dragStart_) {\n      this.dragStart_ = this.dragStart$.subscribe(this.onDragStart.bind(this));\n    }\n    if (periods.indexOf('move') !== -1 && this.dragMove$ && !this.dragMove_) {\n      this.dragMove_ = this.dragMove$.subscribe(this.onDragMove.bind(this));\n    }\n    if (periods.indexOf('end') !== -1 && this.dragEnd$ && !this.dragEnd_) {\n      this.dragEnd_ = this.dragEnd$.subscribe(this.onDragEnd.bind(this));\n    }\n  }\n  unsubscribeDrag(periods = ['start', 'move', 'end']) {\n    if (periods.indexOf('start') !== -1 && this.dragStart_) {\n      this.dragStart_.unsubscribe();\n      this.dragStart_ = null;\n    }\n    if (periods.indexOf('move') !== -1 && this.dragMove_) {\n      this.dragMove_.unsubscribe();\n      this.dragMove_ = null;\n    }\n    if (periods.indexOf('end') !== -1 && this.dragEnd_) {\n      this.dragEnd_.unsubscribe();\n      this.dragEnd_ = null;\n    }\n  }\n  toggleDragMoving(movable) {\n    const periods = ['move', 'end'];\n    if (movable) {\n      this.sliderService.isDragging = true;\n      this.subscribeDrag(periods);\n    } else {\n      this.sliderService.isDragging = false;\n      this.unsubscribeDrag(periods);\n    }\n  }\n  toggleDragDisabled(disabled) {\n    if (disabled) {\n      this.unsubscribeDrag();\n    } else {\n      this.subscribeDrag(['start']);\n    }\n  }\n  findClosestValue(position) {\n    const sliderStart = this.getSliderStartPosition();\n    const sliderLength = this.getSliderLength();\n    const ratio = ensureNumberInRange((position - sliderStart) / sliderLength, 0, 1);\n    const val = (this.nzMax - this.nzMin) * (this.nzVertical ? 1 - ratio : ratio) + this.nzMin;\n    const points = this.nzMarks === null ? [] : Object.keys(this.nzMarks).map(parseFloat).sort((a, b) => a - b);\n    if (this.nzStep !== 0 && !this.nzDots) {\n      const closestOne = Math.round(val / this.nzStep) * this.nzStep;\n      points.push(closestOne);\n    }\n    const gaps = points.map(point => Math.abs(val - point));\n    const closest = points[gaps.indexOf(Math.min(...gaps))];\n    // return parseFloat(closest.toFixed(getPrecision(this.nzStep)));\n    return this.nzStep === 0 ? closest : parseFloat(closest.toFixed(getPrecision(this.nzStep)));\n  }\n  valueToOffset(value) {\n    return getPercent(this.nzMin, this.nzMax, value);\n  }\n  getSliderStartPosition() {\n    if (this.cacheSliderStart !== null) {\n      return this.cacheSliderStart;\n    }\n    const offset = getElementOffset(this.slider.nativeElement);\n    return this.nzVertical ? offset.top : offset.left;\n  }\n  getSliderLength() {\n    if (this.cacheSliderLength !== null) {\n      return this.cacheSliderLength;\n    }\n    const sliderDOM = this.slider.nativeElement;\n    return this.nzVertical ? sliderDOM.clientHeight : sliderDOM.clientWidth;\n  }\n  /**\n   * Cache DOM layout/reflow operations for performance (may not necessary?)\n   */\n  cacheSliderProperty(remove = false) {\n    this.cacheSliderStart = remove ? null : this.getSliderStartPosition();\n    this.cacheSliderLength = remove ? null : this.getSliderLength();\n  }\n  formatValue(value) {\n    if (isNil(value)) {\n      return this.nzRange ? [this.nzMin, this.nzMax] : this.nzMin;\n    } else if (assertValueValid(value, this.nzRange)) {\n      return isValueRange(value) ? value.map(val => ensureNumberInRange(val, this.nzMin, this.nzMax)) : ensureNumberInRange(value, this.nzMin, this.nzMax);\n    } else {\n      return this.nzDefaultValue ? this.nzDefaultValue : this.nzRange ? [this.nzMin, this.nzMax] : this.nzMin;\n    }\n  }\n  /**\n   * Show one handle's tooltip and hide others'.\n   */\n  showHandleTooltip(handleIndex = 0) {\n    this.handles.forEach((handle, index) => {\n      handle.active = index === handleIndex;\n    });\n  }\n  hideAllHandleTooltip() {\n    this.handles.forEach(handle => handle.active = false);\n  }\n  generateMarkItems(marks) {\n    const marksArray = [];\n    for (const key in marks) {\n      if (marks.hasOwnProperty(key)) {\n        const mark = marks[key];\n        const val = typeof key === 'number' ? key : parseFloat(key);\n        if (val >= this.nzMin && val <= this.nzMax) {\n          marksArray.push({\n            value: val,\n            offset: this.valueToOffset(val),\n            config: mark\n          });\n        }\n      }\n    }\n    return marksArray.length ? marksArray : null;\n  }\n  static {\n    this.ɵfac = function NzSliderComponent_Factory(t) {\n      return new (t || NzSliderComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(NzSliderService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2$1.Platform), i0.ɵɵdirectiveInject(i3.Directionality, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzSliderComponent,\n      selectors: [[\"nz-slider\"]],\n      viewQuery: function NzSliderComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(NzSliderHandleComponent, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.handlerComponents = _t);\n        }\n      },\n      hostAttrs: [1, \"ant-slider\"],\n      hostVars: 8,\n      hostBindings: function NzSliderComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"keydown\", function NzSliderComponent_keydown_HostBindingHandler($event) {\n            return ctx.onKeyDown($event);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ant-slider-rtl\", ctx.dir === \"rtl\")(\"ant-slider-disabled\", ctx.nzDisabled)(\"ant-slider-vertical\", ctx.nzVertical)(\"ant-slider-with-marks\", ctx.marksArray);\n        }\n      },\n      inputs: {\n        nzDisabled: \"nzDisabled\",\n        nzDots: \"nzDots\",\n        nzIncluded: \"nzIncluded\",\n        nzRange: \"nzRange\",\n        nzVertical: \"nzVertical\",\n        nzReverse: \"nzReverse\",\n        nzDefaultValue: \"nzDefaultValue\",\n        nzMarks: \"nzMarks\",\n        nzMax: \"nzMax\",\n        nzMin: \"nzMin\",\n        nzStep: \"nzStep\",\n        nzTooltipVisible: \"nzTooltipVisible\",\n        nzTooltipPlacement: \"nzTooltipPlacement\",\n        nzTipFormatter: \"nzTipFormatter\"\n      },\n      outputs: {\n        nzOnAfterChange: \"nzOnAfterChange\"\n      },\n      exportAs: [\"nzSlider\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NzSliderComponent),\n        multi: true\n      }, NzSliderService]), i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      decls: 5,\n      vars: 9,\n      consts: [[1, \"ant-slider-rail\"], [3, \"vertical\", \"included\", \"offset\", \"length\", \"reverse\", \"dir\"], [3, \"vertical\", \"min\", \"max\", \"lowerBound\", \"upperBound\", \"marksArray\", \"included\", \"reverse\", 4, \"ngIf\"], [3, \"vertical\", \"reverse\", \"offset\", \"value\", \"active\", \"tooltipFormatter\", \"tooltipVisible\", \"tooltipPlacement\", \"dir\", \"focusin\", 4, \"ngFor\", \"ngForOf\"], [3, \"vertical\", \"min\", \"max\", \"lowerBound\", \"upperBound\", \"marksArray\", \"included\", \"reverse\"], [3, \"vertical\", \"reverse\", \"offset\", \"value\", \"active\", \"tooltipFormatter\", \"tooltipVisible\", \"tooltipPlacement\", \"dir\", \"focusin\"]],\n      template: function NzSliderComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"div\", 0)(1, \"nz-slider-track\", 1);\n          i0.ɵɵtemplate(2, NzSliderComponent_nz_slider_step_2_Template, 1, 8, \"nz-slider-step\", 2)(3, NzSliderComponent_nz_slider_handle_3_Template, 1, 9, \"nz-slider-handle\", 3)(4, NzSliderComponent_nz_slider_marks_4_Template, 1, 8, \"nz-slider-marks\", 2);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"vertical\", ctx.nzVertical)(\"included\", ctx.nzIncluded)(\"offset\", ctx.track.offset)(\"length\", ctx.track.length)(\"reverse\", ctx.nzReverse)(\"dir\", ctx.dir);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.marksArray);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngForOf\", ctx.handles);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.marksArray);\n        }\n      },\n      dependencies: [NzSliderTrackComponent, NzSliderStepComponent, NzSliderHandleComponent, NgForOf, NzSliderMarksComponent, NgIf],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n__decorate([InputBoolean()], NzSliderComponent.prototype, \"nzDisabled\", void 0);\n__decorate([InputBoolean()], NzSliderComponent.prototype, \"nzDots\", void 0);\n__decorate([InputBoolean()], NzSliderComponent.prototype, \"nzIncluded\", void 0);\n__decorate([InputBoolean()], NzSliderComponent.prototype, \"nzRange\", void 0);\n__decorate([InputBoolean()], NzSliderComponent.prototype, \"nzVertical\", void 0);\n__decorate([InputBoolean()], NzSliderComponent.prototype, \"nzReverse\", void 0);\n__decorate([InputNumber()], NzSliderComponent.prototype, \"nzMax\", void 0);\n__decorate([InputNumber()], NzSliderComponent.prototype, \"nzMin\", void 0);\n__decorate([InputNumber()], NzSliderComponent.prototype, \"nzStep\", void 0);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSliderComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-slider',\n      exportAs: 'nzSlider',\n      preserveWhitespaces: false,\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NzSliderComponent),\n        multi: true\n      }, NzSliderService],\n      template: `\n    <div class=\"ant-slider-rail\"></div>\n    <nz-slider-track\n      [vertical]=\"nzVertical\"\n      [included]=\"nzIncluded\"\n      [offset]=\"track.offset!\"\n      [length]=\"track.length!\"\n      [reverse]=\"nzReverse\"\n      [dir]=\"dir\"\n    ></nz-slider-track>\n    <nz-slider-step\n      *ngIf=\"marksArray\"\n      [vertical]=\"nzVertical\"\n      [min]=\"nzMin\"\n      [max]=\"nzMax\"\n      [lowerBound]=\"$any(bounds.lower)\"\n      [upperBound]=\"$any(bounds.upper)\"\n      [marksArray]=\"marksArray\"\n      [included]=\"nzIncluded\"\n      [reverse]=\"nzReverse\"\n    ></nz-slider-step>\n    <nz-slider-handle\n      *ngFor=\"let handle of handles; index as handleIndex\"\n      [vertical]=\"nzVertical\"\n      [reverse]=\"nzReverse\"\n      [offset]=\"handle.offset!\"\n      [value]=\"handle.value!\"\n      [active]=\"handle.active\"\n      [tooltipFormatter]=\"nzTipFormatter\"\n      [tooltipVisible]=\"nzTooltipVisible\"\n      [tooltipPlacement]=\"nzTooltipPlacement\"\n      [dir]=\"dir\"\n      (focusin)=\"onHandleFocusIn(handleIndex)\"\n    ></nz-slider-handle>\n    <nz-slider-marks\n      *ngIf=\"marksArray\"\n      [vertical]=\"nzVertical\"\n      [min]=\"nzMin\"\n      [max]=\"nzMax\"\n      [lowerBound]=\"$any(bounds.lower)\"\n      [upperBound]=\"$any(bounds.upper)\"\n      [marksArray]=\"marksArray\"\n      [included]=\"nzIncluded\"\n      [reverse]=\"nzReverse\"\n    ></nz-slider-marks>\n  `,\n      imports: [NzSliderTrackComponent, NzSliderStepComponent, NzSliderHandleComponent, NgForOf, NzSliderMarksComponent, NgIf],\n      standalone: true,\n      host: {\n        class: 'ant-slider',\n        '[class.ant-slider-rtl]': `dir === 'rtl'`,\n        '[class.ant-slider-disabled]': 'nzDisabled',\n        '[class.ant-slider-vertical]': 'nzVertical',\n        '[class.ant-slider-with-marks]': 'marksArray',\n        '(keydown)': 'onKeyDown($event)'\n      }\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: NzSliderService\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i2$1.Platform\n  }, {\n    type: i3.Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    handlerComponents: [{\n      type: ViewChildren,\n      args: [NzSliderHandleComponent]\n    }],\n    nzDisabled: [{\n      type: Input\n    }],\n    nzDots: [{\n      type: Input\n    }],\n    nzIncluded: [{\n      type: Input\n    }],\n    nzRange: [{\n      type: Input\n    }],\n    nzVertical: [{\n      type: Input\n    }],\n    nzReverse: [{\n      type: Input\n    }],\n    nzDefaultValue: [{\n      type: Input\n    }],\n    nzMarks: [{\n      type: Input\n    }],\n    nzMax: [{\n      type: Input\n    }],\n    nzMin: [{\n      type: Input\n    }],\n    nzStep: [{\n      type: Input\n    }],\n    nzTooltipVisible: [{\n      type: Input\n    }],\n    nzTooltipPlacement: [{\n      type: Input\n    }],\n    nzTipFormatter: [{\n      type: Input\n    }],\n    nzOnAfterChange: [{\n      type: Output\n    }]\n  });\n})();\nfunction getValueTypeNotMatchError() {\n  return new Error(`The \"nzRange\" can't match the \"ngModel\"'s type, please check these properties: \"nzRange\", \"ngModel\", \"nzDefaultValue\".`);\n}\nfunction isValueRange(value) {\n  if (value instanceof Array) {\n    return value.length === 2;\n  } else {\n    return false;\n  }\n}\nfunction generateHandlers(amount) {\n  return Array(amount).fill(0).map(() => ({\n    offset: null,\n    value: null,\n    active: false\n  }));\n}\n/**\n * Check if value is valid and throw error if value-type/range not match.\n */\nfunction assertValueValid(value, isRange) {\n  if (!isValueRange(value) && isNaN(value) || isValueRange(value) && value.some(v => isNaN(v))) {\n    return false;\n  }\n  return assertValueTypeMatch(value, isRange);\n}\n/**\n * Assert that if `this.nzRange` is `true`, value is also a range, vice versa.\n */\nfunction assertValueTypeMatch(value, isRange = false) {\n  if (isValueRange(value) !== isRange) {\n    throw getValueTypeNotMatchError();\n  }\n  return true;\n}\nfunction valuesEqual(valA, valB) {\n  if (typeof valA !== typeof valB) {\n    return false;\n  }\n  return isValueRange(valA) && isValueRange(valB) ? arraysEqual(valA, valB) : valA === valB;\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzSliderModule {\n  static {\n    this.ɵfac = function NzSliderModule_Factory(t) {\n      return new (t || NzSliderModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NzSliderModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [NzSliderComponent, NzSliderHandleComponent]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSliderModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NzSliderComponent, NzSliderTrackComponent, NzSliderHandleComponent, NzSliderStepComponent, NzSliderMarksComponent],\n      exports: [NzSliderComponent, NzSliderTrackComponent, NzSliderHandleComponent, NzSliderStepComponent, NzSliderMarksComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzMarks {}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzMarks, NzSliderComponent, NzSliderModule, NzSliderHandleComponent as ɵNzSliderHandleComponent, NzSliderMarksComponent as ɵNzSliderMarksComponent, NzSliderService as ɵNzSliderService, NzSliderStepComponent as ɵNzSliderStepComponent, NzSliderTrackComponent as ɵNzSliderTrackComponent };","map":{"version":3,"names":["__decorate","RIGHT_ARROW","UP_ARROW","LEFT_ARROW","DOWN_ARROW","NgStyle","NgForOf","NgIf","i0","Injectable","Component","ChangeDetectionStrategy","ViewEncapsulation","ViewChild","Input","EventEmitter","forwardRef","Optional","ViewChildren","Output","NgModule","NG_VALUE_ACCESSOR","Subject","fromEvent","merge","takeUntil","filter","tap","map","distinctUntilChanged","InputBoolean","InputNumber","ensureNumberInRange","silentEvent","getPrecision","getPercent","getElementOffset","isNil","arraysEqual","i2","NzTooltipDirective","NzToolTipModule","i2$1","i3","_c0","_c1","a0","$implicit","NzSliderMarksComponent_span_0_Template","rf","ctx","ɵɵelement","attr_r1","ɵɵclassProp","active","ɵɵproperty","style","label","ɵɵsanitizeHtml","NzSliderStepComponent_span_0_Template","mark_r1","NzSliderComponent_nz_slider_step_2_Template","ctx_r0","ɵɵnextContext","nzVertical","nzMin","nzMax","bounds","lower","upper","marksArray","nzIncluded","nzReverse","NzSliderComponent_nz_slider_handle_3_Template","_r6","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","NzSliderComponent_nz_slider_handle_3_Template_nz_slider_handle_focusin_0_listener","restoredCtx","ɵɵrestoreView","handleIndex_r4","index","ctx_r5","ɵɵresetView","onHandleFocusIn","ɵɵelementEnd","handle_r3","ctx_r1","offset","value","nzTipFormatter","nzTooltipVisible","nzTooltipPlacement","dir","NzSliderComponent_nz_slider_marks_4_Template","ctx_r2","NzSliderService","constructor","isDragging","ɵfac","NzSliderService_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","type","NzSliderHandleComponent","sliderService","cdr","tooltipVisible","enterHandle","toggleTooltip","updateTooltipPosition","detectChanges","leaveHandle","ngOnChanges","changes","reverse","updateStyle","updateTooltipTitle","currentValue","Promise","resolve","then","focus","handleEl","nativeElement","show","force","tooltip","hide","tooltipFormatter","tooltipTitle","updatePosition","vertical","positionStyle","transform","getHorizontalStylePosition","markForCheck","left","right","tmp","NzSliderHandleComponent_Factory","ɵɵdirectiveInject","ChangeDetectorRef","ɵcmp","ɵɵdefineComponent","selectors","viewQuery","NzSliderHandleComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostBindings","NzSliderHandleComponent_HostBindings","NzSliderHandleComponent_mouseenter_HostBindingHandler","NzSliderHandleComponent_mouseleave_HostBindingHandler","inputs","tooltipPlacement","exportAs","standalone","features","ɵɵNgOnChangesFeature","ɵɵStandaloneFeature","decls","vars","consts","template","NzSliderHandleComponent_Template","ɵɵpureFunction1","dependencies","encapsulation","changeDetection","prototype","args","OnPush","None","selector","preserveWhitespaces","host","imports","static","NzSliderMarksComponent","lowerBound","upperBound","included","marks","buildMarks","togglePointActive","trackById","_index","mark","range","max","min","config","getMarkStyles","isConfigObject","markValue","marginBottom","bottom","forEach","isActive","NzSliderMarksComponent_Factory","hostAttrs","NzSliderMarksComponent_Template","ɵɵtemplate","class","NzSliderStepComponent","steps","buildSteps","step","orient","NzSliderStepComponent_Factory","NzSliderStepComponent_Template","NzSliderTrackComponent","length","visibility","positonStyle","height","width","NzSliderTrackComponent_Factory","NzSliderTrackComponent_Template","NzSliderComponent","slider","platform","directionality","nzDisabled","nzDots","nzRange","nzMarks","nzStep","nzOnAfterChange","cacheSliderStart","cacheSliderLength","activeValueIndex","undefined","track","handles","destroy$","isNzDisableFirstChange","ngOnInit","change","pipe","subscribe","direction","updateTrackAndHandles","onValueChange","getValue","generateHandlers","generateMarkItems","bindDraggingHandlers","toggleDragDisabled","setValue","formatValue","firstChange","ngOnDestroy","unsubscribeDrag","next","complete","writeValue","val","_value","onTouched","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","onKeyDown","e","code","keyCode","isIncrease","isDecrease","preventDefault","newVal","setActiveValue","emit","isWriteValue","valuesEqual","cloneAndSort","isValueRange","sort","a","b","getValueToOffset","normalizedValue","valueToOffset","setActiveValueIndex","pointerValue","minimal","gap","activeIndex","Math","abs","handlerComponents","toArray","newValue","valueSorted","offsetSorted","boundParts","trackParts","handle","onDragStart","toggleDragMoving","cacheSliderProperty","getLogicalValue","showHandleTooltip","onDragMove","onDragEnd","hideAllHandleTooltip","isBrowser","pluckFunc","keys","event","reduce","acc","key","sliderDOM","orientField","mouse","start","move","end","pluckKey","touch","TouchEvent","source","filterFunc","startPlucked$","position","findClosestValue","end$","document","moveResolved$","dragStart$","dragMove$","dragEnd$","subscribeDrag","periods","indexOf","dragStart_","bind","dragMove_","dragEnd_","unsubscribe","movable","disabled","sliderStart","getSliderStartPosition","sliderLength","getSliderLength","ratio","points","Object","parseFloat","closestOne","round","push","gaps","point","closest","toFixed","top","clientHeight","clientWidth","remove","assertValueValid","nzDefaultValue","handleIndex","hasOwnProperty","NzSliderComponent_Factory","ElementRef","Platform","Directionality","NzSliderComponent_Query","hostVars","NzSliderComponent_HostBindings","NzSliderComponent_keydown_HostBindingHandler","$event","outputs","ɵɵProvidersFeature","provide","useExisting","multi","NzSliderComponent_Template","ɵɵadvance","providers","decorators","getValueTypeNotMatchError","Error","Array","amount","fill","isRange","isNaN","some","v","assertValueTypeMatch","valA","valB","NzSliderModule","NzSliderModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","exports","NzMarks","ɵNzSliderHandleComponent","ɵNzSliderMarksComponent","ɵNzSliderService","ɵNzSliderStepComponent","ɵNzSliderTrackComponent"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-slider.mjs"],"sourcesContent":["import { __decorate } from 'tslib';\nimport { RIGHT_ARROW, UP_ARROW, LEFT_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { NgStyle, NgForOf, NgIf } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewChild, Input, EventEmitter, forwardRef, Optional, ViewChildren, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { takeUntil, filter, tap, map, distinctUntilChanged } from 'rxjs/operators';\nimport { InputBoolean, InputNumber, ensureNumberInRange, silentEvent, getPrecision, getPercent, getElementOffset, isNil, arraysEqual } from 'ng-zorro-antd/core/util';\nimport * as i2 from 'ng-zorro-antd/tooltip';\nimport { NzTooltipDirective, NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport * as i2$1 from '@angular/cdk/platform';\nimport * as i3 from '@angular/cdk/bidi';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzSliderService {\n    constructor() {\n        this.isDragging = false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzSliderService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzSliderService }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzSliderService, decorators: [{\n            type: Injectable\n        }] });\n\nclass NzSliderHandleComponent {\n    constructor(sliderService, cdr) {\n        this.sliderService = sliderService;\n        this.cdr = cdr;\n        this.tooltipVisible = 'default';\n        this.active = false;\n        this.dir = 'ltr';\n        this.style = {};\n        this.enterHandle = () => {\n            if (!this.sliderService.isDragging) {\n                this.toggleTooltip(true);\n                this.updateTooltipPosition();\n                this.cdr.detectChanges();\n            }\n        };\n        this.leaveHandle = () => {\n            if (!this.sliderService.isDragging) {\n                this.toggleTooltip(false);\n                this.cdr.detectChanges();\n            }\n        };\n    }\n    ngOnChanges(changes) {\n        const { offset, value, active, tooltipVisible, reverse, dir } = changes;\n        if (offset || reverse || dir) {\n            this.updateStyle();\n        }\n        if (value) {\n            this.updateTooltipTitle();\n            this.updateTooltipPosition();\n        }\n        if (active) {\n            if (active.currentValue) {\n                this.toggleTooltip(true);\n            }\n            else {\n                this.toggleTooltip(false);\n            }\n        }\n        if (tooltipVisible?.currentValue === 'always') {\n            Promise.resolve().then(() => this.toggleTooltip(true, true));\n        }\n    }\n    focus() {\n        this.handleEl?.nativeElement.focus();\n    }\n    toggleTooltip(show, force = false) {\n        if (!force && (this.tooltipVisible !== 'default' || !this.tooltip)) {\n            return;\n        }\n        if (show) {\n            this.tooltip?.show();\n        }\n        else {\n            this.tooltip?.hide();\n        }\n    }\n    updateTooltipTitle() {\n        if (this.tooltipFormatter) {\n            this.tooltipTitle =\n                typeof this.tooltipFormatter === 'function' ? this.tooltipFormatter(this.value) : this.tooltipFormatter;\n        }\n        else {\n            this.tooltipTitle = `${this.value}`;\n        }\n    }\n    updateTooltipPosition() {\n        if (this.tooltip) {\n            Promise.resolve().then(() => this.tooltip?.updatePosition());\n        }\n    }\n    updateStyle() {\n        const vertical = this.vertical;\n        const reverse = this.reverse;\n        const offset = this.offset;\n        const positionStyle = vertical\n            ? {\n                [reverse ? 'top' : 'bottom']: `${offset}%`,\n                [reverse ? 'bottom' : 'top']: 'auto',\n                transform: reverse ? null : `translateY(+50%)`\n            }\n            : {\n                ...this.getHorizontalStylePosition(),\n                transform: `translateX(${reverse ? (this.dir === 'rtl' ? '-' : '+') : this.dir === 'rtl' ? '+' : '-'}50%)`\n            };\n        this.style = positionStyle;\n        this.cdr.markForCheck();\n    }\n    getHorizontalStylePosition() {\n        let left = this.reverse ? 'auto' : `${this.offset}%`;\n        let right = this.reverse ? `${this.offset}%` : 'auto';\n        if (this.dir === 'rtl') {\n            const tmp = left;\n            left = right;\n            right = tmp;\n        }\n        return { left, right };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzSliderHandleComponent, deps: [{ token: NzSliderService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.8\", type: NzSliderHandleComponent, isStandalone: true, selector: \"nz-slider-handle\", inputs: { vertical: \"vertical\", reverse: \"reverse\", offset: \"offset\", value: \"value\", tooltipVisible: \"tooltipVisible\", tooltipPlacement: \"tooltipPlacement\", tooltipFormatter: \"tooltipFormatter\", active: \"active\", dir: \"dir\" }, host: { listeners: { \"mouseenter\": \"enterHandle()\", \"mouseleave\": \"leaveHandle()\" } }, viewQueries: [{ propertyName: \"handleEl\", first: true, predicate: [\"handle\"], descendants: true }, { propertyName: \"tooltip\", first: true, predicate: NzTooltipDirective, descendants: true }], exportAs: [\"nzSliderHandle\"], usesOnChanges: true, ngImport: i0, template: `\n    <div\n      #handle\n      class=\"ant-slider-handle\"\n      tabindex=\"0\"\n      nz-tooltip\n      [ngStyle]=\"style\"\n      [nzTooltipTitle]=\"tooltipFormatter === null || tooltipVisible === 'never' ? null : tooltipTitle\"\n      [nzTooltipTitleContext]=\"{ $implicit: value }\"\n      [nzTooltipTrigger]=\"null\"\n      [nzTooltipPlacement]=\"tooltipPlacement\"\n    ></div>\n  `, isInline: true, dependencies: [{ kind: \"ngmodule\", type: NzToolTipModule }, { kind: \"directive\", type: i2.NzTooltipDirective, selector: \"[nz-tooltip]\", inputs: [\"nzTooltipTitle\", \"nzTooltipTitleContext\", \"nz-tooltip\", \"nzTooltipTrigger\", \"nzTooltipPlacement\", \"nzTooltipOrigin\", \"nzTooltipVisible\", \"nzTooltipMouseEnterDelay\", \"nzTooltipMouseLeaveDelay\", \"nzTooltipOverlayClassName\", \"nzTooltipOverlayStyle\", \"nzTooltipArrowPointAtCenter\", \"cdkConnectedOverlayPush\", \"nzTooltipColor\"], outputs: [\"nzTooltipVisibleChange\"], exportAs: [\"nzTooltip\"] }, { kind: \"directive\", type: NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\n__decorate([\n    InputBoolean()\n], NzSliderHandleComponent.prototype, \"active\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzSliderHandleComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'nz-slider-handle',\n                    exportAs: 'nzSliderHandle',\n                    preserveWhitespaces: false,\n                    template: `\n    <div\n      #handle\n      class=\"ant-slider-handle\"\n      tabindex=\"0\"\n      nz-tooltip\n      [ngStyle]=\"style\"\n      [nzTooltipTitle]=\"tooltipFormatter === null || tooltipVisible === 'never' ? null : tooltipTitle\"\n      [nzTooltipTitleContext]=\"{ $implicit: value }\"\n      [nzTooltipTrigger]=\"null\"\n      [nzTooltipPlacement]=\"tooltipPlacement\"\n    ></div>\n  `,\n                    host: {\n                        '(mouseenter)': 'enterHandle()',\n                        '(mouseleave)': 'leaveHandle()'\n                    },\n                    imports: [NzToolTipModule, NgStyle],\n                    standalone: true\n                }]\n        }], ctorParameters: () => [{ type: NzSliderService }, { type: i0.ChangeDetectorRef }], propDecorators: { handleEl: [{\n                type: ViewChild,\n                args: ['handle', { static: false }]\n            }], tooltip: [{\n                type: ViewChild,\n                args: [NzTooltipDirective, { static: false }]\n            }], vertical: [{\n                type: Input\n            }], reverse: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], tooltipVisible: [{\n                type: Input\n            }], tooltipPlacement: [{\n                type: Input\n            }], tooltipFormatter: [{\n                type: Input\n            }], active: [{\n                type: Input\n            }], dir: [{\n                type: Input\n            }] } });\n\nclass NzSliderMarksComponent {\n    constructor() {\n        this.lowerBound = null;\n        this.upperBound = null;\n        this.marksArray = [];\n        this.vertical = false;\n        this.included = false;\n        this.marks = [];\n    }\n    ngOnChanges(changes) {\n        const { marksArray, lowerBound, upperBound, reverse } = changes;\n        if (marksArray || reverse) {\n            this.buildMarks();\n        }\n        if (marksArray || lowerBound || upperBound || reverse) {\n            this.togglePointActive();\n        }\n    }\n    trackById(_index, mark) {\n        return mark.value;\n    }\n    buildMarks() {\n        const range = this.max - this.min;\n        this.marks = this.marksArray.map(mark => {\n            const { value, offset, config } = mark;\n            const style = this.getMarkStyles(value, range, config);\n            const label = isConfigObject(config) ? config.label : config;\n            return {\n                label,\n                offset,\n                style,\n                value,\n                config,\n                active: false\n            };\n        });\n    }\n    getMarkStyles(value, range, config) {\n        let style;\n        const markValue = this.reverse ? this.max + this.min - value : value;\n        if (this.vertical) {\n            style = {\n                marginBottom: '-50%',\n                bottom: `${((markValue - this.min) / range) * 100}%`\n            };\n        }\n        else {\n            style = {\n                transform: `translate3d(-50%, 0, 0)`,\n                left: `${((markValue - this.min) / range) * 100}%`\n            };\n        }\n        if (isConfigObject(config) && config.style) {\n            style = { ...style, ...config.style };\n        }\n        return style;\n    }\n    togglePointActive() {\n        if (this.marks && this.lowerBound !== null && this.upperBound !== null) {\n            this.marks.forEach(mark => {\n                const value = mark.value;\n                const isActive = (!this.included && value === this.upperBound) ||\n                    (this.included && value <= this.upperBound && value >= this.lowerBound);\n                mark.active = isActive;\n            });\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzSliderMarksComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.8\", type: NzSliderMarksComponent, isStandalone: true, selector: \"nz-slider-marks\", inputs: { lowerBound: \"lowerBound\", upperBound: \"upperBound\", marksArray: \"marksArray\", min: \"min\", max: \"max\", vertical: \"vertical\", included: \"included\", reverse: \"reverse\" }, host: { classAttribute: \"ant-slider-mark\" }, exportAs: [\"nzSliderMarks\"], usesOnChanges: true, ngImport: i0, template: `\n    <span\n      class=\"ant-slider-mark-text\"\n      *ngFor=\"let attr of marks; trackBy: trackById\"\n      [class.ant-slider-mark-active]=\"attr.active\"\n      [ngStyle]=\"attr.style!\"\n      [innerHTML]=\"attr.label\"\n    ></span>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\n__decorate([\n    InputBoolean()\n], NzSliderMarksComponent.prototype, \"vertical\", void 0);\n__decorate([\n    InputBoolean()\n], NzSliderMarksComponent.prototype, \"included\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzSliderMarksComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    preserveWhitespaces: false,\n                    selector: 'nz-slider-marks',\n                    exportAs: 'nzSliderMarks',\n                    template: `\n    <span\n      class=\"ant-slider-mark-text\"\n      *ngFor=\"let attr of marks; trackBy: trackById\"\n      [class.ant-slider-mark-active]=\"attr.active\"\n      [ngStyle]=\"attr.style!\"\n      [innerHTML]=\"attr.label\"\n    ></span>\n  `,\n                    imports: [NgStyle, NgForOf],\n                    standalone: true,\n                    host: {\n                        class: 'ant-slider-mark'\n                    }\n                }]\n        }], propDecorators: { lowerBound: [{\n                type: Input\n            }], upperBound: [{\n                type: Input\n            }], marksArray: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], vertical: [{\n                type: Input\n            }], included: [{\n                type: Input\n            }], reverse: [{\n                type: Input\n            }] } });\nfunction isConfigObject(config) {\n    return typeof config !== 'string';\n}\n\nclass NzSliderStepComponent {\n    constructor() {\n        this.lowerBound = null;\n        this.upperBound = null;\n        this.marksArray = [];\n        this.vertical = false;\n        this.included = false;\n        this.steps = [];\n    }\n    ngOnChanges(changes) {\n        const { marksArray, lowerBound, upperBound, reverse } = changes;\n        if (marksArray || reverse) {\n            this.buildSteps();\n        }\n        if (marksArray || lowerBound || upperBound || reverse) {\n            this.togglePointActive();\n        }\n    }\n    trackById(_index, step) {\n        return step.value;\n    }\n    buildSteps() {\n        const orient = this.vertical ? 'bottom' : 'left';\n        this.steps = this.marksArray.map(mark => {\n            const { value, config } = mark;\n            let offset = mark.offset;\n            const range = this.max - this.min;\n            if (this.reverse) {\n                offset = ((this.max - value) / range) * 100;\n            }\n            return {\n                value,\n                offset,\n                config,\n                active: false,\n                style: {\n                    [orient]: `${offset}%`,\n                    transform: this.vertical ? 'translateY(50%)' : 'translateX(-50%)'\n                }\n            };\n        });\n    }\n    togglePointActive() {\n        if (this.steps && this.lowerBound !== null && this.upperBound !== null) {\n            this.steps.forEach(step => {\n                const value = step.value;\n                const isActive = (!this.included && value === this.upperBound) ||\n                    (this.included && value <= this.upperBound && value >= this.lowerBound);\n                step.active = isActive;\n            });\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzSliderStepComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.8\", type: NzSliderStepComponent, isStandalone: true, selector: \"nz-slider-step\", inputs: { lowerBound: \"lowerBound\", upperBound: \"upperBound\", marksArray: \"marksArray\", min: \"min\", max: \"max\", vertical: \"vertical\", included: \"included\", reverse: \"reverse\" }, host: { classAttribute: \"ant-slider-step\" }, exportAs: [\"nzSliderStep\"], usesOnChanges: true, ngImport: i0, template: `\n    <span\n      class=\"ant-slider-dot\"\n      *ngFor=\"let mark of steps; trackBy: trackById\"\n      [class.ant-slider-dot-active]=\"mark.active\"\n      [ngStyle]=\"mark.style!\"\n    ></span>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\n__decorate([\n    InputBoolean()\n], NzSliderStepComponent.prototype, \"vertical\", void 0);\n__decorate([\n    InputBoolean()\n], NzSliderStepComponent.prototype, \"included\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzSliderStepComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'nz-slider-step',\n                    exportAs: 'nzSliderStep',\n                    preserveWhitespaces: false,\n                    template: `\n    <span\n      class=\"ant-slider-dot\"\n      *ngFor=\"let mark of steps; trackBy: trackById\"\n      [class.ant-slider-dot-active]=\"mark.active\"\n      [ngStyle]=\"mark.style!\"\n    ></span>\n  `,\n                    imports: [NgStyle, NgForOf],\n                    standalone: true,\n                    host: {\n                        class: 'ant-slider-step'\n                    }\n                }]\n        }], propDecorators: { lowerBound: [{\n                type: Input\n            }], upperBound: [{\n                type: Input\n            }], marksArray: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], vertical: [{\n                type: Input\n            }], included: [{\n                type: Input\n            }], reverse: [{\n                type: Input\n            }] } });\n\nclass NzSliderTrackComponent {\n    constructor() {\n        this.offset = 0;\n        this.reverse = false;\n        this.dir = 'ltr';\n        this.length = 0;\n        this.vertical = false;\n        this.included = false;\n        this.style = {};\n    }\n    ngOnChanges() {\n        const vertical = this.vertical;\n        const reverse = this.reverse;\n        const visibility = this.included ? 'visible' : 'hidden';\n        const offset = this.offset;\n        const length = this.length;\n        const positonStyle = vertical\n            ? {\n                [reverse ? 'top' : 'bottom']: `${offset}%`,\n                [reverse ? 'bottom' : 'top']: 'auto',\n                height: `${length}%`,\n                visibility\n            }\n            : {\n                ...this.getHorizontalStylePosition(),\n                width: `${length}%`,\n                visibility\n            };\n        this.style = positonStyle;\n    }\n    getHorizontalStylePosition() {\n        let left = this.reverse ? 'auto' : `${this.offset}%`;\n        let right = this.reverse ? `${this.offset}%` : 'auto';\n        if (this.dir === 'rtl') {\n            const tmp = left;\n            left = right;\n            right = tmp;\n        }\n        return { left, right };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzSliderTrackComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.8\", type: NzSliderTrackComponent, isStandalone: true, selector: \"nz-slider-track\", inputs: { offset: \"offset\", reverse: \"reverse\", dir: \"dir\", length: \"length\", vertical: \"vertical\", included: \"included\" }, exportAs: [\"nzSliderTrack\"], usesOnChanges: true, ngImport: i0, template: ` <div class=\"ant-slider-track\" [ngStyle]=\"style\"></div> `, isInline: true, dependencies: [{ kind: \"directive\", type: NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\n__decorate([\n    InputNumber()\n], NzSliderTrackComponent.prototype, \"offset\", void 0);\n__decorate([\n    InputBoolean()\n], NzSliderTrackComponent.prototype, \"reverse\", void 0);\n__decorate([\n    InputNumber()\n], NzSliderTrackComponent.prototype, \"length\", void 0);\n__decorate([\n    InputBoolean()\n], NzSliderTrackComponent.prototype, \"vertical\", void 0);\n__decorate([\n    InputBoolean()\n], NzSliderTrackComponent.prototype, \"included\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzSliderTrackComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'nz-slider-track',\n                    exportAs: 'nzSliderTrack',\n                    preserveWhitespaces: false,\n                    template: ` <div class=\"ant-slider-track\" [ngStyle]=\"style\"></div> `,\n                    imports: [NgStyle],\n                    standalone: true\n                }]\n        }], propDecorators: { offset: [{\n                type: Input\n            }], reverse: [{\n                type: Input\n            }], dir: [{\n                type: Input\n            }], length: [{\n                type: Input\n            }], vertical: [{\n                type: Input\n            }], included: [{\n                type: Input\n            }] } });\n\nclass NzSliderComponent {\n    constructor(slider, sliderService, cdr, platform, directionality) {\n        this.slider = slider;\n        this.sliderService = sliderService;\n        this.cdr = cdr;\n        this.platform = platform;\n        this.directionality = directionality;\n        this.nzDisabled = false;\n        this.nzDots = false;\n        this.nzIncluded = true;\n        this.nzRange = false;\n        this.nzVertical = false;\n        this.nzReverse = false;\n        this.nzMarks = null;\n        this.nzMax = 100;\n        this.nzMin = 0;\n        this.nzStep = 1;\n        this.nzTooltipVisible = 'default';\n        this.nzTooltipPlacement = 'top';\n        this.nzOnAfterChange = new EventEmitter();\n        this.value = null;\n        this.cacheSliderStart = null;\n        this.cacheSliderLength = null;\n        this.activeValueIndex = undefined; // Current activated handle's index ONLY for range=true\n        this.track = { offset: null, length: null }; // Track's offset and length\n        this.handles = []; // Handles' offset\n        this.marksArray = null; // \"steps\" in array type with more data & FILTER out the invalid mark\n        this.bounds = { lower: null, upper: null }; // now for nz-slider-step\n        this.dir = 'ltr';\n        this.destroy$ = new Subject();\n        this.isNzDisableFirstChange = true;\n    }\n    ngOnInit() {\n        this.dir = this.directionality.value;\n        this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.cdr.detectChanges();\n            this.updateTrackAndHandles();\n            this.onValueChange(this.getValue(true));\n        });\n        this.handles = generateHandlers(this.nzRange ? 2 : 1);\n        this.marksArray = this.nzMarks ? this.generateMarkItems(this.nzMarks) : null;\n        this.bindDraggingHandlers();\n        this.toggleDragDisabled(this.nzDisabled);\n        if (this.getValue() === null) {\n            this.setValue(this.formatValue(null));\n        }\n    }\n    ngOnChanges(changes) {\n        const { nzDisabled, nzMarks, nzRange } = changes;\n        if (nzDisabled && !nzDisabled.firstChange) {\n            this.toggleDragDisabled(nzDisabled.currentValue);\n        }\n        else if (nzMarks && !nzMarks.firstChange) {\n            this.marksArray = this.nzMarks ? this.generateMarkItems(this.nzMarks) : null;\n        }\n        else if (nzRange && !nzRange.firstChange) {\n            this.handles = generateHandlers(nzRange.currentValue ? 2 : 1);\n            this.setValue(this.formatValue(null));\n        }\n    }\n    ngOnDestroy() {\n        this.unsubscribeDrag();\n        this.destroy$.next(true);\n        this.destroy$.complete();\n    }\n    writeValue(val) {\n        this.setValue(val, true);\n    }\n    onValueChange(_value) { }\n    onTouched() { }\n    registerOnChange(fn) {\n        this.onValueChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    setDisabledState(isDisabled) {\n        this.nzDisabled = (this.isNzDisableFirstChange && this.nzDisabled) || isDisabled;\n        this.isNzDisableFirstChange = false;\n        this.toggleDragDisabled(this.nzDisabled);\n        this.cdr.markForCheck();\n    }\n    /**\n     * Event handler is only triggered when a slider handler is focused.\n     */\n    onKeyDown(e) {\n        if (this.nzDisabled) {\n            return;\n        }\n        const code = e.keyCode;\n        const isIncrease = code === RIGHT_ARROW || code === UP_ARROW;\n        const isDecrease = code === LEFT_ARROW || code === DOWN_ARROW;\n        if (!(isIncrease || isDecrease)) {\n            return;\n        }\n        e.preventDefault();\n        let step = (isDecrease ? -this.nzStep : this.nzStep) * (this.nzReverse ? -1 : 1);\n        step = this.dir === 'rtl' ? step * -1 : step;\n        const newVal = this.nzRange\n            ? this.value[this.activeValueIndex] + step\n            : this.value + step;\n        this.setActiveValue(ensureNumberInRange(newVal, this.nzMin, this.nzMax));\n        this.nzOnAfterChange.emit(this.getValue(true));\n    }\n    onHandleFocusIn(index) {\n        this.activeValueIndex = index;\n    }\n    setValue(value, isWriteValue = false) {\n        if (isWriteValue) {\n            this.value = this.formatValue(value);\n            this.updateTrackAndHandles();\n        }\n        else if (!valuesEqual(this.value, value)) {\n            this.value = value;\n            this.updateTrackAndHandles();\n            this.onValueChange(this.getValue(true));\n        }\n    }\n    getValue(cloneAndSort = false) {\n        if (cloneAndSort && this.value && isValueRange(this.value)) {\n            return [...this.value].sort((a, b) => a - b);\n        }\n        return this.value;\n    }\n    /**\n     * Clone & sort current value and convert them to offsets, then return the new one.\n     */\n    getValueToOffset(value) {\n        let normalizedValue = value;\n        if (typeof normalizedValue === 'undefined') {\n            normalizedValue = this.getValue(true);\n        }\n        return isValueRange(normalizedValue)\n            ? normalizedValue.map(val => this.valueToOffset(val))\n            : this.valueToOffset(normalizedValue);\n    }\n    /**\n     * Find the closest value to be activated.\n     */\n    setActiveValueIndex(pointerValue) {\n        const value = this.getValue();\n        if (isValueRange(value)) {\n            let minimal = null;\n            let gap;\n            let activeIndex = -1;\n            value.forEach((val, index) => {\n                gap = Math.abs(pointerValue - val);\n                if (minimal === null || gap < minimal) {\n                    minimal = gap;\n                    activeIndex = index;\n                }\n            });\n            this.activeValueIndex = activeIndex;\n            this.handlerComponents.toArray()[activeIndex].focus();\n        }\n        else {\n            this.handlerComponents.toArray()[0].focus();\n        }\n    }\n    setActiveValue(pointerValue) {\n        if (isValueRange(this.value)) {\n            const newValue = [...this.value];\n            newValue[this.activeValueIndex] = pointerValue;\n            this.setValue(newValue);\n        }\n        else {\n            this.setValue(pointerValue);\n        }\n    }\n    /**\n     * Update track and handles' position and length.\n     */\n    updateTrackAndHandles() {\n        const value = this.getValue();\n        const offset = this.getValueToOffset(value);\n        const valueSorted = this.getValue(true);\n        const offsetSorted = this.getValueToOffset(valueSorted);\n        const boundParts = isValueRange(valueSorted) ? valueSorted : [0, valueSorted];\n        const trackParts = isValueRange(offsetSorted)\n            ? [offsetSorted[0], offsetSorted[1] - offsetSorted[0]]\n            : [0, offsetSorted];\n        this.handles.forEach((handle, index) => {\n            handle.offset = isValueRange(offset) ? offset[index] : offset;\n            handle.value = isValueRange(value) ? value[index] : value || 0;\n        });\n        [this.bounds.lower, this.bounds.upper] = boundParts;\n        [this.track.offset, this.track.length] = trackParts;\n        this.cdr.markForCheck();\n    }\n    onDragStart(value) {\n        this.toggleDragMoving(true);\n        this.cacheSliderProperty();\n        this.setActiveValueIndex(this.getLogicalValue(value));\n        this.setActiveValue(this.getLogicalValue(value));\n        this.showHandleTooltip(this.nzRange ? this.activeValueIndex : 0);\n    }\n    onDragMove(value) {\n        this.setActiveValue(this.getLogicalValue(value));\n        this.cdr.markForCheck();\n    }\n    getLogicalValue(value) {\n        if (this.nzReverse) {\n            if (!this.nzVertical && this.dir === 'rtl') {\n                return value;\n            }\n            return this.nzMax - value + this.nzMin;\n        }\n        if (!this.nzVertical && this.dir === 'rtl') {\n            return this.nzMax - value + this.nzMin;\n        }\n        return value;\n    }\n    onDragEnd() {\n        this.nzOnAfterChange.emit(this.getValue(true));\n        this.toggleDragMoving(false);\n        this.cacheSliderProperty(true);\n        this.hideAllHandleTooltip();\n        this.cdr.markForCheck();\n    }\n    /**\n     * Create user interactions handles.\n     */\n    bindDraggingHandlers() {\n        if (!this.platform.isBrowser) {\n            return;\n        }\n        const pluckFunc = keys => (event) => keys.reduce((acc, key) => acc[key] || acc, event);\n        const sliderDOM = this.slider.nativeElement;\n        const orientField = this.nzVertical ? 'pageY' : 'pageX';\n        const mouse = {\n            start: 'mousedown',\n            move: 'mousemove',\n            end: 'mouseup',\n            pluckKey: [orientField]\n        };\n        const touch = {\n            start: 'touchstart',\n            move: 'touchmove',\n            end: 'touchend',\n            pluckKey: ['touches', '0', orientField],\n            filter: (e) => e instanceof TouchEvent\n        };\n        [mouse, touch].forEach(source => {\n            const { start, move, end, pluckKey, filter: filterFunc = () => true } = source;\n            source.startPlucked$ = fromEvent(sliderDOM, start).pipe(filter(filterFunc), tap(silentEvent), map(pluckFunc(pluckKey)), map((position) => this.findClosestValue(position)));\n            source.end$ = fromEvent(document, end);\n            source.moveResolved$ = fromEvent(document, move).pipe(filter(filterFunc), tap(silentEvent), map(pluckFunc(pluckKey)), distinctUntilChanged(), map((position) => this.findClosestValue(position)), distinctUntilChanged(), takeUntil(source.end$));\n        });\n        this.dragStart$ = merge(mouse.startPlucked$, touch.startPlucked$);\n        this.dragMove$ = merge(mouse.moveResolved$, touch.moveResolved$);\n        this.dragEnd$ = merge(mouse.end$, touch.end$);\n    }\n    subscribeDrag(periods = ['start', 'move', 'end']) {\n        if (periods.indexOf('start') !== -1 && this.dragStart$ && !this.dragStart_) {\n            this.dragStart_ = this.dragStart$.subscribe(this.onDragStart.bind(this));\n        }\n        if (periods.indexOf('move') !== -1 && this.dragMove$ && !this.dragMove_) {\n            this.dragMove_ = this.dragMove$.subscribe(this.onDragMove.bind(this));\n        }\n        if (periods.indexOf('end') !== -1 && this.dragEnd$ && !this.dragEnd_) {\n            this.dragEnd_ = this.dragEnd$.subscribe(this.onDragEnd.bind(this));\n        }\n    }\n    unsubscribeDrag(periods = ['start', 'move', 'end']) {\n        if (periods.indexOf('start') !== -1 && this.dragStart_) {\n            this.dragStart_.unsubscribe();\n            this.dragStart_ = null;\n        }\n        if (periods.indexOf('move') !== -1 && this.dragMove_) {\n            this.dragMove_.unsubscribe();\n            this.dragMove_ = null;\n        }\n        if (periods.indexOf('end') !== -1 && this.dragEnd_) {\n            this.dragEnd_.unsubscribe();\n            this.dragEnd_ = null;\n        }\n    }\n    toggleDragMoving(movable) {\n        const periods = ['move', 'end'];\n        if (movable) {\n            this.sliderService.isDragging = true;\n            this.subscribeDrag(periods);\n        }\n        else {\n            this.sliderService.isDragging = false;\n            this.unsubscribeDrag(periods);\n        }\n    }\n    toggleDragDisabled(disabled) {\n        if (disabled) {\n            this.unsubscribeDrag();\n        }\n        else {\n            this.subscribeDrag(['start']);\n        }\n    }\n    findClosestValue(position) {\n        const sliderStart = this.getSliderStartPosition();\n        const sliderLength = this.getSliderLength();\n        const ratio = ensureNumberInRange((position - sliderStart) / sliderLength, 0, 1);\n        const val = (this.nzMax - this.nzMin) * (this.nzVertical ? 1 - ratio : ratio) + this.nzMin;\n        const points = this.nzMarks === null\n            ? []\n            : Object.keys(this.nzMarks)\n                .map(parseFloat)\n                .sort((a, b) => a - b);\n        if (this.nzStep !== 0 && !this.nzDots) {\n            const closestOne = Math.round(val / this.nzStep) * this.nzStep;\n            points.push(closestOne);\n        }\n        const gaps = points.map(point => Math.abs(val - point));\n        const closest = points[gaps.indexOf(Math.min(...gaps))];\n        // return parseFloat(closest.toFixed(getPrecision(this.nzStep)));\n        return this.nzStep === 0 ? closest : parseFloat(closest.toFixed(getPrecision(this.nzStep)));\n    }\n    valueToOffset(value) {\n        return getPercent(this.nzMin, this.nzMax, value);\n    }\n    getSliderStartPosition() {\n        if (this.cacheSliderStart !== null) {\n            return this.cacheSliderStart;\n        }\n        const offset = getElementOffset(this.slider.nativeElement);\n        return this.nzVertical ? offset.top : offset.left;\n    }\n    getSliderLength() {\n        if (this.cacheSliderLength !== null) {\n            return this.cacheSliderLength;\n        }\n        const sliderDOM = this.slider.nativeElement;\n        return this.nzVertical ? sliderDOM.clientHeight : sliderDOM.clientWidth;\n    }\n    /**\n     * Cache DOM layout/reflow operations for performance (may not necessary?)\n     */\n    cacheSliderProperty(remove = false) {\n        this.cacheSliderStart = remove ? null : this.getSliderStartPosition();\n        this.cacheSliderLength = remove ? null : this.getSliderLength();\n    }\n    formatValue(value) {\n        if (isNil(value)) {\n            return this.nzRange ? [this.nzMin, this.nzMax] : this.nzMin;\n        }\n        else if (assertValueValid(value, this.nzRange)) {\n            return isValueRange(value)\n                ? value.map(val => ensureNumberInRange(val, this.nzMin, this.nzMax))\n                : ensureNumberInRange(value, this.nzMin, this.nzMax);\n        }\n        else {\n            return this.nzDefaultValue ? this.nzDefaultValue : this.nzRange ? [this.nzMin, this.nzMax] : this.nzMin;\n        }\n    }\n    /**\n     * Show one handle's tooltip and hide others'.\n     */\n    showHandleTooltip(handleIndex = 0) {\n        this.handles.forEach((handle, index) => {\n            handle.active = index === handleIndex;\n        });\n    }\n    hideAllHandleTooltip() {\n        this.handles.forEach(handle => (handle.active = false));\n    }\n    generateMarkItems(marks) {\n        const marksArray = [];\n        for (const key in marks) {\n            if (marks.hasOwnProperty(key)) {\n                const mark = marks[key];\n                const val = typeof key === 'number' ? key : parseFloat(key);\n                if (val >= this.nzMin && val <= this.nzMax) {\n                    marksArray.push({ value: val, offset: this.valueToOffset(val), config: mark });\n                }\n            }\n        }\n        return marksArray.length ? marksArray : null;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzSliderComponent, deps: [{ token: i0.ElementRef }, { token: NzSliderService }, { token: i0.ChangeDetectorRef }, { token: i2$1.Platform }, { token: i3.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.3.8\", type: NzSliderComponent, isStandalone: true, selector: \"nz-slider\", inputs: { nzDisabled: \"nzDisabled\", nzDots: \"nzDots\", nzIncluded: \"nzIncluded\", nzRange: \"nzRange\", nzVertical: \"nzVertical\", nzReverse: \"nzReverse\", nzDefaultValue: \"nzDefaultValue\", nzMarks: \"nzMarks\", nzMax: \"nzMax\", nzMin: \"nzMin\", nzStep: \"nzStep\", nzTooltipVisible: \"nzTooltipVisible\", nzTooltipPlacement: \"nzTooltipPlacement\", nzTipFormatter: \"nzTipFormatter\" }, outputs: { nzOnAfterChange: \"nzOnAfterChange\" }, host: { listeners: { \"keydown\": \"onKeyDown($event)\" }, properties: { \"class.ant-slider-rtl\": \"dir === 'rtl'\", \"class.ant-slider-disabled\": \"nzDisabled\", \"class.ant-slider-vertical\": \"nzVertical\", \"class.ant-slider-with-marks\": \"marksArray\" }, classAttribute: \"ant-slider\" }, providers: [\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => NzSliderComponent),\n                multi: true\n            },\n            NzSliderService\n        ], viewQueries: [{ propertyName: \"handlerComponents\", predicate: NzSliderHandleComponent, descendants: true }], exportAs: [\"nzSlider\"], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"ant-slider-rail\"></div>\n    <nz-slider-track\n      [vertical]=\"nzVertical\"\n      [included]=\"nzIncluded\"\n      [offset]=\"track.offset!\"\n      [length]=\"track.length!\"\n      [reverse]=\"nzReverse\"\n      [dir]=\"dir\"\n    ></nz-slider-track>\n    <nz-slider-step\n      *ngIf=\"marksArray\"\n      [vertical]=\"nzVertical\"\n      [min]=\"nzMin\"\n      [max]=\"nzMax\"\n      [lowerBound]=\"$any(bounds.lower)\"\n      [upperBound]=\"$any(bounds.upper)\"\n      [marksArray]=\"marksArray\"\n      [included]=\"nzIncluded\"\n      [reverse]=\"nzReverse\"\n    ></nz-slider-step>\n    <nz-slider-handle\n      *ngFor=\"let handle of handles; index as handleIndex\"\n      [vertical]=\"nzVertical\"\n      [reverse]=\"nzReverse\"\n      [offset]=\"handle.offset!\"\n      [value]=\"handle.value!\"\n      [active]=\"handle.active\"\n      [tooltipFormatter]=\"nzTipFormatter\"\n      [tooltipVisible]=\"nzTooltipVisible\"\n      [tooltipPlacement]=\"nzTooltipPlacement\"\n      [dir]=\"dir\"\n      (focusin)=\"onHandleFocusIn(handleIndex)\"\n    ></nz-slider-handle>\n    <nz-slider-marks\n      *ngIf=\"marksArray\"\n      [vertical]=\"nzVertical\"\n      [min]=\"nzMin\"\n      [max]=\"nzMax\"\n      [lowerBound]=\"$any(bounds.lower)\"\n      [upperBound]=\"$any(bounds.upper)\"\n      [marksArray]=\"marksArray\"\n      [included]=\"nzIncluded\"\n      [reverse]=\"nzReverse\"\n    ></nz-slider-marks>\n  `, isInline: true, dependencies: [{ kind: \"component\", type: NzSliderTrackComponent, selector: \"nz-slider-track\", inputs: [\"offset\", \"reverse\", \"dir\", \"length\", \"vertical\", \"included\"], exportAs: [\"nzSliderTrack\"] }, { kind: \"component\", type: NzSliderStepComponent, selector: \"nz-slider-step\", inputs: [\"lowerBound\", \"upperBound\", \"marksArray\", \"min\", \"max\", \"vertical\", \"included\", \"reverse\"], exportAs: [\"nzSliderStep\"] }, { kind: \"component\", type: NzSliderHandleComponent, selector: \"nz-slider-handle\", inputs: [\"vertical\", \"reverse\", \"offset\", \"value\", \"tooltipVisible\", \"tooltipPlacement\", \"tooltipFormatter\", \"active\", \"dir\"], exportAs: [\"nzSliderHandle\"] }, { kind: \"directive\", type: NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"component\", type: NzSliderMarksComponent, selector: \"nz-slider-marks\", inputs: [\"lowerBound\", \"upperBound\", \"marksArray\", \"min\", \"max\", \"vertical\", \"included\", \"reverse\"], exportAs: [\"nzSliderMarks\"] }, { kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\n__decorate([\n    InputBoolean()\n], NzSliderComponent.prototype, \"nzDisabled\", void 0);\n__decorate([\n    InputBoolean()\n], NzSliderComponent.prototype, \"nzDots\", void 0);\n__decorate([\n    InputBoolean()\n], NzSliderComponent.prototype, \"nzIncluded\", void 0);\n__decorate([\n    InputBoolean()\n], NzSliderComponent.prototype, \"nzRange\", void 0);\n__decorate([\n    InputBoolean()\n], NzSliderComponent.prototype, \"nzVertical\", void 0);\n__decorate([\n    InputBoolean()\n], NzSliderComponent.prototype, \"nzReverse\", void 0);\n__decorate([\n    InputNumber()\n], NzSliderComponent.prototype, \"nzMax\", void 0);\n__decorate([\n    InputNumber()\n], NzSliderComponent.prototype, \"nzMin\", void 0);\n__decorate([\n    InputNumber()\n], NzSliderComponent.prototype, \"nzStep\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzSliderComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'nz-slider',\n                    exportAs: 'nzSlider',\n                    preserveWhitespaces: false,\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => NzSliderComponent),\n                            multi: true\n                        },\n                        NzSliderService\n                    ],\n                    template: `\n    <div class=\"ant-slider-rail\"></div>\n    <nz-slider-track\n      [vertical]=\"nzVertical\"\n      [included]=\"nzIncluded\"\n      [offset]=\"track.offset!\"\n      [length]=\"track.length!\"\n      [reverse]=\"nzReverse\"\n      [dir]=\"dir\"\n    ></nz-slider-track>\n    <nz-slider-step\n      *ngIf=\"marksArray\"\n      [vertical]=\"nzVertical\"\n      [min]=\"nzMin\"\n      [max]=\"nzMax\"\n      [lowerBound]=\"$any(bounds.lower)\"\n      [upperBound]=\"$any(bounds.upper)\"\n      [marksArray]=\"marksArray\"\n      [included]=\"nzIncluded\"\n      [reverse]=\"nzReverse\"\n    ></nz-slider-step>\n    <nz-slider-handle\n      *ngFor=\"let handle of handles; index as handleIndex\"\n      [vertical]=\"nzVertical\"\n      [reverse]=\"nzReverse\"\n      [offset]=\"handle.offset!\"\n      [value]=\"handle.value!\"\n      [active]=\"handle.active\"\n      [tooltipFormatter]=\"nzTipFormatter\"\n      [tooltipVisible]=\"nzTooltipVisible\"\n      [tooltipPlacement]=\"nzTooltipPlacement\"\n      [dir]=\"dir\"\n      (focusin)=\"onHandleFocusIn(handleIndex)\"\n    ></nz-slider-handle>\n    <nz-slider-marks\n      *ngIf=\"marksArray\"\n      [vertical]=\"nzVertical\"\n      [min]=\"nzMin\"\n      [max]=\"nzMax\"\n      [lowerBound]=\"$any(bounds.lower)\"\n      [upperBound]=\"$any(bounds.upper)\"\n      [marksArray]=\"marksArray\"\n      [included]=\"nzIncluded\"\n      [reverse]=\"nzReverse\"\n    ></nz-slider-marks>\n  `,\n                    imports: [\n                        NzSliderTrackComponent,\n                        NzSliderStepComponent,\n                        NzSliderHandleComponent,\n                        NgForOf,\n                        NzSliderMarksComponent,\n                        NgIf\n                    ],\n                    standalone: true,\n                    host: {\n                        class: 'ant-slider',\n                        '[class.ant-slider-rtl]': `dir === 'rtl'`,\n                        '[class.ant-slider-disabled]': 'nzDisabled',\n                        '[class.ant-slider-vertical]': 'nzVertical',\n                        '[class.ant-slider-with-marks]': 'marksArray',\n                        '(keydown)': 'onKeyDown($event)'\n                    }\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: NzSliderService }, { type: i0.ChangeDetectorRef }, { type: i2$1.Platform }, { type: i3.Directionality, decorators: [{\n                    type: Optional\n                }] }], propDecorators: { handlerComponents: [{\n                type: ViewChildren,\n                args: [NzSliderHandleComponent]\n            }], nzDisabled: [{\n                type: Input\n            }], nzDots: [{\n                type: Input\n            }], nzIncluded: [{\n                type: Input\n            }], nzRange: [{\n                type: Input\n            }], nzVertical: [{\n                type: Input\n            }], nzReverse: [{\n                type: Input\n            }], nzDefaultValue: [{\n                type: Input\n            }], nzMarks: [{\n                type: Input\n            }], nzMax: [{\n                type: Input\n            }], nzMin: [{\n                type: Input\n            }], nzStep: [{\n                type: Input\n            }], nzTooltipVisible: [{\n                type: Input\n            }], nzTooltipPlacement: [{\n                type: Input\n            }], nzTipFormatter: [{\n                type: Input\n            }], nzOnAfterChange: [{\n                type: Output\n            }] } });\nfunction getValueTypeNotMatchError() {\n    return new Error(`The \"nzRange\" can't match the \"ngModel\"'s type, please check these properties: \"nzRange\", \"ngModel\", \"nzDefaultValue\".`);\n}\nfunction isValueRange(value) {\n    if (value instanceof Array) {\n        return value.length === 2;\n    }\n    else {\n        return false;\n    }\n}\nfunction generateHandlers(amount) {\n    return Array(amount)\n        .fill(0)\n        .map(() => ({ offset: null, value: null, active: false }));\n}\n/**\n * Check if value is valid and throw error if value-type/range not match.\n */\nfunction assertValueValid(value, isRange) {\n    if ((!isValueRange(value) && isNaN(value)) || (isValueRange(value) && value.some(v => isNaN(v)))) {\n        return false;\n    }\n    return assertValueTypeMatch(value, isRange);\n}\n/**\n * Assert that if `this.nzRange` is `true`, value is also a range, vice versa.\n */\nfunction assertValueTypeMatch(value, isRange = false) {\n    if (isValueRange(value) !== isRange) {\n        throw getValueTypeNotMatchError();\n    }\n    return true;\n}\nfunction valuesEqual(valA, valB) {\n    if (typeof valA !== typeof valB) {\n        return false;\n    }\n    return isValueRange(valA) && isValueRange(valB) ? arraysEqual(valA, valB) : valA === valB;\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzSliderModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzSliderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.3.8\", ngImport: i0, type: NzSliderModule, imports: [NzSliderComponent,\n            NzSliderTrackComponent,\n            NzSliderHandleComponent,\n            NzSliderStepComponent,\n            NzSliderMarksComponent], exports: [NzSliderComponent,\n            NzSliderTrackComponent,\n            NzSliderHandleComponent,\n            NzSliderStepComponent,\n            NzSliderMarksComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzSliderModule, imports: [NzSliderComponent,\n            NzSliderHandleComponent] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.3.8\", ngImport: i0, type: NzSliderModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        NzSliderComponent,\n                        NzSliderTrackComponent,\n                        NzSliderHandleComponent,\n                        NzSliderStepComponent,\n                        NzSliderMarksComponent\n                    ],\n                    exports: [\n                        NzSliderComponent,\n                        NzSliderTrackComponent,\n                        NzSliderHandleComponent,\n                        NzSliderStepComponent,\n                        NzSliderMarksComponent\n                    ]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzMarks {\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzMarks, NzSliderComponent, NzSliderModule, NzSliderHandleComponent as ɵNzSliderHandleComponent, NzSliderMarksComponent as ɵNzSliderMarksComponent, NzSliderService as ɵNzSliderService, NzSliderStepComponent as ɵNzSliderStepComponent, NzSliderTrackComponent as ɵNzSliderTrackComponent };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}