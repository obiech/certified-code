{"ast":null,"code":"import { inject } from '@angular/core';\nimport { PayoutsGQL } from '@ridy/admin-panel/generated/graphql';\nimport { TableService } from '@ridy/admin-panel/src/app/@services/table-service';\nimport { NzMessageService } from 'ng-zorro-antd/message';\nexport const payoutsResolver = (route, state) => {\n  const tableService = inject(TableService);\n  const gql = inject(PayoutsGQL);\n  const params = tableService.deserializeQueryParams(route.queryParams);\n  const result = gql.fetch({\n    sessionsPaging: params.paging,\n    currency: route.queryParams.currency\n  });\n  const message = inject(NzMessageService);\n  result.subscribe({\n    error: error => {\n      message.error('This role does not have sufficient permission to access this menu.');\n    }\n  });\n  return result;\n};","map":{"version":3,"names":["inject","PayoutsGQL","TableService","NzMessageService","payoutsResolver","route","state","tableService","gql","params","deserializeQueryParams","queryParams","result","fetch","sessionsPaging","paging","currency","message","subscribe","error"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/apps/admin-panel/src/app/cms/payouts/payouts.resolver.ts"],"sourcesContent":["import { inject } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  ResolveFn,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { ApolloQueryResult } from '@apollo/client/core';\nimport { PayoutsGQL, PayoutsQuery } from '@ridy/admin-panel/generated/graphql';\nimport { TableService } from '@ridy/admin-panel/src/app/@services/table-service';\nimport { NzMessageService } from 'ng-zorro-antd/message';\n\nexport const payoutsResolver: ResolveFn<ApolloQueryResult<PayoutsQuery>> = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n) => {\n  const tableService = inject(TableService);\n  const gql = inject(PayoutsGQL);\n  const params = tableService.deserializeQueryParams(route.queryParams);\n  const result = gql.fetch({\n    sessionsPaging: params.paging,\n    currency: route.queryParams.currency,\n  });\n  const message = inject(NzMessageService);\n  result.subscribe({\n    error: (error) => {\n      message.error(\n        'This role does not have sufficient permission to access this menu.',\n      );\n    },\n  });\n  return result;\n};\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,eAAe;AAOtC,SAASC,UAAU,QAAsB,qCAAqC;AAC9E,SAASC,YAAY,QAAQ,mDAAmD;AAChF,SAASC,gBAAgB,QAAQ,uBAAuB;AAExD,OAAO,MAAMC,eAAe,GAA+CA,CACzEC,KAA6B,EAC7BC,KAA0B,KACxB;EACF,MAAMC,YAAY,GAAGP,MAAM,CAACE,YAAY,CAAC;EACzC,MAAMM,GAAG,GAAGR,MAAM,CAACC,UAAU,CAAC;EAC9B,MAAMQ,MAAM,GAAGF,YAAY,CAACG,sBAAsB,CAACL,KAAK,CAACM,WAAW,CAAC;EACrE,MAAMC,MAAM,GAAGJ,GAAG,CAACK,KAAK,CAAC;IACvBC,cAAc,EAAEL,MAAM,CAACM,MAAM;IAC7BC,QAAQ,EAAEX,KAAK,CAACM,WAAW,CAACK;GAC7B,CAAC;EACF,MAAMC,OAAO,GAAGjB,MAAM,CAACG,gBAAgB,CAAC;EACxCS,MAAM,CAACM,SAAS,CAAC;IACfC,KAAK,EAAGA,KAAK,IAAI;MACfF,OAAO,CAACE,KAAK,CACX,oEAAoE,CACrE;IACH;GACD,CAAC;EACF,OAAOP,MAAM;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}