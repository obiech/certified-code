{"ast":null,"code":"import { __read } from \"tslib\";\nimport { ext } from '@antv/matrix-util';\n/**\n * @ignore\n * 对图形元素进行矩阵变换，同时返回变换前的图形矩阵\n * @param shape 进行矩阵变换的图形\n * @param vector 矩阵变换的中心点\n * @param direct 矩阵变换的类型\n */\nexport function transformShape(shape, vector, direct) {\n  var scaledMatrix;\n  var _a = __read(vector, 2),\n    x = _a[0],\n    y = _a[1];\n  shape.applyToMatrix([x, y, 1]);\n  if (direct === 'x') {\n    shape.setMatrix(ext.transform(shape.getMatrix(), [['t', -x, -y], ['s', 0.01, 1], ['t', x, y]]));\n    scaledMatrix = ext.transform(shape.getMatrix(), [['t', -x, -y], ['s', 100, 1], ['t', x, y]]);\n  } else if (direct === 'y') {\n    shape.setMatrix(ext.transform(shape.getMatrix(), [['t', -x, -y], ['s', 1, 0.01], ['t', x, y]]));\n    scaledMatrix = ext.transform(shape.getMatrix(), [['t', -x, -y], ['s', 1, 100], ['t', x, y]]);\n  } else if (direct === 'xy') {\n    shape.setMatrix(ext.transform(shape.getMatrix(), [['t', -x, -y], ['s', 0.01, 0.01], ['t', x, y]]));\n    scaledMatrix = ext.transform(shape.getMatrix(), [['t', -x, -y], ['s', 100, 100], ['t', x, y]]);\n  }\n  return scaledMatrix;\n}\n/**\n * 对图形元素进行剪切动画\n * @param element 进行动画的图形元素\n * @param animateCfg 动画配置\n * @param coordinate 当前坐标系\n * @param yMinPoint y 轴的最小值对应的图形坐标点\n * @param type 剪切动画的类型\n */\nexport function doScaleAnimate(element, animateCfg, coordinate, yMinPoint, type) {\n  var start = coordinate.start,\n    end = coordinate.end;\n  var width = coordinate.getWidth();\n  var height = coordinate.getHeight();\n  var x;\n  var y;\n  if (type === 'y') {\n    x = start.x + width / 2;\n    y = yMinPoint.y < start.y ? yMinPoint.y : start.y;\n  } else if (type === 'x') {\n    x = yMinPoint.x > start.x ? yMinPoint.x : start.x;\n    y = start.y + height / 2;\n  } else if (type === 'xy') {\n    if (coordinate.isPolar) {\n      x = coordinate.getCenter().x;\n      y = coordinate.getCenter().y;\n    } else {\n      x = (start.x + end.x) / 2;\n      y = (start.y + end.y) / 2;\n    }\n  }\n  var endMatrix = transformShape(element, [x, y], type);\n  element.animate({\n    matrix: endMatrix\n  }, animateCfg);\n}","map":{"version":3,"names":["__read","ext","transformShape","shape","vector","direct","scaledMatrix","_a","x","y","applyToMatrix","setMatrix","transform","getMatrix","doScaleAnimate","element","animateCfg","coordinate","yMinPoint","type","start","end","width","getWidth","height","getHeight","isPolar","getCenter","endMatrix","animate","matrix"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g2/esm/animate/animation/util.js"],"sourcesContent":["import { __read } from \"tslib\";\nimport { ext } from '@antv/matrix-util';\n/**\n * @ignore\n * 对图形元素进行矩阵变换，同时返回变换前的图形矩阵\n * @param shape 进行矩阵变换的图形\n * @param vector 矩阵变换的中心点\n * @param direct 矩阵变换的类型\n */\nexport function transformShape(shape, vector, direct) {\n    var scaledMatrix;\n    var _a = __read(vector, 2), x = _a[0], y = _a[1];\n    shape.applyToMatrix([x, y, 1]);\n    if (direct === 'x') {\n        shape.setMatrix(ext.transform(shape.getMatrix(), [\n            ['t', -x, -y],\n            ['s', 0.01, 1],\n            ['t', x, y],\n        ]));\n        scaledMatrix = ext.transform(shape.getMatrix(), [\n            ['t', -x, -y],\n            ['s', 100, 1],\n            ['t', x, y],\n        ]);\n    }\n    else if (direct === 'y') {\n        shape.setMatrix(ext.transform(shape.getMatrix(), [\n            ['t', -x, -y],\n            ['s', 1, 0.01],\n            ['t', x, y],\n        ]));\n        scaledMatrix = ext.transform(shape.getMatrix(), [\n            ['t', -x, -y],\n            ['s', 1, 100],\n            ['t', x, y],\n        ]);\n    }\n    else if (direct === 'xy') {\n        shape.setMatrix(ext.transform(shape.getMatrix(), [\n            ['t', -x, -y],\n            ['s', 0.01, 0.01],\n            ['t', x, y],\n        ]));\n        scaledMatrix = ext.transform(shape.getMatrix(), [\n            ['t', -x, -y],\n            ['s', 100, 100],\n            ['t', x, y],\n        ]);\n    }\n    return scaledMatrix;\n}\n/**\n * 对图形元素进行剪切动画\n * @param element 进行动画的图形元素\n * @param animateCfg 动画配置\n * @param coordinate 当前坐标系\n * @param yMinPoint y 轴的最小值对应的图形坐标点\n * @param type 剪切动画的类型\n */\nexport function doScaleAnimate(element, animateCfg, coordinate, yMinPoint, type) {\n    var start = coordinate.start, end = coordinate.end;\n    var width = coordinate.getWidth();\n    var height = coordinate.getHeight();\n    var x;\n    var y;\n    if (type === 'y') {\n        x = start.x + width / 2;\n        y = yMinPoint.y < start.y ? yMinPoint.y : start.y;\n    }\n    else if (type === 'x') {\n        x = yMinPoint.x > start.x ? yMinPoint.x : start.x;\n        y = start.y + height / 2;\n    }\n    else if (type === 'xy') {\n        if (coordinate.isPolar) {\n            x = coordinate.getCenter().x;\n            y = coordinate.getCenter().y;\n        }\n        else {\n            x = (start.x + end.x) / 2;\n            y = (start.y + end.y) / 2;\n        }\n    }\n    var endMatrix = transformShape(element, [x, y], type);\n    element.animate({\n        matrix: endMatrix,\n    }, animateCfg);\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B,SAASC,GAAG,QAAQ,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAACC,KAAK,EAAEC,MAAM,EAAEC,MAAM,EAAE;EAClD,IAAIC,YAAY;EAChB,IAAIC,EAAE,GAAGP,MAAM,CAACI,MAAM,EAAE,CAAC,CAAC;IAAEI,CAAC,GAAGD,EAAE,CAAC,CAAC,CAAC;IAAEE,CAAC,GAAGF,EAAE,CAAC,CAAC,CAAC;EAChDJ,KAAK,CAACO,aAAa,CAAC,CAACF,CAAC,EAAEC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9B,IAAIJ,MAAM,KAAK,GAAG,EAAE;IAChBF,KAAK,CAACQ,SAAS,CAACV,GAAG,CAACW,SAAS,CAACT,KAAK,CAACU,SAAS,CAAC,CAAC,EAAE,CAC7C,CAAC,GAAG,EAAE,CAACL,CAAC,EAAE,CAACC,CAAC,CAAC,EACb,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,EACd,CAAC,GAAG,EAAED,CAAC,EAAEC,CAAC,CAAC,CACd,CAAC,CAAC;IACHH,YAAY,GAAGL,GAAG,CAACW,SAAS,CAACT,KAAK,CAACU,SAAS,CAAC,CAAC,EAAE,CAC5C,CAAC,GAAG,EAAE,CAACL,CAAC,EAAE,CAACC,CAAC,CAAC,EACb,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,EACb,CAAC,GAAG,EAAED,CAAC,EAAEC,CAAC,CAAC,CACd,CAAC;EACN,CAAC,MACI,IAAIJ,MAAM,KAAK,GAAG,EAAE;IACrBF,KAAK,CAACQ,SAAS,CAACV,GAAG,CAACW,SAAS,CAACT,KAAK,CAACU,SAAS,CAAC,CAAC,EAAE,CAC7C,CAAC,GAAG,EAAE,CAACL,CAAC,EAAE,CAACC,CAAC,CAAC,EACb,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,EACd,CAAC,GAAG,EAAED,CAAC,EAAEC,CAAC,CAAC,CACd,CAAC,CAAC;IACHH,YAAY,GAAGL,GAAG,CAACW,SAAS,CAACT,KAAK,CAACU,SAAS,CAAC,CAAC,EAAE,CAC5C,CAAC,GAAG,EAAE,CAACL,CAAC,EAAE,CAACC,CAAC,CAAC,EACb,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,EACb,CAAC,GAAG,EAAED,CAAC,EAAEC,CAAC,CAAC,CACd,CAAC;EACN,CAAC,MACI,IAAIJ,MAAM,KAAK,IAAI,EAAE;IACtBF,KAAK,CAACQ,SAAS,CAACV,GAAG,CAACW,SAAS,CAACT,KAAK,CAACU,SAAS,CAAC,CAAC,EAAE,CAC7C,CAAC,GAAG,EAAE,CAACL,CAAC,EAAE,CAACC,CAAC,CAAC,EACb,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,EACjB,CAAC,GAAG,EAAED,CAAC,EAAEC,CAAC,CAAC,CACd,CAAC,CAAC;IACHH,YAAY,GAAGL,GAAG,CAACW,SAAS,CAACT,KAAK,CAACU,SAAS,CAAC,CAAC,EAAE,CAC5C,CAAC,GAAG,EAAE,CAACL,CAAC,EAAE,CAACC,CAAC,CAAC,EACb,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EACf,CAAC,GAAG,EAAED,CAAC,EAAEC,CAAC,CAAC,CACd,CAAC;EACN;EACA,OAAOH,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASQ,cAAcA,CAACC,OAAO,EAAEC,UAAU,EAAEC,UAAU,EAAEC,SAAS,EAAEC,IAAI,EAAE;EAC7E,IAAIC,KAAK,GAAGH,UAAU,CAACG,KAAK;IAAEC,GAAG,GAAGJ,UAAU,CAACI,GAAG;EAClD,IAAIC,KAAK,GAAGL,UAAU,CAACM,QAAQ,CAAC,CAAC;EACjC,IAAIC,MAAM,GAAGP,UAAU,CAACQ,SAAS,CAAC,CAAC;EACnC,IAAIjB,CAAC;EACL,IAAIC,CAAC;EACL,IAAIU,IAAI,KAAK,GAAG,EAAE;IACdX,CAAC,GAAGY,KAAK,CAACZ,CAAC,GAAGc,KAAK,GAAG,CAAC;IACvBb,CAAC,GAAGS,SAAS,CAACT,CAAC,GAAGW,KAAK,CAACX,CAAC,GAAGS,SAAS,CAACT,CAAC,GAAGW,KAAK,CAACX,CAAC;EACrD,CAAC,MACI,IAAIU,IAAI,KAAK,GAAG,EAAE;IACnBX,CAAC,GAAGU,SAAS,CAACV,CAAC,GAAGY,KAAK,CAACZ,CAAC,GAAGU,SAAS,CAACV,CAAC,GAAGY,KAAK,CAACZ,CAAC;IACjDC,CAAC,GAAGW,KAAK,CAACX,CAAC,GAAGe,MAAM,GAAG,CAAC;EAC5B,CAAC,MACI,IAAIL,IAAI,KAAK,IAAI,EAAE;IACpB,IAAIF,UAAU,CAACS,OAAO,EAAE;MACpBlB,CAAC,GAAGS,UAAU,CAACU,SAAS,CAAC,CAAC,CAACnB,CAAC;MAC5BC,CAAC,GAAGQ,UAAU,CAACU,SAAS,CAAC,CAAC,CAAClB,CAAC;IAChC,CAAC,MACI;MACDD,CAAC,GAAG,CAACY,KAAK,CAACZ,CAAC,GAAGa,GAAG,CAACb,CAAC,IAAI,CAAC;MACzBC,CAAC,GAAG,CAACW,KAAK,CAACX,CAAC,GAAGY,GAAG,CAACZ,CAAC,IAAI,CAAC;IAC7B;EACJ;EACA,IAAImB,SAAS,GAAG1B,cAAc,CAACa,OAAO,EAAE,CAACP,CAAC,EAAEC,CAAC,CAAC,EAAEU,IAAI,CAAC;EACrDJ,OAAO,CAACc,OAAO,CAAC;IACZC,MAAM,EAAEF;EACZ,CAAC,EAAEZ,UAAU,CAAC;AAClB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}