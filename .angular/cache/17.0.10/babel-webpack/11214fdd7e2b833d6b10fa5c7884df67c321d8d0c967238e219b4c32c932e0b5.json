{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { deepMix, each, get, isUndefined } from '@antv/util';\nimport { DIRECTION, COMPONENT_TYPE, LAYER } from '../../constant';\nimport { CircleAxis, CircleGrid, LineAxis, LineGrid } from '../../dependents';\nimport { DEFAULT_ANIMATE_CFG } from '../../animate/';\nimport { getAxisDirection, getAxisFactorByRegion, getAxisRegion, getAxisThemeCfg, getAxisTitleOptions, getAxisTitleText, getCircleAxisCenterRadius, isVertical } from '../../util/axis';\nimport { getAxisOption } from '../../util/axis';\nimport { getCircleGridItems, getGridThemeCfg, getLineGridItems, showGrid } from '../../util/grid';\nimport { omit } from '../../util/helper';\nimport { Controller } from './base';\n// update 组件的时候，忽略的数据更新\nvar OMIT_CFG = ['container'];\n// 坐标轴默认动画配置\nvar AXIS_DEFAULT_ANIMATE_CFG = __assign(__assign({}, DEFAULT_ANIMATE_CFG), {\n  appear: null\n});\n/**\n * @ignore\n * G2 Axis controller, will:\n *  - create component\n *    - axis\n *    - grid\n *  - life circle\n */\nvar Axis = /** @class */function (_super) {\n  __extends(Axis, _super);\n  function Axis(view) {\n    var _this = _super.call(this, view) || this;\n    /** 使用 object 存储组件 */\n    _this.cache = new Map();\n    // 先创建 gridContainer，将 grid 放到 axis 底层\n    _this.gridContainer = _this.view.getLayer(LAYER.BG).addGroup();\n    _this.gridForeContainer = _this.view.getLayer(LAYER.FORE).addGroup();\n    _this.axisContainer = _this.view.getLayer(LAYER.BG).addGroup();\n    _this.axisForeContainer = _this.view.getLayer(LAYER.FORE).addGroup();\n    return _this;\n  }\n  Object.defineProperty(Axis.prototype, \"name\", {\n    get: function () {\n      return 'axis';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Axis.prototype.init = function () {};\n  Axis.prototype.render = function () {\n    this.update();\n  };\n  /**\n   * 更新组件布局，位置大小\n   */\n  Axis.prototype.layout = function () {\n    var _this = this;\n    var coordinate = this.view.getCoordinate();\n    each(this.getComponents(), function (co) {\n      var component = co.component,\n        direction = co.direction,\n        type = co.type,\n        extra = co.extra;\n      var dim = extra.dim,\n        scale = extra.scale,\n        alignTick = extra.alignTick;\n      var updated;\n      if (type === COMPONENT_TYPE.AXIS) {\n        if (coordinate.isPolar) {\n          if (dim === 'x') {\n            updated = coordinate.isTransposed ? getAxisRegion(coordinate, direction) : getCircleAxisCenterRadius(coordinate);\n          } else if (dim === 'y') {\n            updated = coordinate.isTransposed ? getCircleAxisCenterRadius(coordinate) : getAxisRegion(coordinate, direction);\n          }\n        } else {\n          updated = getAxisRegion(coordinate, direction);\n        }\n      } else if (type === COMPONENT_TYPE.GRID) {\n        if (coordinate.isPolar) {\n          var items = void 0;\n          if (coordinate.isTransposed) {\n            items = dim === 'x' ? getCircleGridItems(coordinate, _this.view.getYScales()[0], scale, alignTick, dim) : getLineGridItems(coordinate, scale, dim, alignTick);\n          } else {\n            items = dim === 'x' ? getLineGridItems(coordinate, scale, dim, alignTick) : getCircleGridItems(coordinate, _this.view.getXScale(), scale, alignTick, dim);\n          }\n          updated = {\n            items: items,\n            // coordinate 更新之后，center 也变化了\n            center: _this.view.getCoordinate().getCenter()\n          };\n        } else {\n          updated = {\n            items: getLineGridItems(coordinate, scale, dim, alignTick)\n          };\n        }\n      }\n      component.update(updated);\n    });\n  };\n  /**\n   * 更新 axis 组件\n   */\n  Axis.prototype.update = function () {\n    this.option = this.view.getOptions().axes;\n    var updatedCache = new Map();\n    this.updateXAxes(updatedCache);\n    this.updateYAxes(updatedCache);\n    // 处理完成之后，销毁删除的\n    // 不在处理中的\n    var newCache = new Map();\n    this.cache.forEach(function (co, key) {\n      if (updatedCache.has(key)) {\n        newCache.set(key, co);\n      } else {\n        // 不存在，则是所有需要被销毁的组件\n        co.component.destroy();\n      }\n    });\n    // 更新缓存\n    this.cache = newCache;\n  };\n  Axis.prototype.clear = function () {\n    _super.prototype.clear.call(this);\n    this.cache.clear();\n    this.gridContainer.clear();\n    this.gridForeContainer.clear();\n    this.axisContainer.clear();\n    this.axisForeContainer.clear();\n  };\n  Axis.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n    this.gridContainer.remove(true);\n    this.gridForeContainer.remove(true);\n    this.axisContainer.remove(true);\n    this.axisForeContainer.remove(true);\n  };\n  /**\n   * @override\n   */\n  Axis.prototype.getComponents = function () {\n    var co = [];\n    this.cache.forEach(function (value) {\n      co.push(value);\n    });\n    return co;\n  };\n  /**\n   * 更新 x axis\n   * @param updatedCache\n   */\n  Axis.prototype.updateXAxes = function (updatedCache) {\n    // x axis\n    var scale = this.view.getXScale();\n    if (!scale || scale.isIdentity) {\n      return;\n    }\n    var xAxisOption = getAxisOption(this.option, scale.field);\n    if (xAxisOption === false) {\n      return;\n    }\n    var direction = getAxisDirection(xAxisOption, DIRECTION.BOTTOM);\n    var layer = LAYER.BG;\n    var dim = 'x';\n    var coordinate = this.view.getCoordinate();\n    var axisId = this.getId('axis', scale.field);\n    var gridId = this.getId('grid', scale.field);\n    if (coordinate.isRect) {\n      // 1. do axis update\n      var axis = this.cache.get(axisId);\n      // 存在则更新\n      if (axis) {\n        var cfg = this.getLineAxisCfg(scale, xAxisOption, direction);\n        omit(cfg, OMIT_CFG);\n        axis.component.update(cfg);\n        updatedCache.set(axisId, axis);\n      } else {\n        // 不存在，则创建\n        axis = this.createLineAxis(scale, xAxisOption, layer, direction, dim);\n        this.cache.set(axisId, axis);\n        updatedCache.set(axisId, axis);\n      }\n      // 2. do grid update\n      var grid = this.cache.get(gridId);\n      // 存在则更新\n      if (grid) {\n        var cfg = this.getLineGridCfg(scale, xAxisOption, direction, dim);\n        omit(cfg, OMIT_CFG);\n        grid.component.update(cfg);\n        updatedCache.set(gridId, grid);\n      } else {\n        // 不存在则创建\n        grid = this.createLineGrid(scale, xAxisOption, layer, direction, dim);\n        if (grid) {\n          this.cache.set(gridId, grid);\n          updatedCache.set(gridId, grid);\n        }\n      }\n    } else if (coordinate.isPolar) {\n      // 1. do axis update\n      var axis = this.cache.get(axisId);\n      // 存在则更新\n      if (axis) {\n        var cfg = coordinate.isTransposed ? this.getLineAxisCfg(scale, xAxisOption, DIRECTION.RADIUS) : this.getCircleAxisCfg(scale, xAxisOption, direction);\n        omit(cfg, OMIT_CFG);\n        axis.component.update(cfg);\n        updatedCache.set(axisId, axis);\n      } else {\n        // 不存在，则创建\n        if (coordinate.isTransposed) {\n          if (isUndefined(xAxisOption)) {\n            // 默认不渲染转置极坐标下的坐标轴\n            return;\n          } else {\n            // 如果用户打开了隐藏的坐标轴 chart.axis(true)/chart.axis('x', true)\n            // 那么对于转置了的极坐标，半径轴显示的是 x 轴对应的数据\n            axis = this.createLineAxis(scale, xAxisOption, layer, DIRECTION.RADIUS, dim);\n          }\n        } else {\n          axis = this.createCircleAxis(scale, xAxisOption, layer, direction, dim);\n        }\n        this.cache.set(axisId, axis);\n        updatedCache.set(axisId, axis);\n      }\n      // 2. do grid update\n      var grid = this.cache.get(gridId);\n      // 存在则更新\n      if (grid) {\n        var cfg = coordinate.isTransposed ? this.getCircleGridCfg(scale, xAxisOption, DIRECTION.RADIUS, dim) : this.getLineGridCfg(scale, xAxisOption, DIRECTION.CIRCLE, dim);\n        omit(cfg, OMIT_CFG);\n        grid.component.update(cfg);\n        updatedCache.set(gridId, grid);\n      } else {\n        // 不存在则创建\n        if (coordinate.isTransposed) {\n          if (isUndefined(xAxisOption)) {\n            return;\n          } else {\n            grid = this.createCircleGrid(scale, xAxisOption, layer, DIRECTION.RADIUS, dim);\n          }\n        } else {\n          // grid，极坐标下的 x 轴网格线沿着半径方向绘制\n          grid = this.createLineGrid(scale, xAxisOption, layer, DIRECTION.CIRCLE, dim);\n        }\n        if (grid) {\n          this.cache.set(gridId, grid);\n          updatedCache.set(gridId, grid);\n        }\n      }\n    } else {\n      // helix and other, do not draw axis\n    }\n  };\n  Axis.prototype.updateYAxes = function (updatedCache) {\n    var _this = this;\n    // y axes\n    var yScales = this.view.getYScales();\n    each(yScales, function (scale, idx) {\n      // @ts-ignore\n      if (!scale || scale.isIdentity) {\n        return;\n      }\n      var field = scale.field;\n      var yAxisOption = getAxisOption(_this.option, field);\n      if (yAxisOption !== false) {\n        var layer = LAYER.BG;\n        var dim = 'y';\n        var axisId = _this.getId('axis', field);\n        var gridId = _this.getId('grid', field);\n        var coordinate = _this.view.getCoordinate();\n        if (coordinate.isRect) {\n          var direction = getAxisDirection(yAxisOption, idx === 0 ? DIRECTION.LEFT : DIRECTION.RIGHT);\n          // 1. do axis update\n          var axis = _this.cache.get(axisId);\n          // 存在则更新\n          if (axis) {\n            var cfg = _this.getLineAxisCfg(scale, yAxisOption, direction);\n            omit(cfg, OMIT_CFG);\n            axis.component.update(cfg);\n            updatedCache.set(axisId, axis);\n          } else {\n            // 不存在，则创建\n            axis = _this.createLineAxis(scale, yAxisOption, layer, direction, dim);\n            _this.cache.set(axisId, axis);\n            updatedCache.set(axisId, axis);\n          }\n          // 2. do grid update\n          var grid = _this.cache.get(gridId);\n          // 存在则更新\n          if (grid) {\n            var cfg = _this.getLineGridCfg(scale, yAxisOption, direction, dim);\n            omit(cfg, OMIT_CFG);\n            grid.component.update(cfg);\n            updatedCache.set(gridId, grid);\n          } else {\n            // 不存在则创建\n            grid = _this.createLineGrid(scale, yAxisOption, layer, direction, dim);\n            if (grid) {\n              _this.cache.set(gridId, grid);\n              updatedCache.set(gridId, grid);\n            }\n          }\n        } else if (coordinate.isPolar) {\n          // 1. do axis update\n          var axis = _this.cache.get(axisId);\n          // 存在则更新\n          if (axis) {\n            var cfg = coordinate.isTransposed ? _this.getCircleAxisCfg(scale, yAxisOption, DIRECTION.CIRCLE) : _this.getLineAxisCfg(scale, yAxisOption, DIRECTION.RADIUS);\n            // @ts-ignore\n            omit(cfg, OMIT_CFG);\n            axis.component.update(cfg);\n            updatedCache.set(axisId, axis);\n          } else {\n            // 不存在，则创建\n            if (coordinate.isTransposed) {\n              if (isUndefined(yAxisOption)) {\n                return;\n              } else {\n                axis = _this.createCircleAxis(scale, yAxisOption, layer, DIRECTION.CIRCLE, dim);\n              }\n            } else {\n              axis = _this.createLineAxis(scale, yAxisOption, layer, DIRECTION.RADIUS, dim);\n            }\n            _this.cache.set(axisId, axis);\n            updatedCache.set(axisId, axis);\n          }\n          // 2. do grid update\n          var grid = _this.cache.get(gridId);\n          // 存在则更新\n          if (grid) {\n            var cfg = coordinate.isTransposed ? _this.getLineGridCfg(scale, yAxisOption, DIRECTION.CIRCLE, dim) : _this.getCircleGridCfg(scale, yAxisOption, DIRECTION.RADIUS, dim);\n            omit(cfg, OMIT_CFG);\n            grid.component.update(cfg);\n            updatedCache.set(gridId, grid);\n          } else {\n            // 不存在则创建\n            if (coordinate.isTransposed) {\n              if (isUndefined(yAxisOption)) {\n                return;\n              } else {\n                grid = _this.createLineGrid(scale, yAxisOption, layer, DIRECTION.CIRCLE, dim);\n              }\n            } else {\n              grid = _this.createCircleGrid(scale, yAxisOption, layer, DIRECTION.RADIUS, dim);\n            }\n            if (grid) {\n              _this.cache.set(gridId, grid);\n              updatedCache.set(gridId, grid);\n            }\n          }\n        } else {\n          // helix and other, do not draw axis\n        }\n      }\n    });\n  };\n  /**\n   * 创建 line axis\n   * @param scale\n   * @param option\n   * @param layer\n   * @param direction\n   * @param dim\n   */\n  Axis.prototype.createLineAxis = function (scale, option, layer, direction, dim) {\n    // axis\n    var axis = {\n      component: new LineAxis(this.getLineAxisCfg(scale, option, direction)),\n      layer: layer,\n      direction: direction === DIRECTION.RADIUS ? DIRECTION.NONE : direction,\n      type: COMPONENT_TYPE.AXIS,\n      extra: {\n        dim: dim,\n        scale: scale\n      }\n    };\n    axis.component.set('field', scale.field);\n    axis.component.init();\n    return axis;\n  };\n  Axis.prototype.createLineGrid = function (scale, option, layer, direction, dim) {\n    var cfg = this.getLineGridCfg(scale, option, direction, dim);\n    if (cfg) {\n      var grid = {\n        component: new LineGrid(cfg),\n        layer: layer,\n        direction: DIRECTION.NONE,\n        type: COMPONENT_TYPE.GRID,\n        extra: {\n          dim: dim,\n          scale: scale,\n          alignTick: get(cfg, 'alignTick', true)\n        }\n      };\n      grid.component.init();\n      return grid;\n    }\n  };\n  Axis.prototype.createCircleAxis = function (scale, option, layer, direction, dim) {\n    var axis = {\n      component: new CircleAxis(this.getCircleAxisCfg(scale, option, direction)),\n      layer: layer,\n      direction: direction,\n      type: COMPONENT_TYPE.AXIS,\n      extra: {\n        dim: dim,\n        scale: scale\n      }\n    };\n    axis.component.set('field', scale.field);\n    axis.component.init();\n    return axis;\n  };\n  Axis.prototype.createCircleGrid = function (scale, option, layer, direction, dim) {\n    var cfg = this.getCircleGridCfg(scale, option, direction, dim);\n    if (cfg) {\n      var grid = {\n        component: new CircleGrid(cfg),\n        layer: layer,\n        direction: DIRECTION.NONE,\n        type: COMPONENT_TYPE.GRID,\n        extra: {\n          dim: dim,\n          scale: scale,\n          alignTick: get(cfg, 'alignTick', true)\n        }\n      };\n      grid.component.init();\n      return grid;\n    }\n  };\n  /**\n   * generate line axis cfg\n   * @param scale\n   * @param axisOption\n   * @param direction\n   * @return line axis cfg\n   */\n  Axis.prototype.getLineAxisCfg = function (scale, axisOption, direction) {\n    var container = get(axisOption, ['top']) ? this.axisForeContainer : this.axisContainer;\n    var coordinate = this.view.getCoordinate();\n    var region = getAxisRegion(coordinate, direction);\n    var titleText = getAxisTitleText(scale, axisOption);\n    var axisThemeCfg = getAxisThemeCfg(this.view.getTheme(), direction);\n    // the cfg order should be ensure\n    var optionWithTitle = get(axisOption, ['title']) ? deepMix({\n      title: {\n        style: {\n          text: titleText\n        }\n      }\n    }, {\n      title: getAxisTitleOptions(this.view.getTheme(), direction, axisOption.title)\n    }, axisOption) : axisOption;\n    var cfg = deepMix(__assign(__assign({\n      container: container\n    }, region), {\n      ticks: scale.getTicks().map(function (tick) {\n        return {\n          id: \"\".concat(tick.tickValue),\n          name: tick.text,\n          value: tick.value\n        };\n      }),\n      verticalFactor: coordinate.isPolar ? getAxisFactorByRegion(region, coordinate.getCenter()) * -1 : getAxisFactorByRegion(region, coordinate.getCenter()),\n      theme: axisThemeCfg\n    }), axisThemeCfg, optionWithTitle);\n    var _a = this.getAnimateCfg(cfg),\n      animate = _a.animate,\n      animateOption = _a.animateOption;\n    cfg.animateOption = animateOption;\n    cfg.animate = animate;\n    // 计算 verticalLimitLength\n    var isAxisVertical = isVertical(region);\n    // TODO: 1 / 3 等默认值需要有一个全局的配置的地方\n    var verticalLimitLength = get(cfg, 'verticalLimitLength', isAxisVertical ? 1 / 3 : 1 / 2);\n    if (verticalLimitLength <= 1) {\n      // 配置的相对值，相对于画布\n      var canvasWidth = this.view.getCanvas().get('width');\n      var canvasHeight = this.view.getCanvas().get('height');\n      cfg.verticalLimitLength = verticalLimitLength * (isAxisVertical ? canvasWidth : canvasHeight);\n    }\n    return cfg;\n  };\n  /**\n   * generate line grid cfg\n   * @param scale\n   * @param axisOption\n   * @param direction\n   * @param dim\n   * @return line grid cfg\n   */\n  Axis.prototype.getLineGridCfg = function (scale, axisOption, direction, dim) {\n    if (!showGrid(getAxisThemeCfg(this.view.getTheme(), direction), axisOption)) {\n      return undefined;\n    }\n    var gridThemeCfg = getGridThemeCfg(this.view.getTheme(), direction);\n    // the cfg order should be ensure\n    // grid 动画以 axis 为准\n    var gridCfg = deepMix({\n      container: get(axisOption, ['top']) ? this.gridForeContainer : this.gridContainer\n    }, gridThemeCfg, get(axisOption, 'grid'), this.getAnimateCfg(axisOption));\n    gridCfg.items = getLineGridItems(this.view.getCoordinate(), scale, dim, get(gridCfg, 'alignTick', true));\n    return gridCfg;\n  };\n  /**\n   * generate circle axis cfg\n   * @param scale\n   * @param axisOption\n   * @param direction\n   * @return circle axis cfg\n   */\n  Axis.prototype.getCircleAxisCfg = function (scale, axisOption, direction) {\n    var container = get(axisOption, ['top']) ? this.axisForeContainer : this.axisContainer;\n    var coordinate = this.view.getCoordinate();\n    var ticks = scale.getTicks().map(function (tick) {\n      return {\n        id: \"\".concat(tick.tickValue),\n        name: tick.text,\n        value: tick.value\n      };\n    });\n    if (!scale.isCategory && Math.abs(coordinate.endAngle - coordinate.startAngle) === Math.PI * 2) {\n      // x 轴对应的值如果是非 cat 类型，在整圆的情况下坐标轴第一个和最后一个文本会重叠，默认只展示第一个文本\n      if (ticks.length) ticks[ticks.length - 1].name = '';\n    }\n    var titleText = getAxisTitleText(scale, axisOption);\n    var axisThemeCfg = getAxisThemeCfg(this.view.getTheme(), DIRECTION.CIRCLE);\n    // the cfg order should be ensure\n    var optionWithTitle = get(axisOption, ['title']) ? deepMix({\n      title: {\n        style: {\n          text: titleText\n        }\n      }\n    }, {\n      title: getAxisTitleOptions(this.view.getTheme(), direction, axisOption.title)\n    }, axisOption) : axisOption;\n    var cfg = deepMix(__assign(__assign({\n      container: container\n    }, getCircleAxisCenterRadius(this.view.getCoordinate())), {\n      ticks: ticks,\n      verticalFactor: 1,\n      theme: axisThemeCfg\n    }), axisThemeCfg, optionWithTitle);\n    var _a = this.getAnimateCfg(cfg),\n      animate = _a.animate,\n      animateOption = _a.animateOption;\n    cfg.animate = animate;\n    cfg.animateOption = animateOption;\n    return cfg;\n  };\n  /**\n   * generate circle grid cfg\n   * @param scale\n   * @param axisOption\n   * @param direction\n   * @return circle grid cfg\n   */\n  Axis.prototype.getCircleGridCfg = function (scale, axisOption, direction, dim) {\n    if (!showGrid(getAxisThemeCfg(this.view.getTheme(), direction), axisOption)) {\n      return undefined;\n    }\n    // the cfg order should be ensure\n    // grid 动画以 axis 为准\n    var gridThemeCfg = getGridThemeCfg(this.view.getTheme(), DIRECTION.RADIUS);\n    var gridCfg = deepMix({\n      container: get(axisOption, ['top']) ? this.gridForeContainer : this.gridContainer,\n      center: this.view.getCoordinate().getCenter()\n    }, gridThemeCfg, get(axisOption, 'grid'), this.getAnimateCfg(axisOption));\n    var alignTick = get(gridCfg, 'alignTick', true);\n    var verticalScale = dim === 'x' ? this.view.getYScales()[0] : this.view.getXScale();\n    gridCfg.items = getCircleGridItems(this.view.getCoordinate(), verticalScale, scale, alignTick, dim);\n    // the cfg order should be ensure\n    // grid 动画以 axis 为准\n    return gridCfg;\n  };\n  Axis.prototype.getId = function (name, key) {\n    var coordinate = this.view.getCoordinate();\n    // 坐标系类型也作为组件的 key\n    return \"\".concat(name, \"-\").concat(key, \"-\").concat(coordinate.type);\n  };\n  Axis.prototype.getAnimateCfg = function (cfg) {\n    return {\n      animate: this.view.getOptions().animate && get(cfg, 'animate'),\n      animateOption: cfg && cfg.animateOption ? deepMix({}, AXIS_DEFAULT_ANIMATE_CFG, cfg.animateOption) : AXIS_DEFAULT_ANIMATE_CFG\n    };\n  };\n  return Axis;\n}(Controller);\nexport default Axis;","map":{"version":3,"names":["__assign","__extends","deepMix","each","get","isUndefined","DIRECTION","COMPONENT_TYPE","LAYER","CircleAxis","CircleGrid","LineAxis","LineGrid","DEFAULT_ANIMATE_CFG","getAxisDirection","getAxisFactorByRegion","getAxisRegion","getAxisThemeCfg","getAxisTitleOptions","getAxisTitleText","getCircleAxisCenterRadius","isVertical","getAxisOption","getCircleGridItems","getGridThemeCfg","getLineGridItems","showGrid","omit","Controller","OMIT_CFG","AXIS_DEFAULT_ANIMATE_CFG","appear","Axis","_super","view","_this","call","cache","Map","gridContainer","getLayer","BG","addGroup","gridForeContainer","FORE","axisContainer","axisForeContainer","Object","defineProperty","prototype","enumerable","configurable","init","render","update","layout","coordinate","getCoordinate","getComponents","co","component","direction","type","extra","dim","scale","alignTick","updated","AXIS","isPolar","isTransposed","GRID","items","getYScales","getXScale","center","getCenter","option","getOptions","axes","updatedCache","updateXAxes","updateYAxes","newCache","forEach","key","has","set","destroy","clear","remove","value","push","isIdentity","xAxisOption","field","BOTTOM","layer","axisId","getId","gridId","isRect","axis","cfg","getLineAxisCfg","createLineAxis","grid","getLineGridCfg","createLineGrid","RADIUS","getCircleAxisCfg","createCircleAxis","getCircleGridCfg","CIRCLE","createCircleGrid","yScales","idx","yAxisOption","LEFT","RIGHT","NONE","axisOption","container","region","titleText","axisThemeCfg","getTheme","optionWithTitle","title","style","text","ticks","getTicks","map","tick","id","concat","tickValue","name","verticalFactor","theme","_a","getAnimateCfg","animate","animateOption","isAxisVertical","verticalLimitLength","canvasWidth","getCanvas","canvasHeight","undefined","gridThemeCfg","gridCfg","isCategory","Math","abs","endAngle","startAngle","PI","length","verticalScale"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g2/esm/chart/controller/axis.js"],"sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { deepMix, each, get, isUndefined } from '@antv/util';\nimport { DIRECTION, COMPONENT_TYPE, LAYER } from '../../constant';\nimport { CircleAxis, CircleGrid, LineAxis, LineGrid } from '../../dependents';\nimport { DEFAULT_ANIMATE_CFG } from '../../animate/';\nimport { getAxisDirection, getAxisFactorByRegion, getAxisRegion, getAxisThemeCfg, getAxisTitleOptions, getAxisTitleText, getCircleAxisCenterRadius, isVertical, } from '../../util/axis';\nimport { getAxisOption } from '../../util/axis';\nimport { getCircleGridItems, getGridThemeCfg, getLineGridItems, showGrid } from '../../util/grid';\nimport { omit } from '../../util/helper';\nimport { Controller } from './base';\n// update 组件的时候，忽略的数据更新\nvar OMIT_CFG = ['container'];\n// 坐标轴默认动画配置\nvar AXIS_DEFAULT_ANIMATE_CFG = __assign(__assign({}, DEFAULT_ANIMATE_CFG), { appear: null });\n/**\n * @ignore\n * G2 Axis controller, will:\n *  - create component\n *    - axis\n *    - grid\n *  - life circle\n */\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis(view) {\n        var _this = _super.call(this, view) || this;\n        /** 使用 object 存储组件 */\n        _this.cache = new Map();\n        // 先创建 gridContainer，将 grid 放到 axis 底层\n        _this.gridContainer = _this.view.getLayer(LAYER.BG).addGroup();\n        _this.gridForeContainer = _this.view.getLayer(LAYER.FORE).addGroup();\n        _this.axisContainer = _this.view.getLayer(LAYER.BG).addGroup();\n        _this.axisForeContainer = _this.view.getLayer(LAYER.FORE).addGroup();\n        return _this;\n    }\n    Object.defineProperty(Axis.prototype, \"name\", {\n        get: function () {\n            return 'axis';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Axis.prototype.init = function () { };\n    Axis.prototype.render = function () {\n        this.update();\n    };\n    /**\n     * 更新组件布局，位置大小\n     */\n    Axis.prototype.layout = function () {\n        var _this = this;\n        var coordinate = this.view.getCoordinate();\n        each(this.getComponents(), function (co) {\n            var component = co.component, direction = co.direction, type = co.type, extra = co.extra;\n            var dim = extra.dim, scale = extra.scale, alignTick = extra.alignTick;\n            var updated;\n            if (type === COMPONENT_TYPE.AXIS) {\n                if (coordinate.isPolar) {\n                    if (dim === 'x') {\n                        updated = coordinate.isTransposed\n                            ? getAxisRegion(coordinate, direction)\n                            : getCircleAxisCenterRadius(coordinate);\n                    }\n                    else if (dim === 'y') {\n                        updated = coordinate.isTransposed\n                            ? getCircleAxisCenterRadius(coordinate)\n                            : getAxisRegion(coordinate, direction);\n                    }\n                }\n                else {\n                    updated = getAxisRegion(coordinate, direction);\n                }\n            }\n            else if (type === COMPONENT_TYPE.GRID) {\n                if (coordinate.isPolar) {\n                    var items = void 0;\n                    if (coordinate.isTransposed) {\n                        items =\n                            dim === 'x'\n                                ? getCircleGridItems(coordinate, _this.view.getYScales()[0], scale, alignTick, dim)\n                                : getLineGridItems(coordinate, scale, dim, alignTick);\n                    }\n                    else {\n                        items =\n                            dim === 'x'\n                                ? getLineGridItems(coordinate, scale, dim, alignTick)\n                                : getCircleGridItems(coordinate, _this.view.getXScale(), scale, alignTick, dim);\n                    }\n                    updated = {\n                        items: items,\n                        // coordinate 更新之后，center 也变化了\n                        center: _this.view.getCoordinate().getCenter(),\n                    };\n                }\n                else {\n                    updated = { items: getLineGridItems(coordinate, scale, dim, alignTick) };\n                }\n            }\n            component.update(updated);\n        });\n    };\n    /**\n     * 更新 axis 组件\n     */\n    Axis.prototype.update = function () {\n        this.option = this.view.getOptions().axes;\n        var updatedCache = new Map();\n        this.updateXAxes(updatedCache);\n        this.updateYAxes(updatedCache);\n        // 处理完成之后，销毁删除的\n        // 不在处理中的\n        var newCache = new Map();\n        this.cache.forEach(function (co, key) {\n            if (updatedCache.has(key)) {\n                newCache.set(key, co);\n            }\n            else {\n                // 不存在，则是所有需要被销毁的组件\n                co.component.destroy();\n            }\n        });\n        // 更新缓存\n        this.cache = newCache;\n    };\n    Axis.prototype.clear = function () {\n        _super.prototype.clear.call(this);\n        this.cache.clear();\n        this.gridContainer.clear();\n        this.gridForeContainer.clear();\n        this.axisContainer.clear();\n        this.axisForeContainer.clear();\n    };\n    Axis.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.gridContainer.remove(true);\n        this.gridForeContainer.remove(true);\n        this.axisContainer.remove(true);\n        this.axisForeContainer.remove(true);\n    };\n    /**\n     * @override\n     */\n    Axis.prototype.getComponents = function () {\n        var co = [];\n        this.cache.forEach(function (value) {\n            co.push(value);\n        });\n        return co;\n    };\n    /**\n     * 更新 x axis\n     * @param updatedCache\n     */\n    Axis.prototype.updateXAxes = function (updatedCache) {\n        // x axis\n        var scale = this.view.getXScale();\n        if (!scale || scale.isIdentity) {\n            return;\n        }\n        var xAxisOption = getAxisOption(this.option, scale.field);\n        if (xAxisOption === false) {\n            return;\n        }\n        var direction = getAxisDirection(xAxisOption, DIRECTION.BOTTOM);\n        var layer = LAYER.BG;\n        var dim = 'x';\n        var coordinate = this.view.getCoordinate();\n        var axisId = this.getId('axis', scale.field);\n        var gridId = this.getId('grid', scale.field);\n        if (coordinate.isRect) {\n            // 1. do axis update\n            var axis = this.cache.get(axisId);\n            // 存在则更新\n            if (axis) {\n                var cfg = this.getLineAxisCfg(scale, xAxisOption, direction);\n                omit(cfg, OMIT_CFG);\n                axis.component.update(cfg);\n                updatedCache.set(axisId, axis);\n            }\n            else {\n                // 不存在，则创建\n                axis = this.createLineAxis(scale, xAxisOption, layer, direction, dim);\n                this.cache.set(axisId, axis);\n                updatedCache.set(axisId, axis);\n            }\n            // 2. do grid update\n            var grid = this.cache.get(gridId);\n            // 存在则更新\n            if (grid) {\n                var cfg = this.getLineGridCfg(scale, xAxisOption, direction, dim);\n                omit(cfg, OMIT_CFG);\n                grid.component.update(cfg);\n                updatedCache.set(gridId, grid);\n            }\n            else {\n                // 不存在则创建\n                grid = this.createLineGrid(scale, xAxisOption, layer, direction, dim);\n                if (grid) {\n                    this.cache.set(gridId, grid);\n                    updatedCache.set(gridId, grid);\n                }\n            }\n        }\n        else if (coordinate.isPolar) {\n            // 1. do axis update\n            var axis = this.cache.get(axisId);\n            // 存在则更新\n            if (axis) {\n                var cfg = coordinate.isTransposed\n                    ? this.getLineAxisCfg(scale, xAxisOption, DIRECTION.RADIUS)\n                    : this.getCircleAxisCfg(scale, xAxisOption, direction);\n                omit(cfg, OMIT_CFG);\n                axis.component.update(cfg);\n                updatedCache.set(axisId, axis);\n            }\n            else {\n                // 不存在，则创建\n                if (coordinate.isTransposed) {\n                    if (isUndefined(xAxisOption)) {\n                        // 默认不渲染转置极坐标下的坐标轴\n                        return;\n                    }\n                    else {\n                        // 如果用户打开了隐藏的坐标轴 chart.axis(true)/chart.axis('x', true)\n                        // 那么对于转置了的极坐标，半径轴显示的是 x 轴对应的数据\n                        axis = this.createLineAxis(scale, xAxisOption, layer, DIRECTION.RADIUS, dim);\n                    }\n                }\n                else {\n                    axis = this.createCircleAxis(scale, xAxisOption, layer, direction, dim);\n                }\n                this.cache.set(axisId, axis);\n                updatedCache.set(axisId, axis);\n            }\n            // 2. do grid update\n            var grid = this.cache.get(gridId);\n            // 存在则更新\n            if (grid) {\n                var cfg = coordinate.isTransposed\n                    ? this.getCircleGridCfg(scale, xAxisOption, DIRECTION.RADIUS, dim)\n                    : this.getLineGridCfg(scale, xAxisOption, DIRECTION.CIRCLE, dim);\n                omit(cfg, OMIT_CFG);\n                grid.component.update(cfg);\n                updatedCache.set(gridId, grid);\n            }\n            else {\n                // 不存在则创建\n                if (coordinate.isTransposed) {\n                    if (isUndefined(xAxisOption)) {\n                        return;\n                    }\n                    else {\n                        grid = this.createCircleGrid(scale, xAxisOption, layer, DIRECTION.RADIUS, dim);\n                    }\n                }\n                else {\n                    // grid，极坐标下的 x 轴网格线沿着半径方向绘制\n                    grid = this.createLineGrid(scale, xAxisOption, layer, DIRECTION.CIRCLE, dim);\n                }\n                if (grid) {\n                    this.cache.set(gridId, grid);\n                    updatedCache.set(gridId, grid);\n                }\n            }\n        }\n        else {\n            // helix and other, do not draw axis\n        }\n    };\n    Axis.prototype.updateYAxes = function (updatedCache) {\n        var _this = this;\n        // y axes\n        var yScales = this.view.getYScales();\n        each(yScales, function (scale, idx) {\n            // @ts-ignore\n            if (!scale || scale.isIdentity) {\n                return;\n            }\n            var field = scale.field;\n            var yAxisOption = getAxisOption(_this.option, field);\n            if (yAxisOption !== false) {\n                var layer = LAYER.BG;\n                var dim = 'y';\n                var axisId = _this.getId('axis', field);\n                var gridId = _this.getId('grid', field);\n                var coordinate = _this.view.getCoordinate();\n                if (coordinate.isRect) {\n                    var direction = getAxisDirection(yAxisOption, idx === 0 ? DIRECTION.LEFT : DIRECTION.RIGHT);\n                    // 1. do axis update\n                    var axis = _this.cache.get(axisId);\n                    // 存在则更新\n                    if (axis) {\n                        var cfg = _this.getLineAxisCfg(scale, yAxisOption, direction);\n                        omit(cfg, OMIT_CFG);\n                        axis.component.update(cfg);\n                        updatedCache.set(axisId, axis);\n                    }\n                    else {\n                        // 不存在，则创建\n                        axis = _this.createLineAxis(scale, yAxisOption, layer, direction, dim);\n                        _this.cache.set(axisId, axis);\n                        updatedCache.set(axisId, axis);\n                    }\n                    // 2. do grid update\n                    var grid = _this.cache.get(gridId);\n                    // 存在则更新\n                    if (grid) {\n                        var cfg = _this.getLineGridCfg(scale, yAxisOption, direction, dim);\n                        omit(cfg, OMIT_CFG);\n                        grid.component.update(cfg);\n                        updatedCache.set(gridId, grid);\n                    }\n                    else {\n                        // 不存在则创建\n                        grid = _this.createLineGrid(scale, yAxisOption, layer, direction, dim);\n                        if (grid) {\n                            _this.cache.set(gridId, grid);\n                            updatedCache.set(gridId, grid);\n                        }\n                    }\n                }\n                else if (coordinate.isPolar) {\n                    // 1. do axis update\n                    var axis = _this.cache.get(axisId);\n                    // 存在则更新\n                    if (axis) {\n                        var cfg = coordinate.isTransposed\n                            ? _this.getCircleAxisCfg(scale, yAxisOption, DIRECTION.CIRCLE)\n                            : _this.getLineAxisCfg(scale, yAxisOption, DIRECTION.RADIUS);\n                        // @ts-ignore\n                        omit(cfg, OMIT_CFG);\n                        axis.component.update(cfg);\n                        updatedCache.set(axisId, axis);\n                    }\n                    else {\n                        // 不存在，则创建\n                        if (coordinate.isTransposed) {\n                            if (isUndefined(yAxisOption)) {\n                                return;\n                            }\n                            else {\n                                axis = _this.createCircleAxis(scale, yAxisOption, layer, DIRECTION.CIRCLE, dim);\n                            }\n                        }\n                        else {\n                            axis = _this.createLineAxis(scale, yAxisOption, layer, DIRECTION.RADIUS, dim);\n                        }\n                        _this.cache.set(axisId, axis);\n                        updatedCache.set(axisId, axis);\n                    }\n                    // 2. do grid update\n                    var grid = _this.cache.get(gridId);\n                    // 存在则更新\n                    if (grid) {\n                        var cfg = coordinate.isTransposed\n                            ? _this.getLineGridCfg(scale, yAxisOption, DIRECTION.CIRCLE, dim)\n                            : _this.getCircleGridCfg(scale, yAxisOption, DIRECTION.RADIUS, dim);\n                        omit(cfg, OMIT_CFG);\n                        grid.component.update(cfg);\n                        updatedCache.set(gridId, grid);\n                    }\n                    else {\n                        // 不存在则创建\n                        if (coordinate.isTransposed) {\n                            if (isUndefined(yAxisOption)) {\n                                return;\n                            }\n                            else {\n                                grid = _this.createLineGrid(scale, yAxisOption, layer, DIRECTION.CIRCLE, dim);\n                            }\n                        }\n                        else {\n                            grid = _this.createCircleGrid(scale, yAxisOption, layer, DIRECTION.RADIUS, dim);\n                        }\n                        if (grid) {\n                            _this.cache.set(gridId, grid);\n                            updatedCache.set(gridId, grid);\n                        }\n                    }\n                }\n                else {\n                    // helix and other, do not draw axis\n                }\n            }\n        });\n    };\n    /**\n     * 创建 line axis\n     * @param scale\n     * @param option\n     * @param layer\n     * @param direction\n     * @param dim\n     */\n    Axis.prototype.createLineAxis = function (scale, option, layer, direction, dim) {\n        // axis\n        var axis = {\n            component: new LineAxis(this.getLineAxisCfg(scale, option, direction)),\n            layer: layer,\n            direction: direction === DIRECTION.RADIUS ? DIRECTION.NONE : direction,\n            type: COMPONENT_TYPE.AXIS,\n            extra: { dim: dim, scale: scale },\n        };\n        axis.component.set('field', scale.field);\n        axis.component.init();\n        return axis;\n    };\n    Axis.prototype.createLineGrid = function (scale, option, layer, direction, dim) {\n        var cfg = this.getLineGridCfg(scale, option, direction, dim);\n        if (cfg) {\n            var grid = {\n                component: new LineGrid(cfg),\n                layer: layer,\n                direction: DIRECTION.NONE,\n                type: COMPONENT_TYPE.GRID,\n                extra: {\n                    dim: dim,\n                    scale: scale,\n                    alignTick: get(cfg, 'alignTick', true),\n                },\n            };\n            grid.component.init();\n            return grid;\n        }\n    };\n    Axis.prototype.createCircleAxis = function (scale, option, layer, direction, dim) {\n        var axis = {\n            component: new CircleAxis(this.getCircleAxisCfg(scale, option, direction)),\n            layer: layer,\n            direction: direction,\n            type: COMPONENT_TYPE.AXIS,\n            extra: { dim: dim, scale: scale },\n        };\n        axis.component.set('field', scale.field);\n        axis.component.init();\n        return axis;\n    };\n    Axis.prototype.createCircleGrid = function (scale, option, layer, direction, dim) {\n        var cfg = this.getCircleGridCfg(scale, option, direction, dim);\n        if (cfg) {\n            var grid = {\n                component: new CircleGrid(cfg),\n                layer: layer,\n                direction: DIRECTION.NONE,\n                type: COMPONENT_TYPE.GRID,\n                extra: {\n                    dim: dim,\n                    scale: scale,\n                    alignTick: get(cfg, 'alignTick', true),\n                },\n            };\n            grid.component.init();\n            return grid;\n        }\n    };\n    /**\n     * generate line axis cfg\n     * @param scale\n     * @param axisOption\n     * @param direction\n     * @return line axis cfg\n     */\n    Axis.prototype.getLineAxisCfg = function (scale, axisOption, direction) {\n        var container = get(axisOption, ['top']) ? this.axisForeContainer : this.axisContainer;\n        var coordinate = this.view.getCoordinate();\n        var region = getAxisRegion(coordinate, direction);\n        var titleText = getAxisTitleText(scale, axisOption);\n        var axisThemeCfg = getAxisThemeCfg(this.view.getTheme(), direction);\n        // the cfg order should be ensure\n        var optionWithTitle = get(axisOption, ['title'])\n            ? deepMix({ title: { style: { text: titleText } } }, { title: getAxisTitleOptions(this.view.getTheme(), direction, axisOption.title) }, axisOption)\n            : axisOption;\n        var cfg = deepMix(__assign(__assign({ container: container }, region), { ticks: scale.getTicks().map(function (tick) { return ({ id: \"\".concat(tick.tickValue), name: tick.text, value: tick.value }); }), verticalFactor: coordinate.isPolar\n                ? getAxisFactorByRegion(region, coordinate.getCenter()) * -1\n                : getAxisFactorByRegion(region, coordinate.getCenter()), theme: axisThemeCfg }), axisThemeCfg, optionWithTitle);\n        var _a = this.getAnimateCfg(cfg), animate = _a.animate, animateOption = _a.animateOption;\n        cfg.animateOption = animateOption;\n        cfg.animate = animate;\n        // 计算 verticalLimitLength\n        var isAxisVertical = isVertical(region);\n        // TODO: 1 / 3 等默认值需要有一个全局的配置的地方\n        var verticalLimitLength = get(cfg, 'verticalLimitLength', isAxisVertical ? 1 / 3 : 1 / 2);\n        if (verticalLimitLength <= 1) {\n            // 配置的相对值，相对于画布\n            var canvasWidth = this.view.getCanvas().get('width');\n            var canvasHeight = this.view.getCanvas().get('height');\n            cfg.verticalLimitLength = verticalLimitLength * (isAxisVertical ? canvasWidth : canvasHeight);\n        }\n        return cfg;\n    };\n    /**\n     * generate line grid cfg\n     * @param scale\n     * @param axisOption\n     * @param direction\n     * @param dim\n     * @return line grid cfg\n     */\n    Axis.prototype.getLineGridCfg = function (scale, axisOption, direction, dim) {\n        if (!showGrid(getAxisThemeCfg(this.view.getTheme(), direction), axisOption)) {\n            return undefined;\n        }\n        var gridThemeCfg = getGridThemeCfg(this.view.getTheme(), direction);\n        // the cfg order should be ensure\n        // grid 动画以 axis 为准\n        var gridCfg = deepMix({\n            container: get(axisOption, ['top']) ? this.gridForeContainer : this.gridContainer,\n        }, gridThemeCfg, get(axisOption, 'grid'), this.getAnimateCfg(axisOption));\n        gridCfg.items = getLineGridItems(this.view.getCoordinate(), scale, dim, get(gridCfg, 'alignTick', true));\n        return gridCfg;\n    };\n    /**\n     * generate circle axis cfg\n     * @param scale\n     * @param axisOption\n     * @param direction\n     * @return circle axis cfg\n     */\n    Axis.prototype.getCircleAxisCfg = function (scale, axisOption, direction) {\n        var container = get(axisOption, ['top']) ? this.axisForeContainer : this.axisContainer;\n        var coordinate = this.view.getCoordinate();\n        var ticks = scale.getTicks().map(function (tick) { return ({ id: \"\".concat(tick.tickValue), name: tick.text, value: tick.value }); });\n        if (!scale.isCategory && Math.abs(coordinate.endAngle - coordinate.startAngle) === Math.PI * 2) {\n            // x 轴对应的值如果是非 cat 类型，在整圆的情况下坐标轴第一个和最后一个文本会重叠，默认只展示第一个文本\n            if (ticks.length)\n                ticks[ticks.length - 1].name = '';\n        }\n        var titleText = getAxisTitleText(scale, axisOption);\n        var axisThemeCfg = getAxisThemeCfg(this.view.getTheme(), DIRECTION.CIRCLE);\n        // the cfg order should be ensure\n        var optionWithTitle = get(axisOption, ['title'])\n            ? deepMix({ title: { style: { text: titleText } } }, { title: getAxisTitleOptions(this.view.getTheme(), direction, axisOption.title) }, axisOption)\n            : axisOption;\n        var cfg = deepMix(__assign(__assign({ container: container }, getCircleAxisCenterRadius(this.view.getCoordinate())), { ticks: ticks, verticalFactor: 1, theme: axisThemeCfg }), axisThemeCfg, optionWithTitle);\n        var _a = this.getAnimateCfg(cfg), animate = _a.animate, animateOption = _a.animateOption;\n        cfg.animate = animate;\n        cfg.animateOption = animateOption;\n        return cfg;\n    };\n    /**\n     * generate circle grid cfg\n     * @param scale\n     * @param axisOption\n     * @param direction\n     * @return circle grid cfg\n     */\n    Axis.prototype.getCircleGridCfg = function (scale, axisOption, direction, dim) {\n        if (!showGrid(getAxisThemeCfg(this.view.getTheme(), direction), axisOption)) {\n            return undefined;\n        }\n        // the cfg order should be ensure\n        // grid 动画以 axis 为准\n        var gridThemeCfg = getGridThemeCfg(this.view.getTheme(), DIRECTION.RADIUS);\n        var gridCfg = deepMix({\n            container: get(axisOption, ['top']) ? this.gridForeContainer : this.gridContainer,\n            center: this.view.getCoordinate().getCenter(),\n        }, gridThemeCfg, get(axisOption, 'grid'), this.getAnimateCfg(axisOption));\n        var alignTick = get(gridCfg, 'alignTick', true);\n        var verticalScale = dim === 'x' ? this.view.getYScales()[0] : this.view.getXScale();\n        gridCfg.items = getCircleGridItems(this.view.getCoordinate(), verticalScale, scale, alignTick, dim);\n        // the cfg order should be ensure\n        // grid 动画以 axis 为准\n        return gridCfg;\n    };\n    Axis.prototype.getId = function (name, key) {\n        var coordinate = this.view.getCoordinate();\n        // 坐标系类型也作为组件的 key\n        return \"\".concat(name, \"-\").concat(key, \"-\").concat(coordinate.type);\n    };\n    Axis.prototype.getAnimateCfg = function (cfg) {\n        return {\n            animate: this.view.getOptions().animate && get(cfg, 'animate'),\n            animateOption: cfg && cfg.animateOption ? deepMix({}, AXIS_DEFAULT_ANIMATE_CFG, cfg.animateOption) : AXIS_DEFAULT_ANIMATE_CFG,\n        };\n    };\n    return Axis;\n}(Controller));\nexport default Axis;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}