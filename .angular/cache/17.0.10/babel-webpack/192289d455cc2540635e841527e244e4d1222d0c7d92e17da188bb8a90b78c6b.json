{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { PaymentGatewayViewComponent } from './payment-gateway-view/payment-gateway-view.component';\nimport { PaymentGatewayViewResolver } from './payment-gateway-view/payment-gateway-view.resolver';\nimport { PaymentGatewayListResolver } from './payment-gateways-list/payment-gateway-list.resolver';\nimport { PaymentGatewaysListComponent } from './payment-gateways-list/payment-gateways-list.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: '',\n  component: PaymentGatewaysListComponent,\n  resolve: {\n    paymentGateways: PaymentGatewayListResolver\n  },\n  runGuardsAndResolvers: 'paramsOrQueryParamsChange'\n}, {\n  path: 'view/:id',\n  component: PaymentGatewayViewComponent,\n  resolve: {\n    paymentGateway: PaymentGatewayViewResolver\n  }\n}, {\n  path: 'new',\n  component: PaymentGatewayViewComponent\n}];\nexport class ManagementPaymentGatewaysRoutingModule {\n  static {\n    this.ɵfac = function ManagementPaymentGatewaysRoutingModule_Factory(t) {\n      return new (t || ManagementPaymentGatewaysRoutingModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: ManagementPaymentGatewaysRoutingModule\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      providers: [PaymentGatewayListResolver, PaymentGatewayViewResolver],\n      imports: [RouterModule.forChild(routes), RouterModule]\n    });\n  }\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ManagementPaymentGatewaysRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","PaymentGatewayViewComponent","PaymentGatewayViewResolver","PaymentGatewayListResolver","PaymentGatewaysListComponent","routes","path","component","resolve","paymentGateways","runGuardsAndResolvers","paymentGateway","ManagementPaymentGatewaysRoutingModule","imports","forChild","i1","exports"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/apps/admin-panel/src/app/cms/management/management-payment-gateways/management-payment-gateways-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { PaymentGatewayViewComponent } from './payment-gateway-view/payment-gateway-view.component';\nimport { PaymentGatewayViewResolver } from './payment-gateway-view/payment-gateway-view.resolver';\nimport { PaymentGatewayListResolver } from './payment-gateways-list/payment-gateway-list.resolver';\nimport { PaymentGatewaysListComponent } from './payment-gateways-list/payment-gateways-list.component';\n\n\nconst routes: Routes = [\n  { path: '', component: PaymentGatewaysListComponent, resolve: {paymentGateways: PaymentGatewayListResolver }, runGuardsAndResolvers: 'paramsOrQueryParamsChange'},\n  { path: 'view/:id', component: PaymentGatewayViewComponent, resolve: {paymentGateway: PaymentGatewayViewResolver } },\n  { path: 'new', component: PaymentGatewayViewComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    PaymentGatewayListResolver,\n    PaymentGatewayViewResolver\n  ]\n})\nexport class ManagementPaymentGatewaysRoutingModule { }\n"],"mappings":"AACA,SAASA,YAAY,QAAgB,iBAAiB;AAEtD,SAASC,2BAA2B,QAAQ,uDAAuD;AACnG,SAASC,0BAA0B,QAAQ,sDAAsD;AACjG,SAASC,0BAA0B,QAAQ,uDAAuD;AAClG,SAASC,4BAA4B,QAAQ,yDAAyD;;;AAGtG,MAAMC,MAAM,GAAW,CACrB;EAAEC,IAAI,EAAE,EAAE;EAAEC,SAAS,EAAEH,4BAA4B;EAAEI,OAAO,EAAE;IAACC,eAAe,EAAEN;EAA0B,CAAE;EAAEO,qBAAqB,EAAE;AAA2B,CAAC,EACjK;EAAEJ,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAEN,2BAA2B;EAAEO,OAAO,EAAE;IAACG,cAAc,EAAET;EAA0B;AAAE,CAAE,EACpH;EAAEI,IAAI,EAAE,KAAK;EAAEC,SAAS,EAAEN;AAA2B,CAAE,CACxD;AAUD,OAAM,MAAOW,sCAAsC;;;uBAAtCA,sCAAsC;IAAA;EAAA;;;YAAtCA;IAAsC;EAAA;;;iBALtC,CACTT,0BAA0B,EAC1BD,0BAA0B,CAC3B;MAAAW,OAAA,GALSb,YAAY,CAACc,QAAQ,CAACT,MAAM,CAAC,EAC7BL,YAAY;IAAA;EAAA;;;2EAMXY,sCAAsC;IAAAC,OAAA,GAAAE,EAAA,CAAAf,YAAA;IAAAgB,OAAA,GANvChB,YAAY;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}