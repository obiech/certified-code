{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { ext, vec2, vec3 } from '@antv/matrix-util';\nimport { isNumberEqual } from '@antv/util';\nimport Coordinate from './base';\nvar Polar = /** @class */function (_super) {\n  __extends(Polar, _super);\n  function Polar(cfg) {\n    var _this = _super.call(this, cfg) || this;\n    _this.isPolar = true;\n    _this.type = 'polar';\n    var _a = cfg.startAngle,\n      startAngle = _a === void 0 ? -Math.PI / 2 : _a,\n      _b = cfg.endAngle,\n      endAngle = _b === void 0 ? Math.PI * 3 / 2 : _b,\n      _c = cfg.innerRadius,\n      innerRadius = _c === void 0 ? 0 : _c,\n      radius = cfg.radius;\n    _this.startAngle = startAngle;\n    _this.endAngle = endAngle;\n    _this.innerRadius = innerRadius;\n    _this.radius = radius;\n    _this.initial();\n    return _this;\n  }\n  Polar.prototype.initial = function () {\n    _super.prototype.initial.call(this);\n    while (this.endAngle < this.startAngle) {\n      this.endAngle += Math.PI * 2;\n    }\n    var oneBox = this.getOneBox();\n    var oneWidth = oneBox.maxX - oneBox.minX;\n    var oneHeight = oneBox.maxY - oneBox.minY;\n    var left = Math.abs(oneBox.minX) / oneWidth;\n    var top = Math.abs(oneBox.minY) / oneHeight;\n    var maxRadius;\n    if (this.height / oneHeight > this.width / oneWidth) {\n      // width 为主\n      maxRadius = this.width / oneWidth;\n      this.circleCenter = {\n        x: this.center.x - (0.5 - left) * this.width,\n        y: this.center.y - (0.5 - top) * maxRadius * oneHeight\n      };\n    } else {\n      // height 为主\n      maxRadius = this.height / oneHeight;\n      this.circleCenter = {\n        x: this.center.x - (0.5 - left) * maxRadius * oneWidth,\n        y: this.center.y - (0.5 - top) * this.height\n      };\n    }\n    this.polarRadius = this.radius;\n    if (!this.radius) {\n      this.polarRadius = maxRadius;\n    } else if (this.radius > 0 && this.radius <= 1) {\n      this.polarRadius = maxRadius * this.radius;\n    } else if (this.radius <= 0 || this.radius > maxRadius) {\n      this.polarRadius = maxRadius;\n    }\n    this.x = {\n      start: this.startAngle,\n      end: this.endAngle\n    };\n    this.y = {\n      start: this.innerRadius * this.polarRadius,\n      end: this.polarRadius\n    };\n  };\n  Polar.prototype.getRadius = function () {\n    return this.polarRadius;\n  };\n  Polar.prototype.convertPoint = function (point) {\n    var _a;\n    var center = this.getCenter();\n    var x = point.x,\n      y = point.y;\n    if (this.isTransposed) {\n      _a = [y, x], x = _a[0], y = _a[1];\n    }\n    x = this.convertDim(x, 'x');\n    y = this.convertDim(y, 'y');\n    return {\n      x: center.x + Math.cos(x) * y,\n      y: center.y + Math.sin(x) * y\n    };\n  };\n  Polar.prototype.invertPoint = function (point) {\n    var _a;\n    var center = this.getCenter();\n    var vPoint = [point.x - center.x, point.y - center.y];\n    var _b = this,\n      startAngle = _b.startAngle,\n      endAngle = _b.endAngle;\n    if (this.isReflect('x')) {\n      _a = [endAngle, startAngle], startAngle = _a[0], endAngle = _a[1];\n    }\n    var m = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    ext.leftRotate(m, m, startAngle);\n    var vStart3 = [1, 0, 0];\n    vec3.transformMat3(vStart3, vStart3, m);\n    var vStart2 = [vStart3[0], vStart3[1]];\n    var angle = ext.angleTo(vStart2, vPoint, endAngle < startAngle);\n    if (isNumberEqual(angle, Math.PI * 2)) {\n      angle = 0;\n    }\n    var radius = vec2.length(vPoint);\n    var xPercent = angle / (endAngle - startAngle);\n    xPercent = endAngle - startAngle > 0 ? xPercent : -xPercent;\n    var yPercent = this.invertDim(radius, 'y');\n    var rst = {\n      x: 0,\n      y: 0\n    };\n    rst.x = this.isTransposed ? yPercent : xPercent;\n    rst.y = this.isTransposed ? xPercent : yPercent;\n    return rst;\n  };\n  Polar.prototype.getCenter = function () {\n    return this.circleCenter;\n  };\n  Polar.prototype.getOneBox = function () {\n    var startAngle = this.startAngle;\n    var endAngle = this.endAngle;\n    if (Math.abs(endAngle - startAngle) >= Math.PI * 2) {\n      return {\n        minX: -1,\n        maxX: 1,\n        minY: -1,\n        maxY: 1\n      };\n    }\n    var xs = [0, Math.cos(startAngle), Math.cos(endAngle)];\n    var ys = [0, Math.sin(startAngle), Math.sin(endAngle)];\n    for (var i = Math.min(startAngle, endAngle); i < Math.max(startAngle, endAngle); i += Math.PI / 18) {\n      xs.push(Math.cos(i));\n      ys.push(Math.sin(i));\n    }\n    return {\n      minX: Math.min.apply(Math, xs),\n      maxX: Math.max.apply(Math, xs),\n      minY: Math.min.apply(Math, ys),\n      maxY: Math.max.apply(Math, ys)\n    };\n  };\n  return Polar;\n}(Coordinate);\nexport default Polar;","map":{"version":3,"names":["__extends","ext","vec2","vec3","isNumberEqual","Coordinate","Polar","_super","cfg","_this","call","isPolar","type","_a","startAngle","Math","PI","_b","endAngle","_c","innerRadius","radius","initial","prototype","oneBox","getOneBox","oneWidth","maxX","minX","oneHeight","maxY","minY","left","abs","top","maxRadius","height","width","circleCenter","x","center","y","polarRadius","start","end","getRadius","convertPoint","point","getCenter","isTransposed","convertDim","cos","sin","invertPoint","vPoint","isReflect","m","leftRotate","vStart3","transformMat3","vStart2","angle","angleTo","length","xPercent","yPercent","invertDim","rst","xs","ys","i","min","max","push","apply"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/coord/esm/coord/polar.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { ext, vec2, vec3 } from '@antv/matrix-util';\nimport { isNumberEqual } from '@antv/util';\nimport Coordinate from './base';\nvar Polar = /** @class */ (function (_super) {\n    __extends(Polar, _super);\n    function Polar(cfg) {\n        var _this = _super.call(this, cfg) || this;\n        _this.isPolar = true;\n        _this.type = 'polar';\n        var _a = cfg.startAngle, startAngle = _a === void 0 ? -Math.PI / 2 : _a, _b = cfg.endAngle, endAngle = _b === void 0 ? (Math.PI * 3) / 2 : _b, _c = cfg.innerRadius, innerRadius = _c === void 0 ? 0 : _c, radius = cfg.radius;\n        _this.startAngle = startAngle;\n        _this.endAngle = endAngle;\n        _this.innerRadius = innerRadius;\n        _this.radius = radius;\n        _this.initial();\n        return _this;\n    }\n    Polar.prototype.initial = function () {\n        _super.prototype.initial.call(this);\n        while (this.endAngle < this.startAngle) {\n            this.endAngle += Math.PI * 2;\n        }\n        var oneBox = this.getOneBox();\n        var oneWidth = oneBox.maxX - oneBox.minX;\n        var oneHeight = oneBox.maxY - oneBox.minY;\n        var left = Math.abs(oneBox.minX) / oneWidth;\n        var top = Math.abs(oneBox.minY) / oneHeight;\n        var maxRadius;\n        if (this.height / oneHeight > this.width / oneWidth) {\n            // width 为主\n            maxRadius = this.width / oneWidth;\n            this.circleCenter = {\n                x: this.center.x - (0.5 - left) * this.width,\n                y: this.center.y - (0.5 - top) * maxRadius * oneHeight,\n            };\n        }\n        else {\n            // height 为主\n            maxRadius = this.height / oneHeight;\n            this.circleCenter = {\n                x: this.center.x - (0.5 - left) * maxRadius * oneWidth,\n                y: this.center.y - (0.5 - top) * this.height,\n            };\n        }\n        this.polarRadius = this.radius;\n        if (!this.radius) {\n            this.polarRadius = maxRadius;\n        }\n        else if (this.radius > 0 && this.radius <= 1) {\n            this.polarRadius = maxRadius * this.radius;\n        }\n        else if (this.radius <= 0 || this.radius > maxRadius) {\n            this.polarRadius = maxRadius;\n        }\n        this.x = {\n            start: this.startAngle,\n            end: this.endAngle,\n        };\n        this.y = {\n            start: this.innerRadius * this.polarRadius,\n            end: this.polarRadius,\n        };\n    };\n    Polar.prototype.getRadius = function () {\n        return this.polarRadius;\n    };\n    Polar.prototype.convertPoint = function (point) {\n        var _a;\n        var center = this.getCenter();\n        var x = point.x, y = point.y;\n        if (this.isTransposed) {\n            _a = [y, x], x = _a[0], y = _a[1];\n        }\n        x = this.convertDim(x, 'x');\n        y = this.convertDim(y, 'y');\n        return {\n            x: center.x + Math.cos(x) * y,\n            y: center.y + Math.sin(x) * y,\n        };\n    };\n    Polar.prototype.invertPoint = function (point) {\n        var _a;\n        var center = this.getCenter();\n        var vPoint = [point.x - center.x, point.y - center.y];\n        var _b = this, startAngle = _b.startAngle, endAngle = _b.endAngle;\n        if (this.isReflect('x')) {\n            _a = [endAngle, startAngle], startAngle = _a[0], endAngle = _a[1];\n        }\n        var m = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n        ext.leftRotate(m, m, startAngle);\n        var vStart3 = [1, 0, 0];\n        vec3.transformMat3(vStart3, vStart3, m);\n        var vStart2 = [vStart3[0], vStart3[1]];\n        var angle = ext.angleTo(vStart2, vPoint, endAngle < startAngle);\n        if (isNumberEqual(angle, Math.PI * 2)) {\n            angle = 0;\n        }\n        var radius = vec2.length(vPoint);\n        var xPercent = angle / (endAngle - startAngle);\n        xPercent = endAngle - startAngle > 0 ? xPercent : -xPercent;\n        var yPercent = this.invertDim(radius, 'y');\n        var rst = { x: 0, y: 0 };\n        rst.x = this.isTransposed ? yPercent : xPercent;\n        rst.y = this.isTransposed ? xPercent : yPercent;\n        return rst;\n    };\n    Polar.prototype.getCenter = function () {\n        return this.circleCenter;\n    };\n    Polar.prototype.getOneBox = function () {\n        var startAngle = this.startAngle;\n        var endAngle = this.endAngle;\n        if (Math.abs(endAngle - startAngle) >= Math.PI * 2) {\n            return {\n                minX: -1,\n                maxX: 1,\n                minY: -1,\n                maxY: 1,\n            };\n        }\n        var xs = [0, Math.cos(startAngle), Math.cos(endAngle)];\n        var ys = [0, Math.sin(startAngle), Math.sin(endAngle)];\n        for (var i = Math.min(startAngle, endAngle); i < Math.max(startAngle, endAngle); i += Math.PI / 18) {\n            xs.push(Math.cos(i));\n            ys.push(Math.sin(i));\n        }\n        return {\n            minX: Math.min.apply(Math, xs),\n            maxX: Math.max.apply(Math, xs),\n            minY: Math.min.apply(Math, ys),\n            maxY: Math.max.apply(Math, ys),\n        };\n    };\n    return Polar;\n}(Coordinate));\nexport default Polar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}