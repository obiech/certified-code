{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\nimport { each } from '@antv/util';\nimport { COMPONENT_TYPE } from '../../constant';\nimport { BBox } from '../../util/bbox';\nimport { isAutoPadding, parsePadding } from '../../util/padding';\nimport { PaddingCal } from './padding-cal';\n/**\n * @ignore\n * 根据 view 中的组件，计算实际的 padding 数值\n * @param view\n */\nexport function calculatePadding(view) {\n  var padding = view.padding;\n  // 如果不是 auto padding，那么直接解析之后返回\n  if (!isAutoPadding(padding)) {\n    return new (PaddingCal.bind.apply(PaddingCal, __spreadArray([void 0], __read(parsePadding(padding)), false)))();\n  }\n  // 是 auto padding，根据组件的情况，来计算 padding\n  var viewBBox = view.viewBBox;\n  var paddingCal = new PaddingCal();\n  var axisComponents = [];\n  var paddingComponents = [];\n  var otherComponents = [];\n  each(view.getComponents(), function (co) {\n    var type = co.type;\n    if (type === COMPONENT_TYPE.AXIS) {\n      axisComponents.push(co);\n    } else if ([COMPONENT_TYPE.LEGEND, COMPONENT_TYPE.SLIDER, COMPONENT_TYPE.SCROLLBAR].includes(type)) {\n      paddingComponents.push(co);\n    } else if (type !== COMPONENT_TYPE.GRID && type !== COMPONENT_TYPE.TOOLTIP) {\n      otherComponents.push(co);\n    }\n  });\n  // 进行坐标轴布局，应该是取 padding 的并集，而不是进行相加\n  each(axisComponents, function (co) {\n    var component = co.component;\n    var bboxObject = component.getLayoutBBox();\n    var componentBBox = new BBox(bboxObject.x, bboxObject.y, bboxObject.width, bboxObject.height);\n    var exceed = componentBBox.exceed(viewBBox);\n    // 在对组件分组之后，先对 axis 进行处理，然后取最大的超出即可。\n    paddingCal.max(exceed);\n  });\n  // 有 padding 的组件布局\n  each(paddingComponents, function (co) {\n    var component = co.component,\n      direction = co.direction;\n    var bboxObject = component.getLayoutBBox();\n    var componentPadding = component.get('padding');\n    var componentBBox = new BBox(bboxObject.x, bboxObject.y, bboxObject.width, bboxObject.height).expand(componentPadding);\n    // 按照方向计算 padding\n    paddingCal.inc(componentBBox, direction);\n  });\n  // 其他组件布局\n  each(otherComponents, function (co) {\n    var component = co.component,\n      direction = co.direction;\n    var bboxObject = component.getLayoutBBox();\n    var componentBBox = new BBox(bboxObject.x, bboxObject.y, bboxObject.width, bboxObject.height);\n    // 按照方向计算 padding\n    paddingCal.inc(componentBBox, direction);\n  });\n  return paddingCal;\n}","map":{"version":3,"names":["__read","__spreadArray","each","COMPONENT_TYPE","BBox","isAutoPadding","parsePadding","PaddingCal","calculatePadding","view","padding","bind","apply","viewBBox","paddingCal","axisComponents","paddingComponents","otherComponents","getComponents","co","type","AXIS","push","LEGEND","SLIDER","SCROLLBAR","includes","GRID","TOOLTIP","component","bboxObject","getLayoutBBox","componentBBox","x","y","width","height","exceed","max","direction","componentPadding","get","expand","inc"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g2/esm/chart/layout/auto.js"],"sourcesContent":["import { __read, __spreadArray } from \"tslib\";\nimport { each } from '@antv/util';\nimport { COMPONENT_TYPE } from '../../constant';\nimport { BBox } from '../../util/bbox';\nimport { isAutoPadding, parsePadding } from '../../util/padding';\nimport { PaddingCal } from './padding-cal';\n/**\n * @ignore\n * 根据 view 中的组件，计算实际的 padding 数值\n * @param view\n */\nexport function calculatePadding(view) {\n    var padding = view.padding;\n    // 如果不是 auto padding，那么直接解析之后返回\n    if (!isAutoPadding(padding)) {\n        return new (PaddingCal.bind.apply(PaddingCal, __spreadArray([void 0], __read(parsePadding(padding)), false)))();\n    }\n    // 是 auto padding，根据组件的情况，来计算 padding\n    var viewBBox = view.viewBBox;\n    var paddingCal = new PaddingCal();\n    var axisComponents = [];\n    var paddingComponents = [];\n    var otherComponents = [];\n    each(view.getComponents(), function (co) {\n        var type = co.type;\n        if (type === COMPONENT_TYPE.AXIS) {\n            axisComponents.push(co);\n        }\n        else if ([COMPONENT_TYPE.LEGEND, COMPONENT_TYPE.SLIDER, COMPONENT_TYPE.SCROLLBAR].includes(type)) {\n            paddingComponents.push(co);\n        }\n        else if (type !== COMPONENT_TYPE.GRID && type !== COMPONENT_TYPE.TOOLTIP) {\n            otherComponents.push(co);\n        }\n    });\n    // 进行坐标轴布局，应该是取 padding 的并集，而不是进行相加\n    each(axisComponents, function (co) {\n        var component = co.component;\n        var bboxObject = component.getLayoutBBox();\n        var componentBBox = new BBox(bboxObject.x, bboxObject.y, bboxObject.width, bboxObject.height);\n        var exceed = componentBBox.exceed(viewBBox);\n        // 在对组件分组之后，先对 axis 进行处理，然后取最大的超出即可。\n        paddingCal.max(exceed);\n    });\n    // 有 padding 的组件布局\n    each(paddingComponents, function (co) {\n        var component = co.component, direction = co.direction;\n        var bboxObject = component.getLayoutBBox();\n        var componentPadding = component.get('padding');\n        var componentBBox = new BBox(bboxObject.x, bboxObject.y, bboxObject.width, bboxObject.height).expand(componentPadding);\n        // 按照方向计算 padding\n        paddingCal.inc(componentBBox, direction);\n    });\n    // 其他组件布局\n    each(otherComponents, function (co) {\n        var component = co.component, direction = co.direction;\n        var bboxObject = component.getLayoutBBox();\n        var componentBBox = new BBox(bboxObject.x, bboxObject.y, bboxObject.width, bboxObject.height);\n        // 按照方向计算 padding\n        paddingCal.inc(componentBBox, direction);\n    });\n    return paddingCal;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}