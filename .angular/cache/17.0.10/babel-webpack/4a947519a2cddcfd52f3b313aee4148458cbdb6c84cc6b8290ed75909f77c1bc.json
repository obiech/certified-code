{"ast":null,"code":"import { __assign, __extends, __spreadArrays } from \"tslib\";\nimport { clone, isFunction, mix, upperFirst } from '@antv/util';\nimport Theme from '../util/theme';\nimport { getValueByPercent } from '../util/util';\nimport LegendBase from './base';\nvar HANDLER_HEIGHT_RATIO = 1.4;\nvar HANDLER_TRIANGLE_RATIO = 0.4;\nvar ContinueLegend = /** @class */function (_super) {\n  __extends(ContinueLegend, _super);\n  function ContinueLegend() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  ContinueLegend.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n    return __assign(__assign({}, cfg), {\n      type: 'continue',\n      min: 0,\n      max: 100,\n      value: null,\n      colors: [],\n      track: {},\n      rail: {},\n      label: {},\n      handler: {},\n      slidable: true,\n      tip: null,\n      step: null,\n      maxWidth: null,\n      maxHeight: null,\n      defaultCfg: {\n        label: {\n          align: 'rail',\n          spacing: 5,\n          formatter: null,\n          style: {\n            fontSize: 12,\n            fill: Theme.textColor,\n            textBaseline: 'middle',\n            fontFamily: Theme.fontFamily\n          }\n        },\n        handler: {\n          size: 10,\n          style: {\n            fill: '#fff',\n            stroke: '#333'\n          }\n        },\n        track: {},\n        rail: {\n          type: 'color',\n          size: 20,\n          defaultLength: 100,\n          style: {\n            fill: '#DCDEE2'\n          }\n        },\n        title: {\n          spacing: 5,\n          style: {\n            fill: Theme.textColor,\n            fontSize: 12,\n            textAlign: 'start',\n            textBaseline: 'top'\n          }\n        }\n      }\n    });\n  };\n  ContinueLegend.prototype.isSlider = function () {\n    return true;\n  };\n  // 实现 IList 接口\n  ContinueLegend.prototype.getValue = function () {\n    return this.getCurrentValue();\n  };\n  ContinueLegend.prototype.getRange = function () {\n    return {\n      min: this.get('min'),\n      max: this.get('max')\n    };\n  };\n  // 改变 range\n  ContinueLegend.prototype.setRange = function (min, max) {\n    this.update({\n      min: min,\n      max: max\n    });\n  };\n  ContinueLegend.prototype.setValue = function (value) {\n    var originValue = this.getValue();\n    this.set('value', value);\n    var group = this.get('group');\n    this.resetTrackClip();\n    if (this.get('slidable')) {\n      this.resetHandlers(group);\n    }\n    this.delegateEmit('valuechanged', {\n      originValue: originValue,\n      value: value\n    });\n  };\n  ContinueLegend.prototype.initEvent = function () {\n    var group = this.get('group');\n    this.bindSliderEvent(group);\n    this.bindRailEvent(group);\n    this.bindTrackEvent(group);\n  };\n  ContinueLegend.prototype.drawLegendContent = function (group) {\n    this.drawRail(group);\n    this.drawLabels(group);\n    this.fixedElements(group); // 调整各个图形位置，适应宽高的限制\n    this.resetTrack(group);\n    this.resetTrackClip(group);\n    if (this.get('slidable')) {\n      this.resetHandlers(group);\n    }\n  };\n  ContinueLegend.prototype.bindSliderEvent = function (group) {\n    this.bindHandlersEvent(group);\n  };\n  ContinueLegend.prototype.bindHandlersEvent = function (group) {\n    var _this = this;\n    group.on('legend-handler-min:drag', function (ev) {\n      var minValue = _this.getValueByCanvasPoint(ev.x, ev.y);\n      var currentValue = _this.getCurrentValue();\n      var maxValue = currentValue[1];\n      if (maxValue < minValue) {\n        // 如果小于最小值，则调整最小值\n        maxValue = minValue;\n      }\n      _this.setValue([minValue, maxValue]);\n    });\n    group.on('legend-handler-max:drag', function (ev) {\n      var maxValue = _this.getValueByCanvasPoint(ev.x, ev.y);\n      var currentValue = _this.getCurrentValue();\n      var minValue = currentValue[0];\n      if (minValue > maxValue) {\n        // 如果小于最小值，则调整最小值\n        minValue = maxValue;\n      }\n      _this.setValue([minValue, maxValue]);\n    });\n  };\n  ContinueLegend.prototype.bindRailEvent = function (group) {};\n  ContinueLegend.prototype.bindTrackEvent = function (group) {\n    var _this = this;\n    var prePoint = null;\n    group.on('legend-track:dragstart', function (ev) {\n      prePoint = {\n        x: ev.x,\n        y: ev.y\n      };\n    });\n    group.on('legend-track:drag', function (ev) {\n      if (!prePoint) {\n        return;\n      }\n      var preValue = _this.getValueByCanvasPoint(prePoint.x, prePoint.y);\n      var curValue = _this.getValueByCanvasPoint(ev.x, ev.y);\n      var currentValue = _this.getCurrentValue();\n      var curDiff = currentValue[1] - currentValue[0];\n      var range = _this.getRange();\n      var dValue = curValue - preValue;\n      if (dValue < 0) {\n        // 减小, 同时未出边界\n        if (currentValue[0] + dValue > range.min) {\n          _this.setValue([currentValue[0] + dValue, currentValue[1] + dValue]);\n        } else {\n          _this.setValue([range.min, range.min + curDiff]);\n        }\n        //  && ||\n      } else if (dValue > 0) {\n        if (dValue > 0 && currentValue[1] + dValue < range.max) {\n          _this.setValue([currentValue[0] + dValue, currentValue[1] + dValue]);\n        } else {\n          _this.setValue([range.max - curDiff, range.max]);\n        }\n      }\n      prePoint = {\n        x: ev.x,\n        y: ev.y\n      };\n    });\n    group.on('legend-track:dragend', function (ev) {\n      prePoint = null;\n    });\n  };\n  ContinueLegend.prototype.drawLabels = function (group) {\n    this.drawLabel('min', group);\n    this.drawLabel('max', group);\n  };\n  ContinueLegend.prototype.drawLabel = function (name, group) {\n    var labelCfg = this.get('label');\n    var style = labelCfg.style;\n    var labelAlign = labelCfg.align;\n    var labelFormatter = labelCfg.formatter;\n    var value = this.get(name);\n    var alignAttrs = this.getLabelAlignAttrs(name, labelAlign);\n    var localId = \"label-\" + name;\n    this.addShape(group, {\n      type: 'text',\n      id: this.getElementId(localId),\n      name: \"legend-label-\" + name,\n      attrs: __assign(__assign({\n        x: 0,\n        y: 0,\n        text: isFunction(labelFormatter) ? labelFormatter(value) : value\n      }, style), alignAttrs)\n    });\n  };\n  // 获取文本的对齐方式，为了自适应真实操碎了心\n  ContinueLegend.prototype.getLabelAlignAttrs = function (name, align) {\n    var isVertical = this.isVertical();\n    var textAlign = 'center';\n    var textBaseline = 'middle';\n    if (isVertical) {\n      // 垂直布局的所有的文本都左对齐\n      textAlign = 'start';\n      if (align !== 'rail') {\n        if (name === 'min') {\n          textBaseline = 'top';\n        } else {\n          textBaseline = 'bottom';\n        }\n      } else {\n        textBaseline = 'top';\n      }\n    } else {\n      if (align !== 'rail') {\n        textBaseline = 'top';\n        if (name === 'min') {\n          textAlign = 'start';\n        } else {\n          textAlign = 'end';\n        }\n      } else {\n        textAlign = 'start';\n        textBaseline = 'middle';\n      }\n    }\n    return {\n      textAlign: textAlign,\n      textBaseline: textBaseline\n    };\n  };\n  ContinueLegend.prototype.getRailPath = function (x, y, w, h) {\n    var railCfg = this.get('rail');\n    var size = railCfg.size,\n      defaultLength = railCfg.defaultLength,\n      type = railCfg.type;\n    var isVertical = this.isVertical();\n    var length = defaultLength;\n    var width = w;\n    var height = h;\n    if (!width) {\n      width = isVertical ? size : length;\n    }\n    if (!height) {\n      height = isVertical ? length : size;\n    }\n    var path = [];\n    if (type === 'color') {\n      path.push(['M', x, y]);\n      path.push(['L', x + width, y]);\n      path.push(['L', x + width, y + height]);\n      path.push(['L', x, y + height]);\n      path.push(['Z']);\n    } else {\n      path.push(['M', x + width, y]);\n      path.push(['L', x + width, y + height]);\n      path.push(['L', x, y + height]);\n      path.push(['Z']);\n    }\n    return path;\n  };\n  ContinueLegend.prototype.drawRail = function (group) {\n    var railCfg = this.get('rail');\n    var style = railCfg.style;\n    this.addShape(group, {\n      type: 'path',\n      id: this.getElementId('rail'),\n      name: 'legend-rail',\n      attrs: __assign({\n        path: this.getRailPath(0, 0)\n      }, style)\n    });\n  };\n  // 将传入的颜色转换成渐变色\n  ContinueLegend.prototype.getTrackColor = function (colors) {\n    var count = colors.length;\n    if (!count) {\n      return null;\n    }\n    if (count === 1) {\n      return colors[0];\n    }\n    var color; // 最终形态 l(0) 0:colors[0] 0.5:colors[1] 1:colors[2];\n    if (this.isVertical()) {\n      // 根据方向设置渐变方向\n      color = 'l(90)';\n    } else {\n      color = 'l(0)';\n    }\n    for (var i = 0; i < count; i++) {\n      var percent = i / (count - 1);\n      color += \" \" + percent + \":\" + colors[i];\n    }\n    return color;\n  };\n  ContinueLegend.prototype.getTrackPath = function (group) {\n    var railShape = this.getRailShape(group);\n    var path = railShape.attr('path');\n    return clone(path);\n  };\n  ContinueLegend.prototype.getClipTrackAttrs = function (group) {\n    var value = this.getCurrentValue();\n    var min = value[0],\n      max = value[1];\n    var railBBox = this.getRailBBox(group);\n    var startPoint = this.getPointByValue(min, group);\n    var endPoint = this.getPointByValue(max, group);\n    var isVertical = this.isVertical();\n    var x;\n    var y;\n    var width;\n    var height;\n    if (isVertical) {\n      x = railBBox.minX;\n      y = startPoint.y;\n      width = railBBox.width;\n      height = endPoint.y - startPoint.y;\n    } else {\n      x = startPoint.x;\n      y = railBBox.minY;\n      width = endPoint.x - startPoint.x;\n      height = railBBox.height;\n    }\n    return {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    };\n  };\n  // 获取 track 的属性，由 path 和 颜色构成\n  ContinueLegend.prototype.getTrackAttrs = function (group) {\n    var trackCfg = this.get('track');\n    var colors = this.get('colors');\n    var path = this.getTrackPath(group);\n    return mix({\n      path: path,\n      fill: this.getTrackColor(colors)\n    }, trackCfg.style);\n  };\n  ContinueLegend.prototype.resetTrackClip = function (group) {\n    var container = group || this.get('group');\n    var trackId = this.getElementId('track');\n    var trackShape = container.findById(trackId);\n    var clipShape = trackShape.getClip();\n    var attrs = this.getClipTrackAttrs(group);\n    if (!clipShape) {\n      trackShape.setClip({\n        type: 'rect',\n        attrs: attrs\n      });\n    } else {\n      clipShape.attr(attrs);\n    }\n  };\n  ContinueLegend.prototype.resetTrack = function (group) {\n    var trackId = this.getElementId('track');\n    var trackShape = group.findById(trackId);\n    var trackAttrs = this.getTrackAttrs(group);\n    if (trackShape) {\n      trackShape.attr(trackAttrs);\n    } else {\n      this.addShape(group, {\n        type: 'path',\n        id: trackId,\n        draggable: this.get('slidable'),\n        name: 'legend-track',\n        attrs: trackAttrs\n      });\n    }\n  };\n  ContinueLegend.prototype.getPointByValue = function (value, group) {\n    var _a = this.getRange(),\n      min = _a.min,\n      max = _a.max;\n    var percent = (value - min) / (max - min);\n    var bbox = this.getRailBBox(group);\n    var isVertcal = this.isVertical();\n    var point = {\n      x: 0,\n      y: 0\n    };\n    if (isVertcal) {\n      point.x = bbox.minX + bbox.width / 2;\n      point.y = getValueByPercent(bbox.minY, bbox.maxY, percent);\n    } else {\n      point.x = getValueByPercent(bbox.minX, bbox.maxX, percent);\n      point.y = bbox.minY + bbox.height / 2;\n    }\n    return point;\n  };\n  ContinueLegend.prototype.getRailShape = function (group) {\n    var container = group || this.get('group');\n    return container.findById(this.getElementId('rail'));\n  };\n  // 获取滑轨的宽高信息\n  ContinueLegend.prototype.getRailBBox = function (group) {\n    var railShape = this.getRailShape(group);\n    var bbox = railShape.getBBox();\n    return bbox;\n  };\n  ContinueLegend.prototype.getRailCanvasBBox = function () {\n    var container = this.get('group');\n    var railShape = container.findById(this.getElementId('rail'));\n    var bbox = railShape.getCanvasBBox();\n    return bbox;\n  };\n  // 是否垂直\n  ContinueLegend.prototype.isVertical = function () {\n    return this.get('layout') === 'vertical';\n  };\n  // 用于交互时\n  ContinueLegend.prototype.getValueByCanvasPoint = function (x, y) {\n    var _a = this.getRange(),\n      min = _a.min,\n      max = _a.max;\n    var bbox = this.getRailCanvasBBox(); // 因为 x, y 是画布坐标\n    var isVertcal = this.isVertical();\n    var step = this.get('step');\n    var percent;\n    if (isVertcal) {\n      // 垂直时计算 y\n      percent = (y - bbox.minY) / bbox.height;\n    } else {\n      // 水平时计算 x\n      percent = (x - bbox.minX) / bbox.width;\n    }\n    var value = getValueByPercent(min, max, percent);\n    if (step) {\n      var count = Math.round((value - min) / step);\n      value = min + count * step; // 移动到最近的\n    }\n\n    if (value > max) {\n      value = max;\n    }\n    if (value < min) {\n      value = min;\n    }\n    return value;\n  };\n  // 当前选中的范围\n  ContinueLegend.prototype.getCurrentValue = function () {\n    var value = this.get('value');\n    if (!value) {\n      var values = this.get('values');\n      if (!values) {\n        return [this.get('min'), this.get('max')];\n      }\n      // 如果没有定义，取最大范围  最小值 为 values 中的最小值， 如果最小值 超过了 定义的最大值 则 做限制  最大值 反之\n      return [Math.max(Math.min.apply(Math, __spreadArrays(values, [this.get('max')])), this.get('min')), Math.min(Math.max.apply(Math, __spreadArrays(values, [this.get('min')])), this.get('max'))];\n    }\n    return value;\n  };\n  // 重置滑块 handler\n  ContinueLegend.prototype.resetHandlers = function (group) {\n    var currentValue = this.getCurrentValue();\n    var min = currentValue[0],\n      max = currentValue[1];\n    this.resetHandler(group, 'min', min);\n    this.resetHandler(group, 'max', max);\n  };\n  // 获取滑块的 path\n  ContinueLegend.prototype.getHandlerPath = function (handlerCfg, point) {\n    var isVertical = this.isVertical();\n    var path = [];\n    var width = handlerCfg.size;\n    var x = point.x,\n      y = point.y;\n    var height = width * HANDLER_HEIGHT_RATIO;\n    var halfWidth = width / 2;\n    var oneSixthWidth = width / 6;\n    if (isVertical) {\n      /**\n       * 竖直情况下的滑块 handler，左侧顶点是 x,y\n       *  /----|\n       *    -- |\n       *    -- |\n       *  \\----|\n       */\n      var triangleX = x + height * HANDLER_TRIANGLE_RATIO;\n      path.push(['M', x, y]);\n      path.push(['L', triangleX, y + halfWidth]);\n      path.push(['L', x + height, y + halfWidth]);\n      path.push(['L', x + height, y - halfWidth]);\n      path.push(['L', triangleX, y - halfWidth]);\n      path.push(['Z']);\n      // 绘制两条横线\n      path.push(['M', triangleX, y + oneSixthWidth]);\n      path.push(['L', x + height - 2, y + oneSixthWidth]);\n      path.push(['M', triangleX, y - oneSixthWidth]);\n      path.push(['L', x + height - 2, y - oneSixthWidth]);\n    } else {\n      /**\n       * 水平情况下的滑块，上面顶点处是 x,y\n       *  /   \\\n       * | | | |\n       * | | | |\n       *  -----\n       */\n      var triangleY = y + height * HANDLER_TRIANGLE_RATIO;\n      path.push(['M', x, y]);\n      path.push(['L', x - halfWidth, triangleY]);\n      path.push(['L', x - halfWidth, y + height]);\n      path.push(['L', x + halfWidth, y + height]);\n      path.push(['L', x + halfWidth, triangleY]);\n      path.push(['Z']);\n      // 绘制两条竖线\n      path.push(['M', x - oneSixthWidth, triangleY]);\n      path.push(['L', x - oneSixthWidth, y + height - 2]);\n      path.push(['M', x + oneSixthWidth, triangleY]);\n      path.push(['L', x + oneSixthWidth, y + height - 2]);\n    }\n    return path;\n  };\n  // 调整 handler 的位置，如果未存在则绘制\n  ContinueLegend.prototype.resetHandler = function (group, name, value) {\n    var point = this.getPointByValue(value, group);\n    var handlerCfg = this.get('handler');\n    var path = this.getHandlerPath(handlerCfg, point);\n    var id = this.getElementId(\"handler-\" + name);\n    var handlerShape = group.findById(id);\n    var isVertical = this.isVertical();\n    if (handlerShape) {\n      handlerShape.attr('path', path);\n    } else {\n      this.addShape(group, {\n        type: 'path',\n        name: \"legend-handler-\" + name,\n        draggable: true,\n        id: id,\n        attrs: __assign(__assign({\n          path: path\n        }, handlerCfg.style), {\n          cursor: isVertical ? 'ns-resize' : 'ew-resize'\n        })\n      });\n    }\n  };\n  // 当设置了 maxWidth, maxHeight 时调整 rail 的宽度，\n  // 文本的位置\n  ContinueLegend.prototype.fixedElements = function (group) {\n    var railShape = group.findById(this.getElementId('rail'));\n    var minLabel = group.findById(this.getElementId('label-min'));\n    var maxLabel = group.findById(this.getElementId('label-max'));\n    var startPoint = this.getDrawPoint();\n    if (this.isVertical()) {\n      // 横向布局\n      this.fixedVertail(minLabel, maxLabel, railShape, startPoint);\n    } else {\n      // 水平布局\n      this.fixedHorizontal(minLabel, maxLabel, railShape, startPoint);\n    }\n  };\n  ContinueLegend.prototype.fitRailLength = function (minLabelBBox, maxLabelBBox, railBBox, railShape) {\n    var isVertical = this.isVertical();\n    var lengthField = isVertical ? 'height' : 'width';\n    var labelCfg = this.get('label');\n    var labelAlign = labelCfg.align;\n    var spacing = labelCfg.spacing;\n    var maxLength = this.get(\"max\" + upperFirst(lengthField)); // get('maxWidth')\n    if (maxLength) {\n      var elementsLength = labelAlign === 'rail' ? railBBox[lengthField] + minLabelBBox[lengthField] + maxLabelBBox[lengthField] + spacing * 2 : railBBox[lengthField];\n      var diff = elementsLength - maxLength;\n      if (diff > 0) {\n        // 大于限制的长度\n        this.changeRailLength(railShape, lengthField, railBBox[lengthField] - diff);\n      }\n    }\n  };\n  ContinueLegend.prototype.changeRailLength = function (railShape, lengthField, length) {\n    var bbox = railShape.getBBox();\n    var path;\n    if (lengthField === 'height') {\n      path = this.getRailPath(bbox.x, bbox.y, bbox.width, length);\n    } else {\n      path = this.getRailPath(bbox.x, bbox.y, length, bbox.height);\n    }\n    railShape.attr('path', path);\n  };\n  ContinueLegend.prototype.changeRailPosition = function (railShape, x, y) {\n    var bbox = railShape.getBBox();\n    var path = this.getRailPath(x, y, bbox.width, bbox.height);\n    railShape.attr('path', path);\n  };\n  ContinueLegend.prototype.fixedHorizontal = function (minLabel, maxLabel, railShape, startPoint) {\n    var labelCfg = this.get('label');\n    var labelAlign = labelCfg.align;\n    var spacing = labelCfg.spacing;\n    var railBBox = railShape.getBBox();\n    var minLabelBBox = minLabel.getBBox();\n    var maxLabelBBox = maxLabel.getBBox();\n    var railHeight = railBBox.height; // 取 rail 的高度，作为高度\n    this.fitRailLength(minLabelBBox, maxLabelBBox, railBBox, railShape);\n    railBBox = railShape.getBBox();\n    if (labelAlign === 'rail') {\n      // 沿着 rail 方向\n      minLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y + railHeight / 2\n      });\n      this.changeRailPosition(railShape, startPoint.x + minLabelBBox.width + spacing, startPoint.y);\n      maxLabel.attr({\n        x: startPoint.x + minLabelBBox.width + railBBox.width + spacing * 2,\n        y: startPoint.y + railHeight / 2\n      });\n    } else if (labelAlign === 'top') {\n      minLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y\n      });\n      maxLabel.attr({\n        x: startPoint.x + railBBox.width,\n        y: startPoint.y\n      });\n      this.changeRailPosition(railShape, startPoint.x, startPoint.y + minLabelBBox.height + spacing);\n    } else {\n      this.changeRailPosition(railShape, startPoint.x, startPoint.y);\n      minLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y + railBBox.height + spacing\n      });\n      maxLabel.attr({\n        x: startPoint.x + railBBox.width,\n        y: startPoint.y + railBBox.height + spacing\n      });\n    }\n  };\n  ContinueLegend.prototype.fixedVertail = function (minLabel, maxLabel, railShape, startPoint) {\n    var labelCfg = this.get('label');\n    var labelAlign = labelCfg.align;\n    var spacing = labelCfg.spacing;\n    var railBBox = railShape.getBBox();\n    var minLabelBBox = minLabel.getBBox();\n    var maxLabelBBox = maxLabel.getBBox();\n    this.fitRailLength(minLabelBBox, maxLabelBBox, railBBox, railShape);\n    railBBox = railShape.getBBox();\n    if (labelAlign === 'rail') {\n      // 沿着 rail 方向\n      minLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y\n      });\n      this.changeRailPosition(railShape, startPoint.x, startPoint.y + minLabelBBox.height + spacing);\n      maxLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y + minLabelBBox.height + railBBox.height + spacing * 2\n      });\n    } else if (labelAlign === 'right') {\n      minLabel.attr({\n        x: startPoint.x + railBBox.width + spacing,\n        y: startPoint.y\n      });\n      this.changeRailPosition(railShape, startPoint.x, startPoint.y);\n      maxLabel.attr({\n        x: startPoint.x + railBBox.width + spacing,\n        y: startPoint.y + railBBox.height\n      });\n    } else {\n      // left\n      var maxLabelWidth = Math.max(minLabelBBox.width, maxLabelBBox.width);\n      minLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y\n      });\n      this.changeRailPosition(railShape, startPoint.x + maxLabelWidth + spacing, startPoint.y);\n      maxLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y + railBBox.height\n      });\n    }\n  };\n  return ContinueLegend;\n}(LegendBase);\nexport default ContinueLegend;","map":{"version":3,"names":["__assign","__extends","__spreadArrays","clone","isFunction","mix","upperFirst","Theme","getValueByPercent","LegendBase","HANDLER_HEIGHT_RATIO","HANDLER_TRIANGLE_RATIO","ContinueLegend","_super","apply","arguments","prototype","getDefaultCfg","cfg","call","type","min","max","value","colors","track","rail","label","handler","slidable","tip","step","maxWidth","maxHeight","defaultCfg","align","spacing","formatter","style","fontSize","fill","textColor","textBaseline","fontFamily","size","stroke","defaultLength","title","textAlign","isSlider","getValue","getCurrentValue","getRange","get","setRange","update","setValue","originValue","set","group","resetTrackClip","resetHandlers","delegateEmit","initEvent","bindSliderEvent","bindRailEvent","bindTrackEvent","drawLegendContent","drawRail","drawLabels","fixedElements","resetTrack","bindHandlersEvent","_this","on","ev","minValue","getValueByCanvasPoint","x","y","currentValue","maxValue","prePoint","preValue","curValue","curDiff","range","dValue","drawLabel","name","labelCfg","labelAlign","labelFormatter","alignAttrs","getLabelAlignAttrs","localId","addShape","id","getElementId","attrs","text","isVertical","getRailPath","w","h","railCfg","length","width","height","path","push","getTrackColor","count","color","i","percent","getTrackPath","railShape","getRailShape","attr","getClipTrackAttrs","railBBox","getRailBBox","startPoint","getPointByValue","endPoint","minX","minY","getTrackAttrs","trackCfg","container","trackId","trackShape","findById","clipShape","getClip","setClip","trackAttrs","draggable","_a","bbox","isVertcal","point","maxY","maxX","getBBox","getRailCanvasBBox","getCanvasBBox","Math","round","values","resetHandler","getHandlerPath","handlerCfg","halfWidth","oneSixthWidth","triangleX","triangleY","handlerShape","cursor","minLabel","maxLabel","getDrawPoint","fixedVertail","fixedHorizontal","fitRailLength","minLabelBBox","maxLabelBBox","lengthField","maxLength","elementsLength","diff","changeRailLength","changeRailPosition","railHeight","maxLabelWidth"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/component/esm/legend/continuous.js"],"sourcesContent":["import { __assign, __extends, __spreadArrays } from \"tslib\";\nimport { clone, isFunction, mix, upperFirst } from '@antv/util';\nimport Theme from '../util/theme';\nimport { getValueByPercent } from '../util/util';\nimport LegendBase from './base';\nvar HANDLER_HEIGHT_RATIO = 1.4;\nvar HANDLER_TRIANGLE_RATIO = 0.4;\nvar ContinueLegend = /** @class */ (function (_super) {\n    __extends(ContinueLegend, _super);\n    function ContinueLegend() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ContinueLegend.prototype.getDefaultCfg = function () {\n        var cfg = _super.prototype.getDefaultCfg.call(this);\n        return __assign(__assign({}, cfg), { type: 'continue', min: 0, max: 100, value: null, colors: [], track: {}, rail: {}, label: {}, handler: {}, slidable: true, tip: null, step: null, maxWidth: null, maxHeight: null, defaultCfg: {\n                label: {\n                    align: 'rail',\n                    spacing: 5,\n                    formatter: null,\n                    style: {\n                        fontSize: 12,\n                        fill: Theme.textColor,\n                        textBaseline: 'middle',\n                        fontFamily: Theme.fontFamily,\n                    },\n                },\n                handler: {\n                    size: 10,\n                    style: {\n                        fill: '#fff',\n                        stroke: '#333',\n                    },\n                },\n                track: {},\n                rail: {\n                    type: 'color',\n                    size: 20,\n                    defaultLength: 100,\n                    style: {\n                        fill: '#DCDEE2',\n                    },\n                },\n                title: {\n                    spacing: 5,\n                    style: {\n                        fill: Theme.textColor,\n                        fontSize: 12,\n                        textAlign: 'start',\n                        textBaseline: 'top',\n                    },\n                },\n            } });\n    };\n    ContinueLegend.prototype.isSlider = function () {\n        return true;\n    };\n    // 实现 IList 接口\n    ContinueLegend.prototype.getValue = function () {\n        return this.getCurrentValue();\n    };\n    ContinueLegend.prototype.getRange = function () {\n        return {\n            min: this.get('min'),\n            max: this.get('max'),\n        };\n    };\n    // 改变 range\n    ContinueLegend.prototype.setRange = function (min, max) {\n        this.update({\n            min: min,\n            max: max,\n        });\n    };\n    ContinueLegend.prototype.setValue = function (value) {\n        var originValue = this.getValue();\n        this.set('value', value);\n        var group = this.get('group');\n        this.resetTrackClip();\n        if (this.get('slidable')) {\n            this.resetHandlers(group);\n        }\n        this.delegateEmit('valuechanged', {\n            originValue: originValue,\n            value: value,\n        });\n    };\n    ContinueLegend.prototype.initEvent = function () {\n        var group = this.get('group');\n        this.bindSliderEvent(group);\n        this.bindRailEvent(group);\n        this.bindTrackEvent(group);\n    };\n    ContinueLegend.prototype.drawLegendContent = function (group) {\n        this.drawRail(group);\n        this.drawLabels(group);\n        this.fixedElements(group); // 调整各个图形位置，适应宽高的限制\n        this.resetTrack(group);\n        this.resetTrackClip(group);\n        if (this.get('slidable')) {\n            this.resetHandlers(group);\n        }\n    };\n    ContinueLegend.prototype.bindSliderEvent = function (group) {\n        this.bindHandlersEvent(group);\n    };\n    ContinueLegend.prototype.bindHandlersEvent = function (group) {\n        var _this = this;\n        group.on('legend-handler-min:drag', function (ev) {\n            var minValue = _this.getValueByCanvasPoint(ev.x, ev.y);\n            var currentValue = _this.getCurrentValue();\n            var maxValue = currentValue[1];\n            if (maxValue < minValue) {\n                // 如果小于最小值，则调整最小值\n                maxValue = minValue;\n            }\n            _this.setValue([minValue, maxValue]);\n        });\n        group.on('legend-handler-max:drag', function (ev) {\n            var maxValue = _this.getValueByCanvasPoint(ev.x, ev.y);\n            var currentValue = _this.getCurrentValue();\n            var minValue = currentValue[0];\n            if (minValue > maxValue) {\n                // 如果小于最小值，则调整最小值\n                minValue = maxValue;\n            }\n            _this.setValue([minValue, maxValue]);\n        });\n    };\n    ContinueLegend.prototype.bindRailEvent = function (group) { };\n    ContinueLegend.prototype.bindTrackEvent = function (group) {\n        var _this = this;\n        var prePoint = null;\n        group.on('legend-track:dragstart', function (ev) {\n            prePoint = {\n                x: ev.x,\n                y: ev.y,\n            };\n        });\n        group.on('legend-track:drag', function (ev) {\n            if (!prePoint) {\n                return;\n            }\n            var preValue = _this.getValueByCanvasPoint(prePoint.x, prePoint.y);\n            var curValue = _this.getValueByCanvasPoint(ev.x, ev.y);\n            var currentValue = _this.getCurrentValue();\n            var curDiff = currentValue[1] - currentValue[0];\n            var range = _this.getRange();\n            var dValue = curValue - preValue;\n            if (dValue < 0) {\n                // 减小, 同时未出边界\n                if (currentValue[0] + dValue > range.min) {\n                    _this.setValue([currentValue[0] + dValue, currentValue[1] + dValue]);\n                }\n                else {\n                    _this.setValue([range.min, range.min + curDiff]);\n                }\n                //  && ||\n            }\n            else if (dValue > 0) {\n                if (dValue > 0 && currentValue[1] + dValue < range.max) {\n                    _this.setValue([currentValue[0] + dValue, currentValue[1] + dValue]);\n                }\n                else {\n                    _this.setValue([range.max - curDiff, range.max]);\n                }\n            }\n            prePoint = {\n                x: ev.x,\n                y: ev.y,\n            };\n        });\n        group.on('legend-track:dragend', function (ev) {\n            prePoint = null;\n        });\n    };\n    ContinueLegend.prototype.drawLabels = function (group) {\n        this.drawLabel('min', group);\n        this.drawLabel('max', group);\n    };\n    ContinueLegend.prototype.drawLabel = function (name, group) {\n        var labelCfg = this.get('label');\n        var style = labelCfg.style;\n        var labelAlign = labelCfg.align;\n        var labelFormatter = labelCfg.formatter;\n        var value = this.get(name);\n        var alignAttrs = this.getLabelAlignAttrs(name, labelAlign);\n        var localId = \"label-\" + name;\n        this.addShape(group, {\n            type: 'text',\n            id: this.getElementId(localId),\n            name: \"legend-label-\" + name,\n            attrs: __assign(__assign({ x: 0, y: 0, text: isFunction(labelFormatter) ? labelFormatter(value) : value }, style), alignAttrs),\n        });\n    };\n    // 获取文本的对齐方式，为了自适应真实操碎了心\n    ContinueLegend.prototype.getLabelAlignAttrs = function (name, align) {\n        var isVertical = this.isVertical();\n        var textAlign = 'center';\n        var textBaseline = 'middle';\n        if (isVertical) {\n            // 垂直布局的所有的文本都左对齐\n            textAlign = 'start';\n            if (align !== 'rail') {\n                if (name === 'min') {\n                    textBaseline = 'top';\n                }\n                else {\n                    textBaseline = 'bottom';\n                }\n            }\n            else {\n                textBaseline = 'top';\n            }\n        }\n        else {\n            if (align !== 'rail') {\n                textBaseline = 'top';\n                if (name === 'min') {\n                    textAlign = 'start';\n                }\n                else {\n                    textAlign = 'end';\n                }\n            }\n            else {\n                textAlign = 'start';\n                textBaseline = 'middle';\n            }\n        }\n        return {\n            textAlign: textAlign,\n            textBaseline: textBaseline,\n        };\n    };\n    ContinueLegend.prototype.getRailPath = function (x, y, w, h) {\n        var railCfg = this.get('rail');\n        var size = railCfg.size, defaultLength = railCfg.defaultLength, type = railCfg.type;\n        var isVertical = this.isVertical();\n        var length = defaultLength;\n        var width = w;\n        var height = h;\n        if (!width) {\n            width = isVertical ? size : length;\n        }\n        if (!height) {\n            height = isVertical ? length : size;\n        }\n        var path = [];\n        if (type === 'color') {\n            path.push(['M', x, y]);\n            path.push(['L', x + width, y]);\n            path.push(['L', x + width, y + height]);\n            path.push(['L', x, y + height]);\n            path.push(['Z']);\n        }\n        else {\n            path.push(['M', x + width, y]);\n            path.push(['L', x + width, y + height]);\n            path.push(['L', x, y + height]);\n            path.push(['Z']);\n        }\n        return path;\n    };\n    ContinueLegend.prototype.drawRail = function (group) {\n        var railCfg = this.get('rail');\n        var style = railCfg.style;\n        this.addShape(group, {\n            type: 'path',\n            id: this.getElementId('rail'),\n            name: 'legend-rail',\n            attrs: __assign({ path: this.getRailPath(0, 0) }, style),\n        });\n    };\n    // 将传入的颜色转换成渐变色\n    ContinueLegend.prototype.getTrackColor = function (colors) {\n        var count = colors.length;\n        if (!count) {\n            return null;\n        }\n        if (count === 1) {\n            return colors[0];\n        }\n        var color; // 最终形态 l(0) 0:colors[0] 0.5:colors[1] 1:colors[2];\n        if (this.isVertical()) {\n            // 根据方向设置渐变方向\n            color = 'l(90)';\n        }\n        else {\n            color = 'l(0)';\n        }\n        for (var i = 0; i < count; i++) {\n            var percent = i / (count - 1);\n            color += \" \" + percent + \":\" + colors[i];\n        }\n        return color;\n    };\n    ContinueLegend.prototype.getTrackPath = function (group) {\n        var railShape = this.getRailShape(group);\n        var path = railShape.attr('path');\n        return clone(path);\n    };\n    ContinueLegend.prototype.getClipTrackAttrs = function (group) {\n        var value = this.getCurrentValue();\n        var min = value[0], max = value[1];\n        var railBBox = this.getRailBBox(group);\n        var startPoint = this.getPointByValue(min, group);\n        var endPoint = this.getPointByValue(max, group);\n        var isVertical = this.isVertical();\n        var x;\n        var y;\n        var width;\n        var height;\n        if (isVertical) {\n            x = railBBox.minX;\n            y = startPoint.y;\n            width = railBBox.width;\n            height = endPoint.y - startPoint.y;\n        }\n        else {\n            x = startPoint.x;\n            y = railBBox.minY;\n            width = endPoint.x - startPoint.x;\n            height = railBBox.height;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n        };\n    };\n    // 获取 track 的属性，由 path 和 颜色构成\n    ContinueLegend.prototype.getTrackAttrs = function (group) {\n        var trackCfg = this.get('track');\n        var colors = this.get('colors');\n        var path = this.getTrackPath(group);\n        return mix({\n            path: path,\n            fill: this.getTrackColor(colors),\n        }, trackCfg.style);\n    };\n    ContinueLegend.prototype.resetTrackClip = function (group) {\n        var container = group || this.get('group');\n        var trackId = this.getElementId('track');\n        var trackShape = container.findById(trackId);\n        var clipShape = trackShape.getClip();\n        var attrs = this.getClipTrackAttrs(group);\n        if (!clipShape) {\n            trackShape.setClip({\n                type: 'rect',\n                attrs: attrs,\n            });\n        }\n        else {\n            clipShape.attr(attrs);\n        }\n    };\n    ContinueLegend.prototype.resetTrack = function (group) {\n        var trackId = this.getElementId('track');\n        var trackShape = group.findById(trackId);\n        var trackAttrs = this.getTrackAttrs(group);\n        if (trackShape) {\n            trackShape.attr(trackAttrs);\n        }\n        else {\n            this.addShape(group, {\n                type: 'path',\n                id: trackId,\n                draggable: this.get('slidable'),\n                name: 'legend-track',\n                attrs: trackAttrs,\n            });\n        }\n    };\n    ContinueLegend.prototype.getPointByValue = function (value, group) {\n        var _a = this.getRange(), min = _a.min, max = _a.max;\n        var percent = (value - min) / (max - min);\n        var bbox = this.getRailBBox(group);\n        var isVertcal = this.isVertical();\n        var point = { x: 0, y: 0 };\n        if (isVertcal) {\n            point.x = bbox.minX + bbox.width / 2;\n            point.y = getValueByPercent(bbox.minY, bbox.maxY, percent);\n        }\n        else {\n            point.x = getValueByPercent(bbox.minX, bbox.maxX, percent);\n            point.y = bbox.minY + bbox.height / 2;\n        }\n        return point;\n    };\n    ContinueLegend.prototype.getRailShape = function (group) {\n        var container = group || this.get('group');\n        return container.findById(this.getElementId('rail'));\n    };\n    // 获取滑轨的宽高信息\n    ContinueLegend.prototype.getRailBBox = function (group) {\n        var railShape = this.getRailShape(group);\n        var bbox = railShape.getBBox();\n        return bbox;\n    };\n    ContinueLegend.prototype.getRailCanvasBBox = function () {\n        var container = this.get('group');\n        var railShape = container.findById(this.getElementId('rail'));\n        var bbox = railShape.getCanvasBBox();\n        return bbox;\n    };\n    // 是否垂直\n    ContinueLegend.prototype.isVertical = function () {\n        return this.get('layout') === 'vertical';\n    };\n    // 用于交互时\n    ContinueLegend.prototype.getValueByCanvasPoint = function (x, y) {\n        var _a = this.getRange(), min = _a.min, max = _a.max;\n        var bbox = this.getRailCanvasBBox(); // 因为 x, y 是画布坐标\n        var isVertcal = this.isVertical();\n        var step = this.get('step');\n        var percent;\n        if (isVertcal) {\n            // 垂直时计算 y\n            percent = (y - bbox.minY) / bbox.height;\n        }\n        else {\n            // 水平时计算 x\n            percent = (x - bbox.minX) / bbox.width;\n        }\n        var value = getValueByPercent(min, max, percent);\n        if (step) {\n            var count = Math.round((value - min) / step);\n            value = min + count * step; // 移动到最近的\n        }\n        if (value > max) {\n            value = max;\n        }\n        if (value < min) {\n            value = min;\n        }\n        return value;\n    };\n    // 当前选中的范围\n    ContinueLegend.prototype.getCurrentValue = function () {\n        var value = this.get('value');\n        if (!value) {\n            var values = this.get('values');\n            if (!values) {\n                return [this.get('min'), this.get('max')];\n            }\n            // 如果没有定义，取最大范围  最小值 为 values 中的最小值， 如果最小值 超过了 定义的最大值 则 做限制  最大值 反之\n            return [Math.max(Math.min.apply(Math, __spreadArrays(values, [this.get('max')])), this.get('min')), Math.min(Math.max.apply(Math, __spreadArrays(values, [this.get('min')])), this.get('max'))];\n        }\n        return value;\n    };\n    // 重置滑块 handler\n    ContinueLegend.prototype.resetHandlers = function (group) {\n        var currentValue = this.getCurrentValue();\n        var min = currentValue[0], max = currentValue[1];\n        this.resetHandler(group, 'min', min);\n        this.resetHandler(group, 'max', max);\n    };\n    // 获取滑块的 path\n    ContinueLegend.prototype.getHandlerPath = function (handlerCfg, point) {\n        var isVertical = this.isVertical();\n        var path = [];\n        var width = handlerCfg.size;\n        var x = point.x, y = point.y;\n        var height = width * HANDLER_HEIGHT_RATIO;\n        var halfWidth = width / 2;\n        var oneSixthWidth = width / 6;\n        if (isVertical) {\n            /**\n             * 竖直情况下的滑块 handler，左侧顶点是 x,y\n             *  /----|\n             *    -- |\n             *    -- |\n             *  \\----|\n             */\n            var triangleX = x + height * HANDLER_TRIANGLE_RATIO;\n            path.push(['M', x, y]);\n            path.push(['L', triangleX, y + halfWidth]);\n            path.push(['L', x + height, y + halfWidth]);\n            path.push(['L', x + height, y - halfWidth]);\n            path.push(['L', triangleX, y - halfWidth]);\n            path.push(['Z']);\n            // 绘制两条横线\n            path.push(['M', triangleX, y + oneSixthWidth]);\n            path.push(['L', x + height - 2, y + oneSixthWidth]);\n            path.push(['M', triangleX, y - oneSixthWidth]);\n            path.push(['L', x + height - 2, y - oneSixthWidth]);\n        }\n        else {\n            /**\n             * 水平情况下的滑块，上面顶点处是 x,y\n             *  /   \\\n             * | | | |\n             * | | | |\n             *  -----\n             */\n            var triangleY = y + height * HANDLER_TRIANGLE_RATIO;\n            path.push(['M', x, y]);\n            path.push(['L', x - halfWidth, triangleY]);\n            path.push(['L', x - halfWidth, y + height]);\n            path.push(['L', x + halfWidth, y + height]);\n            path.push(['L', x + halfWidth, triangleY]);\n            path.push(['Z']);\n            // 绘制两条竖线\n            path.push(['M', x - oneSixthWidth, triangleY]);\n            path.push(['L', x - oneSixthWidth, y + height - 2]);\n            path.push(['M', x + oneSixthWidth, triangleY]);\n            path.push(['L', x + oneSixthWidth, y + height - 2]);\n        }\n        return path;\n    };\n    // 调整 handler 的位置，如果未存在则绘制\n    ContinueLegend.prototype.resetHandler = function (group, name, value) {\n        var point = this.getPointByValue(value, group);\n        var handlerCfg = this.get('handler');\n        var path = this.getHandlerPath(handlerCfg, point);\n        var id = this.getElementId(\"handler-\" + name);\n        var handlerShape = group.findById(id);\n        var isVertical = this.isVertical();\n        if (handlerShape) {\n            handlerShape.attr('path', path);\n        }\n        else {\n            this.addShape(group, {\n                type: 'path',\n                name: \"legend-handler-\" + name,\n                draggable: true,\n                id: id,\n                attrs: __assign(__assign({ path: path }, handlerCfg.style), { cursor: isVertical ? 'ns-resize' : 'ew-resize' }),\n            });\n        }\n    };\n    // 当设置了 maxWidth, maxHeight 时调整 rail 的宽度，\n    // 文本的位置\n    ContinueLegend.prototype.fixedElements = function (group) {\n        var railShape = group.findById(this.getElementId('rail'));\n        var minLabel = group.findById(this.getElementId('label-min'));\n        var maxLabel = group.findById(this.getElementId('label-max'));\n        var startPoint = this.getDrawPoint();\n        if (this.isVertical()) {\n            // 横向布局\n            this.fixedVertail(minLabel, maxLabel, railShape, startPoint);\n        }\n        else {\n            // 水平布局\n            this.fixedHorizontal(minLabel, maxLabel, railShape, startPoint);\n        }\n    };\n    ContinueLegend.prototype.fitRailLength = function (minLabelBBox, maxLabelBBox, railBBox, railShape) {\n        var isVertical = this.isVertical();\n        var lengthField = isVertical ? 'height' : 'width';\n        var labelCfg = this.get('label');\n        var labelAlign = labelCfg.align;\n        var spacing = labelCfg.spacing;\n        var maxLength = this.get(\"max\" + upperFirst(lengthField)); // get('maxWidth')\n        if (maxLength) {\n            var elementsLength = labelAlign === 'rail'\n                ? railBBox[lengthField] + minLabelBBox[lengthField] + maxLabelBBox[lengthField] + spacing * 2\n                : railBBox[lengthField];\n            var diff = elementsLength - maxLength;\n            if (diff > 0) {\n                // 大于限制的长度\n                this.changeRailLength(railShape, lengthField, railBBox[lengthField] - diff);\n            }\n        }\n    };\n    ContinueLegend.prototype.changeRailLength = function (railShape, lengthField, length) {\n        var bbox = railShape.getBBox();\n        var path;\n        if (lengthField === 'height') {\n            path = this.getRailPath(bbox.x, bbox.y, bbox.width, length);\n        }\n        else {\n            path = this.getRailPath(bbox.x, bbox.y, length, bbox.height);\n        }\n        railShape.attr('path', path);\n    };\n    ContinueLegend.prototype.changeRailPosition = function (railShape, x, y) {\n        var bbox = railShape.getBBox();\n        var path = this.getRailPath(x, y, bbox.width, bbox.height);\n        railShape.attr('path', path);\n    };\n    ContinueLegend.prototype.fixedHorizontal = function (minLabel, maxLabel, railShape, startPoint) {\n        var labelCfg = this.get('label');\n        var labelAlign = labelCfg.align;\n        var spacing = labelCfg.spacing;\n        var railBBox = railShape.getBBox();\n        var minLabelBBox = minLabel.getBBox();\n        var maxLabelBBox = maxLabel.getBBox();\n        var railHeight = railBBox.height; // 取 rail 的高度，作为高度\n        this.fitRailLength(minLabelBBox, maxLabelBBox, railBBox, railShape);\n        railBBox = railShape.getBBox();\n        if (labelAlign === 'rail') {\n            // 沿着 rail 方向\n            minLabel.attr({\n                x: startPoint.x,\n                y: startPoint.y + railHeight / 2,\n            });\n            this.changeRailPosition(railShape, startPoint.x + minLabelBBox.width + spacing, startPoint.y);\n            maxLabel.attr({\n                x: startPoint.x + minLabelBBox.width + railBBox.width + spacing * 2,\n                y: startPoint.y + railHeight / 2,\n            });\n        }\n        else if (labelAlign === 'top') {\n            minLabel.attr({\n                x: startPoint.x,\n                y: startPoint.y,\n            });\n            maxLabel.attr({\n                x: startPoint.x + railBBox.width,\n                y: startPoint.y,\n            });\n            this.changeRailPosition(railShape, startPoint.x, startPoint.y + minLabelBBox.height + spacing);\n        }\n        else {\n            this.changeRailPosition(railShape, startPoint.x, startPoint.y);\n            minLabel.attr({\n                x: startPoint.x,\n                y: startPoint.y + railBBox.height + spacing,\n            });\n            maxLabel.attr({\n                x: startPoint.x + railBBox.width,\n                y: startPoint.y + railBBox.height + spacing,\n            });\n        }\n    };\n    ContinueLegend.prototype.fixedVertail = function (minLabel, maxLabel, railShape, startPoint) {\n        var labelCfg = this.get('label');\n        var labelAlign = labelCfg.align;\n        var spacing = labelCfg.spacing;\n        var railBBox = railShape.getBBox();\n        var minLabelBBox = minLabel.getBBox();\n        var maxLabelBBox = maxLabel.getBBox();\n        this.fitRailLength(minLabelBBox, maxLabelBBox, railBBox, railShape);\n        railBBox = railShape.getBBox();\n        if (labelAlign === 'rail') {\n            // 沿着 rail 方向\n            minLabel.attr({\n                x: startPoint.x,\n                y: startPoint.y,\n            });\n            this.changeRailPosition(railShape, startPoint.x, startPoint.y + minLabelBBox.height + spacing);\n            maxLabel.attr({\n                x: startPoint.x,\n                y: startPoint.y + minLabelBBox.height + railBBox.height + spacing * 2,\n            });\n        }\n        else if (labelAlign === 'right') {\n            minLabel.attr({\n                x: startPoint.x + railBBox.width + spacing,\n                y: startPoint.y,\n            });\n            this.changeRailPosition(railShape, startPoint.x, startPoint.y);\n            maxLabel.attr({\n                x: startPoint.x + railBBox.width + spacing,\n                y: startPoint.y + railBBox.height,\n            });\n        }\n        else {\n            // left\n            var maxLabelWidth = Math.max(minLabelBBox.width, maxLabelBBox.width);\n            minLabel.attr({\n                x: startPoint.x,\n                y: startPoint.y,\n            });\n            this.changeRailPosition(railShape, startPoint.x + maxLabelWidth + spacing, startPoint.y);\n            maxLabel.attr({\n                x: startPoint.x,\n                y: startPoint.y + railBBox.height,\n            });\n        }\n    };\n    return ContinueLegend;\n}(LegendBase));\nexport default ContinueLegend;\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,cAAc,QAAQ,OAAO;AAC3D,SAASC,KAAK,EAAEC,UAAU,EAAEC,GAAG,EAAEC,UAAU,QAAQ,YAAY;AAC/D,OAAOC,KAAK,MAAM,eAAe;AACjC,SAASC,iBAAiB,QAAQ,cAAc;AAChD,OAAOC,UAAU,MAAM,QAAQ;AAC/B,IAAIC,oBAAoB,GAAG,GAAG;AAC9B,IAAIC,sBAAsB,GAAG,GAAG;AAChC,IAAIC,cAAc,GAAG,aAAe,UAAUC,MAAM,EAAE;EAClDZ,SAAS,CAACW,cAAc,EAAEC,MAAM,CAAC;EACjC,SAASD,cAAcA,CAAA,EAAG;IACtB,OAAOC,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACC,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,IAAI,IAAI;EACnE;EACAH,cAAc,CAACI,SAAS,CAACC,aAAa,GAAG,YAAY;IACjD,IAAIC,GAAG,GAAGL,MAAM,CAACG,SAAS,CAACC,aAAa,CAACE,IAAI,CAAC,IAAI,CAAC;IACnD,OAAOnB,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEkB,GAAG,CAAC,EAAE;MAAEE,IAAI,EAAE,UAAU;MAAEC,GAAG,EAAE,CAAC;MAAEC,GAAG,EAAE,GAAG;MAAEC,KAAK,EAAE,IAAI;MAAEC,MAAM,EAAE,EAAE;MAAEC,KAAK,EAAE,CAAC,CAAC;MAAEC,IAAI,EAAE,CAAC,CAAC;MAAEC,KAAK,EAAE,CAAC,CAAC;MAAEC,OAAO,EAAE,CAAC,CAAC;MAAEC,QAAQ,EAAE,IAAI;MAAEC,GAAG,EAAE,IAAI;MAAEC,IAAI,EAAE,IAAI;MAAEC,QAAQ,EAAE,IAAI;MAAEC,SAAS,EAAE,IAAI;MAAEC,UAAU,EAAE;QAC3NP,KAAK,EAAE;UACHQ,KAAK,EAAE,MAAM;UACbC,OAAO,EAAE,CAAC;UACVC,SAAS,EAAE,IAAI;UACfC,KAAK,EAAE;YACHC,QAAQ,EAAE,EAAE;YACZC,IAAI,EAAEjC,KAAK,CAACkC,SAAS;YACrBC,YAAY,EAAE,QAAQ;YACtBC,UAAU,EAAEpC,KAAK,CAACoC;UACtB;QACJ,CAAC;QACDf,OAAO,EAAE;UACLgB,IAAI,EAAE,EAAE;UACRN,KAAK,EAAE;YACHE,IAAI,EAAE,MAAM;YACZK,MAAM,EAAE;UACZ;QACJ,CAAC;QACDpB,KAAK,EAAE,CAAC,CAAC;QACTC,IAAI,EAAE;UACFN,IAAI,EAAE,OAAO;UACbwB,IAAI,EAAE,EAAE;UACRE,aAAa,EAAE,GAAG;UAClBR,KAAK,EAAE;YACHE,IAAI,EAAE;UACV;QACJ,CAAC;QACDO,KAAK,EAAE;UACHX,OAAO,EAAE,CAAC;UACVE,KAAK,EAAE;YACHE,IAAI,EAAEjC,KAAK,CAACkC,SAAS;YACrBF,QAAQ,EAAE,EAAE;YACZS,SAAS,EAAE,OAAO;YAClBN,YAAY,EAAE;UAClB;QACJ;MACJ;IAAE,CAAC,CAAC;EACZ,CAAC;EACD9B,cAAc,CAACI,SAAS,CAACiC,QAAQ,GAAG,YAAY;IAC5C,OAAO,IAAI;EACf,CAAC;EACD;EACArC,cAAc,CAACI,SAAS,CAACkC,QAAQ,GAAG,YAAY;IAC5C,OAAO,IAAI,CAACC,eAAe,CAAC,CAAC;EACjC,CAAC;EACDvC,cAAc,CAACI,SAAS,CAACoC,QAAQ,GAAG,YAAY;IAC5C,OAAO;MACH/B,GAAG,EAAE,IAAI,CAACgC,GAAG,CAAC,KAAK,CAAC;MACpB/B,GAAG,EAAE,IAAI,CAAC+B,GAAG,CAAC,KAAK;IACvB,CAAC;EACL,CAAC;EACD;EACAzC,cAAc,CAACI,SAAS,CAACsC,QAAQ,GAAG,UAAUjC,GAAG,EAAEC,GAAG,EAAE;IACpD,IAAI,CAACiC,MAAM,CAAC;MACRlC,GAAG,EAAEA,GAAG;MACRC,GAAG,EAAEA;IACT,CAAC,CAAC;EACN,CAAC;EACDV,cAAc,CAACI,SAAS,CAACwC,QAAQ,GAAG,UAAUjC,KAAK,EAAE;IACjD,IAAIkC,WAAW,GAAG,IAAI,CAACP,QAAQ,CAAC,CAAC;IACjC,IAAI,CAACQ,GAAG,CAAC,OAAO,EAAEnC,KAAK,CAAC;IACxB,IAAIoC,KAAK,GAAG,IAAI,CAACN,GAAG,CAAC,OAAO,CAAC;IAC7B,IAAI,CAACO,cAAc,CAAC,CAAC;IACrB,IAAI,IAAI,CAACP,GAAG,CAAC,UAAU,CAAC,EAAE;MACtB,IAAI,CAACQ,aAAa,CAACF,KAAK,CAAC;IAC7B;IACA,IAAI,CAACG,YAAY,CAAC,cAAc,EAAE;MAC9BL,WAAW,EAAEA,WAAW;MACxBlC,KAAK,EAAEA;IACX,CAAC,CAAC;EACN,CAAC;EACDX,cAAc,CAACI,SAAS,CAAC+C,SAAS,GAAG,YAAY;IAC7C,IAAIJ,KAAK,GAAG,IAAI,CAACN,GAAG,CAAC,OAAO,CAAC;IAC7B,IAAI,CAACW,eAAe,CAACL,KAAK,CAAC;IAC3B,IAAI,CAACM,aAAa,CAACN,KAAK,CAAC;IACzB,IAAI,CAACO,cAAc,CAACP,KAAK,CAAC;EAC9B,CAAC;EACD/C,cAAc,CAACI,SAAS,CAACmD,iBAAiB,GAAG,UAAUR,KAAK,EAAE;IAC1D,IAAI,CAACS,QAAQ,CAACT,KAAK,CAAC;IACpB,IAAI,CAACU,UAAU,CAACV,KAAK,CAAC;IACtB,IAAI,CAACW,aAAa,CAACX,KAAK,CAAC,CAAC,CAAC;IAC3B,IAAI,CAACY,UAAU,CAACZ,KAAK,CAAC;IACtB,IAAI,CAACC,cAAc,CAACD,KAAK,CAAC;IAC1B,IAAI,IAAI,CAACN,GAAG,CAAC,UAAU,CAAC,EAAE;MACtB,IAAI,CAACQ,aAAa,CAACF,KAAK,CAAC;IAC7B;EACJ,CAAC;EACD/C,cAAc,CAACI,SAAS,CAACgD,eAAe,GAAG,UAAUL,KAAK,EAAE;IACxD,IAAI,CAACa,iBAAiB,CAACb,KAAK,CAAC;EACjC,CAAC;EACD/C,cAAc,CAACI,SAAS,CAACwD,iBAAiB,GAAG,UAAUb,KAAK,EAAE;IAC1D,IAAIc,KAAK,GAAG,IAAI;IAChBd,KAAK,CAACe,EAAE,CAAC,yBAAyB,EAAE,UAAUC,EAAE,EAAE;MAC9C,IAAIC,QAAQ,GAAGH,KAAK,CAACI,qBAAqB,CAACF,EAAE,CAACG,CAAC,EAAEH,EAAE,CAACI,CAAC,CAAC;MACtD,IAAIC,YAAY,GAAGP,KAAK,CAACtB,eAAe,CAAC,CAAC;MAC1C,IAAI8B,QAAQ,GAAGD,YAAY,CAAC,CAAC,CAAC;MAC9B,IAAIC,QAAQ,GAAGL,QAAQ,EAAE;QACrB;QACAK,QAAQ,GAAGL,QAAQ;MACvB;MACAH,KAAK,CAACjB,QAAQ,CAAC,CAACoB,QAAQ,EAAEK,QAAQ,CAAC,CAAC;IACxC,CAAC,CAAC;IACFtB,KAAK,CAACe,EAAE,CAAC,yBAAyB,EAAE,UAAUC,EAAE,EAAE;MAC9C,IAAIM,QAAQ,GAAGR,KAAK,CAACI,qBAAqB,CAACF,EAAE,CAACG,CAAC,EAAEH,EAAE,CAACI,CAAC,CAAC;MACtD,IAAIC,YAAY,GAAGP,KAAK,CAACtB,eAAe,CAAC,CAAC;MAC1C,IAAIyB,QAAQ,GAAGI,YAAY,CAAC,CAAC,CAAC;MAC9B,IAAIJ,QAAQ,GAAGK,QAAQ,EAAE;QACrB;QACAL,QAAQ,GAAGK,QAAQ;MACvB;MACAR,KAAK,CAACjB,QAAQ,CAAC,CAACoB,QAAQ,EAAEK,QAAQ,CAAC,CAAC;IACxC,CAAC,CAAC;EACN,CAAC;EACDrE,cAAc,CAACI,SAAS,CAACiD,aAAa,GAAG,UAAUN,KAAK,EAAE,CAAE,CAAC;EAC7D/C,cAAc,CAACI,SAAS,CAACkD,cAAc,GAAG,UAAUP,KAAK,EAAE;IACvD,IAAIc,KAAK,GAAG,IAAI;IAChB,IAAIS,QAAQ,GAAG,IAAI;IACnBvB,KAAK,CAACe,EAAE,CAAC,wBAAwB,EAAE,UAAUC,EAAE,EAAE;MAC7CO,QAAQ,GAAG;QACPJ,CAAC,EAAEH,EAAE,CAACG,CAAC;QACPC,CAAC,EAAEJ,EAAE,CAACI;MACV,CAAC;IACL,CAAC,CAAC;IACFpB,KAAK,CAACe,EAAE,CAAC,mBAAmB,EAAE,UAAUC,EAAE,EAAE;MACxC,IAAI,CAACO,QAAQ,EAAE;QACX;MACJ;MACA,IAAIC,QAAQ,GAAGV,KAAK,CAACI,qBAAqB,CAACK,QAAQ,CAACJ,CAAC,EAAEI,QAAQ,CAACH,CAAC,CAAC;MAClE,IAAIK,QAAQ,GAAGX,KAAK,CAACI,qBAAqB,CAACF,EAAE,CAACG,CAAC,EAAEH,EAAE,CAACI,CAAC,CAAC;MACtD,IAAIC,YAAY,GAAGP,KAAK,CAACtB,eAAe,CAAC,CAAC;MAC1C,IAAIkC,OAAO,GAAGL,YAAY,CAAC,CAAC,CAAC,GAAGA,YAAY,CAAC,CAAC,CAAC;MAC/C,IAAIM,KAAK,GAAGb,KAAK,CAACrB,QAAQ,CAAC,CAAC;MAC5B,IAAImC,MAAM,GAAGH,QAAQ,GAAGD,QAAQ;MAChC,IAAII,MAAM,GAAG,CAAC,EAAE;QACZ;QACA,IAAIP,YAAY,CAAC,CAAC,CAAC,GAAGO,MAAM,GAAGD,KAAK,CAACjE,GAAG,EAAE;UACtCoD,KAAK,CAACjB,QAAQ,CAAC,CAACwB,YAAY,CAAC,CAAC,CAAC,GAAGO,MAAM,EAAEP,YAAY,CAAC,CAAC,CAAC,GAAGO,MAAM,CAAC,CAAC;QACxE,CAAC,MACI;UACDd,KAAK,CAACjB,QAAQ,CAAC,CAAC8B,KAAK,CAACjE,GAAG,EAAEiE,KAAK,CAACjE,GAAG,GAAGgE,OAAO,CAAC,CAAC;QACpD;QACA;MACJ,CAAC,MACI,IAAIE,MAAM,GAAG,CAAC,EAAE;QACjB,IAAIA,MAAM,GAAG,CAAC,IAAIP,YAAY,CAAC,CAAC,CAAC,GAAGO,MAAM,GAAGD,KAAK,CAAChE,GAAG,EAAE;UACpDmD,KAAK,CAACjB,QAAQ,CAAC,CAACwB,YAAY,CAAC,CAAC,CAAC,GAAGO,MAAM,EAAEP,YAAY,CAAC,CAAC,CAAC,GAAGO,MAAM,CAAC,CAAC;QACxE,CAAC,MACI;UACDd,KAAK,CAACjB,QAAQ,CAAC,CAAC8B,KAAK,CAAChE,GAAG,GAAG+D,OAAO,EAAEC,KAAK,CAAChE,GAAG,CAAC,CAAC;QACpD;MACJ;MACA4D,QAAQ,GAAG;QACPJ,CAAC,EAAEH,EAAE,CAACG,CAAC;QACPC,CAAC,EAAEJ,EAAE,CAACI;MACV,CAAC;IACL,CAAC,CAAC;IACFpB,KAAK,CAACe,EAAE,CAAC,sBAAsB,EAAE,UAAUC,EAAE,EAAE;MAC3CO,QAAQ,GAAG,IAAI;IACnB,CAAC,CAAC;EACN,CAAC;EACDtE,cAAc,CAACI,SAAS,CAACqD,UAAU,GAAG,UAAUV,KAAK,EAAE;IACnD,IAAI,CAAC6B,SAAS,CAAC,KAAK,EAAE7B,KAAK,CAAC;IAC5B,IAAI,CAAC6B,SAAS,CAAC,KAAK,EAAE7B,KAAK,CAAC;EAChC,CAAC;EACD/C,cAAc,CAACI,SAAS,CAACwE,SAAS,GAAG,UAAUC,IAAI,EAAE9B,KAAK,EAAE;IACxD,IAAI+B,QAAQ,GAAG,IAAI,CAACrC,GAAG,CAAC,OAAO,CAAC;IAChC,IAAIf,KAAK,GAAGoD,QAAQ,CAACpD,KAAK;IAC1B,IAAIqD,UAAU,GAAGD,QAAQ,CAACvD,KAAK;IAC/B,IAAIyD,cAAc,GAAGF,QAAQ,CAACrD,SAAS;IACvC,IAAId,KAAK,GAAG,IAAI,CAAC8B,GAAG,CAACoC,IAAI,CAAC;IAC1B,IAAII,UAAU,GAAG,IAAI,CAACC,kBAAkB,CAACL,IAAI,EAAEE,UAAU,CAAC;IAC1D,IAAII,OAAO,GAAG,QAAQ,GAAGN,IAAI;IAC7B,IAAI,CAACO,QAAQ,CAACrC,KAAK,EAAE;MACjBvC,IAAI,EAAE,MAAM;MACZ6E,EAAE,EAAE,IAAI,CAACC,YAAY,CAACH,OAAO,CAAC;MAC9BN,IAAI,EAAE,eAAe,GAAGA,IAAI;MAC5BU,KAAK,EAAEnG,QAAQ,CAACA,QAAQ,CAAC;QAAE8E,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE,CAAC;QAAEqB,IAAI,EAAEhG,UAAU,CAACwF,cAAc,CAAC,GAAGA,cAAc,CAACrE,KAAK,CAAC,GAAGA;MAAM,CAAC,EAAEe,KAAK,CAAC,EAAEuD,UAAU;IACjI,CAAC,CAAC;EACN,CAAC;EACD;EACAjF,cAAc,CAACI,SAAS,CAAC8E,kBAAkB,GAAG,UAAUL,IAAI,EAAEtD,KAAK,EAAE;IACjE,IAAIkE,UAAU,GAAG,IAAI,CAACA,UAAU,CAAC,CAAC;IAClC,IAAIrD,SAAS,GAAG,QAAQ;IACxB,IAAIN,YAAY,GAAG,QAAQ;IAC3B,IAAI2D,UAAU,EAAE;MACZ;MACArD,SAAS,GAAG,OAAO;MACnB,IAAIb,KAAK,KAAK,MAAM,EAAE;QAClB,IAAIsD,IAAI,KAAK,KAAK,EAAE;UAChB/C,YAAY,GAAG,KAAK;QACxB,CAAC,MACI;UACDA,YAAY,GAAG,QAAQ;QAC3B;MACJ,CAAC,MACI;QACDA,YAAY,GAAG,KAAK;MACxB;IACJ,CAAC,MACI;MACD,IAAIP,KAAK,KAAK,MAAM,EAAE;QAClBO,YAAY,GAAG,KAAK;QACpB,IAAI+C,IAAI,KAAK,KAAK,EAAE;UAChBzC,SAAS,GAAG,OAAO;QACvB,CAAC,MACI;UACDA,SAAS,GAAG,KAAK;QACrB;MACJ,CAAC,MACI;QACDA,SAAS,GAAG,OAAO;QACnBN,YAAY,GAAG,QAAQ;MAC3B;IACJ;IACA,OAAO;MACHM,SAAS,EAAEA,SAAS;MACpBN,YAAY,EAAEA;IAClB,CAAC;EACL,CAAC;EACD9B,cAAc,CAACI,SAAS,CAACsF,WAAW,GAAG,UAAUxB,CAAC,EAAEC,CAAC,EAAEwB,CAAC,EAAEC,CAAC,EAAE;IACzD,IAAIC,OAAO,GAAG,IAAI,CAACpD,GAAG,CAAC,MAAM,CAAC;IAC9B,IAAIT,IAAI,GAAG6D,OAAO,CAAC7D,IAAI;MAAEE,aAAa,GAAG2D,OAAO,CAAC3D,aAAa;MAAE1B,IAAI,GAAGqF,OAAO,CAACrF,IAAI;IACnF,IAAIiF,UAAU,GAAG,IAAI,CAACA,UAAU,CAAC,CAAC;IAClC,IAAIK,MAAM,GAAG5D,aAAa;IAC1B,IAAI6D,KAAK,GAAGJ,CAAC;IACb,IAAIK,MAAM,GAAGJ,CAAC;IACd,IAAI,CAACG,KAAK,EAAE;MACRA,KAAK,GAAGN,UAAU,GAAGzD,IAAI,GAAG8D,MAAM;IACtC;IACA,IAAI,CAACE,MAAM,EAAE;MACTA,MAAM,GAAGP,UAAU,GAAGK,MAAM,GAAG9D,IAAI;IACvC;IACA,IAAIiE,IAAI,GAAG,EAAE;IACb,IAAIzF,IAAI,KAAK,OAAO,EAAE;MAClByF,IAAI,CAACC,IAAI,CAAC,CAAC,GAAG,EAAEhC,CAAC,EAAEC,CAAC,CAAC,CAAC;MACtB8B,IAAI,CAACC,IAAI,CAAC,CAAC,GAAG,EAAEhC,CAAC,GAAG6B,KAAK,EAAE5B,CAAC,CAAC,CAAC;MAC9B8B,IAAI,CAACC,IAAI,CAAC,CAAC,GAAG,EAAEhC,CAAC,GAAG6B,KAAK,EAAE5B,CAAC,GAAG6B,MAAM,CAAC,CAAC;MACvCC,IAAI,CAACC,IAAI,CAAC,CAAC,GAAG,EAAEhC,CAAC,EAAEC,CAAC,GAAG6B,MAAM,CAAC,CAAC;MAC/BC,IAAI,CAACC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACpB,CAAC,MACI;MACDD,IAAI,CAACC,IAAI,CAAC,CAAC,GAAG,EAAEhC,CAAC,GAAG6B,KAAK,EAAE5B,CAAC,CAAC,CAAC;MAC9B8B,IAAI,CAACC,IAAI,CAAC,CAAC,GAAG,EAAEhC,CAAC,GAAG6B,KAAK,EAAE5B,CAAC,GAAG6B,MAAM,CAAC,CAAC;MACvCC,IAAI,CAACC,IAAI,CAAC,CAAC,GAAG,EAAEhC,CAAC,EAAEC,CAAC,GAAG6B,MAAM,CAAC,CAAC;MAC/BC,IAAI,CAACC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACpB;IACA,OAAOD,IAAI;EACf,CAAC;EACDjG,cAAc,CAACI,SAAS,CAACoD,QAAQ,GAAG,UAAUT,KAAK,EAAE;IACjD,IAAI8C,OAAO,GAAG,IAAI,CAACpD,GAAG,CAAC,MAAM,CAAC;IAC9B,IAAIf,KAAK,GAAGmE,OAAO,CAACnE,KAAK;IACzB,IAAI,CAAC0D,QAAQ,CAACrC,KAAK,EAAE;MACjBvC,IAAI,EAAE,MAAM;MACZ6E,EAAE,EAAE,IAAI,CAACC,YAAY,CAAC,MAAM,CAAC;MAC7BT,IAAI,EAAE,aAAa;MACnBU,KAAK,EAAEnG,QAAQ,CAAC;QAAE6G,IAAI,EAAE,IAAI,CAACP,WAAW,CAAC,CAAC,EAAE,CAAC;MAAE,CAAC,EAAEhE,KAAK;IAC3D,CAAC,CAAC;EACN,CAAC;EACD;EACA1B,cAAc,CAACI,SAAS,CAAC+F,aAAa,GAAG,UAAUvF,MAAM,EAAE;IACvD,IAAIwF,KAAK,GAAGxF,MAAM,CAACkF,MAAM;IACzB,IAAI,CAACM,KAAK,EAAE;MACR,OAAO,IAAI;IACf;IACA,IAAIA,KAAK,KAAK,CAAC,EAAE;MACb,OAAOxF,MAAM,CAAC,CAAC,CAAC;IACpB;IACA,IAAIyF,KAAK,CAAC,CAAC;IACX,IAAI,IAAI,CAACZ,UAAU,CAAC,CAAC,EAAE;MACnB;MACAY,KAAK,GAAG,OAAO;IACnB,CAAC,MACI;MACDA,KAAK,GAAG,MAAM;IAClB;IACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,EAAEE,CAAC,EAAE,EAAE;MAC5B,IAAIC,OAAO,GAAGD,CAAC,IAAIF,KAAK,GAAG,CAAC,CAAC;MAC7BC,KAAK,IAAI,GAAG,GAAGE,OAAO,GAAG,GAAG,GAAG3F,MAAM,CAAC0F,CAAC,CAAC;IAC5C;IACA,OAAOD,KAAK;EAChB,CAAC;EACDrG,cAAc,CAACI,SAAS,CAACoG,YAAY,GAAG,UAAUzD,KAAK,EAAE;IACrD,IAAI0D,SAAS,GAAG,IAAI,CAACC,YAAY,CAAC3D,KAAK,CAAC;IACxC,IAAIkD,IAAI,GAAGQ,SAAS,CAACE,IAAI,CAAC,MAAM,CAAC;IACjC,OAAOpH,KAAK,CAAC0G,IAAI,CAAC;EACtB,CAAC;EACDjG,cAAc,CAACI,SAAS,CAACwG,iBAAiB,GAAG,UAAU7D,KAAK,EAAE;IAC1D,IAAIpC,KAAK,GAAG,IAAI,CAAC4B,eAAe,CAAC,CAAC;IAClC,IAAI9B,GAAG,GAAGE,KAAK,CAAC,CAAC,CAAC;MAAED,GAAG,GAAGC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIkG,QAAQ,GAAG,IAAI,CAACC,WAAW,CAAC/D,KAAK,CAAC;IACtC,IAAIgE,UAAU,GAAG,IAAI,CAACC,eAAe,CAACvG,GAAG,EAAEsC,KAAK,CAAC;IACjD,IAAIkE,QAAQ,GAAG,IAAI,CAACD,eAAe,CAACtG,GAAG,EAAEqC,KAAK,CAAC;IAC/C,IAAI0C,UAAU,GAAG,IAAI,CAACA,UAAU,CAAC,CAAC;IAClC,IAAIvB,CAAC;IACL,IAAIC,CAAC;IACL,IAAI4B,KAAK;IACT,IAAIC,MAAM;IACV,IAAIP,UAAU,EAAE;MACZvB,CAAC,GAAG2C,QAAQ,CAACK,IAAI;MACjB/C,CAAC,GAAG4C,UAAU,CAAC5C,CAAC;MAChB4B,KAAK,GAAGc,QAAQ,CAACd,KAAK;MACtBC,MAAM,GAAGiB,QAAQ,CAAC9C,CAAC,GAAG4C,UAAU,CAAC5C,CAAC;IACtC,CAAC,MACI;MACDD,CAAC,GAAG6C,UAAU,CAAC7C,CAAC;MAChBC,CAAC,GAAG0C,QAAQ,CAACM,IAAI;MACjBpB,KAAK,GAAGkB,QAAQ,CAAC/C,CAAC,GAAG6C,UAAU,CAAC7C,CAAC;MACjC8B,MAAM,GAAGa,QAAQ,CAACb,MAAM;IAC5B;IACA,OAAO;MACH9B,CAAC,EAAEA,CAAC;MACJC,CAAC,EAAEA,CAAC;MACJ4B,KAAK,EAAEA,KAAK;MACZC,MAAM,EAAEA;IACZ,CAAC;EACL,CAAC;EACD;EACAhG,cAAc,CAACI,SAAS,CAACgH,aAAa,GAAG,UAAUrE,KAAK,EAAE;IACtD,IAAIsE,QAAQ,GAAG,IAAI,CAAC5E,GAAG,CAAC,OAAO,CAAC;IAChC,IAAI7B,MAAM,GAAG,IAAI,CAAC6B,GAAG,CAAC,QAAQ,CAAC;IAC/B,IAAIwD,IAAI,GAAG,IAAI,CAACO,YAAY,CAACzD,KAAK,CAAC;IACnC,OAAOtD,GAAG,CAAC;MACPwG,IAAI,EAAEA,IAAI;MACVrE,IAAI,EAAE,IAAI,CAACuE,aAAa,CAACvF,MAAM;IACnC,CAAC,EAAEyG,QAAQ,CAAC3F,KAAK,CAAC;EACtB,CAAC;EACD1B,cAAc,CAACI,SAAS,CAAC4C,cAAc,GAAG,UAAUD,KAAK,EAAE;IACvD,IAAIuE,SAAS,GAAGvE,KAAK,IAAI,IAAI,CAACN,GAAG,CAAC,OAAO,CAAC;IAC1C,IAAI8E,OAAO,GAAG,IAAI,CAACjC,YAAY,CAAC,OAAO,CAAC;IACxC,IAAIkC,UAAU,GAAGF,SAAS,CAACG,QAAQ,CAACF,OAAO,CAAC;IAC5C,IAAIG,SAAS,GAAGF,UAAU,CAACG,OAAO,CAAC,CAAC;IACpC,IAAIpC,KAAK,GAAG,IAAI,CAACqB,iBAAiB,CAAC7D,KAAK,CAAC;IACzC,IAAI,CAAC2E,SAAS,EAAE;MACZF,UAAU,CAACI,OAAO,CAAC;QACfpH,IAAI,EAAE,MAAM;QACZ+E,KAAK,EAAEA;MACX,CAAC,CAAC;IACN,CAAC,MACI;MACDmC,SAAS,CAACf,IAAI,CAACpB,KAAK,CAAC;IACzB;EACJ,CAAC;EACDvF,cAAc,CAACI,SAAS,CAACuD,UAAU,GAAG,UAAUZ,KAAK,EAAE;IACnD,IAAIwE,OAAO,GAAG,IAAI,CAACjC,YAAY,CAAC,OAAO,CAAC;IACxC,IAAIkC,UAAU,GAAGzE,KAAK,CAAC0E,QAAQ,CAACF,OAAO,CAAC;IACxC,IAAIM,UAAU,GAAG,IAAI,CAACT,aAAa,CAACrE,KAAK,CAAC;IAC1C,IAAIyE,UAAU,EAAE;MACZA,UAAU,CAACb,IAAI,CAACkB,UAAU,CAAC;IAC/B,CAAC,MACI;MACD,IAAI,CAACzC,QAAQ,CAACrC,KAAK,EAAE;QACjBvC,IAAI,EAAE,MAAM;QACZ6E,EAAE,EAAEkC,OAAO;QACXO,SAAS,EAAE,IAAI,CAACrF,GAAG,CAAC,UAAU,CAAC;QAC/BoC,IAAI,EAAE,cAAc;QACpBU,KAAK,EAAEsC;MACX,CAAC,CAAC;IACN;EACJ,CAAC;EACD7H,cAAc,CAACI,SAAS,CAAC4G,eAAe,GAAG,UAAUrG,KAAK,EAAEoC,KAAK,EAAE;IAC/D,IAAIgF,EAAE,GAAG,IAAI,CAACvF,QAAQ,CAAC,CAAC;MAAE/B,GAAG,GAAGsH,EAAE,CAACtH,GAAG;MAAEC,GAAG,GAAGqH,EAAE,CAACrH,GAAG;IACpD,IAAI6F,OAAO,GAAG,CAAC5F,KAAK,GAAGF,GAAG,KAAKC,GAAG,GAAGD,GAAG,CAAC;IACzC,IAAIuH,IAAI,GAAG,IAAI,CAAClB,WAAW,CAAC/D,KAAK,CAAC;IAClC,IAAIkF,SAAS,GAAG,IAAI,CAACxC,UAAU,CAAC,CAAC;IACjC,IAAIyC,KAAK,GAAG;MAAEhE,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;IAC1B,IAAI8D,SAAS,EAAE;MACXC,KAAK,CAAChE,CAAC,GAAG8D,IAAI,CAACd,IAAI,GAAGc,IAAI,CAACjC,KAAK,GAAG,CAAC;MACpCmC,KAAK,CAAC/D,CAAC,GAAGvE,iBAAiB,CAACoI,IAAI,CAACb,IAAI,EAAEa,IAAI,CAACG,IAAI,EAAE5B,OAAO,CAAC;IAC9D,CAAC,MACI;MACD2B,KAAK,CAAChE,CAAC,GAAGtE,iBAAiB,CAACoI,IAAI,CAACd,IAAI,EAAEc,IAAI,CAACI,IAAI,EAAE7B,OAAO,CAAC;MAC1D2B,KAAK,CAAC/D,CAAC,GAAG6D,IAAI,CAACb,IAAI,GAAGa,IAAI,CAAChC,MAAM,GAAG,CAAC;IACzC;IACA,OAAOkC,KAAK;EAChB,CAAC;EACDlI,cAAc,CAACI,SAAS,CAACsG,YAAY,GAAG,UAAU3D,KAAK,EAAE;IACrD,IAAIuE,SAAS,GAAGvE,KAAK,IAAI,IAAI,CAACN,GAAG,CAAC,OAAO,CAAC;IAC1C,OAAO6E,SAAS,CAACG,QAAQ,CAAC,IAAI,CAACnC,YAAY,CAAC,MAAM,CAAC,CAAC;EACxD,CAAC;EACD;EACAtF,cAAc,CAACI,SAAS,CAAC0G,WAAW,GAAG,UAAU/D,KAAK,EAAE;IACpD,IAAI0D,SAAS,GAAG,IAAI,CAACC,YAAY,CAAC3D,KAAK,CAAC;IACxC,IAAIiF,IAAI,GAAGvB,SAAS,CAAC4B,OAAO,CAAC,CAAC;IAC9B,OAAOL,IAAI;EACf,CAAC;EACDhI,cAAc,CAACI,SAAS,CAACkI,iBAAiB,GAAG,YAAY;IACrD,IAAIhB,SAAS,GAAG,IAAI,CAAC7E,GAAG,CAAC,OAAO,CAAC;IACjC,IAAIgE,SAAS,GAAGa,SAAS,CAACG,QAAQ,CAAC,IAAI,CAACnC,YAAY,CAAC,MAAM,CAAC,CAAC;IAC7D,IAAI0C,IAAI,GAAGvB,SAAS,CAAC8B,aAAa,CAAC,CAAC;IACpC,OAAOP,IAAI;EACf,CAAC;EACD;EACAhI,cAAc,CAACI,SAAS,CAACqF,UAAU,GAAG,YAAY;IAC9C,OAAO,IAAI,CAAChD,GAAG,CAAC,QAAQ,CAAC,KAAK,UAAU;EAC5C,CAAC;EACD;EACAzC,cAAc,CAACI,SAAS,CAAC6D,qBAAqB,GAAG,UAAUC,CAAC,EAAEC,CAAC,EAAE;IAC7D,IAAI4D,EAAE,GAAG,IAAI,CAACvF,QAAQ,CAAC,CAAC;MAAE/B,GAAG,GAAGsH,EAAE,CAACtH,GAAG;MAAEC,GAAG,GAAGqH,EAAE,CAACrH,GAAG;IACpD,IAAIsH,IAAI,GAAG,IAAI,CAACM,iBAAiB,CAAC,CAAC,CAAC,CAAC;IACrC,IAAIL,SAAS,GAAG,IAAI,CAACxC,UAAU,CAAC,CAAC;IACjC,IAAItE,IAAI,GAAG,IAAI,CAACsB,GAAG,CAAC,MAAM,CAAC;IAC3B,IAAI8D,OAAO;IACX,IAAI0B,SAAS,EAAE;MACX;MACA1B,OAAO,GAAG,CAACpC,CAAC,GAAG6D,IAAI,CAACb,IAAI,IAAIa,IAAI,CAAChC,MAAM;IAC3C,CAAC,MACI;MACD;MACAO,OAAO,GAAG,CAACrC,CAAC,GAAG8D,IAAI,CAACd,IAAI,IAAIc,IAAI,CAACjC,KAAK;IAC1C;IACA,IAAIpF,KAAK,GAAGf,iBAAiB,CAACa,GAAG,EAAEC,GAAG,EAAE6F,OAAO,CAAC;IAChD,IAAIpF,IAAI,EAAE;MACN,IAAIiF,KAAK,GAAGoC,IAAI,CAACC,KAAK,CAAC,CAAC9H,KAAK,GAAGF,GAAG,IAAIU,IAAI,CAAC;MAC5CR,KAAK,GAAGF,GAAG,GAAG2F,KAAK,GAAGjF,IAAI,CAAC,CAAC;IAChC;;IACA,IAAIR,KAAK,GAAGD,GAAG,EAAE;MACbC,KAAK,GAAGD,GAAG;IACf;IACA,IAAIC,KAAK,GAAGF,GAAG,EAAE;MACbE,KAAK,GAAGF,GAAG;IACf;IACA,OAAOE,KAAK;EAChB,CAAC;EACD;EACAX,cAAc,CAACI,SAAS,CAACmC,eAAe,GAAG,YAAY;IACnD,IAAI5B,KAAK,GAAG,IAAI,CAAC8B,GAAG,CAAC,OAAO,CAAC;IAC7B,IAAI,CAAC9B,KAAK,EAAE;MACR,IAAI+H,MAAM,GAAG,IAAI,CAACjG,GAAG,CAAC,QAAQ,CAAC;MAC/B,IAAI,CAACiG,MAAM,EAAE;QACT,OAAO,CAAC,IAAI,CAACjG,GAAG,CAAC,KAAK,CAAC,EAAE,IAAI,CAACA,GAAG,CAAC,KAAK,CAAC,CAAC;MAC7C;MACA;MACA,OAAO,CAAC+F,IAAI,CAAC9H,GAAG,CAAC8H,IAAI,CAAC/H,GAAG,CAACP,KAAK,CAACsI,IAAI,EAAElJ,cAAc,CAACoJ,MAAM,EAAE,CAAC,IAAI,CAACjG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAACA,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE+F,IAAI,CAAC/H,GAAG,CAAC+H,IAAI,CAAC9H,GAAG,CAACR,KAAK,CAACsI,IAAI,EAAElJ,cAAc,CAACoJ,MAAM,EAAE,CAAC,IAAI,CAACjG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAACA,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACnM;IACA,OAAO9B,KAAK;EAChB,CAAC;EACD;EACAX,cAAc,CAACI,SAAS,CAAC6C,aAAa,GAAG,UAAUF,KAAK,EAAE;IACtD,IAAIqB,YAAY,GAAG,IAAI,CAAC7B,eAAe,CAAC,CAAC;IACzC,IAAI9B,GAAG,GAAG2D,YAAY,CAAC,CAAC,CAAC;MAAE1D,GAAG,GAAG0D,YAAY,CAAC,CAAC,CAAC;IAChD,IAAI,CAACuE,YAAY,CAAC5F,KAAK,EAAE,KAAK,EAAEtC,GAAG,CAAC;IACpC,IAAI,CAACkI,YAAY,CAAC5F,KAAK,EAAE,KAAK,EAAErC,GAAG,CAAC;EACxC,CAAC;EACD;EACAV,cAAc,CAACI,SAAS,CAACwI,cAAc,GAAG,UAAUC,UAAU,EAAEX,KAAK,EAAE;IACnE,IAAIzC,UAAU,GAAG,IAAI,CAACA,UAAU,CAAC,CAAC;IAClC,IAAIQ,IAAI,GAAG,EAAE;IACb,IAAIF,KAAK,GAAG8C,UAAU,CAAC7G,IAAI;IAC3B,IAAIkC,CAAC,GAAGgE,KAAK,CAAChE,CAAC;MAAEC,CAAC,GAAG+D,KAAK,CAAC/D,CAAC;IAC5B,IAAI6B,MAAM,GAAGD,KAAK,GAAGjG,oBAAoB;IACzC,IAAIgJ,SAAS,GAAG/C,KAAK,GAAG,CAAC;IACzB,IAAIgD,aAAa,GAAGhD,KAAK,GAAG,CAAC;IAC7B,IAAIN,UAAU,EAAE;MACZ;AACZ;AACA;AACA;AACA;AACA;AACA;MACY,IAAIuD,SAAS,GAAG9E,CAAC,GAAG8B,MAAM,GAAGjG,sBAAsB;MACnDkG,IAAI,CAACC,IAAI,CAAC,CAAC,GAAG,EAAEhC,CAAC,EAAEC,CAAC,CAAC,CAAC;MACtB8B,IAAI,CAACC,IAAI,CAAC,CAAC,GAAG,EAAE8C,SAAS,EAAE7E,CAAC,GAAG2E,SAAS,CAAC,CAAC;MAC1C7C,IAAI,CAACC,IAAI,CAAC,CAAC,GAAG,EAAEhC,CAAC,GAAG8B,MAAM,EAAE7B,CAAC,GAAG2E,SAAS,CAAC,CAAC;MAC3C7C,IAAI,CAACC,IAAI,CAAC,CAAC,GAAG,EAAEhC,CAAC,GAAG8B,MAAM,EAAE7B,CAAC,GAAG2E,SAAS,CAAC,CAAC;MAC3C7C,IAAI,CAACC,IAAI,CAAC,CAAC,GAAG,EAAE8C,SAAS,EAAE7E,CAAC,GAAG2E,SAAS,CAAC,CAAC;MAC1C7C,IAAI,CAACC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;MAChB;MACAD,IAAI,CAACC,IAAI,CAAC,CAAC,GAAG,EAAE8C,SAAS,EAAE7E,CAAC,GAAG4E,aAAa,CAAC,CAAC;MAC9C9C,IAAI,CAACC,IAAI,CAAC,CAAC,GAAG,EAAEhC,CAAC,GAAG8B,MAAM,GAAG,CAAC,EAAE7B,CAAC,GAAG4E,aAAa,CAAC,CAAC;MACnD9C,IAAI,CAACC,IAAI,CAAC,CAAC,GAAG,EAAE8C,SAAS,EAAE7E,CAAC,GAAG4E,aAAa,CAAC,CAAC;MAC9C9C,IAAI,CAACC,IAAI,CAAC,CAAC,GAAG,EAAEhC,CAAC,GAAG8B,MAAM,GAAG,CAAC,EAAE7B,CAAC,GAAG4E,aAAa,CAAC,CAAC;IACvD,CAAC,MACI;MACD;AACZ;AACA;AACA;AACA;AACA;AACA;MACY,IAAIE,SAAS,GAAG9E,CAAC,GAAG6B,MAAM,GAAGjG,sBAAsB;MACnDkG,IAAI,CAACC,IAAI,CAAC,CAAC,GAAG,EAAEhC,CAAC,EAAEC,CAAC,CAAC,CAAC;MACtB8B,IAAI,CAACC,IAAI,CAAC,CAAC,GAAG,EAAEhC,CAAC,GAAG4E,SAAS,EAAEG,SAAS,CAAC,CAAC;MAC1ChD,IAAI,CAACC,IAAI,CAAC,CAAC,GAAG,EAAEhC,CAAC,GAAG4E,SAAS,EAAE3E,CAAC,GAAG6B,MAAM,CAAC,CAAC;MAC3CC,IAAI,CAACC,IAAI,CAAC,CAAC,GAAG,EAAEhC,CAAC,GAAG4E,SAAS,EAAE3E,CAAC,GAAG6B,MAAM,CAAC,CAAC;MAC3CC,IAAI,CAACC,IAAI,CAAC,CAAC,GAAG,EAAEhC,CAAC,GAAG4E,SAAS,EAAEG,SAAS,CAAC,CAAC;MAC1ChD,IAAI,CAACC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;MAChB;MACAD,IAAI,CAACC,IAAI,CAAC,CAAC,GAAG,EAAEhC,CAAC,GAAG6E,aAAa,EAAEE,SAAS,CAAC,CAAC;MAC9ChD,IAAI,CAACC,IAAI,CAAC,CAAC,GAAG,EAAEhC,CAAC,GAAG6E,aAAa,EAAE5E,CAAC,GAAG6B,MAAM,GAAG,CAAC,CAAC,CAAC;MACnDC,IAAI,CAACC,IAAI,CAAC,CAAC,GAAG,EAAEhC,CAAC,GAAG6E,aAAa,EAAEE,SAAS,CAAC,CAAC;MAC9ChD,IAAI,CAACC,IAAI,CAAC,CAAC,GAAG,EAAEhC,CAAC,GAAG6E,aAAa,EAAE5E,CAAC,GAAG6B,MAAM,GAAG,CAAC,CAAC,CAAC;IACvD;IACA,OAAOC,IAAI;EACf,CAAC;EACD;EACAjG,cAAc,CAACI,SAAS,CAACuI,YAAY,GAAG,UAAU5F,KAAK,EAAE8B,IAAI,EAAElE,KAAK,EAAE;IAClE,IAAIuH,KAAK,GAAG,IAAI,CAAClB,eAAe,CAACrG,KAAK,EAAEoC,KAAK,CAAC;IAC9C,IAAI8F,UAAU,GAAG,IAAI,CAACpG,GAAG,CAAC,SAAS,CAAC;IACpC,IAAIwD,IAAI,GAAG,IAAI,CAAC2C,cAAc,CAACC,UAAU,EAAEX,KAAK,CAAC;IACjD,IAAI7C,EAAE,GAAG,IAAI,CAACC,YAAY,CAAC,UAAU,GAAGT,IAAI,CAAC;IAC7C,IAAIqE,YAAY,GAAGnG,KAAK,CAAC0E,QAAQ,CAACpC,EAAE,CAAC;IACrC,IAAII,UAAU,GAAG,IAAI,CAACA,UAAU,CAAC,CAAC;IAClC,IAAIyD,YAAY,EAAE;MACdA,YAAY,CAACvC,IAAI,CAAC,MAAM,EAAEV,IAAI,CAAC;IACnC,CAAC,MACI;MACD,IAAI,CAACb,QAAQ,CAACrC,KAAK,EAAE;QACjBvC,IAAI,EAAE,MAAM;QACZqE,IAAI,EAAE,iBAAiB,GAAGA,IAAI;QAC9BiD,SAAS,EAAE,IAAI;QACfzC,EAAE,EAAEA,EAAE;QACNE,KAAK,EAAEnG,QAAQ,CAACA,QAAQ,CAAC;UAAE6G,IAAI,EAAEA;QAAK,CAAC,EAAE4C,UAAU,CAACnH,KAAK,CAAC,EAAE;UAAEyH,MAAM,EAAE1D,UAAU,GAAG,WAAW,GAAG;QAAY,CAAC;MAClH,CAAC,CAAC;IACN;EACJ,CAAC;EACD;EACA;EACAzF,cAAc,CAACI,SAAS,CAACsD,aAAa,GAAG,UAAUX,KAAK,EAAE;IACtD,IAAI0D,SAAS,GAAG1D,KAAK,CAAC0E,QAAQ,CAAC,IAAI,CAACnC,YAAY,CAAC,MAAM,CAAC,CAAC;IACzD,IAAI8D,QAAQ,GAAGrG,KAAK,CAAC0E,QAAQ,CAAC,IAAI,CAACnC,YAAY,CAAC,WAAW,CAAC,CAAC;IAC7D,IAAI+D,QAAQ,GAAGtG,KAAK,CAAC0E,QAAQ,CAAC,IAAI,CAACnC,YAAY,CAAC,WAAW,CAAC,CAAC;IAC7D,IAAIyB,UAAU,GAAG,IAAI,CAACuC,YAAY,CAAC,CAAC;IACpC,IAAI,IAAI,CAAC7D,UAAU,CAAC,CAAC,EAAE;MACnB;MACA,IAAI,CAAC8D,YAAY,CAACH,QAAQ,EAAEC,QAAQ,EAAE5C,SAAS,EAAEM,UAAU,CAAC;IAChE,CAAC,MACI;MACD;MACA,IAAI,CAACyC,eAAe,CAACJ,QAAQ,EAAEC,QAAQ,EAAE5C,SAAS,EAAEM,UAAU,CAAC;IACnE;EACJ,CAAC;EACD/G,cAAc,CAACI,SAAS,CAACqJ,aAAa,GAAG,UAAUC,YAAY,EAAEC,YAAY,EAAE9C,QAAQ,EAAEJ,SAAS,EAAE;IAChG,IAAIhB,UAAU,GAAG,IAAI,CAACA,UAAU,CAAC,CAAC;IAClC,IAAImE,WAAW,GAAGnE,UAAU,GAAG,QAAQ,GAAG,OAAO;IACjD,IAAIX,QAAQ,GAAG,IAAI,CAACrC,GAAG,CAAC,OAAO,CAAC;IAChC,IAAIsC,UAAU,GAAGD,QAAQ,CAACvD,KAAK;IAC/B,IAAIC,OAAO,GAAGsD,QAAQ,CAACtD,OAAO;IAC9B,IAAIqI,SAAS,GAAG,IAAI,CAACpH,GAAG,CAAC,KAAK,GAAG/C,UAAU,CAACkK,WAAW,CAAC,CAAC,CAAC,CAAC;IAC3D,IAAIC,SAAS,EAAE;MACX,IAAIC,cAAc,GAAG/E,UAAU,KAAK,MAAM,GACpC8B,QAAQ,CAAC+C,WAAW,CAAC,GAAGF,YAAY,CAACE,WAAW,CAAC,GAAGD,YAAY,CAACC,WAAW,CAAC,GAAGpI,OAAO,GAAG,CAAC,GAC3FqF,QAAQ,CAAC+C,WAAW,CAAC;MAC3B,IAAIG,IAAI,GAAGD,cAAc,GAAGD,SAAS;MACrC,IAAIE,IAAI,GAAG,CAAC,EAAE;QACV;QACA,IAAI,CAACC,gBAAgB,CAACvD,SAAS,EAAEmD,WAAW,EAAE/C,QAAQ,CAAC+C,WAAW,CAAC,GAAGG,IAAI,CAAC;MAC/E;IACJ;EACJ,CAAC;EACD/J,cAAc,CAACI,SAAS,CAAC4J,gBAAgB,GAAG,UAAUvD,SAAS,EAAEmD,WAAW,EAAE9D,MAAM,EAAE;IAClF,IAAIkC,IAAI,GAAGvB,SAAS,CAAC4B,OAAO,CAAC,CAAC;IAC9B,IAAIpC,IAAI;IACR,IAAI2D,WAAW,KAAK,QAAQ,EAAE;MAC1B3D,IAAI,GAAG,IAAI,CAACP,WAAW,CAACsC,IAAI,CAAC9D,CAAC,EAAE8D,IAAI,CAAC7D,CAAC,EAAE6D,IAAI,CAACjC,KAAK,EAAED,MAAM,CAAC;IAC/D,CAAC,MACI;MACDG,IAAI,GAAG,IAAI,CAACP,WAAW,CAACsC,IAAI,CAAC9D,CAAC,EAAE8D,IAAI,CAAC7D,CAAC,EAAE2B,MAAM,EAAEkC,IAAI,CAAChC,MAAM,CAAC;IAChE;IACAS,SAAS,CAACE,IAAI,CAAC,MAAM,EAAEV,IAAI,CAAC;EAChC,CAAC;EACDjG,cAAc,CAACI,SAAS,CAAC6J,kBAAkB,GAAG,UAAUxD,SAAS,EAAEvC,CAAC,EAAEC,CAAC,EAAE;IACrE,IAAI6D,IAAI,GAAGvB,SAAS,CAAC4B,OAAO,CAAC,CAAC;IAC9B,IAAIpC,IAAI,GAAG,IAAI,CAACP,WAAW,CAACxB,CAAC,EAAEC,CAAC,EAAE6D,IAAI,CAACjC,KAAK,EAAEiC,IAAI,CAAChC,MAAM,CAAC;IAC1DS,SAAS,CAACE,IAAI,CAAC,MAAM,EAAEV,IAAI,CAAC;EAChC,CAAC;EACDjG,cAAc,CAACI,SAAS,CAACoJ,eAAe,GAAG,UAAUJ,QAAQ,EAAEC,QAAQ,EAAE5C,SAAS,EAAEM,UAAU,EAAE;IAC5F,IAAIjC,QAAQ,GAAG,IAAI,CAACrC,GAAG,CAAC,OAAO,CAAC;IAChC,IAAIsC,UAAU,GAAGD,QAAQ,CAACvD,KAAK;IAC/B,IAAIC,OAAO,GAAGsD,QAAQ,CAACtD,OAAO;IAC9B,IAAIqF,QAAQ,GAAGJ,SAAS,CAAC4B,OAAO,CAAC,CAAC;IAClC,IAAIqB,YAAY,GAAGN,QAAQ,CAACf,OAAO,CAAC,CAAC;IACrC,IAAIsB,YAAY,GAAGN,QAAQ,CAAChB,OAAO,CAAC,CAAC;IACrC,IAAI6B,UAAU,GAAGrD,QAAQ,CAACb,MAAM,CAAC,CAAC;IAClC,IAAI,CAACyD,aAAa,CAACC,YAAY,EAAEC,YAAY,EAAE9C,QAAQ,EAAEJ,SAAS,CAAC;IACnEI,QAAQ,GAAGJ,SAAS,CAAC4B,OAAO,CAAC,CAAC;IAC9B,IAAItD,UAAU,KAAK,MAAM,EAAE;MACvB;MACAqE,QAAQ,CAACzC,IAAI,CAAC;QACVzC,CAAC,EAAE6C,UAAU,CAAC7C,CAAC;QACfC,CAAC,EAAE4C,UAAU,CAAC5C,CAAC,GAAG+F,UAAU,GAAG;MACnC,CAAC,CAAC;MACF,IAAI,CAACD,kBAAkB,CAACxD,SAAS,EAAEM,UAAU,CAAC7C,CAAC,GAAGwF,YAAY,CAAC3D,KAAK,GAAGvE,OAAO,EAAEuF,UAAU,CAAC5C,CAAC,CAAC;MAC7FkF,QAAQ,CAAC1C,IAAI,CAAC;QACVzC,CAAC,EAAE6C,UAAU,CAAC7C,CAAC,GAAGwF,YAAY,CAAC3D,KAAK,GAAGc,QAAQ,CAACd,KAAK,GAAGvE,OAAO,GAAG,CAAC;QACnE2C,CAAC,EAAE4C,UAAU,CAAC5C,CAAC,GAAG+F,UAAU,GAAG;MACnC,CAAC,CAAC;IACN,CAAC,MACI,IAAInF,UAAU,KAAK,KAAK,EAAE;MAC3BqE,QAAQ,CAACzC,IAAI,CAAC;QACVzC,CAAC,EAAE6C,UAAU,CAAC7C,CAAC;QACfC,CAAC,EAAE4C,UAAU,CAAC5C;MAClB,CAAC,CAAC;MACFkF,QAAQ,CAAC1C,IAAI,CAAC;QACVzC,CAAC,EAAE6C,UAAU,CAAC7C,CAAC,GAAG2C,QAAQ,CAACd,KAAK;QAChC5B,CAAC,EAAE4C,UAAU,CAAC5C;MAClB,CAAC,CAAC;MACF,IAAI,CAAC8F,kBAAkB,CAACxD,SAAS,EAAEM,UAAU,CAAC7C,CAAC,EAAE6C,UAAU,CAAC5C,CAAC,GAAGuF,YAAY,CAAC1D,MAAM,GAAGxE,OAAO,CAAC;IAClG,CAAC,MACI;MACD,IAAI,CAACyI,kBAAkB,CAACxD,SAAS,EAAEM,UAAU,CAAC7C,CAAC,EAAE6C,UAAU,CAAC5C,CAAC,CAAC;MAC9DiF,QAAQ,CAACzC,IAAI,CAAC;QACVzC,CAAC,EAAE6C,UAAU,CAAC7C,CAAC;QACfC,CAAC,EAAE4C,UAAU,CAAC5C,CAAC,GAAG0C,QAAQ,CAACb,MAAM,GAAGxE;MACxC,CAAC,CAAC;MACF6H,QAAQ,CAAC1C,IAAI,CAAC;QACVzC,CAAC,EAAE6C,UAAU,CAAC7C,CAAC,GAAG2C,QAAQ,CAACd,KAAK;QAChC5B,CAAC,EAAE4C,UAAU,CAAC5C,CAAC,GAAG0C,QAAQ,CAACb,MAAM,GAAGxE;MACxC,CAAC,CAAC;IACN;EACJ,CAAC;EACDxB,cAAc,CAACI,SAAS,CAACmJ,YAAY,GAAG,UAAUH,QAAQ,EAAEC,QAAQ,EAAE5C,SAAS,EAAEM,UAAU,EAAE;IACzF,IAAIjC,QAAQ,GAAG,IAAI,CAACrC,GAAG,CAAC,OAAO,CAAC;IAChC,IAAIsC,UAAU,GAAGD,QAAQ,CAACvD,KAAK;IAC/B,IAAIC,OAAO,GAAGsD,QAAQ,CAACtD,OAAO;IAC9B,IAAIqF,QAAQ,GAAGJ,SAAS,CAAC4B,OAAO,CAAC,CAAC;IAClC,IAAIqB,YAAY,GAAGN,QAAQ,CAACf,OAAO,CAAC,CAAC;IACrC,IAAIsB,YAAY,GAAGN,QAAQ,CAAChB,OAAO,CAAC,CAAC;IACrC,IAAI,CAACoB,aAAa,CAACC,YAAY,EAAEC,YAAY,EAAE9C,QAAQ,EAAEJ,SAAS,CAAC;IACnEI,QAAQ,GAAGJ,SAAS,CAAC4B,OAAO,CAAC,CAAC;IAC9B,IAAItD,UAAU,KAAK,MAAM,EAAE;MACvB;MACAqE,QAAQ,CAACzC,IAAI,CAAC;QACVzC,CAAC,EAAE6C,UAAU,CAAC7C,CAAC;QACfC,CAAC,EAAE4C,UAAU,CAAC5C;MAClB,CAAC,CAAC;MACF,IAAI,CAAC8F,kBAAkB,CAACxD,SAAS,EAAEM,UAAU,CAAC7C,CAAC,EAAE6C,UAAU,CAAC5C,CAAC,GAAGuF,YAAY,CAAC1D,MAAM,GAAGxE,OAAO,CAAC;MAC9F6H,QAAQ,CAAC1C,IAAI,CAAC;QACVzC,CAAC,EAAE6C,UAAU,CAAC7C,CAAC;QACfC,CAAC,EAAE4C,UAAU,CAAC5C,CAAC,GAAGuF,YAAY,CAAC1D,MAAM,GAAGa,QAAQ,CAACb,MAAM,GAAGxE,OAAO,GAAG;MACxE,CAAC,CAAC;IACN,CAAC,MACI,IAAIuD,UAAU,KAAK,OAAO,EAAE;MAC7BqE,QAAQ,CAACzC,IAAI,CAAC;QACVzC,CAAC,EAAE6C,UAAU,CAAC7C,CAAC,GAAG2C,QAAQ,CAACd,KAAK,GAAGvE,OAAO;QAC1C2C,CAAC,EAAE4C,UAAU,CAAC5C;MAClB,CAAC,CAAC;MACF,IAAI,CAAC8F,kBAAkB,CAACxD,SAAS,EAAEM,UAAU,CAAC7C,CAAC,EAAE6C,UAAU,CAAC5C,CAAC,CAAC;MAC9DkF,QAAQ,CAAC1C,IAAI,CAAC;QACVzC,CAAC,EAAE6C,UAAU,CAAC7C,CAAC,GAAG2C,QAAQ,CAACd,KAAK,GAAGvE,OAAO;QAC1C2C,CAAC,EAAE4C,UAAU,CAAC5C,CAAC,GAAG0C,QAAQ,CAACb;MAC/B,CAAC,CAAC;IACN,CAAC,MACI;MACD;MACA,IAAImE,aAAa,GAAG3B,IAAI,CAAC9H,GAAG,CAACgJ,YAAY,CAAC3D,KAAK,EAAE4D,YAAY,CAAC5D,KAAK,CAAC;MACpEqD,QAAQ,CAACzC,IAAI,CAAC;QACVzC,CAAC,EAAE6C,UAAU,CAAC7C,CAAC;QACfC,CAAC,EAAE4C,UAAU,CAAC5C;MAClB,CAAC,CAAC;MACF,IAAI,CAAC8F,kBAAkB,CAACxD,SAAS,EAAEM,UAAU,CAAC7C,CAAC,GAAGiG,aAAa,GAAG3I,OAAO,EAAEuF,UAAU,CAAC5C,CAAC,CAAC;MACxFkF,QAAQ,CAAC1C,IAAI,CAAC;QACVzC,CAAC,EAAE6C,UAAU,CAAC7C,CAAC;QACfC,CAAC,EAAE4C,UAAU,CAAC5C,CAAC,GAAG0C,QAAQ,CAACb;MAC/B,CAAC,CAAC;IACN;EACJ,CAAC;EACD,OAAOhG,cAAc;AACzB,CAAC,CAACH,UAAU,CAAE;AACd,eAAeG,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}