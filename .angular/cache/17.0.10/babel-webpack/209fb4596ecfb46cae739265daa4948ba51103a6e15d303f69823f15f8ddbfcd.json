{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { registerShape } from '../base';\nimport { BACKGROUND_SHAPE } from '../constant';\nimport { getBackgroundRectStyle, getStyle } from '../util/get-style';\nimport { getBackgroundRectPath, getRectPath } from './util';\n/** 描边柱状图 */\nregisterShape('interval', 'hollow-rect', {\n  draw: function (cfg, container) {\n    var style = getStyle(cfg, true, false);\n    var group = container;\n    var backgroundCfg = cfg === null || cfg === void 0 ? void 0 : cfg.background;\n    if (backgroundCfg) {\n      group = container.addGroup();\n      var backgroundStyle = getBackgroundRectStyle(cfg);\n      var backgroundPath = getBackgroundRectPath(cfg, this.parsePoints(cfg.points), this.coordinate);\n      group.addShape('path', {\n        attrs: __assign(__assign({}, backgroundStyle), {\n          path: backgroundPath\n        }),\n        capture: false,\n        zIndex: -1,\n        name: BACKGROUND_SHAPE\n      });\n    }\n    var path = this.parsePath(getRectPath(cfg.points));\n    var shape = group.addShape('path', {\n      attrs: __assign(__assign({}, style), {\n        path: path\n      }),\n      name: 'interval'\n    });\n    return backgroundCfg ? group : shape;\n  },\n  getMarker: function (markerCfg) {\n    var color = markerCfg.color,\n      isInPolar = markerCfg.isInPolar;\n    if (isInPolar) {\n      return {\n        symbol: 'circle',\n        style: {\n          r: 4.5,\n          stroke: color,\n          fill: null\n        }\n      };\n    }\n    return {\n      symbol: 'square',\n      style: {\n        r: 4,\n        stroke: color,\n        fill: null\n      }\n    };\n  }\n});","map":{"version":3,"names":["__assign","registerShape","BACKGROUND_SHAPE","getBackgroundRectStyle","getStyle","getBackgroundRectPath","getRectPath","draw","cfg","container","style","group","backgroundCfg","background","addGroup","backgroundStyle","backgroundPath","parsePoints","points","coordinate","addShape","attrs","path","capture","zIndex","name","parsePath","shape","getMarker","markerCfg","color","isInPolar","symbol","r","stroke","fill"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g2/esm/geometry/shape/interval/hollow-rect.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { registerShape } from '../base';\nimport { BACKGROUND_SHAPE } from '../constant';\nimport { getBackgroundRectStyle, getStyle } from '../util/get-style';\nimport { getBackgroundRectPath, getRectPath } from './util';\n/** 描边柱状图 */\nregisterShape('interval', 'hollow-rect', {\n    draw: function (cfg, container) {\n        var style = getStyle(cfg, true, false);\n        var group = container;\n        var backgroundCfg = cfg === null || cfg === void 0 ? void 0 : cfg.background;\n        if (backgroundCfg) {\n            group = container.addGroup();\n            var backgroundStyle = getBackgroundRectStyle(cfg);\n            var backgroundPath = getBackgroundRectPath(cfg, this.parsePoints(cfg.points), this.coordinate);\n            group.addShape('path', {\n                attrs: __assign(__assign({}, backgroundStyle), { path: backgroundPath }),\n                capture: false,\n                zIndex: -1,\n                name: BACKGROUND_SHAPE,\n            });\n        }\n        var path = this.parsePath(getRectPath(cfg.points));\n        var shape = group.addShape('path', {\n            attrs: __assign(__assign({}, style), { path: path }),\n            name: 'interval',\n        });\n        return backgroundCfg ? group : shape;\n    },\n    getMarker: function (markerCfg) {\n        var color = markerCfg.color, isInPolar = markerCfg.isInPolar;\n        if (isInPolar) {\n            return {\n                symbol: 'circle',\n                style: {\n                    r: 4.5,\n                    stroke: color,\n                    fill: null,\n                },\n            };\n        }\n        return {\n            symbol: 'square',\n            style: {\n                r: 4,\n                stroke: color,\n                fill: null,\n            },\n        };\n    },\n});\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,QAAQ,SAAS;AACvC,SAASC,gBAAgB,QAAQ,aAAa;AAC9C,SAASC,sBAAsB,EAAEC,QAAQ,QAAQ,mBAAmB;AACpE,SAASC,qBAAqB,EAAEC,WAAW,QAAQ,QAAQ;AAC3D;AACAL,aAAa,CAAC,UAAU,EAAE,aAAa,EAAE;EACrCM,IAAI,EAAE,SAAAA,CAAUC,GAAG,EAAEC,SAAS,EAAE;IAC5B,IAAIC,KAAK,GAAGN,QAAQ,CAACI,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC;IACtC,IAAIG,KAAK,GAAGF,SAAS;IACrB,IAAIG,aAAa,GAAGJ,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,GAAG,CAACK,UAAU;IAC5E,IAAID,aAAa,EAAE;MACfD,KAAK,GAAGF,SAAS,CAACK,QAAQ,CAAC,CAAC;MAC5B,IAAIC,eAAe,GAAGZ,sBAAsB,CAACK,GAAG,CAAC;MACjD,IAAIQ,cAAc,GAAGX,qBAAqB,CAACG,GAAG,EAAE,IAAI,CAACS,WAAW,CAACT,GAAG,CAACU,MAAM,CAAC,EAAE,IAAI,CAACC,UAAU,CAAC;MAC9FR,KAAK,CAACS,QAAQ,CAAC,MAAM,EAAE;QACnBC,KAAK,EAAErB,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEe,eAAe,CAAC,EAAE;UAAEO,IAAI,EAAEN;QAAe,CAAC,CAAC;QACxEO,OAAO,EAAE,KAAK;QACdC,MAAM,EAAE,CAAC,CAAC;QACVC,IAAI,EAAEvB;MACV,CAAC,CAAC;IACN;IACA,IAAIoB,IAAI,GAAG,IAAI,CAACI,SAAS,CAACpB,WAAW,CAACE,GAAG,CAACU,MAAM,CAAC,CAAC;IAClD,IAAIS,KAAK,GAAGhB,KAAK,CAACS,QAAQ,CAAC,MAAM,EAAE;MAC/BC,KAAK,EAAErB,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEU,KAAK,CAAC,EAAE;QAAEY,IAAI,EAAEA;MAAK,CAAC,CAAC;MACpDG,IAAI,EAAE;IACV,CAAC,CAAC;IACF,OAAOb,aAAa,GAAGD,KAAK,GAAGgB,KAAK;EACxC,CAAC;EACDC,SAAS,EAAE,SAAAA,CAAUC,SAAS,EAAE;IAC5B,IAAIC,KAAK,GAAGD,SAAS,CAACC,KAAK;MAAEC,SAAS,GAAGF,SAAS,CAACE,SAAS;IAC5D,IAAIA,SAAS,EAAE;MACX,OAAO;QACHC,MAAM,EAAE,QAAQ;QAChBtB,KAAK,EAAE;UACHuB,CAAC,EAAE,GAAG;UACNC,MAAM,EAAEJ,KAAK;UACbK,IAAI,EAAE;QACV;MACJ,CAAC;IACL;IACA,OAAO;MACHH,MAAM,EAAE,QAAQ;MAChBtB,KAAK,EAAE;QACHuB,CAAC,EAAE,CAAC;QACJC,MAAM,EAAEJ,KAAK;QACbK,IAAI,EAAE;MACV;IACJ,CAAC;EACL;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}