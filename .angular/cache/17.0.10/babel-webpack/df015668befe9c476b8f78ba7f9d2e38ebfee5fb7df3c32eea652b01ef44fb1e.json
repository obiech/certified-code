{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { isFunction } from '@antv/util';\nimport { getCoordinateClipCfg } from '../../util/coordinate';\n/**\n * @ignore\n * 整体动画\n * 划入入场动画效果\n * @todo 放两张直角坐标系和极坐标系的图\n * @param element 参与动画的图形元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function waveIn(element, animateCfg, cfg) {\n  var _a = getCoordinateClipCfg(cfg.coordinate, 20),\n    type = _a.type,\n    startState = _a.startState,\n    endState = _a.endState; // 根据坐标系类型获取整体的剪切区域配置信息\n  var clipShape = element.setClip({\n    type: type,\n    attrs: startState\n  }); // 为 shape 设置剪切区域\n  // 更新 动画 获取了 toAttrs 需要重新更新上去\n  if (cfg.toAttrs) {\n    element.attr(cfg.toAttrs);\n  }\n  // 对剪切图形做动画\n  clipShape.animate(endState, __assign(__assign({}, animateCfg), {\n    callback: function () {\n      if (element && !element.get('destroyed')) {\n        element.set('clipShape', null);\n      }\n      clipShape.remove(true); // 动画结束需要将剪切图形销毁\n      isFunction(animateCfg.callback) && animateCfg.callback();\n    }\n  }));\n}","map":{"version":3,"names":["__assign","isFunction","getCoordinateClipCfg","waveIn","element","animateCfg","cfg","_a","coordinate","type","startState","endState","clipShape","setClip","attrs","toAttrs","attr","animate","callback","get","set","remove"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g2/esm/animate/animation/wave-in.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { isFunction } from '@antv/util';\nimport { getCoordinateClipCfg } from '../../util/coordinate';\n/**\n * @ignore\n * 整体动画\n * 划入入场动画效果\n * @todo 放两张直角坐标系和极坐标系的图\n * @param element 参与动画的图形元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function waveIn(element, animateCfg, cfg) {\n    var _a = getCoordinateClipCfg(cfg.coordinate, 20), type = _a.type, startState = _a.startState, endState = _a.endState; // 根据坐标系类型获取整体的剪切区域配置信息\n    var clipShape = element.setClip({\n        type: type,\n        attrs: startState,\n    }); // 为 shape 设置剪切区域\n    // 更新 动画 获取了 toAttrs 需要重新更新上去\n    if (cfg.toAttrs) {\n        element.attr(cfg.toAttrs);\n    }\n    // 对剪切图形做动画\n    clipShape.animate(endState, __assign(__assign({}, animateCfg), { callback: function () {\n            if (element && !element.get('destroyed')) {\n                element.set('clipShape', null);\n            }\n            clipShape.remove(true); // 动画结束需要将剪切图形销毁\n            isFunction(animateCfg.callback) && animateCfg.callback();\n        } }));\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,UAAU,QAAQ,YAAY;AACvC,SAASC,oBAAoB,QAAQ,uBAAuB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,MAAMA,CAACC,OAAO,EAAEC,UAAU,EAAEC,GAAG,EAAE;EAC7C,IAAIC,EAAE,GAAGL,oBAAoB,CAACI,GAAG,CAACE,UAAU,EAAE,EAAE,CAAC;IAAEC,IAAI,GAAGF,EAAE,CAACE,IAAI;IAAEC,UAAU,GAAGH,EAAE,CAACG,UAAU;IAAEC,QAAQ,GAAGJ,EAAE,CAACI,QAAQ,CAAC,CAAC;EACvH,IAAIC,SAAS,GAAGR,OAAO,CAACS,OAAO,CAAC;IAC5BJ,IAAI,EAAEA,IAAI;IACVK,KAAK,EAAEJ;EACX,CAAC,CAAC,CAAC,CAAC;EACJ;EACA,IAAIJ,GAAG,CAACS,OAAO,EAAE;IACbX,OAAO,CAACY,IAAI,CAACV,GAAG,CAACS,OAAO,CAAC;EAC7B;EACA;EACAH,SAAS,CAACK,OAAO,CAACN,QAAQ,EAAEX,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEK,UAAU,CAAC,EAAE;IAAEa,QAAQ,EAAE,SAAAA,CAAA,EAAY;MAC/E,IAAId,OAAO,IAAI,CAACA,OAAO,CAACe,GAAG,CAAC,WAAW,CAAC,EAAE;QACtCf,OAAO,CAACgB,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC;MAClC;MACAR,SAAS,CAACS,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;MACxBpB,UAAU,CAACI,UAAU,CAACa,QAAQ,CAAC,IAAIb,UAAU,CAACa,QAAQ,CAAC,CAAC;IAC5D;EAAE,CAAC,CAAC,CAAC;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}