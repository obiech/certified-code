{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport Action from '../base';\nimport { getComponents } from '../util';\nimport { getCurrentElement, getDelegationObject, getElementValue, isList, getScaleByField } from '../util';\n/**\n * 列表项状态 Action 的基础类\n * @class\n * @ignore\n */\nvar ListState = /** @class */function (_super) {\n  __extends(ListState, _super);\n  function ListState() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.stateName = '';\n    _this.ignoreItemStates = [];\n    return _this;\n  }\n  /** 获取触发的列表组件 */\n  ListState.prototype.getTriggerListInfo = function () {\n    var delegateObject = getDelegationObject(this.context);\n    var info = null;\n    if (isList(delegateObject)) {\n      info = {\n        item: delegateObject.item,\n        list: delegateObject.component\n      };\n    }\n    return info;\n  };\n  // 获取所有允许执行 Action 的组件\n  ListState.prototype.getAllowComponents = function () {\n    var _this = this;\n    var view = this.context.view;\n    var components = getComponents(view);\n    var rst = [];\n    each(components, function (component) {\n      if (component.isList() && _this.allowSetStateByElement(component)) {\n        rst.push(component);\n      }\n    });\n    return rst;\n  };\n  /** 是否存在指定的状态 */\n  ListState.prototype.hasState = function (list, item) {\n    return list.hasState(item, this.stateName);\n  };\n  /** 清理组件的状态 */\n  ListState.prototype.clearAllComponentsState = function () {\n    var _this = this;\n    var components = this.getAllowComponents();\n    each(components, function (component) {\n      component.clearItemsState(_this.stateName);\n    });\n  };\n  // 不是所有的 component 都能进行 active，目前仅支持分类 scale 对应的组件\n  ListState.prototype.allowSetStateByElement = function (component) {\n    var field = component.get('field');\n    if (!field) {\n      return false;\n    }\n    if (this.cfg && this.cfg.componentNames) {\n      var name_1 = component.get('name');\n      // 如果配置了限制的 component name，则要进行检测\n      if (this.cfg.componentNames.indexOf(name_1) === -1) {\n        return false;\n      }\n    }\n    var view = this.context.view;\n    var scale = getScaleByField(view, field);\n    return scale && scale.isCategory;\n  };\n  // 检测是否允许触发对应的状态改变事件\n  ListState.prototype.allowSetStateByItem = function (item, list) {\n    var ignoreStates = this.ignoreItemStates;\n    if (ignoreStates.length) {\n      var filterStates = ignoreStates.filter(function (state) {\n        return list.hasState(item, state);\n      });\n      return filterStates.length === 0;\n    }\n    return true; // 没有定义忽略的状态时，允许\n  };\n  // 设置组件的 item active\n  ListState.prototype.setStateByElement = function (component, element, enable) {\n    var field = component.get('field');\n    var view = this.context.view;\n    var scale = getScaleByField(view, field);\n    var value = getElementValue(element, field);\n    var text = scale.getText(value);\n    this.setItemsState(component, text, enable);\n  };\n  // 设置状态\n  ListState.prototype.setStateEnable = function (enable) {\n    var _this = this;\n    var element = getCurrentElement(this.context);\n    if (element) {\n      // trigger by element\n      var components = this.getAllowComponents();\n      each(components, function (component) {\n        _this.setStateByElement(component, element, enable);\n      });\n    } else {\n      // 被组件触发\n      var delegateObject = getDelegationObject(this.context);\n      if (isList(delegateObject)) {\n        var item = delegateObject.item,\n          component = delegateObject.component;\n        if (this.allowSetStateByElement(component) && this.allowSetStateByItem(item, component)) {\n          this.setItemState(component, item, enable);\n        }\n      }\n    }\n  };\n  // 多个 item 设置状态\n  ListState.prototype.setItemsState = function (list, name, enable) {\n    var _this = this;\n    var items = list.getItems();\n    each(items, function (item) {\n      if (item.name === name) {\n        _this.setItemState(list, item, enable);\n      }\n    });\n  };\n  // 单个 item 设置状态\n  ListState.prototype.setItemState = function (list, item, enable) {\n    list.setItemState(item, this.stateName, enable);\n  };\n  /**\n   * 设置状态\n   */\n  ListState.prototype.setState = function () {\n    this.setStateEnable(true);\n  };\n  /**\n   * 取消状态\n   */\n  ListState.prototype.reset = function () {\n    this.setStateEnable(false);\n  };\n  /**\n   * 切换状态\n   */\n  ListState.prototype.toggle = function () {\n    var triggerInfo = this.getTriggerListInfo();\n    if (triggerInfo && triggerInfo.item) {\n      var list = triggerInfo.list,\n        item = triggerInfo.item;\n      var enable = this.hasState(list, item);\n      this.setItemState(list, item, !enable);\n    }\n  };\n  /**\n   * 取消状态\n   */\n  ListState.prototype.clear = function () {\n    var triggerInfo = this.getTriggerListInfo();\n    if (triggerInfo) {\n      triggerInfo.list.clearItemsState(this.stateName);\n    } else {\n      this.clearAllComponentsState();\n    }\n  };\n  return ListState;\n}(Action);\nexport default ListState;","map":{"version":3,"names":["__extends","each","Action","getComponents","getCurrentElement","getDelegationObject","getElementValue","isList","getScaleByField","ListState","_super","_this","apply","arguments","stateName","ignoreItemStates","prototype","getTriggerListInfo","delegateObject","context","info","item","list","component","getAllowComponents","view","components","rst","allowSetStateByElement","push","hasState","clearAllComponentsState","clearItemsState","field","get","cfg","componentNames","name_1","indexOf","scale","isCategory","allowSetStateByItem","ignoreStates","length","filterStates","filter","state","setStateByElement","element","enable","value","text","getText","setItemsState","setStateEnable","setItemState","name","items","getItems","setState","reset","toggle","triggerInfo","clear"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g2/esm/interaction/action/component/list-state.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport Action from '../base';\nimport { getComponents } from '../util';\nimport { getCurrentElement, getDelegationObject, getElementValue, isList, getScaleByField } from '../util';\n/**\n * 列表项状态 Action 的基础类\n * @class\n * @ignore\n */\nvar ListState = /** @class */ (function (_super) {\n    __extends(ListState, _super);\n    function ListState() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.stateName = '';\n        _this.ignoreItemStates = [];\n        return _this;\n    }\n    /** 获取触发的列表组件 */\n    ListState.prototype.getTriggerListInfo = function () {\n        var delegateObject = getDelegationObject(this.context);\n        var info = null;\n        if (isList(delegateObject)) {\n            info = {\n                item: delegateObject.item,\n                list: delegateObject.component,\n            };\n        }\n        return info;\n    };\n    // 获取所有允许执行 Action 的组件\n    ListState.prototype.getAllowComponents = function () {\n        var _this = this;\n        var view = this.context.view;\n        var components = getComponents(view);\n        var rst = [];\n        each(components, function (component) {\n            if (component.isList() && _this.allowSetStateByElement(component)) {\n                rst.push(component);\n            }\n        });\n        return rst;\n    };\n    /** 是否存在指定的状态 */\n    ListState.prototype.hasState = function (list, item) {\n        return list.hasState(item, this.stateName);\n    };\n    /** 清理组件的状态 */\n    ListState.prototype.clearAllComponentsState = function () {\n        var _this = this;\n        var components = this.getAllowComponents();\n        each(components, function (component) {\n            component.clearItemsState(_this.stateName);\n        });\n    };\n    // 不是所有的 component 都能进行 active，目前仅支持分类 scale 对应的组件\n    ListState.prototype.allowSetStateByElement = function (component) {\n        var field = component.get('field');\n        if (!field) {\n            return false;\n        }\n        if (this.cfg && this.cfg.componentNames) {\n            var name_1 = component.get('name');\n            // 如果配置了限制的 component name，则要进行检测\n            if (this.cfg.componentNames.indexOf(name_1) === -1) {\n                return false;\n            }\n        }\n        var view = this.context.view;\n        var scale = getScaleByField(view, field);\n        return scale && scale.isCategory;\n    };\n    // 检测是否允许触发对应的状态改变事件\n    ListState.prototype.allowSetStateByItem = function (item, list) {\n        var ignoreStates = this.ignoreItemStates;\n        if (ignoreStates.length) {\n            var filterStates = ignoreStates.filter(function (state) {\n                return list.hasState(item, state);\n            });\n            return filterStates.length === 0;\n        }\n        return true; // 没有定义忽略的状态时，允许\n    };\n    // 设置组件的 item active\n    ListState.prototype.setStateByElement = function (component, element, enable) {\n        var field = component.get('field');\n        var view = this.context.view;\n        var scale = getScaleByField(view, field);\n        var value = getElementValue(element, field);\n        var text = scale.getText(value);\n        this.setItemsState(component, text, enable);\n    };\n    // 设置状态\n    ListState.prototype.setStateEnable = function (enable) {\n        var _this = this;\n        var element = getCurrentElement(this.context);\n        if (element) {\n            // trigger by element\n            var components = this.getAllowComponents();\n            each(components, function (component) {\n                _this.setStateByElement(component, element, enable);\n            });\n        }\n        else {\n            // 被组件触发\n            var delegateObject = getDelegationObject(this.context);\n            if (isList(delegateObject)) {\n                var item = delegateObject.item, component = delegateObject.component;\n                if (this.allowSetStateByElement(component) && this.allowSetStateByItem(item, component)) {\n                    this.setItemState(component, item, enable);\n                }\n            }\n        }\n    };\n    // 多个 item 设置状态\n    ListState.prototype.setItemsState = function (list, name, enable) {\n        var _this = this;\n        var items = list.getItems();\n        each(items, function (item) {\n            if (item.name === name) {\n                _this.setItemState(list, item, enable);\n            }\n        });\n    };\n    // 单个 item 设置状态\n    ListState.prototype.setItemState = function (list, item, enable) {\n        list.setItemState(item, this.stateName, enable);\n    };\n    /**\n     * 设置状态\n     */\n    ListState.prototype.setState = function () {\n        this.setStateEnable(true);\n    };\n    /**\n     * 取消状态\n     */\n    ListState.prototype.reset = function () {\n        this.setStateEnable(false);\n    };\n    /**\n     * 切换状态\n     */\n    ListState.prototype.toggle = function () {\n        var triggerInfo = this.getTriggerListInfo();\n        if (triggerInfo && triggerInfo.item) {\n            var list = triggerInfo.list, item = triggerInfo.item;\n            var enable = this.hasState(list, item);\n            this.setItemState(list, item, !enable);\n        }\n    };\n    /**\n     * 取消状态\n     */\n    ListState.prototype.clear = function () {\n        var triggerInfo = this.getTriggerListInfo();\n        if (triggerInfo) {\n            triggerInfo.list.clearItemsState(this.stateName);\n        }\n        else {\n            this.clearAllComponentsState();\n        }\n    };\n    return ListState;\n}(Action));\nexport default ListState;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}