{"ast":null,"code":"import { __assign, __awaiter, __generator, __rest, __values } from \"tslib\";\nimport { deepMix, each, get, isArray, isNull } from '@antv/util';\nimport { doAnimate } from '../animate';\nimport { getGeometryLabelLayout } from '../geometry/label';\nimport { getLabelBackgroundInfo } from '../geometry/label/util';\nimport { polarToCartesian } from '../util/graphics';\nimport { rotate, translate } from '../util/transform';\nimport { FIELD_ORIGIN } from '../constant';\nimport { updateLabel } from './update-label';\n/**\n * Geometry labels 渲染组件\n */\nvar Labels = /** @class */function () {\n  function Labels(cfg) {\n    /** 存储当前 shape 的映射表，键值为 shape id */\n    this.shapesMap = {};\n    var layout = cfg.layout,\n      container = cfg.container;\n    this.layout = layout;\n    this.container = container;\n  }\n  /**\n   * 渲染文本\n   */\n  Labels.prototype.render = function (items, shapes, isUpdate) {\n    if (isUpdate === void 0) {\n      isUpdate = false;\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var shapesMap, offscreenGroup, items_1, items_1_1, item, lastShapesMap;\n      var e_1, _a;\n      var _this = this;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            shapesMap = {};\n            offscreenGroup = this.createOffscreenGroup();\n            if (!items.length) return [3 /*break*/, 2];\n            try {\n              // 如果 items 空的话就不进行绘制调整操作\n              // step 1: 在虚拟 group 中创建 shapes\n              for (items_1 = __values(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {\n                item = items_1_1.value;\n                if (item) {\n                  shapesMap[item.id] = this.renderLabel(item, offscreenGroup);\n                }\n              }\n            } catch (e_1_1) {\n              e_1 = {\n                error: e_1_1\n              };\n            } finally {\n              try {\n                if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);\n              } finally {\n                if (e_1) throw e_1.error;\n              }\n            }\n            // [todo] Move layout into Worker.\n            // step 2: 根据布局，调整 labels\n            return [4 /*yield*/, this.doLayout(items, shapes, shapesMap)];\n          case 1:\n            // [todo] Move layout into Worker.\n            // step 2: 根据布局，调整 labels\n            _b.sent();\n            // step 3.1: 绘制 labelLine\n            this.renderLabelLine(items, shapesMap);\n            // step 3.2: 绘制 labelBackground\n            this.renderLabelBackground(items, shapesMap);\n            // step 4: 根据用户设置的偏移量调整 label\n            this.adjustLabel(items, shapesMap);\n            _b.label = 2;\n          case 2:\n            lastShapesMap = this.shapesMap;\n            each(shapesMap, function (shape, id) {\n              if (shape.destroyed) {\n                // label 在布局调整环节被删除了（doLayout）\n                delete shapesMap[id];\n              } else {\n                if (lastShapesMap[id]) {\n                  // 图形发生更新\n                  var data = shape.get('data');\n                  var origin_1 = shape.get('origin');\n                  var coordinate = shape.get('coordinate');\n                  var currentAnimateCfg = shape.get('animateCfg');\n                  var currentShape = lastShapesMap[id]; // 已经在渲染树上的 shape\n                  updateLabel(currentShape, shapesMap[id], {\n                    data: data,\n                    origin: origin_1,\n                    animateCfg: currentAnimateCfg,\n                    coordinate: coordinate\n                  });\n                  shapesMap[id] = currentShape; // 保存引用\n                } else {\n                  // 新生成的 shape\n                  // If container has been destroyed, no need to render labels.\n                  if (_this.container.destroyed) return;\n                  _this.container.add(shape);\n                  var animateCfg = get(shape.get('animateCfg'), isUpdate ? 'enter' : 'appear');\n                  if (animateCfg) {\n                    doAnimate(shape, animateCfg, {\n                      toAttrs: __assign({}, shape.attr()),\n                      coordinate: shape.get('coordinate')\n                    });\n                  }\n                }\n                delete lastShapesMap[id];\n              }\n            });\n            // 移除\n            each(lastShapesMap, function (deleteShape) {\n              var animateCfg = get(deleteShape.get('animateCfg'), 'leave');\n              if (animateCfg) {\n                doAnimate(deleteShape, animateCfg, {\n                  toAttrs: null,\n                  coordinate: deleteShape.get('coordinate')\n                });\n              } else {\n                deleteShape.remove(true); // 移除\n              }\n            });\n\n            this.shapesMap = shapesMap;\n            offscreenGroup.destroy();\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /** 清除当前 labels */\n  Labels.prototype.clear = function () {\n    this.container.clear();\n    this.shapesMap = {};\n  };\n  /** 销毁 */\n  Labels.prototype.destroy = function () {\n    this.container.destroy();\n    this.shapesMap = null;\n  };\n  Labels.prototype.renderLabel = function (cfg, container) {\n    var id = cfg.id,\n      elementId = cfg.elementId,\n      data = cfg.data,\n      mappingData = cfg.mappingData,\n      coordinate = cfg.coordinate,\n      animate = cfg.animate,\n      content = cfg.content,\n      capture = cfg.capture;\n    var shapeAppendCfg = {\n      id: id,\n      elementId: elementId,\n      capture: capture,\n      data: data,\n      origin: __assign(__assign({}, mappingData), {\n        data: mappingData[FIELD_ORIGIN]\n      }),\n      coordinate: coordinate\n    };\n    var labelGroup = container.addGroup(__assign({\n      name: 'label',\n      // 如果 this.animate === false 或者 cfg.animate === false/null 则不进行动画，否则进行动画配置的合并\n      animateCfg: this.animate === false || animate === null || animate === false ? false : deepMix({}, this.animate, animate)\n    }, shapeAppendCfg));\n    var labelShape;\n    if (content.isGroup && content.isGroup() || content.isShape && content.isShape()) {\n      // 如果 content 是 Group 或者 Shape，根据 textAlign 调整位置后，直接将其加入 labelGroup\n      var _a = content.getCanvasBBox(),\n        width = _a.width,\n        height = _a.height;\n      var textAlign = get(cfg, 'textAlign', 'left');\n      var x = cfg.x;\n      var y = cfg.y - height / 2;\n      if (textAlign === 'center') {\n        x = x - width / 2;\n      } else if (textAlign === 'right' || textAlign === 'end') {\n        x = x - width;\n      }\n      translate(content, x, y); // 将 label 平移至 x, y 指定的位置\n      labelShape = content;\n      labelGroup.add(content);\n    } else {\n      var fill = get(cfg, ['style', 'fill']);\n      labelShape = labelGroup.addShape('text', __assign({\n        attrs: __assign(__assign({\n          x: cfg.x,\n          y: cfg.y,\n          textAlign: cfg.textAlign,\n          textBaseline: get(cfg, 'textBaseline', 'middle'),\n          text: cfg.content\n        }, cfg.style), {\n          fill: isNull(fill) ? cfg.color : fill\n        })\n      }, shapeAppendCfg));\n    }\n    if (cfg.rotate) {\n      rotate(labelShape, cfg.rotate);\n    }\n    return labelGroup;\n  };\n  // 根据type对label布局\n  Labels.prototype.doLayout = function (items, shapes, shapesMap) {\n    return __awaiter(this, void 0, void 0, function () {\n      var layouts;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this.layout) return [3 /*break*/, 2];\n            layouts = isArray(this.layout) ? this.layout : [this.layout];\n            return [4 /*yield*/, Promise.all(layouts.map(function (layout) {\n              var layoutFn = getGeometryLabelLayout(get(layout, 'type', ''));\n              if (!layoutFn) return;\n              var labelShapes = [];\n              var geometryShapes = [];\n              each(shapesMap, function (labelShape, id) {\n                labelShapes.push(labelShape);\n                geometryShapes.push(shapes[labelShape.get('elementId')]);\n              });\n              // [todo] Refactor more layout into Worker.\n              return layoutFn(items, labelShapes, geometryShapes, _this.region, layout.cfg);\n            }))];\n          case 1:\n            _a.sent();\n            _a.label = 2;\n          case 2:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  Labels.prototype.renderLabelLine = function (labelItems, shapesMap) {\n    each(labelItems, function (labelItem) {\n      var coordinate = get(labelItem, 'coordinate');\n      if (!labelItem || !coordinate) {\n        return;\n      }\n      var center = coordinate.getCenter();\n      var radius = coordinate.getRadius();\n      if (!labelItem.labelLine) {\n        // labelLine: null | false，关闭 label 对应的 labelLine\n        return;\n      }\n      var labelLineCfg = get(labelItem, 'labelLine', {});\n      var id = labelItem.id;\n      var path = labelLineCfg.path;\n      if (!path) {\n        var start = polarToCartesian(center.x, center.y, radius, labelItem.angle);\n        path = [['M', start.x, start.y], ['L', labelItem.x, labelItem.y]];\n      }\n      var labelGroup = shapesMap[id];\n      if (!labelGroup.destroyed) {\n        labelGroup.addShape('path', {\n          capture: false,\n          attrs: __assign({\n            path: path,\n            stroke: labelItem.color ? labelItem.color : get(labelItem, ['style', 'fill'], '#000'),\n            fill: null\n          }, labelLineCfg.style),\n          id: id,\n          origin: labelItem.mappingData,\n          data: labelItem.data,\n          coordinate: labelItem.coordinate\n        });\n      }\n    });\n  };\n  /**\n   * 绘制标签背景\n   * @param labelItems\n   */\n  Labels.prototype.renderLabelBackground = function (labelItems, shapesMap) {\n    each(labelItems, function (labelItem) {\n      var coordinate = get(labelItem, 'coordinate');\n      var background = get(labelItem, 'background');\n      if (!background || !coordinate) {\n        return;\n      }\n      var id = labelItem.id;\n      var labelGroup = shapesMap[id];\n      if (!labelGroup.destroyed) {\n        var labelContentShape = labelGroup.getChildren()[0];\n        if (labelContentShape) {\n          var _a = getLabelBackgroundInfo(labelGroup, labelItem, background.padding),\n            rotation = _a.rotation,\n            box = __rest(_a, [\"rotation\"]);\n          var backgroundShape = labelGroup.addShape('rect', {\n            attrs: __assign(__assign({}, box), background.style || {}),\n            id: id,\n            origin: labelItem.mappingData,\n            data: labelItem.data,\n            coordinate: labelItem.coordinate\n          });\n          backgroundShape.setZIndex(-1);\n          if (rotation) {\n            var matrix = labelContentShape.getMatrix();\n            backgroundShape.setMatrix(matrix);\n          }\n        }\n      }\n    });\n  };\n  Labels.prototype.createOffscreenGroup = function () {\n    var container = this.container;\n    var GroupClass = container.getGroupBase(); // 获取分组的构造函数\n    var newGroup = new GroupClass({});\n    return newGroup;\n  };\n  Labels.prototype.adjustLabel = function (items, shapesMap) {\n    each(items, function (item) {\n      if (item) {\n        var id = item.id;\n        var labelGroup = shapesMap[id];\n        if (!labelGroup.destroyed) {\n          // fix: 如果说开发者的 label content 是一个 group，此处的偏移无法对 整个 content group 生效；场景类似 饼图 spider label 是一个含 2 个 textShape 的 gorup\n          var labelShapes = labelGroup.findAll(function (ele) {\n            return ele.get('type') !== 'path';\n          });\n          each(labelShapes, function (labelShape) {\n            if (labelShape) {\n              if (item.offsetX) {\n                labelShape.attr('x', labelShape.attr('x') + item.offsetX);\n              }\n              if (item.offsetY) {\n                labelShape.attr('y', labelShape.attr('y') + item.offsetY);\n              }\n            }\n          });\n        }\n      }\n    });\n  };\n  return Labels;\n}();\nexport default Labels;","map":{"version":3,"names":["__assign","__awaiter","__generator","__rest","__values","deepMix","each","get","isArray","isNull","doAnimate","getGeometryLabelLayout","getLabelBackgroundInfo","polarToCartesian","rotate","translate","FIELD_ORIGIN","updateLabel","Labels","cfg","shapesMap","layout","container","prototype","render","items","shapes","isUpdate","offscreenGroup","items_1","items_1_1","item","lastShapesMap","e_1","_a","_this","_b","label","createOffscreenGroup","length","next","done","value","id","renderLabel","e_1_1","error","return","call","doLayout","sent","renderLabelLine","renderLabelBackground","adjustLabel","shape","destroyed","data","origin_1","coordinate","currentAnimateCfg","currentShape","origin","animateCfg","add","toAttrs","attr","deleteShape","remove","destroy","clear","elementId","mappingData","animate","content","capture","shapeAppendCfg","labelGroup","addGroup","name","labelShape","isGroup","isShape","getCanvasBBox","width","height","textAlign","x","y","fill","addShape","attrs","textBaseline","text","style","color","layouts","Promise","all","map","layoutFn","labelShapes","geometryShapes","push","region","labelItems","labelItem","center","getCenter","radius","getRadius","labelLine","labelLineCfg","path","start","angle","stroke","background","labelContentShape","getChildren","padding","rotation","box","backgroundShape","setZIndex","matrix","getMatrix","setMatrix","GroupClass","getGroupBase","newGroup","findAll","ele","offsetX","offsetY"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/node_modules/@antv/g2/esm/component/labels.js"],"sourcesContent":["import { __assign, __awaiter, __generator, __rest, __values } from \"tslib\";\nimport { deepMix, each, get, isArray, isNull } from '@antv/util';\nimport { doAnimate } from '../animate';\nimport { getGeometryLabelLayout } from '../geometry/label';\nimport { getLabelBackgroundInfo } from '../geometry/label/util';\nimport { polarToCartesian } from '../util/graphics';\nimport { rotate, translate } from '../util/transform';\nimport { FIELD_ORIGIN } from '../constant';\nimport { updateLabel } from './update-label';\n/**\n * Geometry labels 渲染组件\n */\nvar Labels = /** @class */ (function () {\n    function Labels(cfg) {\n        /** 存储当前 shape 的映射表，键值为 shape id */\n        this.shapesMap = {};\n        var layout = cfg.layout, container = cfg.container;\n        this.layout = layout;\n        this.container = container;\n    }\n    /**\n     * 渲染文本\n     */\n    Labels.prototype.render = function (items, shapes, isUpdate) {\n        if (isUpdate === void 0) { isUpdate = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var shapesMap, offscreenGroup, items_1, items_1_1, item, lastShapesMap;\n            var e_1, _a;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        shapesMap = {};\n                        offscreenGroup = this.createOffscreenGroup();\n                        if (!items.length) return [3 /*break*/, 2];\n                        try {\n                            // 如果 items 空的话就不进行绘制调整操作\n                            // step 1: 在虚拟 group 中创建 shapes\n                            for (items_1 = __values(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {\n                                item = items_1_1.value;\n                                if (item) {\n                                    shapesMap[item.id] = this.renderLabel(item, offscreenGroup);\n                                }\n                            }\n                        }\n                        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                        finally {\n                            try {\n                                if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);\n                            }\n                            finally { if (e_1) throw e_1.error; }\n                        }\n                        // [todo] Move layout into Worker.\n                        // step 2: 根据布局，调整 labels\n                        return [4 /*yield*/, this.doLayout(items, shapes, shapesMap)];\n                    case 1:\n                        // [todo] Move layout into Worker.\n                        // step 2: 根据布局，调整 labels\n                        _b.sent();\n                        // step 3.1: 绘制 labelLine\n                        this.renderLabelLine(items, shapesMap);\n                        // step 3.2: 绘制 labelBackground\n                        this.renderLabelBackground(items, shapesMap);\n                        // step 4: 根据用户设置的偏移量调整 label\n                        this.adjustLabel(items, shapesMap);\n                        _b.label = 2;\n                    case 2:\n                        lastShapesMap = this.shapesMap;\n                        each(shapesMap, function (shape, id) {\n                            if (shape.destroyed) {\n                                // label 在布局调整环节被删除了（doLayout）\n                                delete shapesMap[id];\n                            }\n                            else {\n                                if (lastShapesMap[id]) {\n                                    // 图形发生更新\n                                    var data = shape.get('data');\n                                    var origin_1 = shape.get('origin');\n                                    var coordinate = shape.get('coordinate');\n                                    var currentAnimateCfg = shape.get('animateCfg');\n                                    var currentShape = lastShapesMap[id]; // 已经在渲染树上的 shape\n                                    updateLabel(currentShape, shapesMap[id], {\n                                        data: data,\n                                        origin: origin_1,\n                                        animateCfg: currentAnimateCfg,\n                                        coordinate: coordinate,\n                                    });\n                                    shapesMap[id] = currentShape; // 保存引用\n                                }\n                                else {\n                                    // 新生成的 shape\n                                    // If container has been destroyed, no need to render labels.\n                                    if (_this.container.destroyed)\n                                        return;\n                                    _this.container.add(shape);\n                                    var animateCfg = get(shape.get('animateCfg'), isUpdate ? 'enter' : 'appear');\n                                    if (animateCfg) {\n                                        doAnimate(shape, animateCfg, {\n                                            toAttrs: __assign({}, shape.attr()),\n                                            coordinate: shape.get('coordinate'),\n                                        });\n                                    }\n                                }\n                                delete lastShapesMap[id];\n                            }\n                        });\n                        // 移除\n                        each(lastShapesMap, function (deleteShape) {\n                            var animateCfg = get(deleteShape.get('animateCfg'), 'leave');\n                            if (animateCfg) {\n                                doAnimate(deleteShape, animateCfg, {\n                                    toAttrs: null,\n                                    coordinate: deleteShape.get('coordinate'),\n                                });\n                            }\n                            else {\n                                deleteShape.remove(true); // 移除\n                            }\n                        });\n                        this.shapesMap = shapesMap;\n                        offscreenGroup.destroy();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /** 清除当前 labels */\n    Labels.prototype.clear = function () {\n        this.container.clear();\n        this.shapesMap = {};\n    };\n    /** 销毁 */\n    Labels.prototype.destroy = function () {\n        this.container.destroy();\n        this.shapesMap = null;\n    };\n    Labels.prototype.renderLabel = function (cfg, container) {\n        var id = cfg.id, elementId = cfg.elementId, data = cfg.data, mappingData = cfg.mappingData, coordinate = cfg.coordinate, animate = cfg.animate, content = cfg.content, capture = cfg.capture;\n        var shapeAppendCfg = {\n            id: id,\n            elementId: elementId,\n            capture: capture,\n            data: data,\n            origin: __assign(__assign({}, mappingData), { data: mappingData[FIELD_ORIGIN] }),\n            coordinate: coordinate,\n        };\n        var labelGroup = container.addGroup(__assign({ name: 'label', \n            // 如果 this.animate === false 或者 cfg.animate === false/null 则不进行动画，否则进行动画配置的合并\n            animateCfg: this.animate === false || animate === null || animate === false ? false : deepMix({}, this.animate, animate) }, shapeAppendCfg));\n        var labelShape;\n        if ((content.isGroup && content.isGroup()) || (content.isShape && content.isShape())) {\n            // 如果 content 是 Group 或者 Shape，根据 textAlign 调整位置后，直接将其加入 labelGroup\n            var _a = content.getCanvasBBox(), width = _a.width, height = _a.height;\n            var textAlign = get(cfg, 'textAlign', 'left');\n            var x = cfg.x;\n            var y = cfg.y - height / 2;\n            if (textAlign === 'center') {\n                x = x - width / 2;\n            }\n            else if (textAlign === 'right' || textAlign === 'end') {\n                x = x - width;\n            }\n            translate(content, x, y); // 将 label 平移至 x, y 指定的位置\n            labelShape = content;\n            labelGroup.add(content);\n        }\n        else {\n            var fill = get(cfg, ['style', 'fill']);\n            labelShape = labelGroup.addShape('text', __assign({ attrs: __assign(__assign({ x: cfg.x, y: cfg.y, textAlign: cfg.textAlign, textBaseline: get(cfg, 'textBaseline', 'middle'), text: cfg.content }, cfg.style), { fill: isNull(fill) ? cfg.color : fill }) }, shapeAppendCfg));\n        }\n        if (cfg.rotate) {\n            rotate(labelShape, cfg.rotate);\n        }\n        return labelGroup;\n    };\n    // 根据type对label布局\n    Labels.prototype.doLayout = function (items, shapes, shapesMap) {\n        return __awaiter(this, void 0, void 0, function () {\n            var layouts;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.layout) return [3 /*break*/, 2];\n                        layouts = isArray(this.layout) ? this.layout : [this.layout];\n                        return [4 /*yield*/, Promise.all(layouts.map(function (layout) {\n                                var layoutFn = getGeometryLabelLayout(get(layout, 'type', ''));\n                                if (!layoutFn)\n                                    return;\n                                var labelShapes = [];\n                                var geometryShapes = [];\n                                each(shapesMap, function (labelShape, id) {\n                                    labelShapes.push(labelShape);\n                                    geometryShapes.push(shapes[labelShape.get('elementId')]);\n                                });\n                                // [todo] Refactor more layout into Worker.\n                                return layoutFn(items, labelShapes, geometryShapes, _this.region, layout.cfg);\n                            }))];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Labels.prototype.renderLabelLine = function (labelItems, shapesMap) {\n        each(labelItems, function (labelItem) {\n            var coordinate = get(labelItem, 'coordinate');\n            if (!labelItem || !coordinate) {\n                return;\n            }\n            var center = coordinate.getCenter();\n            var radius = coordinate.getRadius();\n            if (!labelItem.labelLine) {\n                // labelLine: null | false，关闭 label 对应的 labelLine\n                return;\n            }\n            var labelLineCfg = get(labelItem, 'labelLine', {});\n            var id = labelItem.id;\n            var path = labelLineCfg.path;\n            if (!path) {\n                var start = polarToCartesian(center.x, center.y, radius, labelItem.angle);\n                path = [\n                    ['M', start.x, start.y],\n                    ['L', labelItem.x, labelItem.y],\n                ];\n            }\n            var labelGroup = shapesMap[id];\n            if (!labelGroup.destroyed) {\n                labelGroup.addShape('path', {\n                    capture: false,\n                    attrs: __assign({ path: path, stroke: labelItem.color ? labelItem.color : get(labelItem, ['style', 'fill'], '#000'), fill: null }, labelLineCfg.style),\n                    id: id,\n                    origin: labelItem.mappingData,\n                    data: labelItem.data,\n                    coordinate: labelItem.coordinate,\n                });\n            }\n        });\n    };\n    /**\n     * 绘制标签背景\n     * @param labelItems\n     */\n    Labels.prototype.renderLabelBackground = function (labelItems, shapesMap) {\n        each(labelItems, function (labelItem) {\n            var coordinate = get(labelItem, 'coordinate');\n            var background = get(labelItem, 'background');\n            if (!background || !coordinate) {\n                return;\n            }\n            var id = labelItem.id;\n            var labelGroup = shapesMap[id];\n            if (!labelGroup.destroyed) {\n                var labelContentShape = labelGroup.getChildren()[0];\n                if (labelContentShape) {\n                    var _a = getLabelBackgroundInfo(labelGroup, labelItem, background.padding), rotation = _a.rotation, box = __rest(_a, [\"rotation\"]);\n                    var backgroundShape = labelGroup.addShape('rect', {\n                        attrs: __assign(__assign({}, box), (background.style || {})),\n                        id: id,\n                        origin: labelItem.mappingData,\n                        data: labelItem.data,\n                        coordinate: labelItem.coordinate,\n                    });\n                    backgroundShape.setZIndex(-1);\n                    if (rotation) {\n                        var matrix = labelContentShape.getMatrix();\n                        backgroundShape.setMatrix(matrix);\n                    }\n                }\n            }\n        });\n    };\n    Labels.prototype.createOffscreenGroup = function () {\n        var container = this.container;\n        var GroupClass = container.getGroupBase(); // 获取分组的构造函数\n        var newGroup = new GroupClass({});\n        return newGroup;\n    };\n    Labels.prototype.adjustLabel = function (items, shapesMap) {\n        each(items, function (item) {\n            if (item) {\n                var id = item.id;\n                var labelGroup = shapesMap[id];\n                if (!labelGroup.destroyed) {\n                    // fix: 如果说开发者的 label content 是一个 group，此处的偏移无法对 整个 content group 生效；场景类似 饼图 spider label 是一个含 2 个 textShape 的 gorup\n                    var labelShapes = labelGroup.findAll(function (ele) { return ele.get('type') !== 'path'; });\n                    each(labelShapes, function (labelShape) {\n                        if (labelShape) {\n                            if (item.offsetX) {\n                                labelShape.attr('x', labelShape.attr('x') + item.offsetX);\n                            }\n                            if (item.offsetY) {\n                                labelShape.attr('y', labelShape.attr('y') + item.offsetY);\n                            }\n                        }\n                    });\n                }\n            }\n        });\n    };\n    return Labels;\n}());\nexport default Labels;\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1E,SAASC,OAAO,EAAEC,IAAI,EAAEC,GAAG,EAAEC,OAAO,EAAEC,MAAM,QAAQ,YAAY;AAChE,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,sBAAsB,QAAQ,mBAAmB;AAC1D,SAASC,sBAAsB,QAAQ,wBAAwB;AAC/D,SAASC,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,MAAM,EAAEC,SAAS,QAAQ,mBAAmB;AACrD,SAASC,YAAY,QAAQ,aAAa;AAC1C,SAASC,WAAW,QAAQ,gBAAgB;AAC5C;AACA;AACA;AACA,IAAIC,MAAM,GAAG,aAAe,YAAY;EACpC,SAASA,MAAMA,CAACC,GAAG,EAAE;IACjB;IACA,IAAI,CAACC,SAAS,GAAG,CAAC,CAAC;IACnB,IAAIC,MAAM,GAAGF,GAAG,CAACE,MAAM;MAAEC,SAAS,GAAGH,GAAG,CAACG,SAAS;IAClD,IAAI,CAACD,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,SAAS,GAAGA,SAAS;EAC9B;EACA;AACJ;AACA;EACIJ,MAAM,CAACK,SAAS,CAACC,MAAM,GAAG,UAAUC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,EAAE;IACzD,IAAIA,QAAQ,KAAK,KAAK,CAAC,EAAE;MAAEA,QAAQ,GAAG,KAAK;IAAE;IAC7C,OAAO1B,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAImB,SAAS,EAAEQ,cAAc,EAAEC,OAAO,EAAEC,SAAS,EAAEC,IAAI,EAAEC,aAAa;MACtE,IAAIC,GAAG,EAAEC,EAAE;MACX,IAAIC,KAAK,GAAG,IAAI;MAChB,OAAOjC,WAAW,CAAC,IAAI,EAAE,UAAUkC,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACC,KAAK;UACZ,KAAK,CAAC;YACFjB,SAAS,GAAG,CAAC,CAAC;YACdQ,cAAc,GAAG,IAAI,CAACU,oBAAoB,CAAC,CAAC;YAC5C,IAAI,CAACb,KAAK,CAACc,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;YAC1C,IAAI;cACA;cACA;cACA,KAAKV,OAAO,GAAGzB,QAAQ,CAACqB,KAAK,CAAC,EAAEK,SAAS,GAAGD,OAAO,CAACW,IAAI,CAAC,CAAC,EAAE,CAACV,SAAS,CAACW,IAAI,EAAEX,SAAS,GAAGD,OAAO,CAACW,IAAI,CAAC,CAAC,EAAE;gBACrGT,IAAI,GAAGD,SAAS,CAACY,KAAK;gBACtB,IAAIX,IAAI,EAAE;kBACNX,SAAS,CAACW,IAAI,CAACY,EAAE,CAAC,GAAG,IAAI,CAACC,WAAW,CAACb,IAAI,EAAEH,cAAc,CAAC;gBAC/D;cACJ;YACJ,CAAC,CACD,OAAOiB,KAAK,EAAE;cAAEZ,GAAG,GAAG;gBAAEa,KAAK,EAAED;cAAM,CAAC;YAAE,CAAC,SACjC;cACJ,IAAI;gBACA,IAAIf,SAAS,IAAI,CAACA,SAAS,CAACW,IAAI,KAAKP,EAAE,GAAGL,OAAO,CAACkB,MAAM,CAAC,EAAEb,EAAE,CAACc,IAAI,CAACnB,OAAO,CAAC;cAC/E,CAAC,SACO;gBAAE,IAAII,GAAG,EAAE,MAAMA,GAAG,CAACa,KAAK;cAAE;YACxC;YACA;YACA;YACA,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACG,QAAQ,CAACxB,KAAK,EAAEC,MAAM,EAAEN,SAAS,CAAC,CAAC;UACjE,KAAK,CAAC;YACF;YACA;YACAgB,EAAE,CAACc,IAAI,CAAC,CAAC;YACT;YACA,IAAI,CAACC,eAAe,CAAC1B,KAAK,EAAEL,SAAS,CAAC;YACtC;YACA,IAAI,CAACgC,qBAAqB,CAAC3B,KAAK,EAAEL,SAAS,CAAC;YAC5C;YACA,IAAI,CAACiC,WAAW,CAAC5B,KAAK,EAAEL,SAAS,CAAC;YAClCgB,EAAE,CAACC,KAAK,GAAG,CAAC;UAChB,KAAK,CAAC;YACFL,aAAa,GAAG,IAAI,CAACZ,SAAS;YAC9Bd,IAAI,CAACc,SAAS,EAAE,UAAUkC,KAAK,EAAEX,EAAE,EAAE;cACjC,IAAIW,KAAK,CAACC,SAAS,EAAE;gBACjB;gBACA,OAAOnC,SAAS,CAACuB,EAAE,CAAC;cACxB,CAAC,MACI;gBACD,IAAIX,aAAa,CAACW,EAAE,CAAC,EAAE;kBACnB;kBACA,IAAIa,IAAI,GAAGF,KAAK,CAAC/C,GAAG,CAAC,MAAM,CAAC;kBAC5B,IAAIkD,QAAQ,GAAGH,KAAK,CAAC/C,GAAG,CAAC,QAAQ,CAAC;kBAClC,IAAImD,UAAU,GAAGJ,KAAK,CAAC/C,GAAG,CAAC,YAAY,CAAC;kBACxC,IAAIoD,iBAAiB,GAAGL,KAAK,CAAC/C,GAAG,CAAC,YAAY,CAAC;kBAC/C,IAAIqD,YAAY,GAAG5B,aAAa,CAACW,EAAE,CAAC,CAAC,CAAC;kBACtC1B,WAAW,CAAC2C,YAAY,EAAExC,SAAS,CAACuB,EAAE,CAAC,EAAE;oBACrCa,IAAI,EAAEA,IAAI;oBACVK,MAAM,EAAEJ,QAAQ;oBAChBK,UAAU,EAAEH,iBAAiB;oBAC7BD,UAAU,EAAEA;kBAChB,CAAC,CAAC;kBACFtC,SAAS,CAACuB,EAAE,CAAC,GAAGiB,YAAY,CAAC,CAAC;gBAClC,CAAC,MACI;kBACD;kBACA;kBACA,IAAIzB,KAAK,CAACb,SAAS,CAACiC,SAAS,EACzB;kBACJpB,KAAK,CAACb,SAAS,CAACyC,GAAG,CAACT,KAAK,CAAC;kBAC1B,IAAIQ,UAAU,GAAGvD,GAAG,CAAC+C,KAAK,CAAC/C,GAAG,CAAC,YAAY,CAAC,EAAEoB,QAAQ,GAAG,OAAO,GAAG,QAAQ,CAAC;kBAC5E,IAAImC,UAAU,EAAE;oBACZpD,SAAS,CAAC4C,KAAK,EAAEQ,UAAU,EAAE;sBACzBE,OAAO,EAAEhE,QAAQ,CAAC,CAAC,CAAC,EAAEsD,KAAK,CAACW,IAAI,CAAC,CAAC,CAAC;sBACnCP,UAAU,EAAEJ,KAAK,CAAC/C,GAAG,CAAC,YAAY;oBACtC,CAAC,CAAC;kBACN;gBACJ;gBACA,OAAOyB,aAAa,CAACW,EAAE,CAAC;cAC5B;YACJ,CAAC,CAAC;YACF;YACArC,IAAI,CAAC0B,aAAa,EAAE,UAAUkC,WAAW,EAAE;cACvC,IAAIJ,UAAU,GAAGvD,GAAG,CAAC2D,WAAW,CAAC3D,GAAG,CAAC,YAAY,CAAC,EAAE,OAAO,CAAC;cAC5D,IAAIuD,UAAU,EAAE;gBACZpD,SAAS,CAACwD,WAAW,EAAEJ,UAAU,EAAE;kBAC/BE,OAAO,EAAE,IAAI;kBACbN,UAAU,EAAEQ,WAAW,CAAC3D,GAAG,CAAC,YAAY;gBAC5C,CAAC,CAAC;cACN,CAAC,MACI;gBACD2D,WAAW,CAACC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;cAC9B;YACJ,CAAC,CAAC;;YACF,IAAI,CAAC/C,SAAS,GAAGA,SAAS;YAC1BQ,cAAc,CAACwC,OAAO,CAAC,CAAC;YACxB,OAAO,CAAC,CAAC,CAAC,WAAW;QAC7B;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD;EACAlD,MAAM,CAACK,SAAS,CAAC8C,KAAK,GAAG,YAAY;IACjC,IAAI,CAAC/C,SAAS,CAAC+C,KAAK,CAAC,CAAC;IACtB,IAAI,CAACjD,SAAS,GAAG,CAAC,CAAC;EACvB,CAAC;EACD;EACAF,MAAM,CAACK,SAAS,CAAC6C,OAAO,GAAG,YAAY;IACnC,IAAI,CAAC9C,SAAS,CAAC8C,OAAO,CAAC,CAAC;IACxB,IAAI,CAAChD,SAAS,GAAG,IAAI;EACzB,CAAC;EACDF,MAAM,CAACK,SAAS,CAACqB,WAAW,GAAG,UAAUzB,GAAG,EAAEG,SAAS,EAAE;IACrD,IAAIqB,EAAE,GAAGxB,GAAG,CAACwB,EAAE;MAAE2B,SAAS,GAAGnD,GAAG,CAACmD,SAAS;MAAEd,IAAI,GAAGrC,GAAG,CAACqC,IAAI;MAAEe,WAAW,GAAGpD,GAAG,CAACoD,WAAW;MAAEb,UAAU,GAAGvC,GAAG,CAACuC,UAAU;MAAEc,OAAO,GAAGrD,GAAG,CAACqD,OAAO;MAAEC,OAAO,GAAGtD,GAAG,CAACsD,OAAO;MAAEC,OAAO,GAAGvD,GAAG,CAACuD,OAAO;IAC5L,IAAIC,cAAc,GAAG;MACjBhC,EAAE,EAAEA,EAAE;MACN2B,SAAS,EAAEA,SAAS;MACpBI,OAAO,EAAEA,OAAO;MAChBlB,IAAI,EAAEA,IAAI;MACVK,MAAM,EAAE7D,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEuE,WAAW,CAAC,EAAE;QAAEf,IAAI,EAAEe,WAAW,CAACvD,YAAY;MAAE,CAAC,CAAC;MAChF0C,UAAU,EAAEA;IAChB,CAAC;IACD,IAAIkB,UAAU,GAAGtD,SAAS,CAACuD,QAAQ,CAAC7E,QAAQ,CAAC;MAAE8E,IAAI,EAAE,OAAO;MACxD;MACAhB,UAAU,EAAE,IAAI,CAACU,OAAO,KAAK,KAAK,IAAIA,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,GAAG,KAAK,GAAGnE,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,CAACmE,OAAO,EAAEA,OAAO;IAAE,CAAC,EAAEG,cAAc,CAAC,CAAC;IAChJ,IAAII,UAAU;IACd,IAAKN,OAAO,CAACO,OAAO,IAAIP,OAAO,CAACO,OAAO,CAAC,CAAC,IAAMP,OAAO,CAACQ,OAAO,IAAIR,OAAO,CAACQ,OAAO,CAAC,CAAE,EAAE;MAClF;MACA,IAAI/C,EAAE,GAAGuC,OAAO,CAACS,aAAa,CAAC,CAAC;QAAEC,KAAK,GAAGjD,EAAE,CAACiD,KAAK;QAAEC,MAAM,GAAGlD,EAAE,CAACkD,MAAM;MACtE,IAAIC,SAAS,GAAG9E,GAAG,CAACY,GAAG,EAAE,WAAW,EAAE,MAAM,CAAC;MAC7C,IAAImE,CAAC,GAAGnE,GAAG,CAACmE,CAAC;MACb,IAAIC,CAAC,GAAGpE,GAAG,CAACoE,CAAC,GAAGH,MAAM,GAAG,CAAC;MAC1B,IAAIC,SAAS,KAAK,QAAQ,EAAE;QACxBC,CAAC,GAAGA,CAAC,GAAGH,KAAK,GAAG,CAAC;MACrB,CAAC,MACI,IAAIE,SAAS,KAAK,OAAO,IAAIA,SAAS,KAAK,KAAK,EAAE;QACnDC,CAAC,GAAGA,CAAC,GAAGH,KAAK;MACjB;MACApE,SAAS,CAAC0D,OAAO,EAAEa,CAAC,EAAEC,CAAC,CAAC,CAAC,CAAC;MAC1BR,UAAU,GAAGN,OAAO;MACpBG,UAAU,CAACb,GAAG,CAACU,OAAO,CAAC;IAC3B,CAAC,MACI;MACD,IAAIe,IAAI,GAAGjF,GAAG,CAACY,GAAG,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;MACtC4D,UAAU,GAAGH,UAAU,CAACa,QAAQ,CAAC,MAAM,EAAEzF,QAAQ,CAAC;QAAE0F,KAAK,EAAE1F,QAAQ,CAACA,QAAQ,CAAC;UAAEsF,CAAC,EAAEnE,GAAG,CAACmE,CAAC;UAAEC,CAAC,EAAEpE,GAAG,CAACoE,CAAC;UAAEF,SAAS,EAAElE,GAAG,CAACkE,SAAS;UAAEM,YAAY,EAAEpF,GAAG,CAACY,GAAG,EAAE,cAAc,EAAE,QAAQ,CAAC;UAAEyE,IAAI,EAAEzE,GAAG,CAACsD;QAAQ,CAAC,EAAEtD,GAAG,CAAC0E,KAAK,CAAC,EAAE;UAAEL,IAAI,EAAE/E,MAAM,CAAC+E,IAAI,CAAC,GAAGrE,GAAG,CAAC2E,KAAK,GAAGN;QAAK,CAAC;MAAE,CAAC,EAAEb,cAAc,CAAC,CAAC;IAClR;IACA,IAAIxD,GAAG,CAACL,MAAM,EAAE;MACZA,MAAM,CAACiE,UAAU,EAAE5D,GAAG,CAACL,MAAM,CAAC;IAClC;IACA,OAAO8D,UAAU;EACrB,CAAC;EACD;EACA1D,MAAM,CAACK,SAAS,CAAC0B,QAAQ,GAAG,UAAUxB,KAAK,EAAEC,MAAM,EAAEN,SAAS,EAAE;IAC5D,OAAOnB,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAI8F,OAAO;MACX,IAAI5D,KAAK,GAAG,IAAI;MAChB,OAAOjC,WAAW,CAAC,IAAI,EAAE,UAAUgC,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACG,KAAK;UACZ,KAAK,CAAC;YACF,IAAI,CAAC,IAAI,CAAChB,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;YACzC0E,OAAO,GAAGvF,OAAO,CAAC,IAAI,CAACa,MAAM,CAAC,GAAG,IAAI,CAACA,MAAM,GAAG,CAAC,IAAI,CAACA,MAAM,CAAC;YAC5D,OAAO,CAAC,CAAC,CAAC,WAAW2E,OAAO,CAACC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAC,UAAU7E,MAAM,EAAE;cACvD,IAAI8E,QAAQ,GAAGxF,sBAAsB,CAACJ,GAAG,CAACc,MAAM,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC;cAC9D,IAAI,CAAC8E,QAAQ,EACT;cACJ,IAAIC,WAAW,GAAG,EAAE;cACpB,IAAIC,cAAc,GAAG,EAAE;cACvB/F,IAAI,CAACc,SAAS,EAAE,UAAU2D,UAAU,EAAEpC,EAAE,EAAE;gBACtCyD,WAAW,CAACE,IAAI,CAACvB,UAAU,CAAC;gBAC5BsB,cAAc,CAACC,IAAI,CAAC5E,MAAM,CAACqD,UAAU,CAACxE,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;cAC5D,CAAC,CAAC;cACF;cACA,OAAO4F,QAAQ,CAAC1E,KAAK,EAAE2E,WAAW,EAAEC,cAAc,EAAElE,KAAK,CAACoE,MAAM,EAAElF,MAAM,CAACF,GAAG,CAAC;YACjF,CAAC,CAAC,CAAC,CAAC;UACZ,KAAK,CAAC;YACFe,EAAE,CAACgB,IAAI,CAAC,CAAC;YACThB,EAAE,CAACG,KAAK,GAAG,CAAC;UAChB,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,WAAW;QACjC;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;;EACDnB,MAAM,CAACK,SAAS,CAAC4B,eAAe,GAAG,UAAUqD,UAAU,EAAEpF,SAAS,EAAE;IAChEd,IAAI,CAACkG,UAAU,EAAE,UAAUC,SAAS,EAAE;MAClC,IAAI/C,UAAU,GAAGnD,GAAG,CAACkG,SAAS,EAAE,YAAY,CAAC;MAC7C,IAAI,CAACA,SAAS,IAAI,CAAC/C,UAAU,EAAE;QAC3B;MACJ;MACA,IAAIgD,MAAM,GAAGhD,UAAU,CAACiD,SAAS,CAAC,CAAC;MACnC,IAAIC,MAAM,GAAGlD,UAAU,CAACmD,SAAS,CAAC,CAAC;MACnC,IAAI,CAACJ,SAAS,CAACK,SAAS,EAAE;QACtB;QACA;MACJ;MACA,IAAIC,YAAY,GAAGxG,GAAG,CAACkG,SAAS,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC;MAClD,IAAI9D,EAAE,GAAG8D,SAAS,CAAC9D,EAAE;MACrB,IAAIqE,IAAI,GAAGD,YAAY,CAACC,IAAI;MAC5B,IAAI,CAACA,IAAI,EAAE;QACP,IAAIC,KAAK,GAAGpG,gBAAgB,CAAC6F,MAAM,CAACpB,CAAC,EAAEoB,MAAM,CAACnB,CAAC,EAAEqB,MAAM,EAAEH,SAAS,CAACS,KAAK,CAAC;QACzEF,IAAI,GAAG,CACH,CAAC,GAAG,EAAEC,KAAK,CAAC3B,CAAC,EAAE2B,KAAK,CAAC1B,CAAC,CAAC,EACvB,CAAC,GAAG,EAAEkB,SAAS,CAACnB,CAAC,EAAEmB,SAAS,CAAClB,CAAC,CAAC,CAClC;MACL;MACA,IAAIX,UAAU,GAAGxD,SAAS,CAACuB,EAAE,CAAC;MAC9B,IAAI,CAACiC,UAAU,CAACrB,SAAS,EAAE;QACvBqB,UAAU,CAACa,QAAQ,CAAC,MAAM,EAAE;UACxBf,OAAO,EAAE,KAAK;UACdgB,KAAK,EAAE1F,QAAQ,CAAC;YAAEgH,IAAI,EAAEA,IAAI;YAAEG,MAAM,EAAEV,SAAS,CAACX,KAAK,GAAGW,SAAS,CAACX,KAAK,GAAGvF,GAAG,CAACkG,SAAS,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC;YAAEjB,IAAI,EAAE;UAAK,CAAC,EAAEuB,YAAY,CAAClB,KAAK,CAAC;UACtJlD,EAAE,EAAEA,EAAE;UACNkB,MAAM,EAAE4C,SAAS,CAAClC,WAAW;UAC7Bf,IAAI,EAAEiD,SAAS,CAACjD,IAAI;UACpBE,UAAU,EAAE+C,SAAS,CAAC/C;QAC1B,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;EACIxC,MAAM,CAACK,SAAS,CAAC6B,qBAAqB,GAAG,UAAUoD,UAAU,EAAEpF,SAAS,EAAE;IACtEd,IAAI,CAACkG,UAAU,EAAE,UAAUC,SAAS,EAAE;MAClC,IAAI/C,UAAU,GAAGnD,GAAG,CAACkG,SAAS,EAAE,YAAY,CAAC;MAC7C,IAAIW,UAAU,GAAG7G,GAAG,CAACkG,SAAS,EAAE,YAAY,CAAC;MAC7C,IAAI,CAACW,UAAU,IAAI,CAAC1D,UAAU,EAAE;QAC5B;MACJ;MACA,IAAIf,EAAE,GAAG8D,SAAS,CAAC9D,EAAE;MACrB,IAAIiC,UAAU,GAAGxD,SAAS,CAACuB,EAAE,CAAC;MAC9B,IAAI,CAACiC,UAAU,CAACrB,SAAS,EAAE;QACvB,IAAI8D,iBAAiB,GAAGzC,UAAU,CAAC0C,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QACnD,IAAID,iBAAiB,EAAE;UACnB,IAAInF,EAAE,GAAGtB,sBAAsB,CAACgE,UAAU,EAAE6B,SAAS,EAAEW,UAAU,CAACG,OAAO,CAAC;YAAEC,QAAQ,GAAGtF,EAAE,CAACsF,QAAQ;YAAEC,GAAG,GAAGtH,MAAM,CAAC+B,EAAE,EAAE,CAAC,UAAU,CAAC,CAAC;UAClI,IAAIwF,eAAe,GAAG9C,UAAU,CAACa,QAAQ,CAAC,MAAM,EAAE;YAC9CC,KAAK,EAAE1F,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEyH,GAAG,CAAC,EAAGL,UAAU,CAACvB,KAAK,IAAI,CAAC,CAAE,CAAC;YAC5DlD,EAAE,EAAEA,EAAE;YACNkB,MAAM,EAAE4C,SAAS,CAAClC,WAAW;YAC7Bf,IAAI,EAAEiD,SAAS,CAACjD,IAAI;YACpBE,UAAU,EAAE+C,SAAS,CAAC/C;UAC1B,CAAC,CAAC;UACFgE,eAAe,CAACC,SAAS,CAAC,CAAC,CAAC,CAAC;UAC7B,IAAIH,QAAQ,EAAE;YACV,IAAII,MAAM,GAAGP,iBAAiB,CAACQ,SAAS,CAAC,CAAC;YAC1CH,eAAe,CAACI,SAAS,CAACF,MAAM,CAAC;UACrC;QACJ;MACJ;IACJ,CAAC,CAAC;EACN,CAAC;EACD1G,MAAM,CAACK,SAAS,CAACe,oBAAoB,GAAG,YAAY;IAChD,IAAIhB,SAAS,GAAG,IAAI,CAACA,SAAS;IAC9B,IAAIyG,UAAU,GAAGzG,SAAS,CAAC0G,YAAY,CAAC,CAAC,CAAC,CAAC;IAC3C,IAAIC,QAAQ,GAAG,IAAIF,UAAU,CAAC,CAAC,CAAC,CAAC;IACjC,OAAOE,QAAQ;EACnB,CAAC;EACD/G,MAAM,CAACK,SAAS,CAAC8B,WAAW,GAAG,UAAU5B,KAAK,EAAEL,SAAS,EAAE;IACvDd,IAAI,CAACmB,KAAK,EAAE,UAAUM,IAAI,EAAE;MACxB,IAAIA,IAAI,EAAE;QACN,IAAIY,EAAE,GAAGZ,IAAI,CAACY,EAAE;QAChB,IAAIiC,UAAU,GAAGxD,SAAS,CAACuB,EAAE,CAAC;QAC9B,IAAI,CAACiC,UAAU,CAACrB,SAAS,EAAE;UACvB;UACA,IAAI6C,WAAW,GAAGxB,UAAU,CAACsD,OAAO,CAAC,UAAUC,GAAG,EAAE;YAAE,OAAOA,GAAG,CAAC5H,GAAG,CAAC,MAAM,CAAC,KAAK,MAAM;UAAE,CAAC,CAAC;UAC3FD,IAAI,CAAC8F,WAAW,EAAE,UAAUrB,UAAU,EAAE;YACpC,IAAIA,UAAU,EAAE;cACZ,IAAIhD,IAAI,CAACqG,OAAO,EAAE;gBACdrD,UAAU,CAACd,IAAI,CAAC,GAAG,EAAEc,UAAU,CAACd,IAAI,CAAC,GAAG,CAAC,GAAGlC,IAAI,CAACqG,OAAO,CAAC;cAC7D;cACA,IAAIrG,IAAI,CAACsG,OAAO,EAAE;gBACdtD,UAAU,CAACd,IAAI,CAAC,GAAG,EAAEc,UAAU,CAACd,IAAI,CAAC,GAAG,CAAC,GAAGlC,IAAI,CAACsG,OAAO,CAAC;cAC7D;YACJ;UACJ,CAAC,CAAC;QACN;MACJ;IACJ,CAAC,CAAC;EACN,CAAC;EACD,OAAOnH,MAAM;AACjB,CAAC,CAAC,CAAE;AACJ,eAAeA,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}