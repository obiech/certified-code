{"ast":null,"code":"import { ReviewParametersListGQL } from '@ridy/admin-panel/generated/graphql';\nimport { TableService } from '@ridy/admin-panel/src/app/@services/table-service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ridy/admin-panel/src/app/@services/table-service\";\nimport * as i2 from \"@ridy/admin-panel/generated/graphql\";\nexport class ReviewParametersListResolver {\n  constructor(paging, gql) {\n    this.paging = paging;\n    this.gql = gql;\n  }\n  resolve(route, state) {\n    //const params = this.paging.deserializeQueryParams<FeedbackParameterSortFields, FeedbackParameterFilter>(route.queryParams);\n    return this.gql.fetch();\n  }\n  static {\n    this.ɵfac = function ReviewParametersListResolver_Factory(t) {\n      return new (t || ReviewParametersListResolver)(i0.ɵɵinject(i1.TableService), i0.ɵɵinject(i2.ReviewParametersListGQL));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ReviewParametersListResolver,\n      factory: ReviewParametersListResolver.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["ReviewParametersListGQL","TableService","ReviewParametersListResolver","constructor","paging","gql","resolve","route","state","fetch","i0","ɵɵinject","i1","i2","factory","ɵfac"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/apps/admin-panel/src/app/cms/management/management-review-parameters/review-parameters-list/review-parameters-list.resolver.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { ApolloQueryResult } from '@apollo/client/core';\nimport { ReviewParametersListGQL, ReviewParametersListQuery } from '@ridy/admin-panel/generated/graphql';\nimport { TableService } from '@ridy/admin-panel/src/app/@services/table-service';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ReviewParametersListResolver  {\n  constructor(\n    private paging: TableService,\n    private gql: ReviewParametersListGQL\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ApolloQueryResult<ReviewParametersListQuery>> {\n    //const params = this.paging.deserializeQueryParams<FeedbackParameterSortFields, FeedbackParameterFilter>(route.queryParams);\n    return this.gql.fetch();\n  }\n}\n"],"mappings":"AAGA,SAASA,uBAAuB,QAAmC,qCAAqC;AACxG,SAASC,YAAY,QAAQ,mDAAmD;;;;AAIhF,OAAM,MAAOC,4BAA4B;EACvCC,YACUC,MAAoB,EACpBC,GAA4B;IAD5B,KAAAD,MAAM,GAANA,MAAM;IACN,KAAAC,GAAG,GAAHA,GAAG;EACV;EAEHC,OAAOA,CAACC,KAA6B,EAAEC,KAA0B;IAC/D;IACA,OAAO,IAAI,CAACH,GAAG,CAACI,KAAK,EAAE;EACzB;;;uBATWP,4BAA4B,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAX,YAAA,GAAAS,EAAA,CAAAC,QAAA,CAAAE,EAAA,CAAAb,uBAAA;IAAA;EAAA;;;aAA5BE,4BAA4B;MAAAY,OAAA,EAA5BZ,4BAA4B,CAAAa;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}