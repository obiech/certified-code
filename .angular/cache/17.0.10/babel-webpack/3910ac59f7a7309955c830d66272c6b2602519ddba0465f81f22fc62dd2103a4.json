{"ast":null,"code":"import { DispatcherCalculateFareGQL } from '@ridy/admin-panel/generated/graphql';\nimport { DispatcherService } from '../dispatcher.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../dispatcher.service\";\nimport * as i2 from \"@ridy/admin-panel/generated/graphql\";\nexport class DispatcherServiceSelectResolver {\n  constructor(dispatcherService, gql) {\n    this.dispatcherService = dispatcherService;\n    this.gql = gql;\n  }\n  resolve(route, state) {\n    const points = this.dispatcherService.deserializePoints(route.queryParams.points);\n    return this.gql.fetch({\n      points: points.map(point => point.location),\n      riderId: route.queryParams.riderId\n    });\n  }\n  static {\n    this.ɵfac = function DispatcherServiceSelectResolver_Factory(t) {\n      return new (t || DispatcherServiceSelectResolver)(i0.ɵɵinject(i1.DispatcherService), i0.ɵɵinject(i2.DispatcherCalculateFareGQL));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: DispatcherServiceSelectResolver,\n      factory: DispatcherServiceSelectResolver.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["DispatcherCalculateFareGQL","DispatcherService","DispatcherServiceSelectResolver","constructor","dispatcherService","gql","resolve","route","state","points","deserializePoints","queryParams","fetch","map","point","location","riderId","i0","ɵɵinject","i1","i2","factory","ɵfac"],"sources":["/Users/obiechina/Documents/ridy-flutter-full-taxi-solution 2/apps/admin-panel/src/app/cms/home/dispatcher/dispatcher-service-select/dispatcher-service-select.resolver.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { ApolloQueryResult } from '@apollo/client/core';\nimport {\n  DispatcherCalculateFareGQL,\n  DispatcherCalculateFareQuery,\n} from '@ridy/admin-panel/generated/graphql';\nimport { Observable } from 'rxjs';\nimport { DispatcherService } from '../dispatcher.service';\n\n@Injectable()\nexport class DispatcherServiceSelectResolver {\n  constructor(\n    private dispatcherService: DispatcherService,\n    private gql: DispatcherCalculateFareGQL,\n  ) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot,\n  ): Observable<ApolloQueryResult<DispatcherCalculateFareQuery>> {\n    const points = this.dispatcherService.deserializePoints(\n      route.queryParams.points,\n    );\n    return this.gql.fetch({\n      points: points.map((point) => point.location),\n      riderId: route.queryParams.riderId,\n    });\n  }\n}\n"],"mappings":"AAGA,SACEA,0BAA0B,QAErB,qCAAqC;AAE5C,SAASC,iBAAiB,QAAQ,uBAAuB;;;;AAGzD,OAAM,MAAOC,+BAA+B;EAC1CC,YACUC,iBAAoC,EACpCC,GAA+B;IAD/B,KAAAD,iBAAiB,GAAjBA,iBAAiB;IACjB,KAAAC,GAAG,GAAHA,GAAG;EACV;EAEHC,OAAOA,CACLC,KAA6B,EAC7BC,KAA0B;IAE1B,MAAMC,MAAM,GAAG,IAAI,CAACL,iBAAiB,CAACM,iBAAiB,CACrDH,KAAK,CAACI,WAAW,CAACF,MAAM,CACzB;IACD,OAAO,IAAI,CAACJ,GAAG,CAACO,KAAK,CAAC;MACpBH,MAAM,EAAEA,MAAM,CAACI,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAAC;MAC7CC,OAAO,EAAET,KAAK,CAACI,WAAW,CAACK;KAC5B,CAAC;EACJ;;;uBAjBWd,+BAA+B,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAlB,iBAAA,GAAAgB,EAAA,CAAAC,QAAA,CAAAE,EAAA,CAAApB,0BAAA;IAAA;EAAA;;;aAA/BE,+BAA+B;MAAAmB,OAAA,EAA/BnB,+BAA+B,CAAAoB;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}